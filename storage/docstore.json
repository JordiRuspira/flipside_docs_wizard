{"docstore/metadata": {"e7f63fa6f050dc095adaa719f3792b2faaed3d25": {"doc_hash": "8cf8e7327ad0415b3334ad155c3fb8f948d3a4f831a27fc34ca7fb0c45513d6e"}, "3fa642b53b49b91eba6c77cbfdec5bc123c12000": {"doc_hash": "734fd4b19604bb3235f58841c5ef5dd1e6107fadbef47ff66dcf7bc3f93e0a85"}, "5ec9918441fa2e6396702e48418567825cd559da": {"doc_hash": "e81d93bca8bf731d241e60813474a16d3045adba9bd786233419c9717d90ae3d"}, "1e04f880edfe9b5940366a63b2343d414e56b139": {"doc_hash": "aa6f79b8af82e68bd4755b677026086a46eaf1427930487d4f9a40f355132222"}, "7df7a9982e2375296669892471311416b6af61de": {"doc_hash": "ed218d29ee85c110861db0cb65f610184a44654df4668a0e855ec8e2e8f9546e"}, "ccc378509495b4e3421062fa2e472bd1623d1d25": {"doc_hash": "7db4827f264aee27ce5f1e22e756b887eb398eef13a7edb69292e52062ed0f8e"}, "9ace3fc92367687a26b680d61659929f2ff8ae01": {"doc_hash": "67cc92e8bc7d2e61f71ad2538d6da120e63c6cbeb5ec9845fbe3c5d2ba143300"}, "4bb7996d0648e76f59df4267cb157821d1464797": {"doc_hash": "9ea2837fd7de6b532b9df3e2a4898bb94be264b45a2962a2c06a25cab094476c"}, "fa9a013a0138f9c34c0fd58a3ee2e27e98dbef1c": {"doc_hash": "2eb6c9241deef06e74c42c39160faaeef8c71ada8fcfa0c7a1aa9c9c09127c28"}, "db508da309e65d5c543710329e858a69add618e5": {"doc_hash": "6bb0557695f9f42081e96f9c7bc641461b770f667876634624cb011636a9da04"}, "3809b9efcab3b6022fd361192616e12fbf84ca8e": {"doc_hash": "f4102f820f6e680ab10bfe2d1a4e5c2be49be8778a828fa6a00c45b6599e4e2f"}, "1d33f3e215517ff3c30bd45c62cc4f67d18655c9": {"doc_hash": "b2c6d948223d4b5a52ada1c5fe41b3a54ca1ee351e5f2d3866a6ada6df846e75"}, "36215fe63e07fe2d1a32f489c4f08e6eafbcf692": {"doc_hash": "270ef97df5f078a67f1f8866a1b4ee24457837f09f4aba2603714f499af7e568"}, "1c7f7a0c0dca48387396c6205f8206ad1476dcb0": {"doc_hash": "2f92938b7f659f524e78026975df1e2ef12b964afbf5320919bd82be384e35fb"}, "b6f363da862e13ca6516708724dbcf3da954a869": {"doc_hash": "54b06f7730358ff9722f561e583214c8aa5dcf5a54e8cf4c0af168c433c32494"}, "fe16bbb782dd422cb32fb98838c4eeb2f22835c8": {"doc_hash": "d4f08b5671e66a1b8d5f6facb1c9043c9e8955b5882bd97bc2e85d84715f5dbe"}, "95c8389417804ba33ca8fe431158590b9d87576f": {"doc_hash": "1442d0dc61db111e67ddbfaea613d326a36d3141e5a59932c7f9ab6a68332576"}, "907f6a36c5633585d6259122ece37c2147c9e288": {"doc_hash": "e89c3881cd2042f74d3af75890bc1cc068dc79260ec85e0fc5997942aac6be39"}, "7851d73c3b521493c29ba4a3a9a0f70534cfa9f7": {"doc_hash": "1666bd4e962c266e939a279d4ed8cd09cea8b34d34e5612ee49f42e6b9494f1d"}, "28221b011fd18f88994bd605ee8abbd56df72ae2": {"doc_hash": "f33d86b940a2cf1418dae3e060272c3e3f9dc77989339ed0abde71c83027ad62"}, "7537e19b807bb9abee61cc86ca7555d09265798f": {"doc_hash": "fdb9fa901872df9c2c107124f3f72eb8ef95aad362474dee8273eddd65fc69aa"}, "83699d08e8a5c15005212b0fb867d8345ed71c5e": {"doc_hash": "1a243759c228750df88cf1bed8f1ef51869b9f586859c21765f3246c2bedd557"}, "ff72c36d4d91ad932f6a6413b6cee495e672e8db": {"doc_hash": "5b755e970febbbf4386e5b12830b80fc551a36199850a03a5a4a5bf00a70d542"}, "93f03273f4d54b25daf20d455bae5af2868994a1": {"doc_hash": "e2d1ca93dea5cf4d7b9547408c60a236afb94f1931e181c46609d3ae8f2c8f35"}, "eb9c154b68cf3399b90adc458e64e4b4b652a983": {"doc_hash": "00d76da86ae6162df251e8e570bfc84677a554f17cf6e345b2e5ebfe340b2736"}, "2f8196e4a9959ad8c745f34c457ee58655531d12": {"doc_hash": "e1b9917d0369587d22d4ed194c9445bd3333ff1a6995d4f54515b87cf7d6241f"}, "343e244c93b79aa7265a9f00f521a0d680cbc865": {"doc_hash": "2ac73d238ce67c1991102ca3883ab19120c01bf0eb59cca2989f7952ac8fb843"}, "8247bd4181804ae997ab20c8394c18c71cd8c9ba": {"doc_hash": "759f174aa891f3fca2005c6c13207ca91d2372743255b0bb3bb1eafdd57a7a17"}, "810d20dab0e18239fd2c5ff7f242620097fd68f7": {"doc_hash": "de07871df6062ae51c692d76628a505f94b71c914e275c701ccd9603a189cad4"}, "e029c3ea2b2045326982e60e5b415353e793d224": {"doc_hash": "863ee6b8f8733838f972e6bcc610f6cbe8ab5c8917ef15beda0d8837a66006e5"}, "9f6f49179d46cd83b6c8779dbd07e81403d767f6": {"doc_hash": "ec7417dc9d0633bb3fd8f976daaa3814570350814207d6df0bed0fc0b43c22f3"}, "7c003a5d2a703c2f02eadc3db93e3693aa8c1275": {"doc_hash": "1693e97cd21b53a69dda1c92c3482b1596dacf2db44737add29cd39ad9e66c32"}, "f81fc378f51ade673da06bc79c54d51edd5b7577": {"doc_hash": "cd1beabf457455efb6844679adc76ed477f7433ba8f7b5851b8ea76fa87ba0f2"}, "ae688aeec49233059b8f3416d74804691e5260dc": {"doc_hash": "ee09999f00dbde41e02223e9ceb3fd71d89f165c34db7a59fe614d51e6fe5ddc"}, "937d08af0717658b08da8be3a4044fb670e6015b": {"doc_hash": "a49e617dde92c6755e98853998be9245b4a4c6e31d1c9a7e02ace47bbb951605"}, "70fb7e5c2a9297da2d53eeaedf1f553212fd333d": {"doc_hash": "3b8cdb678356a66abb6fccbeea9779a51a13840eace42ffd3130d4f5fd515161"}, "a5c0ccecd174dc7ef0108f323a66d7e13c3c1c9f": {"doc_hash": "e770f1815f6779edc1c301ebebd17d15ca516c11485e8afeee62e4e2a15c4e32"}, "82e4942aab0685a94b6e249892f04ef1d780faf9": {"doc_hash": "dd5e101cefb6fc2ccc1063848215ddc83ceb216320deeb5a7048833323f69c71"}, "51af3dc77e81e032ff57b71a872b28985bd4b4e2": {"doc_hash": "39ed8c737fa63437dcac0ea80c6604b69051b0578ab7ba1942290becc0fa1011"}, "113de57513707b1795888ec3d11a7d4b05c731d8": {"doc_hash": "fa1f9c17ea57592bd71ee453777ef4abe11740cbeb9242ca7a83c19bb91f96ed"}, "c81472b598869651a087cc4f3abe0a90f63b902b": {"doc_hash": "621193de4bb6379fcbd5917a619868012c97846c7a13bfccb100ac757eba16b2"}, "42947c1d8e94c65ace667ed3d584ae8ab8cf0586": {"doc_hash": "ab18be8cedfb57460f795f68d5be6b2e89eef355c54184af2823116829722e8f"}, "cca51c2bbe1ce3398a55d12ee03244c7745fafea": {"doc_hash": "af887d62998ca70c12f57c7c9aeaa89f6891b9c02b28dd029a9f89bfa0dfe4cf"}, "64fabbe7956bade82218af470eb55bb24ea3ad53": {"doc_hash": "4a59644e999756086ee7576fb795f931a9cc14496ec49681274c9f401e1b4a80"}, "b1c6c0ea27381ed28684039bc0427915b85acc05": {"doc_hash": "e148312c859e8f18cb8afb0b1ea744915064f2c8e3babb10922663e37e11b26a"}, "f371689d965d57ef92c073835e0a7bf3a186e1e8": {"doc_hash": "290b0d88ee09d6623440cb70f427379893546401472515566272de505547772f"}, "4a310e191fa95fb7c7bcd461c95cecb5fc66c805": {"doc_hash": "e808a4d0b525fdd2e32269325a9c2b9b5111205835e60dcf6e909b255644877a"}, "42f5269c3f8c0ced5fc7242bf5fb15224387cba2": {"doc_hash": "44440dc4388999d9cc28af697f7c61a58259069f40cfaaa92a29116c5da2040d"}, "ef4c5c1675f609e25d0e078696d6c468fb2141cb": {"doc_hash": "9909a923a18ca0f16ea89714b2665c7d02f7a357d2c462c159cad2368dbe8687"}, "8af906527bd50e3af4905a8851b952ed787062e7": {"doc_hash": "cbf1f4560bc3037c899d7a096dd0a8ea23807edd2b630b4e6a3db268ac406655"}, "8b5a36cf3cd554e7a20f1fcf1f3e03409e2157dc": {"doc_hash": "2a5fa8777154b76a374e7eeb9a10ec0ca25d9d3ae2cb61da43d4225778310ec1"}, "e16302b6f135fdfd0b305c666725a24e3c510d86": {"doc_hash": "d35f37a856b1591730351d90d5b95a3eda78a6a48584d574e6243010b4eb6313"}, "c185e179b980fa797f928fce6e34a2776e89aaa7": {"doc_hash": "7909e1990c28a6f3f685264890582eb67c509757a9bed3299adb7c43fa369bcf"}, "8aa92e3f2ba495a4187941fe042a69de51bd6cb4": {"doc_hash": "b2d067268cbf3447e5e337ff05b216120318d13f470ef158bcb538d084e2f9ef"}, "ae8713be4d0038a6be89dfc10e0008de06730cc7": {"doc_hash": "ba2fa1eed6d463a55aa49f262aed5d287f5e2ef2e325a2a63623f9d6e3ba23b0"}, "a8a553d961602a782977c6750c98ccf9903282ee": {"doc_hash": "82a880d71d67d6ca242f309307188a1a6741a51a91c2530cb27176cba7784fe0"}, "5c37c5641eff49c5a4a191dace7378a06cabce28": {"doc_hash": "49e2f4470a34ed0020bde0157a1d6db7eceb849cf2b29d09421b3f59b25ec599"}, "5c355c2b197a6d6f1d228045d7cf5fd22c4f94a1": {"doc_hash": "9b9424ec6b64dda2266824d606b0a629f56f9e1bcc8a59c785f82523748bb863"}, "7c04919922114a91ab3b3676a54e14d39674405a": {"doc_hash": "d4b815c9c47bb60ebc6d45be25e18a75ab9f7b1c57feeff78acdb53d383be9be"}, "73001471479ef3510b12fecf6ca4e881effb7b54": {"doc_hash": "f48d76b589c3392753e5f94cb9de75512e96fb34a67861f846a135907e5800a7"}, "8cf193dd47e680c4ef435bf9bd2e6f63eaf6fb8f": {"doc_hash": "81c71742b56f18fcb70968b8709cac24b8a9f09b67c71dcf93f87f0b9882e029"}, "0dcaa940c746a305f42327f399c838e0246cea41": {"doc_hash": "bc293453bd9a8cc9fab66f9e2320a4906a35fa8187c37268d101bb9558dd244c"}, "539e992f59af7bc0a044cc0efdd49c5a3b1ff0f1": {"doc_hash": "8bf8bafc9e70a4c297a301067b608c5ec07fcc74072c2f51fd1be32c625b6136"}, "e82f2dad256034703ec7148802baaeb972866360": {"doc_hash": "1a2ee06319406647e7d67a87140fbd83377e4f70b3f1d68e49c42c66c0cf6688"}, "01c046087add1a88593455e826f6a1ca86c9cf91": {"doc_hash": "6cafc8afa973140bbb234d12b125b90e3477cebbfc025ef6d64fc68ecb510800"}, "1b55aab3946d9df9cd4d9bb72d9a9b045ebb8ec8": {"doc_hash": "14e5d8656248003ad22f0a3af9698c1c4e1f9986abb017d4c0fd3bd7249c290e"}, "5ab9567c609fdbedb46eb6b4f74298983b06cffe": {"doc_hash": "1a1fa82d3009be5b81e66a7b3612d06ec55a67bc5cc4fcac5e7548e391a835b9"}, "42409e3d82bc0aa9593cc6ddde456f5d94f385e6": {"doc_hash": "24dd6da398c06a21777cac566a366ee5417f4546edc1d6a7388a383e4ce8ca75"}, "1b802cedef27f6eaf03b408d1acc79c2a14283a3": {"doc_hash": "c09281bb32b1078de4698bacfe0d861c6224ec190144ab16340fad7e35fe3956"}, "b176f762788b4b0bf53cef3d9114518c202b13b0": {"doc_hash": "aeed6ac55f0a71ea184d58e6a49e5b6f2153da89221689179019ef0729d9f22b"}, "2bf99dd80b99e8fa76abc03669a50b448a0a0c0a": {"doc_hash": "97c82a07c8e9a884b76bbb8b3ee8ca4d8fb3d8b4139513d4ed087e0e43f00328"}, "4b8d2f29071e2d5be77d90f7823ebce071c867d9": {"doc_hash": "42bad7a452daa76474973ab5efba506994761a303197eef6f47e084ad562e37b"}, "0f4d372827cf00496c7485d14d16e92da27a5782": {"doc_hash": "28d63e0e3742e80826f8dc72157664f9233df8a0d6445b3d64de86b58fb275f6"}, "307ba3ad4c1c6f0f684ebd313c5f80725b45e2f3": {"doc_hash": "f0f9e33e2da169550880f2b80cb964cfd149f644446209040deeacd5106b1bcb"}, "5200c7e70fe11decbc5251cccf8a6abf86bfa274": {"doc_hash": "aa38001e5f402488519a6c5a6fa96f05959b13ddb67f71de63dc50d1511d10b8"}, "750dccb77c1965b3372efb287b5e45bb93be83b8": {"doc_hash": "e168c1d683e057d6dcbd43b1632519c217dc7281417f9208891d6fc92a91ca56"}, "d9fd624a1146deaeeca8ed61ff7fe773fbbb290c": {"doc_hash": "d8ec397a42fbe158c94eb232ba1438b32474f08eb8d9fb692e911818ee88300e"}, "9232e9889385402cdae54a1c80c5cf0657dd581f": {"doc_hash": "39f8c4263bdcdb59903814116034d1ab5b95a55dbc00494d56307b2001a1d340"}, "58948fe64d76f9b69901191e9eeb7e7a83a30648": {"doc_hash": "d30e10d69faa19c57bb4a7885539e4dd924a91031d9c7ba9e4d58ff17332e006"}, "6b30779a2aff18ac8ac3ae354e3d8e4fe592eb81": {"doc_hash": "2e1dfa7774641caf923bbefac8f24ded5868bade7a97a1d98149684fa8285b33"}, "7919373d518f96f05b88c1384644a6e4701152e8": {"doc_hash": "7f2d597a90e92a7968dc3fee42eee992b633ebbdab66860e0e320c1dd90e93e0"}, "251415c704030d49e5035fc9f53ae9e46c2c8b33": {"doc_hash": "94444b9972d648e05b9e42f03a2a366c5c0d0b1233aa794553565db3c85def04"}, "870aa3bb2632e38080ec529bdcdeb9ee1dd8231e": {"doc_hash": "909bfd8e9c8f4a3df88538b8dabb4690d84c59746d37fbc856370361e5f0ca60"}, "2f3f6ecadd2046d85b39451ba0d39029b7417043": {"doc_hash": "592022f80b1757ea34c55695acde3c60e6faaa9eea1bca536a3bd6b2ea22ef91"}, "45364223fd3bbfce518d9f2fdde6c6b99c577775": {"doc_hash": "02fcb784332fd2ce91654ed682f0b9d51bc6a60d8ae1c77541bf024c1b2b0495"}, "6408db14c910ee6db1191bb07ebf374e7be0e4cd": {"doc_hash": "9105266d1c849ca8ae65d03be3830d33d455573616ff13b8661ba38685b3aca1"}, "e83f47e9a4c95c615184bad6075e11d0ea0c3a0d": {"doc_hash": "a8831a587b344859d749deb83256fb45a402131d16445995023459956a7413a3"}, "ff8c0f3e6d034cfce010bf85f50df8046d6abc8a": {"doc_hash": "1c208773396c1c2215ad4de42ef4b86ed3fd134265f1356a134a2cd441577df5"}, "021bb6e5529ca1ba7a92434ab6d3eb56106cb7c5": {"doc_hash": "81e71c336d2832952af5ec559759dff728089d7f812d0bb931041aff5a1ecf41"}, "711f2c3565c6bf2aa4dd395c677ded7689f2dea9": {"doc_hash": "518a36479e1fe0fce4f64da7fd00a2437bacb4106da1a971e3f1dd5972423630"}, "8908e4d12eeb8645def40330de27378bf5f82bf2": {"doc_hash": "f9c5354d4431821597db269cf6f62613d1906eb9f4d392941c8a13db05a386a4"}, "a5049e5d8c2d54d410faee2ce87823d6dce805a1": {"doc_hash": "7581a24440b297b860fb454953d4c6f4d90fa65e2571dfd275721c9b99153a3a"}, "46f569509ba99418bf063d6918956d23a946a3e8": {"doc_hash": "e561725b144a2909c8d5abbccb0e667ec67353a0a41d80cc2dfe5c1c5abd911e"}, "6689444f26356d9566e370e1bf60cd9f42e57aa6": {"doc_hash": "af440327f52c609dfcb3eb5f1c49225d0da66605ac73a1a1a2e33c89a2bffb41"}, "1535e5e2755ae967d703440907005c78c19e27b6": {"doc_hash": "126c228864030acc2c7d341f931f258e7a8657d01259d0c773d56400fa99cf7b"}, "748c60da6b7a645d0d05399f4da0dda4be8626c0": {"doc_hash": "bf25f20ca8a1d8fe6f893d2eda50ec4cc1c6544a71ddca64756d394529b7da72"}, "38fd3af44a6b3f6f8f2cf2a6b463b1cb6817454c": {"doc_hash": "ce08e6fa1bf93341623d2bc401b48036c21769d638c50b31c0b46c3e55bd0073"}, "a2c88a3bc79d601d1073b4315693be9d1ff92aa2": {"doc_hash": "636abfc274f4d4bc9b016906165109cc98281428acda336a474f1ace2bb0e1b6"}, "c125853ff4d42aa057e79cb152485dc86863bf12": {"doc_hash": "1e9c4cd954306c49c092d644b6598530cb722642bb5e47da508330e6874883ca"}, "3b6701ce100a8b5baa92ecf81c4226308966338f": {"doc_hash": "8c42192fd3386d3102fe71c6ddb60fabff7c6478d43c9a0fc1e1b62216036448"}, "f45b908cf4eaa8fa79d54f651f7450a22391558b": {"doc_hash": "d671c3348784d8c359c8892c207cfb7b655f9587c85ca0c24c6f518d68f1294b"}, "0178a9a39595b7bbaade2b6f9601062615cf3b71": {"doc_hash": "7c332a57abdcd88105f42825adbded1c2a4387d9982158949a08d58d17f517db"}, "d64220a219bf8cecdfc6ffb25142170a3b74bd78": {"doc_hash": "43793fc2946c6f949f11b917b25a07348c59fd1d4f942fbaa593e309a394eea5"}, "9a6fc9c5b0b0f8bc4901e4b928de764cfce07b25": {"doc_hash": "33e5ff1f7c170166bdbe491ac280fcb41d1c36706e51513e9090e81ddf88147f"}, "5b350928c7826814d168583bb3e56d5fd72d5c51": {"doc_hash": "9de2c21ed94d8ad051eaa516fee793ec54442f4f179e6c75abd077485aa8fc0e"}, "b0bff941181839c86ad85ecdb6ffde85f6893f60": {"doc_hash": "c46f972549dd21f51e0f8662d9f4b8f898dbe36dc6399ac0aa5b3236d2f5d0b0"}, "0d9dc47a53f3198aee5ef67f8468982add80248a": {"doc_hash": "2d4e98c848f4ef834758c00d4f6e7bbceeb5057d5464164f7a228bbfe5165721"}, "de0e4f108be36f18f8f9096d15498d12c0c4aa4b": {"doc_hash": "d549ab5f7d9508ef9deebcee4e03731fd3cc5f4eaf1f794e9b1acde9e727b924"}, "e8aee922f34cbbcdc2c74099959a6547124abaab": {"doc_hash": "020ae059f7eded30b2910608a65233e66aaa753c91b189f5f712a00f1ea0eb1f"}, "240c23df493fb4466ee2370a1aa677b932c306e6": {"doc_hash": "b433a3c7bc4108ff748d2fec2a76be634bdecdc3c34ef6cee4097b5922c6a5ec"}, "4b24a7eedcbaff7d435a648f7eba5f6b21773668": {"doc_hash": "b1388b6fd09e1ff85ee76a4b868c382b1fdba36c200db935c538482ae793196b"}, "f7be718aa979d34bac468008eb0119c10a14ba23": {"doc_hash": "f3c64ec48bb3b02fb7c209ae40dcb8d819062f1cd386f5d962e788d922070549"}, "9ca569ef6a6571cd80f30a0ecc9d26cc1c27aed4": {"doc_hash": "ca46a164b6240d924058020cb141afa13c457cc08dcf4d4c46e6a406ccac4254"}, "e6fe5d894c20f3c9e251f9b32dd2ea1d7adfb351": {"doc_hash": "c7397434dfc861379d5a3cd977ae724d7ac1ea60b7f561c7af0629f5c1b336ea"}, "af2be1f5d58440ef2b8353e35393464a5fffab9e": {"doc_hash": "41a6c8497f056463fcf6d1248a03860bba1717247d19a54ac2e7b0c18f166349"}, "d62c69d1385273e4d9bcab9091b8e467fe048f4c": {"doc_hash": "f1b4fdbbc747674c0a12aeed4afab9d9d43b5352ed9aa5bff5ded401f5728ceb"}, "75c7f7b5814286880af828f1ac2a4f6be3acd5a7": {"doc_hash": "a41af6db6aa4def6982a5661ff7dc859f6450135f82fe6fa321a659cbe0ee055"}, "30190859a62377547b3130ccfcf82294930489c7": {"doc_hash": "fc21329b9221de6c71912624eb5547267bece122c951b764af2a637921f7002a"}, "2700e6a9c54458566fc7e39d82550193d68616ee": {"doc_hash": "d46a64d5784b0d7eeba7ab654e88e00e1b7959b1fca3d032c3640eb0974e678b"}, "13e77438cbd878f0a90d28a637645aa3e0e7eb52": {"doc_hash": "104750264bca9fdbc282dce9f797cf09ce99516f8557a665b9b14e579e929ae4"}, "9baadc745a336a7c0634e9732a64a0d73be7c09e": {"doc_hash": "83517c532a08eaf741170e4d7c6d5b7336846725b90c4eb48c417cc36132c868"}, "3908d014cecce4a5f4e5144339a6ca8399fb850e": {"doc_hash": "b803cd84189bbfb38edc5a7f24b1cfd9c7aa05fb49760b97e58d0f1caab7f7e1"}, "24cc199ac66cf075f99a4713c62b3eb3e6e54195": {"doc_hash": "9649b5be84bec00633f71cb868ae0c19dd3854132901dd219470de2362714cae"}, "d0d9677c80c97259187a200016a47d821dffe7a7": {"doc_hash": "11d2cbcb555fec392f2b4e56035b673eb5847528f1bd4e0253aaf740c907a6c2"}, "fc90e98c75d5c4d498efc3941e5d0e4a9ca66932": {"doc_hash": "57f2a12dce98b8aac4d2d500adc1e9b390a1981b450a1877bfd8062263d5e281"}, "71c8ab5db0b99ff477fd78448b4ce904f1fa74f5": {"doc_hash": "153ae01bf1fa4797d0e8eabd56674344cf319feacf650cab32aa55775aebac63"}, "453c3c4eb9dcc16b15f94e4178162f78f8e18edb": {"doc_hash": "ebdd676283abee48bc20b82c7f5bdf2375fe64dac161190c611c44ff78451818"}, "1deb649c827d81751f4433df78e5610c1cd6b04b": {"doc_hash": "7956dfb270a70b25cd19091e561600b660b1d40edd9a75bed2ff5999bc5416fc"}, "050400d781940d18d85fc01ce3a04ea20f1b21d3": {"doc_hash": "94b5647f26cea75a086613a16ef45a0fe363efaf8a17cbe40888f1371c013557"}, "3351ce74f5c858772583b0521ebfcbc340942a43": {"doc_hash": "6617a8cdacff68f27ffc4dfbe15a9c8023827bfb1166d9ac59b82e461e578aeb"}, "d9f124f0acc944891c0383543f524e0af4c170a9": {"doc_hash": "8d5fb9895c03cf39ddbd573f6ede910cb595526b23910c5241aeb117e51aa343"}, "1654603b384c0623c5ac0a837cd9ce1b1e1b3e42": {"doc_hash": "4405bd5141e0cf491a0e28e44fd6db3d2848f622a2ad1f09dbbb5cc551177eee"}, "47096e1d78450578ebe358ddb07d88fc59e2ee7f": {"doc_hash": "dc3f1b5b89f09e81f4bd510b6629093ead765bc7639b558268d9b2c3e07dd2ab"}, "619c8824737b2ff7df9433fd345a52eba380cf4a": {"doc_hash": "96a3ab4f599334d3ebb35c24601575a30f2fcbc5cea66af342ad2d248cffc450"}, "244d0cd82c097a4bebaa13454157d531d5ddd287": {"doc_hash": "97cadac3b7f7d215ec821e0968964531237fe9400153db19fdb3766882165e6d"}, "8f30e5767b0a9efc2807c674aa5078539d2ffa9a": {"doc_hash": "b400ecbbfd1a8ed862cc4607b760ee3b34c0f3e93dfd644bdbf8fa9f42e6e607"}, "45131f2ca0355f8b83ec0ce3fa5b2bb39990c609": {"doc_hash": "8d363a4b4ea2ed9c2431ad4df322045118d50d73113d42775f6ed4bb528d39de"}, "326aaf7061d07f06849e6eba586789b3294e51d7": {"doc_hash": "dbed184c31080a0cafa350b8f93ef811adcf759d1d18c742c648a5ec22e8a685"}, "aeb0795606e250b938daed24b05df5e703ebfc07": {"doc_hash": "4270e3c89d7cfddd89672c2c790dbd77bcd53f81b90965fd0c1ac1508fa8ae7c"}, "3d508b650d643732a6d69d9d8f6f904471081d6f": {"doc_hash": "77dc0fde034a97908544601f3eff81d3f46255c95ddb9caafa10eee543e3248c"}, "693b23e38ee610dfd04fcdf2336ead7a7778d741": {"doc_hash": "5e20abf30c92e69cc5bac3fd3bfe5c87551680e0438448334db5caa5343b8132"}, "ba556001e64d6b011b62e8c553bf80fe37c51499": {"doc_hash": "a0394be3e2d88bb3671d98581ba31278c49ec1e42fa10ae2f13710cc9a5ee366"}, "148cb0578cf52b42fc6f90a4393f21c8694b9ad4": {"doc_hash": "6567f6df49130b26dbc81ae1b8972f4830beef089401c4b73a4de46f71bb9171"}, "05f65dfc81b7e51c8c09f8fc5c39f831299d6a68": {"doc_hash": "c1058989e47296013a2aa497ac2a7de38b6687c92891d0adc7a58d4b283d8655"}, "80d75cd1ac9594c5d835edd0d79a1642d13a2599": {"doc_hash": "86ce914f9ae5fa7d79d3a4456cb561e9d85294ae74ab69fb5f963625257c65ec"}, "9d6070c43f3265e0087d5e55b4266e72c352816b": {"doc_hash": "0ca820bddd03d409ddbe4dac64c3f2d3a8c840aa53a4a56bd62fa725558fddd4"}, "6b3e86c03f5a0261067a61adc7cf3c75f1a0ce7e": {"doc_hash": "9829413b15e6029ebe166cf89e5ea6de2ee7c95d97610cd69c6a9f2d4ed827fb"}, "5c6beba5703cc7b389211a478a64cbcda8ceabf2": {"doc_hash": "096e033e09bab086b07cc3dce5dc47723db47a6f60464d2db2e57b2f11d80057"}, "6fb765f3cd6e3114a32558c0a80177f57628e624": {"doc_hash": "eeb7b4b279ade9843803b4c3a59edcedb6d918ceea8322df64b38a687d61f773"}, "6a896eaccad79aec7d025611485d396eea73a21e": {"doc_hash": "5640542ff162784f5f82c02f3ad31941f7b8195db4a8bea4d5388f6b3088b7da"}, "5181cd0b483f1c490db96613e0a1ace56b8778a5": {"doc_hash": "e9670604d3f718b147a16792e35b5d632142e1862e827410fea7eaac8e66cb56"}, "ff83fead0ffbc4ce2d3f4b6b49b079d8b3821fad": {"doc_hash": "ba39d46f6d91879427839c3ad9c45cb522c3895f4c525fe43fa73edc085045a0"}, "b2133b0461cf783d09365e776c55dfdc35c903da": {"doc_hash": "674bad07c6b9a36c3832d0746db32c92f834a52b8bc66d8f16e7ab12ea5d6948"}, "b296bd078ba3fd1110602ab8611e026397cdd6e0": {"doc_hash": "bd4ae6664872a8c208ff23e7b7f3d3b9176a8c5d0ee730104d1c0d25b93e5be5"}, "f0b8cb9c584f353dd6dee279d653c87ec86011c0": {"doc_hash": "70d8e58b55a967b9fda4f77062bb874ebb824f92730d3f64e78a76f43d8482e5"}, "e88a8ac7e134d22e0e7f0889522f225b367ce504": {"doc_hash": "6cbc1942818e33cac4a4cad80e8a67d6dcde02bd10c76e8afaec43e0e3fd9ac0"}, "eb2667288eac01ad2f76127cac00e090e3506bdb": {"doc_hash": "f550ce8714421fb4986eec85dd595ba18e83bd2e1da6f6909ad3b331952ca7bd"}, "734d95b6ff9211003fb19f1c503a226f394e0986": {"doc_hash": "1a34f43a1cad3389b95329a2900f70d47bc184d34b99804ae016884697b5aeb9"}, "dccbe53be30151846212f49b84ab532c5a1528f1": {"doc_hash": "42cb1fe8262f0f1817d0e1f3aef0b2c2944680596f6b798c36a54adc4b6210a0"}, "d1607385afc4ed2ddff08dfd3bdbc533cd3a9323": {"doc_hash": "a6afd85ae956d745085c8fe2bc7f0f0c45f5ac90772da5b49b51e4ddfc4dc081"}, "048f94707ff90bf6a93134541d96b13d946e9c4c": {"doc_hash": "9f8afee5100c494b5df9cce61d5f0b51cb803fba059ef74aebc7691deea64e0b"}, "9bfa9c4c01df697c230b67b81853fd4611998d7d": {"doc_hash": "a739d4e2600f21f5d4a1ba1b0b334c353a10fefb1569cd72ff356f1f9bf06dbf"}, "19d45674f2c8161ca3a17bc630af7785a791d0b6": {"doc_hash": "e66ae1e9ab76f877157244872f77cb57b6875ed6e74e5f0b5077e06838413542"}, "256ae99656442f1654cb7d26a79b1e905d75bc85": {"doc_hash": "5245e7484d41be7fd088fef1ea69bb2d9f74ba878a7934b01cabb86453f99a30"}, "5945a6670e6b90248ae41ce860c5431c8f180e90": {"doc_hash": "2adc475a1ba40b56205353f1a67aa315e2c7214505267e45b96e631b6e8699ef"}, "4b063866c7ec402c2d3450d6e7cce58eec495de6": {"doc_hash": "10c463796cdabbfcae355d7bd54e43b1c8fd51a1bafb6c5d0e702092b1375c38"}, "d42fce84ec0d751bfa6f12508103eaec04bdcc92": {"doc_hash": "bf3e4d7b03f47267a9af11833330af9dc3ac389397490fd95fb8da0da8fc3f1e"}, "dba4749ab0058560c7b1ffc97f394cba73dc35ac": {"doc_hash": "561f75a31de68c13f3ef1447cb65410de3fc8ba9a74901d0017ed351ed7c63ec"}, "33070961f1ed43043ba3df4c176cc518996d6ba4": {"doc_hash": "4160d9acf95fca83d1d349d2d979e301e034b145c42bb9d149420d5289c10526"}, "a1f71bd038868b95dfa51d8ef1e0cfa12d447dff": {"doc_hash": "aea38318ab9166c005ba1219d03eca4f987cc11a74c9b40d03e988a2707fed0d"}, "ba432edc3d82916a7181a19da522b983e6da8587": {"doc_hash": "41b959df93777318bfc48040663d6185efb427a78cf5220f8e9b5a7402e161db"}, "a27b2a5800f4897fba3c7339620fed1fdd995674": {"doc_hash": "ad97fc55b1a54efd6f86b890e6307dd9ba5ecf1a0ccce1c015efb4882f3bff56"}, "038398c861c6c187545de3f11c323e4d1135d42a": {"doc_hash": "b8a606043dc526f0a0beb07881af2147bc99626cf80f7b4ea2422a6d7a33612e"}, "83dbe886a230ace75d3d8cafb06e83af332b0c82": {"doc_hash": "3a7831cc0a5dda5ef444f0642df204639445041217c8730cc553d98c1534fa45"}, "7bff700d406f6e260a4fcf921a5ec831c281c38f": {"doc_hash": "cd0332b96bc45e8dec35908c3099300c141a2ce8acf99e830e8b1e6e6927347a"}, "83682e27844b075aaf184171dfadf1aa7bd48cd0": {"doc_hash": "d1c39362c8ad95fa56e71c16969c06817d15259bba93fd596bf0af2901c9ece6"}, "a4bf124f0a9965e8924ac10e5589e36a7faa89ea": {"doc_hash": "1c27e789a609ebb6a9a75a9a8a6660feb91dcc1e8ebceb4696287f73f5413c87"}, "dc9d9450a2d855402117b3ef6e32c8f889b39c51": {"doc_hash": "34cdbf643233eb790d705ea088e78742245487eb3a3215f4c45c801d448bda8e"}, "68546612462e87086c43f2eb553d1ac75b299c33": {"doc_hash": "3099d2c1ec7bddfb743b19e3c9cecc0cbc60ed41cfc1e641160ee49937bc17b4"}, "c6fb2ba98f9dd88575d58b4435c6cecd27b94dc2": {"doc_hash": "902583b96c30ff87f8309836205172c8de7c63cd3c3f35434e8318b529c1bdf0"}, "cd1b2c3ab5ae21b7cfd2c5dccc20393d0a9ee20c": {"doc_hash": "781cea7a8a55a9e19e296096107a397fcd51cc4ce8ee0729b9bc345f04ae7e63"}, "61efce43603a3d91a571c9165903f2110fdd268d": {"doc_hash": "03c0b957d1f6659883249c59a4db55ac3eac59b4ca2f9a21d48cfbf39aaf5995"}, "7d8b408b8de1473d0c068bb6c47132ae163c617a": {"doc_hash": "16b1749d3d29c56441cae1cbcdf5634897c6be99f18ce3dc7973dc5a0727c212"}, "1dbe8a34573c34a1346faac572002669ec4a6177": {"doc_hash": "e932a3f0af1d76b3654cde224852a830f2438ad1130246659c58ad822de0815d"}, "87a35971eed46a091941c3bc0d4a116226825d22": {"doc_hash": "6922bd2bb8b0223118f26a94bcb78fe54f1bec641db9e7fae3854be430d15b22"}, "ed44129971994c583c2f7ba0e9c58415fa69c84a": {"doc_hash": "15f571868c4ae1db2b17753d69474f66c7c0cb81e7e4db8671e196b1b2a1af41"}, "d89fd03fc59a6c617e5a151a56a87b2a0b4349fa": {"doc_hash": "a72376f0472b0d3a6cc1ec83565c5a15c41096db138b956daccb74c94d44a95a"}, "f4ada54ef27dc3a2ebd97070e6db411c07eb8447": {"doc_hash": "3dddacb5b8d8d2194c287b7332ecf85c26329a068ed04c9a9091380c04a7c21b"}, "f549a70f3f85f2b0d1b00246672926944157ff52": {"doc_hash": "3313d707a65516a755925b95d29cc25f9917bfeceecd26da6e5f990d61c65696"}, "1aaadab948454b086fdd17d38bfea2a75f66b1b0": {"doc_hash": "5e6f2c40e9acae7a5921466e0eb8b22cf2f6ca76ccafc81ca8cb1a59192cd94c"}, "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9": {"doc_hash": "c9c71dd89a730c5be1bd4ef541b0755fa005a0adb460056505cbbc6e585a3400"}, "08c08e787361149d5c5006b5e188bef7b51d1501": {"doc_hash": "d9c83afed9cd53eb32c88543c4e733931e4f8667e6a0bfb998049e8d07a9f5d2"}, "eccda3802fba6e86c320dd5d1572c3eb006d94d3": {"doc_hash": "91bf962ab2c4a69e665b507598fd1dd8f3a8d608d24799ea6dbeceff0a57f494"}, "3a2a92b3239fa515533506d97ffa2d255116afd5": {"doc_hash": "1c74161fd61d49baefb914f00f1d4eaa9bfae27de0a44abf2b22e3a966839eb6"}, "0012dae838fab5aa34020c7c506cd16363ec4c15": {"doc_hash": "0bbe0b37fbec3f7757b2a63553b9563960fe6b8e1bd2767897f0867e84fcbfe2"}, "da816c5363d2092e65647c82ef39562bd0043895": {"doc_hash": "ffac64a24d05386276233cb42d1e73947303820b9dde3fe613165bd228a333cf"}, "f900319efd26247f8674d0e4a326f64fe44e6f43": {"doc_hash": "bb219df174e3d925681f500bd6a241580fbb9ad7c6a41e2df745f285ad94d04c"}, "f4e28d202b2a911d05af735920eade92c75674ce": {"doc_hash": "f5182763a3f04c848fa9c34dc6d9e6df0fbff59c87b0526df41d65105c7d65b6"}, "08cded504e79aa8af55a6a4e366ebc46e9a334ae": {"doc_hash": "2cf1f465522c9de274552e2221c6dfdce1387ed01a0a008d6a5663b7165cc59d"}, "f6a7945848250731cee6805eaa0f7faa3675402e": {"doc_hash": "3b01f0de1e5ac6619f07ee53461bf90ac396ab2c872c3c8cf11a2ac2c4e2a65a"}, "e962f74299c9b2183c1e04e61c3b1bae9f5e551e": {"doc_hash": "ee500179dda89be86d828e0d13bad1141a54902e52f25f93afaf6dd5069dd781"}, "e7a764354636f8230396f98d84111e9bd63a6ab3": {"doc_hash": "569dd72f03201e4250bf6d0d9c83f064b66cc4c964f0f20e54c4dddfccf7d634"}, "daf58b90f4c89f44124dd7277c55e01a396b5502": {"doc_hash": "02c4ce9ba1a0010da5fedfa595112c960e432269a55f6b549ed4d8eba5abd04a"}, "1539d3d50a2aff9030d0128aa77713b289b09271": {"doc_hash": "18f6fade7de1e40a60c9ae5b4bfc4b76e4961bfab8e3235b39a7ab1e6590e2ef"}, "22d16666efecb48f6410118259edaff7d58b9aad": {"doc_hash": "32f93d74154e61586457d05c44cbf851ec5c6d3afa05296a5c65ae1705c79c54"}, "6cf8d33f445f43c1bb5fb460453326c57b0f10f4": {"doc_hash": "470ff74404e193b0ebcdbc994ca76c39b992db82b6b4ce6f39f4a9c5917ad508"}, "a49ff19056394cccc6edd6468a843577c975df85": {"doc_hash": "5344ecc7fb1d97a85194d86fcf34fc70f50633cb6648e3370f4ddb71fb2adf97"}, "3672e45951c269b2bd6dd95807bfe3bce85bba28": {"doc_hash": "d06e93181d00f766cf88339adf80d695c9586edd8007bfeba732096fa47a7aff"}, "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe": {"doc_hash": "d1d0e4b2b6e06cd651497d0d485a39ff3011a831e38dba0dcb6e9ab0994fa131"}, "6999ddb20d8eb26ee5e7d97400ca8087881db3aa": {"doc_hash": "5a16aee3e1cf22c911f52d29312e10ae43009b19180634dbe796d8b125f081e2"}, "8f7ef9f0f3c7d236fd3fde3ffcdf1493912c651a": {"doc_hash": "14e0b8a0d2c02290b8fb25dffe81f0ec90d0697dbecfdaac5a9bc8cbb39ea525"}, "180ad52f2da3ec42345fff91fc5600cccd0bea30": {"doc_hash": "45e0f03b1f237c144511503e3a97c909fa8103c60eb8a4505f8a435f24f1a138"}, "2a8b4c15dfdb2bdc9ac61e7d7de5cc3c12faa120": {"doc_hash": "165f5603c3683d6971c3079579e83b3b10442da428d8ffa8ee849fa3a19ee9e5"}, "6559548f00cf53c2278b3fe6a75ffd2ee2993a47": {"doc_hash": "c6007613f0c84de481b2e24ec69f0f47869996ba2acdc5314ae785ab685bd303"}, "c3e4d8a3db57f4a201d5b1908eed39490d927979": {"doc_hash": "153d666f7ef5a83709ece7a79d4e7719d6284034bde414d50a9a38ea6a0fabc3"}, "99e582f5e4bb25201eb787c4c25f3595b79a99c4": {"doc_hash": "abfa65a81cdc735289e1e25ccaea54d51e09c5140d3b94e00a43e7e64614c53d"}, "e5145607a664c4fbcd798937af25f06af67bbd07": {"doc_hash": "ea835e0a566f7e79594d2a35737afe9d97d30b2bcbc7b0b1e4a2e7539a606ddb"}, "e5be40b9e630c1c422992678103cd452639d999e": {"doc_hash": "fb31992b29493b63a412de7c16e30b6c759d2f58b02720676eb2cddea911409b"}, "75146769cd0bbfe85f507692e23930cb590b5ade": {"doc_hash": "b3244d61b50c63e50e27f2726945f77f1eaa320f9dbe385b56a6176cb1ca0796"}, "6bf410fd47bf11af378ee8c632dafdf4ccbb6048": {"doc_hash": "6e32844907393b7d77c0cdb25ba25c499f5a795cbe76bdc495fdf7a401d59046"}, "55ac3421090689d6ed03a34d1fa4efc29d9d0a90": {"doc_hash": "2c2911cbf793d57c5aa0dc59f65d868895ce9f6f88b081a4bb77db1f78871250"}, "023e32ed39a29832db7c59384713dffb542dd514": {"doc_hash": "f6d3e6c7dd848b2ac163b46d6617dfbfcee9a6617ec95db87c207655d470aa35"}, "8f6be040beb4aa62c1a856cc6d6fa6140ba85e9d": {"doc_hash": "ca442a5e5ef1c50b778f0be91a757af6a3325cbf202b3aaeda3494623679822e"}, "8a53f83feb681521de57f5e18a32622a4c9e5794": {"doc_hash": "2261d1cf8e53ee27b74a9ed11f02d80549a96e9c27945094949a76ebfc4411b5"}, "ae9fc253fbe51513e7dd250ce709446876c1ebf0": {"doc_hash": "72e382f1036df194ce8ba6feda8c0a39966833d060e8bc68fb68e83fc85d3891"}, "6491e4a6f8dd499e2ca221136062da883b0ec8c3": {"doc_hash": "9626b79ab34dea9477f66236380cd0de8af23944a5bba708c788f70e34148d47"}, "8cbb27e66e7624c2757f0b36f7464a36eb8c0824": {"doc_hash": "b33b24920306c039980dd5dafc23e5e244bfd9688fc667880611487d619dcefe"}, "a3c4e255903c742d97cdba70ba353058aa86a86f": {"doc_hash": "7942d2da1ef6b66c2a94fc77ff2b11f4d17303edc3a007c2bcf8e0a7b61f520c"}, "1edff04a6189f3fb9ef30288e593bab64f1b1205": {"doc_hash": "e136f07afbb149ab26d54c9a85ef32017b8732f8de1e95c1d1c0ece79880d7a0"}, "2c64e5d05c028555a16ea464e75e60aa2cfd2ae5": {"doc_hash": "f8cafd9c308e01c713bb2111a176aa97eb9ab0227f9977c223334904b46804eb"}, "6b2e7a5ac172c373054b45a6c590eaed97bec3c5": {"doc_hash": "5ffd685c7eadbfcf5cd31087f58bd8a752b7a7138449ad4b6847b683ebc0b01c"}, "f11d6e689d5997e8cf97c44042ff6f29a2fefe20": {"doc_hash": "d57e0653818e711ac7daf158747a8214b0bb1eeedbe6c3de445f0e1c9d610e82"}, "7990f6b219c8736ba354fc1c565ad2637749ff91": {"doc_hash": "a56db60a4ef9eeb4e84e7327c4c6276177f122b959fe8e807bf32981be377b86"}, "bc86df408f308e87e1ed25f73e16c4ce7733d7ce": {"doc_hash": "3bdde3f34b916d4b8b2b803ee35ec03ab9a0393889b1ddc228b1e9ccdca246d4"}, "cf495018c3923b314fe53b809b329991bce28a11": {"doc_hash": "15cc29a3c7363a03303cdbbb0f56e5ecf7ef245493eb4764dcbeafe5f7d7a8e5"}, "12a3a18476c8ad859d941066b2e40d67a37c53b4": {"doc_hash": "d24eff66829aa0578aaf01da59d1589af13944463d4d16e881360fa310a49d0b"}, "e3b8ffce248ffc0217cd918184dc4e8177c1ded5": {"doc_hash": "ccf554afbd6cbc9bf93b0d8ac74e05b0ee3389d3103d269b9e4fbb851300c3a2"}, "841023378a35b92f18ff2b2a8e5c01c25d86c704": {"doc_hash": "7731e9a9c9f4bd66cc21e426a230a3ca0969fb84b70606d1ab0f43be9927dc09"}, "ca5f9c438cf41a085e22086a908d2b6df0545a1a": {"doc_hash": "c831b24acce9666410a0c18ca7766798999678a0ca79b1abb96d03d6f10a96b3"}, "5e9cb56a9b8e0e66898c159919cb2b899d09bcd8": {"doc_hash": "d3b506c0338b8b5c27a72dc2bb603c74affec8b3c8b5297fbce81ba4f4eaf12a"}, "48d8bc88662c0d4251d17fe4e2e392a573be343e": {"doc_hash": "fe3e7613bdbd299e46ddd623531f1acfab00f49f9af3f5e4f40a76ab5719cdf7"}, "c7216e92174294615d4325b5a003e51c4d62529f": {"doc_hash": "1ce16691bf0945f9e3322854ec505e6639040307819f3550da94babb5fedd4a3"}, "d47dd17a08ec9bacb03abc2221742a74ffa2eab0": {"doc_hash": "65cb6e6f8c3d3e242d64b2ff86c77582037e9b27989128dc66d09f02f90e52d9"}, "670bb4ffa78ce830eab4537488114925a8414caa": {"doc_hash": "6f6f10999fa5a8203d7527fdffb87038194a1be719b5f125238e69857a7a9221"}, "fb3c0a397534b5ec9ac0e5031dff6f1070126dce": {"doc_hash": "7f5a44392d4a6ecf8c49f47900d8a06a84d9535fc9c72e10842045de238e2ba7"}, "f4ec0c5331090c62666eea03fcc90424707fac89": {"doc_hash": "a9d854e7d1c4840630242b3735c6eb485fb8f4c05909e7630f01d971e7db188a"}, "6cff944ddb431c5df8bfc5f82151f3b3d28245d5": {"doc_hash": "f948b34a42afbfcb627b65ac57ee2145364099c93533d4e37f1c94766d26f17f"}, "3f76cf31b9c61617e8bf72feafc551e8e5b9375c": {"doc_hash": "487a5552425cbdf06fe4ef2b510d337242a3620c26fc55d2ddaf8fd2dfe2a741"}, "01b422dcfa458f449eced403b14fa2684b165902": {"doc_hash": "0a7fb38f2a8f5166899a037ac65a6b24dd00e2445b6bc0098432042925ca177e"}, "218a84150c94facf9cd66235521de0a2a631e210": {"doc_hash": "bb12b754d81903b65ba47631e2a1ea934f978f26e8b0e751527413ba508c7eae"}, "5ed2043a4b6f51480cb63704de79fb1cabb9637d": {"doc_hash": "0ae887d445205eabc1c247a613ecd31ca5d73852d7e6ca6b0c814dc23eb74b71"}, "392335ad98d7cccc885f7f45f27c4826cca2c705": {"doc_hash": "2175ef1c2b4352ccf2bfa70a2cf25e988f6db949bb50f7ac346e0fd255b906eb"}, "b1c032053e04b7312e49f60639ed7a2f6b6ded0b": {"doc_hash": "8f1612bdbae7ca1fa645a57631d4a043978fdf6620f631ea443427a0850b499c"}, "6a55dfb00de3b6929546cf3793750e90e5f09796": {"doc_hash": "701565ad33b650dab69c0eab85bb5adfd54e96a736bf3681efad974aa2c70dd3"}, "b7526e5c7342e1ca6e15d1798972fa00b44a426c": {"doc_hash": "bdcc1e120a805b523a62ab23876fdc9bd660239faa81fd76655760a2adc5f99d"}, "65bcc09e9e8f95ae59563202c64ce30b97973643": {"doc_hash": "b034a97b28b54d9ea52c31cd61da8d8f27b597e50dc0ef30ad92717db23d4baa"}, "ebf805912e099357eb1bbd21e260e81e6f7803bc": {"doc_hash": "592cd2d121f887844a20ca1fb86bc7eb910855e80ce6e9bb5c069874ebe2fa7f"}, "84cf76450fe88c644e4ad1523e075de6e349b53c": {"doc_hash": "a59f87b0be0e6da6453a02ea08dd215e1f5c0554829e51cdb408a726e221d28e"}, "d674fa59b61343b1f6e8b2c0c42cbbc53b3760c0": {"doc_hash": "9c1a1f3531496dbc5391b34fa3c709904dabe3e3769e544ab682f9f54056109a"}, "6eeccf7020b8bebb94acfdc39863b2dfcd7c8b67": {"doc_hash": "c37c3969148f26b14147e065c610fe307a9423006b6ebbe33fbeba6d3c4ac165"}, "0e92971a1c24f7e81c639249a5499ada925ba03d": {"doc_hash": "676521950518c739160a398917a066d52025c6af70eb0b55d66fe8a38cf7d085"}, "62c8c0b0485d3a46bbd171ed8debf0d0d7ab4d26": {"doc_hash": "bb4ed1aa39cf15f62c018d4dd0421952ce0ae8ace1cda628a8f67c67651d34b9"}, "a2530f2cd25e1a893b2e645af738fb3872fafe65": {"doc_hash": "39842563ea07d2c687ed8829431baea28a26a2d8a4cef98766469a8d576610c7"}, "1de01b7d-b0e6-470f-a8f7-111c770c67da": {"doc_hash": "8cf8e7327ad0415b3334ad155c3fb8f948d3a4f831a27fc34ca7fb0c45513d6e", "ref_doc_id": "e7f63fa6f050dc095adaa719f3792b2faaed3d25"}, "1378ae9a-1ffe-44a8-af81-433bd3000c7a": {"doc_hash": "734fd4b19604bb3235f58841c5ef5dd1e6107fadbef47ff66dcf7bc3f93e0a85", "ref_doc_id": "3fa642b53b49b91eba6c77cbfdec5bc123c12000"}, "e1606499-953f-4a5d-9982-6fd4d7d36baf": {"doc_hash": "e81d93bca8bf731d241e60813474a16d3045adba9bd786233419c9717d90ae3d", "ref_doc_id": "5ec9918441fa2e6396702e48418567825cd559da"}, "6e5975e9-3e2b-44bb-a2f1-029b40e96849": {"doc_hash": "aa6f79b8af82e68bd4755b677026086a46eaf1427930487d4f9a40f355132222", "ref_doc_id": "1e04f880edfe9b5940366a63b2343d414e56b139"}, "850492e1-6f34-4811-b7cc-948ddaf7e491": {"doc_hash": "ed218d29ee85c110861db0cb65f610184a44654df4668a0e855ec8e2e8f9546e", "ref_doc_id": "7df7a9982e2375296669892471311416b6af61de"}, "15e150ae-dd14-471d-bda3-0af6a9e23c24": {"doc_hash": "7db4827f264aee27ce5f1e22e756b887eb398eef13a7edb69292e52062ed0f8e", "ref_doc_id": "ccc378509495b4e3421062fa2e472bd1623d1d25"}, "c12e2d7a-6c92-4630-b17f-9a74eac3425b": {"doc_hash": "67cc92e8bc7d2e61f71ad2538d6da120e63c6cbeb5ec9845fbe3c5d2ba143300", "ref_doc_id": "9ace3fc92367687a26b680d61659929f2ff8ae01"}, "d59e23fa-5c3c-4606-9fb0-3401b92f5550": {"doc_hash": "9ea2837fd7de6b532b9df3e2a4898bb94be264b45a2962a2c06a25cab094476c", "ref_doc_id": "4bb7996d0648e76f59df4267cb157821d1464797"}, "bdb65248-6ba4-444a-86f2-741df4faf90e": {"doc_hash": "2eb6c9241deef06e74c42c39160faaeef8c71ada8fcfa0c7a1aa9c9c09127c28", "ref_doc_id": "fa9a013a0138f9c34c0fd58a3ee2e27e98dbef1c"}, "445e7d86-eeb3-4bbc-8150-e646522b6c6b": {"doc_hash": "6bb0557695f9f42081e96f9c7bc641461b770f667876634624cb011636a9da04", "ref_doc_id": "db508da309e65d5c543710329e858a69add618e5"}, "af2f5d0a-0e71-42b7-812a-78cc4312c5ec": {"doc_hash": "4df4d8ad0339576a5d7202ab139991cdb2c583cefb8dfc203710313547138db3", "ref_doc_id": "3809b9efcab3b6022fd361192616e12fbf84ca8e"}, "e3e2dfbe-3aca-4aa8-8616-9edf7eacf021": {"doc_hash": "acc6ee72e256f61b308486266e660864d86add710772640976e9d0fd8fe3cca5", "ref_doc_id": "3809b9efcab3b6022fd361192616e12fbf84ca8e"}, "f96d8f49-94f4-401d-a9a8-f46dcf3d9ae6": {"doc_hash": "b2c6d948223d4b5a52ada1c5fe41b3a54ca1ee351e5f2d3866a6ada6df846e75", "ref_doc_id": "1d33f3e215517ff3c30bd45c62cc4f67d18655c9"}, "e75825da-d6a2-4988-b615-acc1cd9fe76c": {"doc_hash": "270ef97df5f078a67f1f8866a1b4ee24457837f09f4aba2603714f499af7e568", "ref_doc_id": "36215fe63e07fe2d1a32f489c4f08e6eafbcf692"}, "9f162f06-5ff2-459c-a654-31afc0f40aa2": {"doc_hash": "2f92938b7f659f524e78026975df1e2ef12b964afbf5320919bd82be384e35fb", "ref_doc_id": "1c7f7a0c0dca48387396c6205f8206ad1476dcb0"}, "5f7a03f5-df1f-4c3f-81a0-0da667d64777": {"doc_hash": "54b06f7730358ff9722f561e583214c8aa5dcf5a54e8cf4c0af168c433c32494", "ref_doc_id": "b6f363da862e13ca6516708724dbcf3da954a869"}, "db13e7bf-47d1-436b-8a2f-0bc58ebf63a3": {"doc_hash": "d4f08b5671e66a1b8d5f6facb1c9043c9e8955b5882bd97bc2e85d84715f5dbe", "ref_doc_id": "fe16bbb782dd422cb32fb98838c4eeb2f22835c8"}, "d6c6a6c4-e2c8-441a-b7ba-e1fec3b09e6c": {"doc_hash": "1442d0dc61db111e67ddbfaea613d326a36d3141e5a59932c7f9ab6a68332576", "ref_doc_id": "95c8389417804ba33ca8fe431158590b9d87576f"}, "9c83cbbc-9bb5-49f8-b674-c77f0ca827e6": {"doc_hash": "e89c3881cd2042f74d3af75890bc1cc068dc79260ec85e0fc5997942aac6be39", "ref_doc_id": "907f6a36c5633585d6259122ece37c2147c9e288"}, "a77e0c3a-78a1-405d-8c9a-9ece1c337834": {"doc_hash": "1666bd4e962c266e939a279d4ed8cd09cea8b34d34e5612ee49f42e6b9494f1d", "ref_doc_id": "7851d73c3b521493c29ba4a3a9a0f70534cfa9f7"}, "7da1b50d-6655-4d4e-bab9-2a86c7ac0009": {"doc_hash": "f33d86b940a2cf1418dae3e060272c3e3f9dc77989339ed0abde71c83027ad62", "ref_doc_id": "28221b011fd18f88994bd605ee8abbd56df72ae2"}, "9a49cf18-2797-474a-9f34-bd8975123680": {"doc_hash": "fdb9fa901872df9c2c107124f3f72eb8ef95aad362474dee8273eddd65fc69aa", "ref_doc_id": "7537e19b807bb9abee61cc86ca7555d09265798f"}, "ffb3978f-1970-4c11-917a-0237f234cc77": {"doc_hash": "1a243759c228750df88cf1bed8f1ef51869b9f586859c21765f3246c2bedd557", "ref_doc_id": "83699d08e8a5c15005212b0fb867d8345ed71c5e"}, "e9d91aa3-35ce-473e-81c5-aeb5d1da8102": {"doc_hash": "5b755e970febbbf4386e5b12830b80fc551a36199850a03a5a4a5bf00a70d542", "ref_doc_id": "ff72c36d4d91ad932f6a6413b6cee495e672e8db"}, "8d1a6647-f602-49d6-b365-a8a1f1e66d8b": {"doc_hash": "e2d1ca93dea5cf4d7b9547408c60a236afb94f1931e181c46609d3ae8f2c8f35", "ref_doc_id": "93f03273f4d54b25daf20d455bae5af2868994a1"}, "4b809129-b740-411f-8c43-d71b70f42a84": {"doc_hash": "00d76da86ae6162df251e8e570bfc84677a554f17cf6e345b2e5ebfe340b2736", "ref_doc_id": "eb9c154b68cf3399b90adc458e64e4b4b652a983"}, "e3abe1fe-bcaf-46dc-bf20-67225fd0a7f9": {"doc_hash": "e1b9917d0369587d22d4ed194c9445bd3333ff1a6995d4f54515b87cf7d6241f", "ref_doc_id": "2f8196e4a9959ad8c745f34c457ee58655531d12"}, "7a7965e5-e02e-42fc-9800-61788304336a": {"doc_hash": "2ac73d238ce67c1991102ca3883ab19120c01bf0eb59cca2989f7952ac8fb843", "ref_doc_id": "343e244c93b79aa7265a9f00f521a0d680cbc865"}, "6bf68f8b-1a7e-4e50-930b-e7f1922f2b0c": {"doc_hash": "759f174aa891f3fca2005c6c13207ca91d2372743255b0bb3bb1eafdd57a7a17", "ref_doc_id": "8247bd4181804ae997ab20c8394c18c71cd8c9ba"}, "3cbbd207-ec18-4ed6-bedb-d625a9181780": {"doc_hash": "de07871df6062ae51c692d76628a505f94b71c914e275c701ccd9603a189cad4", "ref_doc_id": "810d20dab0e18239fd2c5ff7f242620097fd68f7"}, "a2d89f40-c123-4c19-a688-9633683acf3d": {"doc_hash": "863ee6b8f8733838f972e6bcc610f6cbe8ab5c8917ef15beda0d8837a66006e5", "ref_doc_id": "e029c3ea2b2045326982e60e5b415353e793d224"}, "49cdf900-6c11-4b4e-9057-c644c3f2ac27": {"doc_hash": "ec7417dc9d0633bb3fd8f976daaa3814570350814207d6df0bed0fc0b43c22f3", "ref_doc_id": "9f6f49179d46cd83b6c8779dbd07e81403d767f6"}, "608ab711-8949-4170-9f2f-c0f5952740aa": {"doc_hash": "1693e97cd21b53a69dda1c92c3482b1596dacf2db44737add29cd39ad9e66c32", "ref_doc_id": "7c003a5d2a703c2f02eadc3db93e3693aa8c1275"}, "90bb161f-18d8-485d-b4b3-4106e41b1a4e": {"doc_hash": "cd1beabf457455efb6844679adc76ed477f7433ba8f7b5851b8ea76fa87ba0f2", "ref_doc_id": "f81fc378f51ade673da06bc79c54d51edd5b7577"}, "bf35080e-fd47-4df8-ac2a-828c7bb924f8": {"doc_hash": "ee09999f00dbde41e02223e9ceb3fd71d89f165c34db7a59fe614d51e6fe5ddc", "ref_doc_id": "ae688aeec49233059b8f3416d74804691e5260dc"}, "ed02568c-dfd4-443c-8b67-7f019efc4388": {"doc_hash": "a49e617dde92c6755e98853998be9245b4a4c6e31d1c9a7e02ace47bbb951605", "ref_doc_id": "937d08af0717658b08da8be3a4044fb670e6015b"}, "d77d0176-c368-47c1-8cc9-cc42455fad53": {"doc_hash": "3b8cdb678356a66abb6fccbeea9779a51a13840eace42ffd3130d4f5fd515161", "ref_doc_id": "70fb7e5c2a9297da2d53eeaedf1f553212fd333d"}, "1483eec0-d0ba-45c1-b7b5-30c29ffa41b4": {"doc_hash": "e770f1815f6779edc1c301ebebd17d15ca516c11485e8afeee62e4e2a15c4e32", "ref_doc_id": "a5c0ccecd174dc7ef0108f323a66d7e13c3c1c9f"}, "651e7c06-1c15-4931-9047-f16ba49408ab": {"doc_hash": "dd5e101cefb6fc2ccc1063848215ddc83ceb216320deeb5a7048833323f69c71", "ref_doc_id": "82e4942aab0685a94b6e249892f04ef1d780faf9"}, "ef9336b5-ba2f-4224-b8a5-e9be387d53bf": {"doc_hash": "39ed8c737fa63437dcac0ea80c6604b69051b0578ab7ba1942290becc0fa1011", "ref_doc_id": "51af3dc77e81e032ff57b71a872b28985bd4b4e2"}, "103774d5-57d1-4236-98df-7b81b9e143c0": {"doc_hash": "fa1f9c17ea57592bd71ee453777ef4abe11740cbeb9242ca7a83c19bb91f96ed", "ref_doc_id": "113de57513707b1795888ec3d11a7d4b05c731d8"}, "6eb204de-2b71-42de-9e6a-b3cfe14b58f8": {"doc_hash": "621193de4bb6379fcbd5917a619868012c97846c7a13bfccb100ac757eba16b2", "ref_doc_id": "c81472b598869651a087cc4f3abe0a90f63b902b"}, "7a6970b7-6014-4e53-8c81-e668e72acdff": {"doc_hash": "ab18be8cedfb57460f795f68d5be6b2e89eef355c54184af2823116829722e8f", "ref_doc_id": "42947c1d8e94c65ace667ed3d584ae8ab8cf0586"}, "28c53d6a-d900-4c7d-831d-3f86dc3fbdd6": {"doc_hash": "af887d62998ca70c12f57c7c9aeaa89f6891b9c02b28dd029a9f89bfa0dfe4cf", "ref_doc_id": "cca51c2bbe1ce3398a55d12ee03244c7745fafea"}, "eb1fa032-e2d9-4355-a3c8-70ead60d311c": {"doc_hash": "4a59644e999756086ee7576fb795f931a9cc14496ec49681274c9f401e1b4a80", "ref_doc_id": "64fabbe7956bade82218af470eb55bb24ea3ad53"}, "8ef6ead6-5863-4b5b-a06f-2c663c7b07aa": {"doc_hash": "e148312c859e8f18cb8afb0b1ea744915064f2c8e3babb10922663e37e11b26a", "ref_doc_id": "b1c6c0ea27381ed28684039bc0427915b85acc05"}, "627f3cf8-614d-404b-94a9-26752e5bb3ec": {"doc_hash": "290b0d88ee09d6623440cb70f427379893546401472515566272de505547772f", "ref_doc_id": "f371689d965d57ef92c073835e0a7bf3a186e1e8"}, "b8a3829a-0059-411a-a506-8887c55850b2": {"doc_hash": "e808a4d0b525fdd2e32269325a9c2b9b5111205835e60dcf6e909b255644877a", "ref_doc_id": "4a310e191fa95fb7c7bcd461c95cecb5fc66c805"}, "96e5d505-d1b1-404c-8af1-1e06b3d32036": {"doc_hash": "44440dc4388999d9cc28af697f7c61a58259069f40cfaaa92a29116c5da2040d", "ref_doc_id": "42f5269c3f8c0ced5fc7242bf5fb15224387cba2"}, "d0e7294d-5d25-4fc7-876d-c12ba17c62a7": {"doc_hash": "9909a923a18ca0f16ea89714b2665c7d02f7a357d2c462c159cad2368dbe8687", "ref_doc_id": "ef4c5c1675f609e25d0e078696d6c468fb2141cb"}, "b88b7cd9-64f8-4033-8dd4-f31042c57ab6": {"doc_hash": "cbf1f4560bc3037c899d7a096dd0a8ea23807edd2b630b4e6a3db268ac406655", "ref_doc_id": "8af906527bd50e3af4905a8851b952ed787062e7"}, "6ea13be4-1bbf-4b9c-acf2-3ec061afd6d9": {"doc_hash": "2a5fa8777154b76a374e7eeb9a10ec0ca25d9d3ae2cb61da43d4225778310ec1", "ref_doc_id": "8b5a36cf3cd554e7a20f1fcf1f3e03409e2157dc"}, "0f30f417-95d7-403c-98e4-17053a938170": {"doc_hash": "d35f37a856b1591730351d90d5b95a3eda78a6a48584d574e6243010b4eb6313", "ref_doc_id": "e16302b6f135fdfd0b305c666725a24e3c510d86"}, "d45aafdc-3e53-4f24-acf3-2f14d134513d": {"doc_hash": "7909e1990c28a6f3f685264890582eb67c509757a9bed3299adb7c43fa369bcf", "ref_doc_id": "c185e179b980fa797f928fce6e34a2776e89aaa7"}, "d92c30d2-e3e7-4e39-bed1-035318ab3fea": {"doc_hash": "b2d067268cbf3447e5e337ff05b216120318d13f470ef158bcb538d084e2f9ef", "ref_doc_id": "8aa92e3f2ba495a4187941fe042a69de51bd6cb4"}, "18701f07-69fd-41d7-b4dc-e7c662203aa1": {"doc_hash": "ba2fa1eed6d463a55aa49f262aed5d287f5e2ef2e325a2a63623f9d6e3ba23b0", "ref_doc_id": "ae8713be4d0038a6be89dfc10e0008de06730cc7"}, "5c525a48-1c5f-4ab7-b154-0e6f51877dd1": {"doc_hash": "82a880d71d67d6ca242f309307188a1a6741a51a91c2530cb27176cba7784fe0", "ref_doc_id": "a8a553d961602a782977c6750c98ccf9903282ee"}, "c08b5aa8-deff-4218-bbcc-ef637cb16d8e": {"doc_hash": "49e2f4470a34ed0020bde0157a1d6db7eceb849cf2b29d09421b3f59b25ec599", "ref_doc_id": "5c37c5641eff49c5a4a191dace7378a06cabce28"}, "1127e67c-c994-4217-a5c9-2aec827a45c1": {"doc_hash": "9b9424ec6b64dda2266824d606b0a629f56f9e1bcc8a59c785f82523748bb863", "ref_doc_id": "5c355c2b197a6d6f1d228045d7cf5fd22c4f94a1"}, "49301054-5819-48e5-b4ea-84a95447559d": {"doc_hash": "d4b815c9c47bb60ebc6d45be25e18a75ab9f7b1c57feeff78acdb53d383be9be", "ref_doc_id": "7c04919922114a91ab3b3676a54e14d39674405a"}, "33b159aa-f46a-4527-83b6-6b0d32c23920": {"doc_hash": "f48d76b589c3392753e5f94cb9de75512e96fb34a67861f846a135907e5800a7", "ref_doc_id": "73001471479ef3510b12fecf6ca4e881effb7b54"}, "1abe18e3-cc92-4d41-873b-a376406b6b33": {"doc_hash": "81c71742b56f18fcb70968b8709cac24b8a9f09b67c71dcf93f87f0b9882e029", "ref_doc_id": "8cf193dd47e680c4ef435bf9bd2e6f63eaf6fb8f"}, "2d40275b-be14-4ab4-a5cf-ce120df48d28": {"doc_hash": "bc293453bd9a8cc9fab66f9e2320a4906a35fa8187c37268d101bb9558dd244c", "ref_doc_id": "0dcaa940c746a305f42327f399c838e0246cea41"}, "36e7ef64-7d1e-4144-8161-1f681e646718": {"doc_hash": "8bf8bafc9e70a4c297a301067b608c5ec07fcc74072c2f51fd1be32c625b6136", "ref_doc_id": "539e992f59af7bc0a044cc0efdd49c5a3b1ff0f1"}, "2d0cd355-ed61-4f73-a5ef-1dbf1e2b6be7": {"doc_hash": "1a2ee06319406647e7d67a87140fbd83377e4f70b3f1d68e49c42c66c0cf6688", "ref_doc_id": "e82f2dad256034703ec7148802baaeb972866360"}, "7009e39a-f690-4dd8-9f75-98a19f7140a8": {"doc_hash": "6cafc8afa973140bbb234d12b125b90e3477cebbfc025ef6d64fc68ecb510800", "ref_doc_id": "01c046087add1a88593455e826f6a1ca86c9cf91"}, "699b3087-e6b5-43c9-ab20-3805db6a74ec": {"doc_hash": "14e5d8656248003ad22f0a3af9698c1c4e1f9986abb017d4c0fd3bd7249c290e", "ref_doc_id": "1b55aab3946d9df9cd4d9bb72d9a9b045ebb8ec8"}, "e9939233-79c1-4170-9dc8-6dc625e7a668": {"doc_hash": "1a1fa82d3009be5b81e66a7b3612d06ec55a67bc5cc4fcac5e7548e391a835b9", "ref_doc_id": "5ab9567c609fdbedb46eb6b4f74298983b06cffe"}, "24b614f9-7021-42f1-888f-f5c20163a1e6": {"doc_hash": "24dd6da398c06a21777cac566a366ee5417f4546edc1d6a7388a383e4ce8ca75", "ref_doc_id": "42409e3d82bc0aa9593cc6ddde456f5d94f385e6"}, "45b13575-12f0-44e9-b987-4a60d89b0001": {"doc_hash": "c09281bb32b1078de4698bacfe0d861c6224ec190144ab16340fad7e35fe3956", "ref_doc_id": "1b802cedef27f6eaf03b408d1acc79c2a14283a3"}, "8af9f491-83c0-4df0-9dad-343c3e418e30": {"doc_hash": "aeed6ac55f0a71ea184d58e6a49e5b6f2153da89221689179019ef0729d9f22b", "ref_doc_id": "b176f762788b4b0bf53cef3d9114518c202b13b0"}, "13d66882-7cc3-48d5-9fca-386eb1073533": {"doc_hash": "97c82a07c8e9a884b76bbb8b3ee8ca4d8fb3d8b4139513d4ed087e0e43f00328", "ref_doc_id": "2bf99dd80b99e8fa76abc03669a50b448a0a0c0a"}, "eabf9fbb-c456-4453-96ff-6ac1250e0fcb": {"doc_hash": "42bad7a452daa76474973ab5efba506994761a303197eef6f47e084ad562e37b", "ref_doc_id": "4b8d2f29071e2d5be77d90f7823ebce071c867d9"}, "f7e762b1-0b46-418c-959d-2463dcd28760": {"doc_hash": "28d63e0e3742e80826f8dc72157664f9233df8a0d6445b3d64de86b58fb275f6", "ref_doc_id": "0f4d372827cf00496c7485d14d16e92da27a5782"}, "74589fa4-5db4-476e-a855-5ad2547cd440": {"doc_hash": "f0f9e33e2da169550880f2b80cb964cfd149f644446209040deeacd5106b1bcb", "ref_doc_id": "307ba3ad4c1c6f0f684ebd313c5f80725b45e2f3"}, "d317b21d-60f2-49c3-9f24-719477a3cbce": {"doc_hash": "aa38001e5f402488519a6c5a6fa96f05959b13ddb67f71de63dc50d1511d10b8", "ref_doc_id": "5200c7e70fe11decbc5251cccf8a6abf86bfa274"}, "478a0894-429b-48be-aa5e-ee4a91ae09a8": {"doc_hash": "e168c1d683e057d6dcbd43b1632519c217dc7281417f9208891d6fc92a91ca56", "ref_doc_id": "750dccb77c1965b3372efb287b5e45bb93be83b8"}, "cd4a54ea-a44d-4562-a6c5-f18c3e59ac04": {"doc_hash": "d8ec397a42fbe158c94eb232ba1438b32474f08eb8d9fb692e911818ee88300e", "ref_doc_id": "d9fd624a1146deaeeca8ed61ff7fe773fbbb290c"}, "3e6fbd4f-87a9-463d-b6f7-89d70020f844": {"doc_hash": "39f8c4263bdcdb59903814116034d1ab5b95a55dbc00494d56307b2001a1d340", "ref_doc_id": "9232e9889385402cdae54a1c80c5cf0657dd581f"}, "01a29338-93c1-48d5-be1e-ced7704415aa": {"doc_hash": "d30e10d69faa19c57bb4a7885539e4dd924a91031d9c7ba9e4d58ff17332e006", "ref_doc_id": "58948fe64d76f9b69901191e9eeb7e7a83a30648"}, "9a3f8370-92e6-43e9-8244-90dc53eba075": {"doc_hash": "2e1dfa7774641caf923bbefac8f24ded5868bade7a97a1d98149684fa8285b33", "ref_doc_id": "6b30779a2aff18ac8ac3ae354e3d8e4fe592eb81"}, "9a1a5b70-ca9e-4e18-a5b7-060f0e729e71": {"doc_hash": "7f2d597a90e92a7968dc3fee42eee992b633ebbdab66860e0e320c1dd90e93e0", "ref_doc_id": "7919373d518f96f05b88c1384644a6e4701152e8"}, "667c095f-7e4f-4b64-9240-6cbfc0f6a139": {"doc_hash": "94444b9972d648e05b9e42f03a2a366c5c0d0b1233aa794553565db3c85def04", "ref_doc_id": "251415c704030d49e5035fc9f53ae9e46c2c8b33"}, "648e118f-5d38-4f97-a2e0-ab34b138e999": {"doc_hash": "909bfd8e9c8f4a3df88538b8dabb4690d84c59746d37fbc856370361e5f0ca60", "ref_doc_id": "870aa3bb2632e38080ec529bdcdeb9ee1dd8231e"}, "3068b082-c7fd-4f20-b7c6-5a7965768b71": {"doc_hash": "592022f80b1757ea34c55695acde3c60e6faaa9eea1bca536a3bd6b2ea22ef91", "ref_doc_id": "2f3f6ecadd2046d85b39451ba0d39029b7417043"}, "27991522-8846-4023-bd06-cd4ed949b3a5": {"doc_hash": "02fcb784332fd2ce91654ed682f0b9d51bc6a60d8ae1c77541bf024c1b2b0495", "ref_doc_id": "45364223fd3bbfce518d9f2fdde6c6b99c577775"}, "8177380f-9427-4c15-a83b-33137da99fe2": {"doc_hash": "9105266d1c849ca8ae65d03be3830d33d455573616ff13b8661ba38685b3aca1", "ref_doc_id": "6408db14c910ee6db1191bb07ebf374e7be0e4cd"}, "379a3898-9b12-4773-a459-887c8b268f97": {"doc_hash": "a8831a587b344859d749deb83256fb45a402131d16445995023459956a7413a3", "ref_doc_id": "e83f47e9a4c95c615184bad6075e11d0ea0c3a0d"}, "0f6204a5-e656-4669-b96d-69325f5f874c": {"doc_hash": "1c208773396c1c2215ad4de42ef4b86ed3fd134265f1356a134a2cd441577df5", "ref_doc_id": "ff8c0f3e6d034cfce010bf85f50df8046d6abc8a"}, "46a677f3-a383-4fc5-bcaf-a07512efcc1e": {"doc_hash": "81e71c336d2832952af5ec559759dff728089d7f812d0bb931041aff5a1ecf41", "ref_doc_id": "021bb6e5529ca1ba7a92434ab6d3eb56106cb7c5"}, "e44b6f7d-6f22-40df-ab1b-b778e356719e": {"doc_hash": "518a36479e1fe0fce4f64da7fd00a2437bacb4106da1a971e3f1dd5972423630", "ref_doc_id": "711f2c3565c6bf2aa4dd395c677ded7689f2dea9"}, "651b55a9-e9d0-460b-9e73-7c3b5daffb14": {"doc_hash": "f9c5354d4431821597db269cf6f62613d1906eb9f4d392941c8a13db05a386a4", "ref_doc_id": "8908e4d12eeb8645def40330de27378bf5f82bf2"}, "aad0cd97-af7a-4572-a510-ba45c430ebb3": {"doc_hash": "7581a24440b297b860fb454953d4c6f4d90fa65e2571dfd275721c9b99153a3a", "ref_doc_id": "a5049e5d8c2d54d410faee2ce87823d6dce805a1"}, "dd13033b-5692-4011-9729-2b7dd5876404": {"doc_hash": "e561725b144a2909c8d5abbccb0e667ec67353a0a41d80cc2dfe5c1c5abd911e", "ref_doc_id": "46f569509ba99418bf063d6918956d23a946a3e8"}, "5857f287-f427-42bf-9745-6187cb9e7b5d": {"doc_hash": "af440327f52c609dfcb3eb5f1c49225d0da66605ac73a1a1a2e33c89a2bffb41", "ref_doc_id": "6689444f26356d9566e370e1bf60cd9f42e57aa6"}, "d8eff972-e27b-483d-b010-8cd3a3905c47": {"doc_hash": "126c228864030acc2c7d341f931f258e7a8657d01259d0c773d56400fa99cf7b", "ref_doc_id": "1535e5e2755ae967d703440907005c78c19e27b6"}, "719fcec9-4ca0-4efb-b467-656aa84dc769": {"doc_hash": "bf25f20ca8a1d8fe6f893d2eda50ec4cc1c6544a71ddca64756d394529b7da72", "ref_doc_id": "748c60da6b7a645d0d05399f4da0dda4be8626c0"}, "40e5c434-8b12-4b91-acf5-1a102a3c025a": {"doc_hash": "ce08e6fa1bf93341623d2bc401b48036c21769d638c50b31c0b46c3e55bd0073", "ref_doc_id": "38fd3af44a6b3f6f8f2cf2a6b463b1cb6817454c"}, "056a9a00-d103-4423-b065-4f52bca500cc": {"doc_hash": "636abfc274f4d4bc9b016906165109cc98281428acda336a474f1ace2bb0e1b6", "ref_doc_id": "a2c88a3bc79d601d1073b4315693be9d1ff92aa2"}, "9dae72aa-2138-44ad-b0ef-ff282b3deb3d": {"doc_hash": "1e9c4cd954306c49c092d644b6598530cb722642bb5e47da508330e6874883ca", "ref_doc_id": "c125853ff4d42aa057e79cb152485dc86863bf12"}, "e61afc6f-2ae3-43fa-955a-0a94a7f6036b": {"doc_hash": "8c42192fd3386d3102fe71c6ddb60fabff7c6478d43c9a0fc1e1b62216036448", "ref_doc_id": "3b6701ce100a8b5baa92ecf81c4226308966338f"}, "d5d16a44-2cb9-4494-9b51-ced375bc9688": {"doc_hash": "d671c3348784d8c359c8892c207cfb7b655f9587c85ca0c24c6f518d68f1294b", "ref_doc_id": "f45b908cf4eaa8fa79d54f651f7450a22391558b"}, "460eac43-0003-47aa-b6ed-5b0cbdc71ffb": {"doc_hash": "7c332a57abdcd88105f42825adbded1c2a4387d9982158949a08d58d17f517db", "ref_doc_id": "0178a9a39595b7bbaade2b6f9601062615cf3b71"}, "878af416-d0d5-4bd4-9b5b-bf28c12390aa": {"doc_hash": "43793fc2946c6f949f11b917b25a07348c59fd1d4f942fbaa593e309a394eea5", "ref_doc_id": "d64220a219bf8cecdfc6ffb25142170a3b74bd78"}, "ef5b7ca6-dae8-4594-a2a2-afc2fd29b5f9": {"doc_hash": "33e5ff1f7c170166bdbe491ac280fcb41d1c36706e51513e9090e81ddf88147f", "ref_doc_id": "9a6fc9c5b0b0f8bc4901e4b928de764cfce07b25"}, "2f275591-5086-4201-b792-8b68edb37770": {"doc_hash": "9de2c21ed94d8ad051eaa516fee793ec54442f4f179e6c75abd077485aa8fc0e", "ref_doc_id": "5b350928c7826814d168583bb3e56d5fd72d5c51"}, "becff9d4-0694-4d75-81fa-382d2a5dfcab": {"doc_hash": "c46f972549dd21f51e0f8662d9f4b8f898dbe36dc6399ac0aa5b3236d2f5d0b0", "ref_doc_id": "b0bff941181839c86ad85ecdb6ffde85f6893f60"}, "c6441cd2-df87-4132-9290-3adbfb2f905a": {"doc_hash": "2d4e98c848f4ef834758c00d4f6e7bbceeb5057d5464164f7a228bbfe5165721", "ref_doc_id": "0d9dc47a53f3198aee5ef67f8468982add80248a"}, "a7d4e5c9-22ae-4d1c-8a67-4793be8f0f7e": {"doc_hash": "d549ab5f7d9508ef9deebcee4e03731fd3cc5f4eaf1f794e9b1acde9e727b924", "ref_doc_id": "de0e4f108be36f18f8f9096d15498d12c0c4aa4b"}, "566dc678-1dd1-4d2f-9983-5f7e1a81170a": {"doc_hash": "020ae059f7eded30b2910608a65233e66aaa753c91b189f5f712a00f1ea0eb1f", "ref_doc_id": "e8aee922f34cbbcdc2c74099959a6547124abaab"}, "d1735f77-ce73-4253-a529-4a4a0bedc0b6": {"doc_hash": "b433a3c7bc4108ff748d2fec2a76be634bdecdc3c34ef6cee4097b5922c6a5ec", "ref_doc_id": "240c23df493fb4466ee2370a1aa677b932c306e6"}, "d08ee0cd-cd74-46bc-8f93-84611a7c140d": {"doc_hash": "b1388b6fd09e1ff85ee76a4b868c382b1fdba36c200db935c538482ae793196b", "ref_doc_id": "4b24a7eedcbaff7d435a648f7eba5f6b21773668"}, "8f25f52c-6279-4e27-b328-d81e62f3828e": {"doc_hash": "f3c64ec48bb3b02fb7c209ae40dcb8d819062f1cd386f5d962e788d922070549", "ref_doc_id": "f7be718aa979d34bac468008eb0119c10a14ba23"}, "fc554c53-236a-4c37-a038-f55b3672356a": {"doc_hash": "ca46a164b6240d924058020cb141afa13c457cc08dcf4d4c46e6a406ccac4254", "ref_doc_id": "9ca569ef6a6571cd80f30a0ecc9d26cc1c27aed4"}, "5e696d68-dd03-4640-be9d-31a9c6d448e0": {"doc_hash": "c7397434dfc861379d5a3cd977ae724d7ac1ea60b7f561c7af0629f5c1b336ea", "ref_doc_id": "e6fe5d894c20f3c9e251f9b32dd2ea1d7adfb351"}, "9f5cf8a8-34db-4094-b84d-b40e54dd9d8b": {"doc_hash": "41a6c8497f056463fcf6d1248a03860bba1717247d19a54ac2e7b0c18f166349", "ref_doc_id": "af2be1f5d58440ef2b8353e35393464a5fffab9e"}, "565b4ff6-1949-438c-b2e6-decf263c3879": {"doc_hash": "f1b4fdbbc747674c0a12aeed4afab9d9d43b5352ed9aa5bff5ded401f5728ceb", "ref_doc_id": "d62c69d1385273e4d9bcab9091b8e467fe048f4c"}, "7c28501d-1870-47f7-91c9-3112f0b47b72": {"doc_hash": "a41af6db6aa4def6982a5661ff7dc859f6450135f82fe6fa321a659cbe0ee055", "ref_doc_id": "75c7f7b5814286880af828f1ac2a4f6be3acd5a7"}, "0dfb5bc7-e529-42e6-ba8b-2a2c03144851": {"doc_hash": "fc21329b9221de6c71912624eb5547267bece122c951b764af2a637921f7002a", "ref_doc_id": "30190859a62377547b3130ccfcf82294930489c7"}, "fc0f8323-b609-4faa-b3d5-24a2bcd3b115": {"doc_hash": "73d3e82414a683dbde67de36252635d9910622e6c58d9bdd65b8be7b6bc6cbc6", "ref_doc_id": "2700e6a9c54458566fc7e39d82550193d68616ee"}, "ba6c6266-1dbc-41ac-916e-1624197d0b34": {"doc_hash": "eddcd2202eec5b55f76f87a085702eefbb0ab9fcbfeaacb9710e1480a019fd1a", "ref_doc_id": "2700e6a9c54458566fc7e39d82550193d68616ee"}, "3290451c-5592-4bda-ab16-da1403780f39": {"doc_hash": "104750264bca9fdbc282dce9f797cf09ce99516f8557a665b9b14e579e929ae4", "ref_doc_id": "13e77438cbd878f0a90d28a637645aa3e0e7eb52"}, "24fa7475-7589-4071-bf33-7846b8f3f677": {"doc_hash": "83517c532a08eaf741170e4d7c6d5b7336846725b90c4eb48c417cc36132c868", "ref_doc_id": "9baadc745a336a7c0634e9732a64a0d73be7c09e"}, "b3b3f14d-6ff8-484a-b5f2-f0533f4037f9": {"doc_hash": "b803cd84189bbfb38edc5a7f24b1cfd9c7aa05fb49760b97e58d0f1caab7f7e1", "ref_doc_id": "3908d014cecce4a5f4e5144339a6ca8399fb850e"}, "ea103120-3c0a-4a48-9477-f72763707f3f": {"doc_hash": "9649b5be84bec00633f71cb868ae0c19dd3854132901dd219470de2362714cae", "ref_doc_id": "24cc199ac66cf075f99a4713c62b3eb3e6e54195"}, "358d0118-73df-460f-b9d1-b6c9993e2f54": {"doc_hash": "11d2cbcb555fec392f2b4e56035b673eb5847528f1bd4e0253aaf740c907a6c2", "ref_doc_id": "d0d9677c80c97259187a200016a47d821dffe7a7"}, "c46f1dfa-3bfe-4948-8d82-30fa68daca02": {"doc_hash": "57f2a12dce98b8aac4d2d500adc1e9b390a1981b450a1877bfd8062263d5e281", "ref_doc_id": "fc90e98c75d5c4d498efc3941e5d0e4a9ca66932"}, "2f007bfc-f71e-4293-880e-6a5db4d6c2dc": {"doc_hash": "153ae01bf1fa4797d0e8eabd56674344cf319feacf650cab32aa55775aebac63", "ref_doc_id": "71c8ab5db0b99ff477fd78448b4ce904f1fa74f5"}, "bae0a07e-57d9-428e-8f39-da7f0fbda3f0": {"doc_hash": "35254f6b46a6665f6599764accbadce4635a2a5d039e0e7210ef0c3ed6694e54", "ref_doc_id": "453c3c4eb9dcc16b15f94e4178162f78f8e18edb"}, "b5c5508a-17df-454a-a921-72173b23bfb8": {"doc_hash": "b0c6a8b87962b07c6cf9d62ab67ab246e9e0264e69a51cd1b87d48caa1b55b34", "ref_doc_id": "453c3c4eb9dcc16b15f94e4178162f78f8e18edb"}, "e1dfcbdc-bf05-41a3-8a89-e6f272878c29": {"doc_hash": "7956dfb270a70b25cd19091e561600b660b1d40edd9a75bed2ff5999bc5416fc", "ref_doc_id": "1deb649c827d81751f4433df78e5610c1cd6b04b"}, "88a6c46b-e7f6-4cad-8234-0f0b4be3a52a": {"doc_hash": "94b5647f26cea75a086613a16ef45a0fe363efaf8a17cbe40888f1371c013557", "ref_doc_id": "050400d781940d18d85fc01ce3a04ea20f1b21d3"}, "40332814-ca92-49d2-897a-8951e006feb4": {"doc_hash": "6617a8cdacff68f27ffc4dfbe15a9c8023827bfb1166d9ac59b82e461e578aeb", "ref_doc_id": "3351ce74f5c858772583b0521ebfcbc340942a43"}, "e825797b-b0bb-4490-8f4e-65e8985b02b9": {"doc_hash": "8d5fb9895c03cf39ddbd573f6ede910cb595526b23910c5241aeb117e51aa343", "ref_doc_id": "d9f124f0acc944891c0383543f524e0af4c170a9"}, "36f125a4-e9ea-4731-9f4d-c36d5e6e43e4": {"doc_hash": "4405bd5141e0cf491a0e28e44fd6db3d2848f622a2ad1f09dbbb5cc551177eee", "ref_doc_id": "1654603b384c0623c5ac0a837cd9ce1b1e1b3e42"}, "9d8a70f1-f80c-4b01-8d8d-dbc779b28ae1": {"doc_hash": "dc3f1b5b89f09e81f4bd510b6629093ead765bc7639b558268d9b2c3e07dd2ab", "ref_doc_id": "47096e1d78450578ebe358ddb07d88fc59e2ee7f"}, "687f149f-7b29-40e9-890a-e58f2496ff8b": {"doc_hash": "96a3ab4f599334d3ebb35c24601575a30f2fcbc5cea66af342ad2d248cffc450", "ref_doc_id": "619c8824737b2ff7df9433fd345a52eba380cf4a"}, "08d31965-b6ba-42f6-bb21-04fdfe4527f7": {"doc_hash": "97cadac3b7f7d215ec821e0968964531237fe9400153db19fdb3766882165e6d", "ref_doc_id": "244d0cd82c097a4bebaa13454157d531d5ddd287"}, "4dfbd9c3-eaa2-4be9-8294-5ed7da35b484": {"doc_hash": "b400ecbbfd1a8ed862cc4607b760ee3b34c0f3e93dfd644bdbf8fa9f42e6e607", "ref_doc_id": "8f30e5767b0a9efc2807c674aa5078539d2ffa9a"}, "e69b8441-d37d-4f7a-9d65-665863982a9e": {"doc_hash": "8d363a4b4ea2ed9c2431ad4df322045118d50d73113d42775f6ed4bb528d39de", "ref_doc_id": "45131f2ca0355f8b83ec0ce3fa5b2bb39990c609"}, "c52d8144-1b16-423c-a345-b7155585cd9e": {"doc_hash": "dbed184c31080a0cafa350b8f93ef811adcf759d1d18c742c648a5ec22e8a685", "ref_doc_id": "326aaf7061d07f06849e6eba586789b3294e51d7"}, "572be706-cc05-4a0e-bcd2-3d1c8ea2576e": {"doc_hash": "4270e3c89d7cfddd89672c2c790dbd77bcd53f81b90965fd0c1ac1508fa8ae7c", "ref_doc_id": "aeb0795606e250b938daed24b05df5e703ebfc07"}, "37395874-678a-4c00-9593-f0fdc058f9b0": {"doc_hash": "77dc0fde034a97908544601f3eff81d3f46255c95ddb9caafa10eee543e3248c", "ref_doc_id": "3d508b650d643732a6d69d9d8f6f904471081d6f"}, "99dfb909-7dcc-45ac-afe7-687b8d77bb9b": {"doc_hash": "5e20abf30c92e69cc5bac3fd3bfe5c87551680e0438448334db5caa5343b8132", "ref_doc_id": "693b23e38ee610dfd04fcdf2336ead7a7778d741"}, "41f3f7e0-539e-4a53-85c3-05f89457c4e0": {"doc_hash": "a0394be3e2d88bb3671d98581ba31278c49ec1e42fa10ae2f13710cc9a5ee366", "ref_doc_id": "ba556001e64d6b011b62e8c553bf80fe37c51499"}, "264d183f-e5c3-46e9-8452-d824c402781e": {"doc_hash": "6567f6df49130b26dbc81ae1b8972f4830beef089401c4b73a4de46f71bb9171", "ref_doc_id": "148cb0578cf52b42fc6f90a4393f21c8694b9ad4"}, "5d9a7fec-2c3d-4da0-a7c3-a6c5f1c9b796": {"doc_hash": "c1058989e47296013a2aa497ac2a7de38b6687c92891d0adc7a58d4b283d8655", "ref_doc_id": "05f65dfc81b7e51c8c09f8fc5c39f831299d6a68"}, "e1248606-73be-45c2-a52e-ad283f0984bf": {"doc_hash": "5c459c1acac637213b8787f70cffebdc6cd782032c7affead66f0a38e62bc53f", "ref_doc_id": "80d75cd1ac9594c5d835edd0d79a1642d13a2599"}, "5ac432cd-b168-444a-bc18-b498bb4fe4d3": {"doc_hash": "599f03e821b44435ee061dd252ae82b1f4f54beaf6b0f55234709baa101846be", "ref_doc_id": "80d75cd1ac9594c5d835edd0d79a1642d13a2599"}, "4acb4586-85a1-47e2-8adf-1bc48cbbeb48": {"doc_hash": "0ca820bddd03d409ddbe4dac64c3f2d3a8c840aa53a4a56bd62fa725558fddd4", "ref_doc_id": "9d6070c43f3265e0087d5e55b4266e72c352816b"}, "2dcdec01-208b-472a-b92b-1258909677fc": {"doc_hash": "9829413b15e6029ebe166cf89e5ea6de2ee7c95d97610cd69c6a9f2d4ed827fb", "ref_doc_id": "6b3e86c03f5a0261067a61adc7cf3c75f1a0ce7e"}, "4d774b43-860b-47a1-959c-41d9e031e84d": {"doc_hash": "096e033e09bab086b07cc3dce5dc47723db47a6f60464d2db2e57b2f11d80057", "ref_doc_id": "5c6beba5703cc7b389211a478a64cbcda8ceabf2"}, "239ea15d-b0a0-46fa-ace7-c18c8912f18b": {"doc_hash": "eeb7b4b279ade9843803b4c3a59edcedb6d918ceea8322df64b38a687d61f773", "ref_doc_id": "6fb765f3cd6e3114a32558c0a80177f57628e624"}, "4d938f70-72fd-48e5-b4a6-1f79ef59e8fe": {"doc_hash": "5640542ff162784f5f82c02f3ad31941f7b8195db4a8bea4d5388f6b3088b7da", "ref_doc_id": "6a896eaccad79aec7d025611485d396eea73a21e"}, "3c6ef6da-9bf2-41a5-9454-81f132c18239": {"doc_hash": "40df07272d0e9adac81c028f957a016b354c37ee12bb5decd1fafe6ca2eb2a3c", "ref_doc_id": "5181cd0b483f1c490db96613e0a1ace56b8778a5"}, "8d8d77c8-f065-4198-acd3-0789281857d5": {"doc_hash": "596d155012b6e63f09d73e507b4f72479764e41d6e91cfbc22fba702b5954301", "ref_doc_id": "5181cd0b483f1c490db96613e0a1ace56b8778a5"}, "5bc9ddd7-7f3e-4164-a76f-d1a7c3949614": {"doc_hash": "ba39d46f6d91879427839c3ad9c45cb522c3895f4c525fe43fa73edc085045a0", "ref_doc_id": "ff83fead0ffbc4ce2d3f4b6b49b079d8b3821fad"}, "90a2b3a2-d7a0-4f02-a1df-d5eb004ad074": {"doc_hash": "922e4ee94210ac9b08ac980758201e79261613c0def430e5715d5441d7c04530", "ref_doc_id": "b2133b0461cf783d09365e776c55dfdc35c903da"}, "e0ca31a5-1c29-40d0-be60-109c756859fa": {"doc_hash": "5eab6fc46ec2b0e2db0c189ee1263ced2ac8e95c632c41f9c81c6c72a55f2d1d", "ref_doc_id": "b2133b0461cf783d09365e776c55dfdc35c903da"}, "d9041d0f-9f98-4143-855e-616faa95a403": {"doc_hash": "bd4ae6664872a8c208ff23e7b7f3d3b9176a8c5d0ee730104d1c0d25b93e5be5", "ref_doc_id": "b296bd078ba3fd1110602ab8611e026397cdd6e0"}, "26eb6508-32c7-43fa-b73b-3c0eed56933e": {"doc_hash": "39f97cca534f38da8dba53564768d97e175c5b327d6cfae1c487135700e07395", "ref_doc_id": "f0b8cb9c584f353dd6dee279d653c87ec86011c0"}, "3de9b0b2-9388-4e0b-b591-c0b24c31d0b4": {"doc_hash": "2549dd42fd8e4e35598f49f3f43c29ea43f66cd3ee44487d98c5a320fd56a001", "ref_doc_id": "f0b8cb9c584f353dd6dee279d653c87ec86011c0"}, "f7341639-3a37-4e61-a4a1-3bfe81d04714": {"doc_hash": "6cbc1942818e33cac4a4cad80e8a67d6dcde02bd10c76e8afaec43e0e3fd9ac0", "ref_doc_id": "e88a8ac7e134d22e0e7f0889522f225b367ce504"}, "826f31f6-eb9c-4fa2-b934-54bb41fd6848": {"doc_hash": "f550ce8714421fb4986eec85dd595ba18e83bd2e1da6f6909ad3b331952ca7bd", "ref_doc_id": "eb2667288eac01ad2f76127cac00e090e3506bdb"}, "2f5e8ced-8692-4121-8716-16dfca0ea091": {"doc_hash": "1a34f43a1cad3389b95329a2900f70d47bc184d34b99804ae016884697b5aeb9", "ref_doc_id": "734d95b6ff9211003fb19f1c503a226f394e0986"}, "a9cc360e-4f28-463c-b6a4-cbae81ccbf32": {"doc_hash": "42cb1fe8262f0f1817d0e1f3aef0b2c2944680596f6b798c36a54adc4b6210a0", "ref_doc_id": "dccbe53be30151846212f49b84ab532c5a1528f1"}, "a34f27b1-8fd5-422d-9f10-d74b4c2f365d": {"doc_hash": "a6afd85ae956d745085c8fe2bc7f0f0c45f5ac90772da5b49b51e4ddfc4dc081", "ref_doc_id": "d1607385afc4ed2ddff08dfd3bdbc533cd3a9323"}, "8788af37-eec0-4844-ba24-2cfe3cf44cc6": {"doc_hash": "9f8afee5100c494b5df9cce61d5f0b51cb803fba059ef74aebc7691deea64e0b", "ref_doc_id": "048f94707ff90bf6a93134541d96b13d946e9c4c"}, "99f5de9b-79d4-43d4-8f73-94663b291103": {"doc_hash": "a739d4e2600f21f5d4a1ba1b0b334c353a10fefb1569cd72ff356f1f9bf06dbf", "ref_doc_id": "9bfa9c4c01df697c230b67b81853fd4611998d7d"}, "8a5961ab-25d9-4857-9ce1-495d365f3981": {"doc_hash": "e66ae1e9ab76f877157244872f77cb57b6875ed6e74e5f0b5077e06838413542", "ref_doc_id": "19d45674f2c8161ca3a17bc630af7785a791d0b6"}, "7528109e-9562-45c6-8d76-da7f40c93dbe": {"doc_hash": "5245e7484d41be7fd088fef1ea69bb2d9f74ba878a7934b01cabb86453f99a30", "ref_doc_id": "256ae99656442f1654cb7d26a79b1e905d75bc85"}, "380b8f76-82ca-48dd-a327-68cdf101e568": {"doc_hash": "0a855f179e672c42ae6d5d6adaa70554ce7a0f0c2689444a346dd57f9c48a167", "ref_doc_id": "5945a6670e6b90248ae41ce860c5431c8f180e90"}, "c66aa19d-9b2a-44a5-a60e-b2c311f6d2bc": {"doc_hash": "cc58f160611a6da3cccd92588bf7ad7473794ee660784f2952b58401ac25603d", "ref_doc_id": "5945a6670e6b90248ae41ce860c5431c8f180e90"}, "7cdee7ce-6047-4ddb-8c1b-a2ae4c04ded8": {"doc_hash": "3700b3feb83c3526a56f90250a7eb101d645e5e0ec340de11e9b497cb70320ed", "ref_doc_id": "4b063866c7ec402c2d3450d6e7cce58eec495de6"}, "0d630c02-ca51-46b9-81c1-c0376f6fa1eb": {"doc_hash": "1804fb309d50ed677e9f0f3de43e253db81155ca4c046d9a97cb2e26d4048ad9", "ref_doc_id": "4b063866c7ec402c2d3450d6e7cce58eec495de6"}, "791073a2-2a6c-421b-b129-4b0aff034846": {"doc_hash": "0198a2071ca039dcfa3996951d16aa1166334507e1a9f7a0b2623b510d3f395d", "ref_doc_id": "4b063866c7ec402c2d3450d6e7cce58eec495de6"}, "733ac00d-cfcc-410a-9be4-1e958cb1311f": {"doc_hash": "127fb6739d38cd8959eb1a63543ee4429f44396e9747df804ad90d16a37518b5", "ref_doc_id": "4b063866c7ec402c2d3450d6e7cce58eec495de6"}, "8fc0ebbb-0703-47d1-b99d-88d4a0df6ad6": {"doc_hash": "2e6b3071d00ba5a3e698bb0543b806baad7cc007147815a6d7ca177c0651f03f", "ref_doc_id": "4b063866c7ec402c2d3450d6e7cce58eec495de6"}, "4bf22346-f551-484f-848b-0bd5cddf587e": {"doc_hash": "d0a1035157214eff688d6d80c57355967197668499fdf23b41efd77b492424de", "ref_doc_id": "d42fce84ec0d751bfa6f12508103eaec04bdcc92"}, "79b7d68b-1985-4d52-98ce-4017e1b7c950": {"doc_hash": "156318700bfd7789209c8cdfb9a2c549739a28423a7891458da86368bbc1f258", "ref_doc_id": "d42fce84ec0d751bfa6f12508103eaec04bdcc92"}, "a863f3bf-f964-414c-9410-f52a192192c9": {"doc_hash": "a3682a44c4dbced7380367b7122d84061564cc8059d969fda98009f3ef6feb74", "ref_doc_id": "d42fce84ec0d751bfa6f12508103eaec04bdcc92"}, "6fcf45aa-c522-454c-88b7-3e61496a29fe": {"doc_hash": "09b18cd9536639b8f4c6bb46fcd496a3330aa12f2ea6984e1d6a0d6458a12766", "ref_doc_id": "dba4749ab0058560c7b1ffc97f394cba73dc35ac"}, "c09ad35b-99da-4d38-b24e-b6f5784bf6c0": {"doc_hash": "356575cc61dbcda2fec51f15440ec38421b089cbef013211960152db89742631", "ref_doc_id": "dba4749ab0058560c7b1ffc97f394cba73dc35ac"}, "dd1c9cc9-a13c-46b5-a148-10f8dba29929": {"doc_hash": "4160d9acf95fca83d1d349d2d979e301e034b145c42bb9d149420d5289c10526", "ref_doc_id": "33070961f1ed43043ba3df4c176cc518996d6ba4"}, "1aad74d6-3830-496e-aeb4-3a38fceac085": {"doc_hash": "23c831c0a7be3998ca9eda4513f40a0fd63bc810be2eff31a65c6a2b8501a3f4", "ref_doc_id": "a1f71bd038868b95dfa51d8ef1e0cfa12d447dff"}, "5f4dc9b1-2dd8-4589-b3c6-88a47573ef08": {"doc_hash": "526b0ece91154bc866736cb9452a168e6ff92b8254da7574ca6cbc9f2ea4adcb", "ref_doc_id": "a1f71bd038868b95dfa51d8ef1e0cfa12d447dff"}, "ed36cf1d-5dbc-4a98-aaf8-96559b27b793": {"doc_hash": "4feaa36a72a7cfa21db60e25b8bcb83d43da3e9227b4c4f8bf2c5193aba26133", "ref_doc_id": "a1f71bd038868b95dfa51d8ef1e0cfa12d447dff"}, "168567fb-427b-4935-9716-9998df19a41f": {"doc_hash": "49a9df2c33fde5e2a0c327b59a7b85651ef5331f3d670e11f5c1c4602e259110", "ref_doc_id": "a1f71bd038868b95dfa51d8ef1e0cfa12d447dff"}, "fcb1ccd3-81ec-4b4d-b7b4-b87cbb7aee9d": {"doc_hash": "41b959df93777318bfc48040663d6185efb427a78cf5220f8e9b5a7402e161db", "ref_doc_id": "ba432edc3d82916a7181a19da522b983e6da8587"}, "0f3ee68c-3135-4932-a586-854d12759de6": {"doc_hash": "1b48f170484d5c6cb1dc9078833b46fcd39738ddf51a1f066c1fd94af1a663f1", "ref_doc_id": "a27b2a5800f4897fba3c7339620fed1fdd995674"}, "86c1d5d1-8db6-4bd6-8538-e298474f1bfd": {"doc_hash": "e244e72caf2fa1f4a932d1b4a9acb2ffd2086e83a26e02c97a8340c3bedc6a3e", "ref_doc_id": "a27b2a5800f4897fba3c7339620fed1fdd995674"}, "06b03e59-9b38-4326-a5ee-ec569acbedfb": {"doc_hash": "13fec2e8331e17c8c9576e7ad6f8566242c72474df4cd7df7bd57a2924fb0a10", "ref_doc_id": "a27b2a5800f4897fba3c7339620fed1fdd995674"}, "bbe521ac-58b5-4344-b8fc-5eb15b7b5638": {"doc_hash": "4f98fdb82c0fed983e5e24ac5c11adb37228692ff53eabc92fbcbd7fda6862bd", "ref_doc_id": "a27b2a5800f4897fba3c7339620fed1fdd995674"}, "c6b897fa-1b10-4edc-9909-0ef38c08df54": {"doc_hash": "745368379d87f22eb668e8fa64cd7ef4dd3bde04d6c389cde69203a30530cd96", "ref_doc_id": "a27b2a5800f4897fba3c7339620fed1fdd995674"}, "6b847043-daa1-4f75-9c1e-b5f6410ca95d": {"doc_hash": "b8821b97bd571c87976deec85d2a5dfa884074bdf7c28ca4a5c8f8be3e58a92d", "ref_doc_id": "a27b2a5800f4897fba3c7339620fed1fdd995674"}, "402722a7-b371-4bfe-9161-4e6f6bc3cdac": {"doc_hash": "6bb435686401ccfefcdb7f8ce028b1df74776ee94cbe011693eb1ba220f96652", "ref_doc_id": "a27b2a5800f4897fba3c7339620fed1fdd995674"}, "55fc185b-be34-46b1-84fd-2780d10a75b4": {"doc_hash": "e88c01c88a3e2670a28d3cb258d0133a59c8967bffc0d28e6616702ddcb12de6", "ref_doc_id": "a27b2a5800f4897fba3c7339620fed1fdd995674"}, "3a766122-ff3a-4813-b357-c28670d5962f": {"doc_hash": "567878bc0d9e56b1ab0ff368fb62d6204ebf7257d518300b2a030775a25a202d", "ref_doc_id": "a27b2a5800f4897fba3c7339620fed1fdd995674"}, "827d0537-7328-4a14-ab74-99ec46041148": {"doc_hash": "0a1f8c299545a4ab16a4691c8c81e8c6302cdc6e6c568c0c304b15521477549b", "ref_doc_id": "a27b2a5800f4897fba3c7339620fed1fdd995674"}, "78a71ec2-9191-490c-9b0a-9aa013bcab2f": {"doc_hash": "46237c3ea50ab5683eae5b31bf30b8a8bf3ce7ef4371769cfc6de03a61d7e088", "ref_doc_id": "038398c861c6c187545de3f11c323e4d1135d42a"}, "757d2fff-a71a-492c-9221-c0233fd55ef4": {"doc_hash": "27307eebf631ed588600314679754dae71cc34faba8eea38f499d25fc108418e", "ref_doc_id": "038398c861c6c187545de3f11c323e4d1135d42a"}, "8a32a25b-2ed5-4c1a-ae70-412ebd898e99": {"doc_hash": "08d51c782a4d545f6d97390220f857ec8a0e92cba69de966e7b819fc1a76a261", "ref_doc_id": "83dbe886a230ace75d3d8cafb06e83af332b0c82"}, "88767bd7-a8df-499d-9771-885b3564078d": {"doc_hash": "36f7c983e7d436dcf7288a9063251ca8fa59aa7f253892efde8e8efd08eb799d", "ref_doc_id": "83dbe886a230ace75d3d8cafb06e83af332b0c82"}, "b1824d9b-fced-4cdd-a776-fd11e49ae870": {"doc_hash": "22fc63b07eb8905a79d726f0fb25acde80b58bcab4d84d4025ae6ebbc746e028", "ref_doc_id": "83dbe886a230ace75d3d8cafb06e83af332b0c82"}, "a5a6489f-df3e-418b-a5d3-32722c904ffc": {"doc_hash": "469f0e5f5d2084da9e2a99bb05b9e308d5ec42db429044d0ea6018f1fd2f4e9a", "ref_doc_id": "83dbe886a230ace75d3d8cafb06e83af332b0c82"}, "c8e7a7ff-8574-4cb2-9ad7-369be2893fd0": {"doc_hash": "d1baf5ce3d8d57a585765a2d230c7c8b63a3dd559a1458ac8f15b6eaa137a310", "ref_doc_id": "83dbe886a230ace75d3d8cafb06e83af332b0c82"}, "fab8dbc8-6399-45eb-bc47-09f3b0d813b3": {"doc_hash": "ba5f05d1d76ff137835435cbb18ba381498954caedab78bf3427658660d619da", "ref_doc_id": "83dbe886a230ace75d3d8cafb06e83af332b0c82"}, "77ef345a-671b-42c5-a1d2-b990a51f6606": {"doc_hash": "cd0332b96bc45e8dec35908c3099300c141a2ce8acf99e830e8b1e6e6927347a", "ref_doc_id": "7bff700d406f6e260a4fcf921a5ec831c281c38f"}, "1d891540-019c-4d58-9fd1-6f199b0a0d6a": {"doc_hash": "f7422df3901eb8a9229611488dd8b1068bb11a49cf1200d5556f6f5ec0800629", "ref_doc_id": "83682e27844b075aaf184171dfadf1aa7bd48cd0"}, "b14a0f3a-57de-42e1-bf04-5b6c0f5a793c": {"doc_hash": "d64f0e1afe665998f42027c7b18df9a8d10655ca88aea9799a146da6ec1fe8b8", "ref_doc_id": "83682e27844b075aaf184171dfadf1aa7bd48cd0"}, "3246af6f-bcb0-4b4d-a7c8-77fad7b8121c": {"doc_hash": "aacd83a15f3f63322cfa6c93d79e7e8b31055064e8e1f905c06370a09616655c", "ref_doc_id": "83682e27844b075aaf184171dfadf1aa7bd48cd0"}, "bb72b6f0-aba6-4ffd-bc5d-87eee29076ed": {"doc_hash": "5b906c637e0eaef66146224bf18ff89c130ce2261150b9908348b77c529f632a", "ref_doc_id": "83682e27844b075aaf184171dfadf1aa7bd48cd0"}, "98b6d156-3d15-4769-9198-dedaee21d996": {"doc_hash": "2bc1ba9d186ebc8c33f56e91adb5e2c6cfd05cf112665f46bb1af407372ebc90", "ref_doc_id": "83682e27844b075aaf184171dfadf1aa7bd48cd0"}, "4cd74c2d-6c68-48e4-98d9-5d8553201bdb": {"doc_hash": "1c27e789a609ebb6a9a75a9a8a6660feb91dcc1e8ebceb4696287f73f5413c87", "ref_doc_id": "a4bf124f0a9965e8924ac10e5589e36a7faa89ea"}, "4a400709-33ac-41c3-b895-7d0e71514ed5": {"doc_hash": "d01d731d2915ad754ec3e7bfe686e462e40b1cebfb7013dc2ab90950188e4e84", "ref_doc_id": "dc9d9450a2d855402117b3ef6e32c8f889b39c51"}, "40fb3c5f-beff-4ebb-88e6-7f75eb85943f": {"doc_hash": "6ff28f6d9407d941bf3c6e12b55940389594543ec3727e4b7ef06a8cf68cc2d0", "ref_doc_id": "dc9d9450a2d855402117b3ef6e32c8f889b39c51"}, "267a7cd0-1726-4a8c-830c-034d9b5f5048": {"doc_hash": "31dedef6f68696087ce61c39eeee569bb9f67ec1a62929141fa47d487d981dd2", "ref_doc_id": "dc9d9450a2d855402117b3ef6e32c8f889b39c51"}, "4345155b-7717-4655-836f-e4f051f5f49a": {"doc_hash": "9ea1ca44ce2b9b67241e754f8e50df0582e59002ce50edc26ee7119569337fe9", "ref_doc_id": "68546612462e87086c43f2eb553d1ac75b299c33"}, "b4e80a98-24da-4e13-9280-b117f5e9e3d8": {"doc_hash": "d667dbb1a86ccb10aabb53a3861b8d5e9eec2cb2835e773b88289dcfb82e9bb2", "ref_doc_id": "68546612462e87086c43f2eb553d1ac75b299c33"}, "fa2a3ade-b5dd-4800-b439-dcbedebcbbf2": {"doc_hash": "23fca50a7e9fae9a57aeedf42253a94ef100e68a9f4b42395dfd74970fb1e5d8", "ref_doc_id": "68546612462e87086c43f2eb553d1ac75b299c33"}, "af54eb8b-058b-4c3c-ac99-ee796f4cef1c": {"doc_hash": "044abc80d08838c8bb39b35976b98b1df92639cdc9ed41620b91a9969a57e9f6", "ref_doc_id": "c6fb2ba98f9dd88575d58b4435c6cecd27b94dc2"}, "6408451e-0147-4b33-8593-49854507747f": {"doc_hash": "871d1576ebec0a60c5bceb8dd24a2a13bbb863ecc3b79d46a600c75592bd6c2c", "ref_doc_id": "c6fb2ba98f9dd88575d58b4435c6cecd27b94dc2"}, "2e0cfb82-9a59-4ebb-bcc3-b42ea5f269c3": {"doc_hash": "929fce25fee914501a5e12cad1bd29cf8b99e9e17de01d80c82f66a72d31e8cb", "ref_doc_id": "c6fb2ba98f9dd88575d58b4435c6cecd27b94dc2"}, "96eccd88-adb9-40f9-b940-98931495b7f6": {"doc_hash": "27f407c7b7280b20f1157a2e1f8513d521d8f92742173d0baf4f7ea19ea59cfc", "ref_doc_id": "cd1b2c3ab5ae21b7cfd2c5dccc20393d0a9ee20c"}, "fdcd1668-037a-4a98-832b-d17a2aeaa232": {"doc_hash": "a182e81fdc4bc67bdfd37c106086db466ce146442528e6b95c26445ad284e6a8", "ref_doc_id": "cd1b2c3ab5ae21b7cfd2c5dccc20393d0a9ee20c"}, "d609a54a-465a-4be0-885d-4e5dba3e9f85": {"doc_hash": "03c0b957d1f6659883249c59a4db55ac3eac59b4ca2f9a21d48cfbf39aaf5995", "ref_doc_id": "61efce43603a3d91a571c9165903f2110fdd268d"}, "66803637-3231-4aff-b911-3a1755899c2a": {"doc_hash": "8226c45e5edbc3a705a09e522130c33cc2e317f1cc59668484ce90c3969db9e0", "ref_doc_id": "7d8b408b8de1473d0c068bb6c47132ae163c617a"}, "3002d6a0-1b07-42f9-95c3-b3a4effebd3e": {"doc_hash": "f65933cefc1ed1b19643d26ad5bc5b82a173c37d36735b18c2cb1fbdc1375115", "ref_doc_id": "7d8b408b8de1473d0c068bb6c47132ae163c617a"}, "e9ab36f2-6fc1-438b-8030-f8c35ce07edb": {"doc_hash": "02fad910772859a3fb1f9f3103b3f0264ba77c552fc4539fa1ecec0ef1080e61", "ref_doc_id": "7d8b408b8de1473d0c068bb6c47132ae163c617a"}, "b9764121-d75a-460e-978e-84a668d59cdc": {"doc_hash": "e932a3f0af1d76b3654cde224852a830f2438ad1130246659c58ad822de0815d", "ref_doc_id": "1dbe8a34573c34a1346faac572002669ec4a6177"}, "61e000a1-777f-4c25-99a9-0dad615d7263": {"doc_hash": "6922bd2bb8b0223118f26a94bcb78fe54f1bec641db9e7fae3854be430d15b22", "ref_doc_id": "87a35971eed46a091941c3bc0d4a116226825d22"}, "eaaa013a-2b60-4b14-a1f2-f16ea27597af": {"doc_hash": "00be8341d08b9b78a360004390d44d44c2a92423294845b7e07348f85c36278f", "ref_doc_id": "ed44129971994c583c2f7ba0e9c58415fa69c84a"}, "7961b408-ca68-4b3c-9c4b-bed79e8dd3ef": {"doc_hash": "0c76b91138177838d8dbf71f92bef2a73ad1f064e9019e50d17059a1e6c5e9c5", "ref_doc_id": "ed44129971994c583c2f7ba0e9c58415fa69c84a"}, "570c1193-2878-4cf2-96a5-c125dea0d235": {"doc_hash": "a72376f0472b0d3a6cc1ec83565c5a15c41096db138b956daccb74c94d44a95a", "ref_doc_id": "d89fd03fc59a6c617e5a151a56a87b2a0b4349fa"}, "1a101376-23bc-4aaa-90ce-18dc29fa6099": {"doc_hash": "3dddacb5b8d8d2194c287b7332ecf85c26329a068ed04c9a9091380c04a7c21b", "ref_doc_id": "f4ada54ef27dc3a2ebd97070e6db411c07eb8447"}, "5236e8bc-7aab-4245-9874-a20b5fb13ebf": {"doc_hash": "3313d707a65516a755925b95d29cc25f9917bfeceecd26da6e5f990d61c65696", "ref_doc_id": "f549a70f3f85f2b0d1b00246672926944157ff52"}, "14ddd702-e11d-437d-b85a-837bd1968304": {"doc_hash": "b4a6726671fa7c2901ddf0d90be1f342bed542f8ef1a08b1d07fadbb1a33994f", "ref_doc_id": "1aaadab948454b086fdd17d38bfea2a75f66b1b0"}, "bc03734e-4c2e-4934-8d9a-67e88efdf6c2": {"doc_hash": "41eab0f1583d9a9602d695ab7a90eacb329d7fa1040fe34f72e2773c9f60e8de", "ref_doc_id": "1aaadab948454b086fdd17d38bfea2a75f66b1b0"}, "4011d12a-2833-4cf5-a13a-13e0b033ce07": {"doc_hash": "47c326a5f4acc970648131c6f5f951990eaf4831a5c84ce588d4ed242c9f8436", "ref_doc_id": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9"}, "4489bb4e-65d7-4656-98ed-3eb6acea883e": {"doc_hash": "1dab176bf3f64a15aa3ba813abd76f058a37f50a36fb7a88dd194f33799140b5", "ref_doc_id": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9"}, "8b6613b1-ee27-4412-82c6-a20d03e20f5b": {"doc_hash": "36193dca91d39d9bbf17e27e32e8fae7e8ccb06438c3cf5f6bb59f063ee2d561", "ref_doc_id": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9"}, "bb42dc4a-e217-4362-8f98-f27a68b38292": {"doc_hash": "17cd58041849d7ce8d7109faacd0048d829db33dfff56f8f8533d178336d2e3b", "ref_doc_id": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9"}, "76cea375-1323-4dfc-be40-b3e7477989aa": {"doc_hash": "401f59e6120c9f320de71519646dc1b52c957a600ed91d1306eeb893fe787c49", "ref_doc_id": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9"}, "3682ee00-3fde-465f-b308-7638fdbff212": {"doc_hash": "f256c96d3e39d45a772a047693d0bdad3efb4fe503ff12407f4db2baa83ca283", "ref_doc_id": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9"}, "b18acd29-3508-4a82-80d4-13399362c2d0": {"doc_hash": "d1d572541546ebb5c164397566b91d4bcd765f504c4e2032678de86d6c68b42b", "ref_doc_id": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9"}, "f9f39b23-cbef-4947-af16-5a1ccdbe8192": {"doc_hash": "f89eb13e9158c200e4764895c4c3f52c278e234e25b3fc5ef3a9dc24e0027dc0", "ref_doc_id": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9"}, "06415d74-eb55-4b5e-a060-c09c2722fa8e": {"doc_hash": "452f718ad3e77abc854d9b04cb580fcdfb87941ffc7143768f933c2d7c54e106", "ref_doc_id": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9"}, "0260eea5-4503-4166-880d-db20b0acdde8": {"doc_hash": "883508ddc9853e22a874552135e282a52ba954c30691c161350b795278eb9660", "ref_doc_id": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9"}, "e1ec6c5a-5f9f-4b45-8db9-d99a31c18a72": {"doc_hash": "28836082b1dbebca53c655f41bf881cdb45a381c277dec45f2ee522ae03f6fae", "ref_doc_id": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9"}, "448e809c-1421-4fa8-b1ef-26d80e2ea394": {"doc_hash": "108e32015c71d08246d71823d16fa2c1f0b1f280b2acd784b803042b15d9a497", "ref_doc_id": "08c08e787361149d5c5006b5e188bef7b51d1501"}, "8c02dd98-65a7-4cd7-9e28-0d2e23079e06": {"doc_hash": "b5b40a501e4125d96a7f1a475b060bfd793dd9011d9a0a931d697994845191d4", "ref_doc_id": "08c08e787361149d5c5006b5e188bef7b51d1501"}, "0b5f3a63-2a93-464f-87a0-460318aa14f0": {"doc_hash": "65a3c6111d6d57feeec055ace64d0a3b976fb0efd414ea7d996e85f1b684d3a5", "ref_doc_id": "eccda3802fba6e86c320dd5d1572c3eb006d94d3"}, "77691135-227e-41a1-9c44-0860d06ac02c": {"doc_hash": "7a3c1c093662cd54354bfc017fc6bdeb2324eb2faa9cd5fd784fb4d788180a68", "ref_doc_id": "eccda3802fba6e86c320dd5d1572c3eb006d94d3"}, "36fcce39-ea83-4902-a37e-ba9ca165c888": {"doc_hash": "fb87057be06d421958915d38df1b904e3b39f4f1d0d74ad77c7f4a03de4a5c56", "ref_doc_id": "eccda3802fba6e86c320dd5d1572c3eb006d94d3"}, "e0660a0d-6448-4d5a-a295-87f6f893894f": {"doc_hash": "66b67dbcf14d504028365c5e9795ce8f67db264db920f7403085ce11b8a780df", "ref_doc_id": "eccda3802fba6e86c320dd5d1572c3eb006d94d3"}, "da06f037-f1a7-40da-a579-64d35ad08b1d": {"doc_hash": "d13f4dd5f7235fefb2ff54377703c0c657cebd3869635dd99f261444322b77bb", "ref_doc_id": "eccda3802fba6e86c320dd5d1572c3eb006d94d3"}, "1ff5cf51-ae35-420a-9b84-9b9ba70162da": {"doc_hash": "f3804a50653d46d524702a1255989a28de12595e6710aa5ed3503113164efc3b", "ref_doc_id": "3a2a92b3239fa515533506d97ffa2d255116afd5"}, "2748cdf8-b029-4e5d-9a85-3a5b836dd667": {"doc_hash": "f015bdef2831b5cd1c0b505f7b9746f621579c9152b316778545d16263a131b2", "ref_doc_id": "3a2a92b3239fa515533506d97ffa2d255116afd5"}, "5da9fee3-df4b-480c-a42e-02b6e6659401": {"doc_hash": "5ff60ddc7d3e89cb08150538c8b1fbeaeba4cddfb9fd7d6126d963dfcfa46bb9", "ref_doc_id": "0012dae838fab5aa34020c7c506cd16363ec4c15"}, "a4e0b372-747c-4100-ae58-b87e4c47d3a9": {"doc_hash": "0af22b68348d5c060e64f56355c14ea13f841329101d2c9166ef6f569f99fadf", "ref_doc_id": "0012dae838fab5aa34020c7c506cd16363ec4c15"}, "3c0d9c2e-4430-4c7d-8cff-6f33124b118a": {"doc_hash": "3006d689cf72fe4e43321ff281d1d4377daee7154a8c3e70573421033e054e0e", "ref_doc_id": "da816c5363d2092e65647c82ef39562bd0043895"}, "39ebc3e9-db0c-4d5d-8883-11efe84e9f11": {"doc_hash": "a79d14b1bb3dc94114f709cc54a18c9ed564263adf215ce3f9e5500a7db99149", "ref_doc_id": "da816c5363d2092e65647c82ef39562bd0043895"}, "6ba96a99-e86e-49aa-b367-fc5d09616a12": {"doc_hash": "9a3ffebce2369263a5d10b15f69dc7f1ddb459d93c84ba96983eb4d0ed0e8b8e", "ref_doc_id": "f900319efd26247f8674d0e4a326f64fe44e6f43"}, "176cd8a4-1fed-4038-a815-bde6cbb7e157": {"doc_hash": "cd052d69857d259891b182677f26bd302d9b4c74828f7a46e13bf25bf900e266", "ref_doc_id": "f900319efd26247f8674d0e4a326f64fe44e6f43"}, "36553473-515a-4c3c-a46c-881741efc82e": {"doc_hash": "75671aafafe165df81d9c1bd8f5f48965db82af24a821cffa1bfa2829a31f7a0", "ref_doc_id": "f4e28d202b2a911d05af735920eade92c75674ce"}, "0db60b02-21a4-4b14-8242-5d975f097055": {"doc_hash": "d760dc7d66cf17495aef65891f14389bbf6be31172ead0ad61260f391bb32641", "ref_doc_id": "f4e28d202b2a911d05af735920eade92c75674ce"}, "94a712d0-25cd-40ee-b9d7-a237f5cc63e9": {"doc_hash": "6679bb49af37707a63eea2ed7e6d76949ee7ca830aef029fda454bd22e61e0ed", "ref_doc_id": "08cded504e79aa8af55a6a4e366ebc46e9a334ae"}, "f3018f84-a543-459d-985c-8b6e60be6d78": {"doc_hash": "5af017de7b1e895d10934d0395f4cf75d4e2ef9bd22fdeda88f44403aa38d521", "ref_doc_id": "08cded504e79aa8af55a6a4e366ebc46e9a334ae"}, "1070a038-267e-4cbc-981b-1b7cd31f25d2": {"doc_hash": "b9ac36070210eee14ef4f822de874388628c5fad726f9b9db3768e1168e7bc21", "ref_doc_id": "f6a7945848250731cee6805eaa0f7faa3675402e"}, "781ab3b0-2518-44c2-8f85-b67998aca368": {"doc_hash": "ec5d2908e2adc1a7c82a1347f998c2a86a89ad57e6099503c7d12581c01f55e0", "ref_doc_id": "f6a7945848250731cee6805eaa0f7faa3675402e"}, "c10cf5d7-a451-4b37-9e8c-a5737be0ac77": {"doc_hash": "ee500179dda89be86d828e0d13bad1141a54902e52f25f93afaf6dd5069dd781", "ref_doc_id": "e962f74299c9b2183c1e04e61c3b1bae9f5e551e"}, "6624b6f4-97c6-4ca9-b8a0-f3557dfddb65": {"doc_hash": "14b9d16575a74c158cd50ca696ae51f9ae847c43985aa005d8ab6438c00387bf", "ref_doc_id": "e7a764354636f8230396f98d84111e9bd63a6ab3"}, "6d8bd484-22f7-4803-9703-eab800558428": {"doc_hash": "55204dbecc7f255f02c012cf1f27f37cac13c17f26b9def98a3a4e3592eafd8c", "ref_doc_id": "e7a764354636f8230396f98d84111e9bd63a6ab3"}, "2db9714f-05c7-4bee-92be-20c69c26e4b0": {"doc_hash": "a6777d7362de221753d5bb5998e49a97c0c19cc64ab6d61d9812b213281aa367", "ref_doc_id": "daf58b90f4c89f44124dd7277c55e01a396b5502"}, "3ff2aaf5-d872-461e-afe2-298c34020279": {"doc_hash": "a926b850699bd839a65b0bf04dfd2f8db941b90456b10d74015d23efd8b25019", "ref_doc_id": "daf58b90f4c89f44124dd7277c55e01a396b5502"}, "d8377040-b65a-410d-8396-f5294402ec66": {"doc_hash": "ca4c9af9a910bbf179d118e22a536500512dd08fb2787cf0642aa14c47d2b1b1", "ref_doc_id": "daf58b90f4c89f44124dd7277c55e01a396b5502"}, "5753295b-0a37-42ce-ba01-10cae15851e9": {"doc_hash": "8655da07f398819577b648167042337bc7712a85313f0ab432c54b80a5ab84a8", "ref_doc_id": "1539d3d50a2aff9030d0128aa77713b289b09271"}, "be59fe67-0f63-4a9e-a947-dc2d392a0a8e": {"doc_hash": "111c966b97440811ac722da608928ef7192b754064ac1233d59e8fb60ca4bad3", "ref_doc_id": "1539d3d50a2aff9030d0128aa77713b289b09271"}, "bd265fbf-b990-41dd-84ad-8af3b38d6095": {"doc_hash": "cfef7a22ff0e02a87706e50fcccefd4be3c29a53794ad7560c4a95904659f714", "ref_doc_id": "22d16666efecb48f6410118259edaff7d58b9aad"}, "218c87e9-4b70-430b-8648-907fe3b54551": {"doc_hash": "2edb1546273b5bf58037b769ddf60515636c6fa9cef0a18f972d4d6a666b9aa4", "ref_doc_id": "22d16666efecb48f6410118259edaff7d58b9aad"}, "31c7d6b5-2593-4c9c-bdc6-aae4603fb197": {"doc_hash": "e3896717f557201d549b0ec9101c36f8448093ccf7b006b32e802a8ba25c210e", "ref_doc_id": "22d16666efecb48f6410118259edaff7d58b9aad"}, "a5b72a70-460e-4ebb-926d-572d5af2eab5": {"doc_hash": "6fe343dee36065aa81f427d4049e2b3c9e131a538ab9f1f50414ac8609987463", "ref_doc_id": "22d16666efecb48f6410118259edaff7d58b9aad"}, "34a518c6-a9fb-4f68-8a0c-8059d56ff657": {"doc_hash": "588a06647ac6cfeb4f2a018235f660379f92b64fa8488334a06c53871a49692b", "ref_doc_id": "22d16666efecb48f6410118259edaff7d58b9aad"}, "3fd1f363-b3d1-4e2c-8fb2-551eacf992cf": {"doc_hash": "83c4ba1a1832bd737ba480c9a4a251e7a767b09a3eaae2f7ecadb32ae3ddc51d", "ref_doc_id": "6cf8d33f445f43c1bb5fb460453326c57b0f10f4"}, "1608fdf7-23fd-4cbf-8564-ee2c4b037627": {"doc_hash": "dd9f3a8ae00db7d60522d74baed3252b0908ead80ba9883c8f853b86f5da9562", "ref_doc_id": "6cf8d33f445f43c1bb5fb460453326c57b0f10f4"}, "4d0a9b19-7f20-40a3-91e7-43941928c83b": {"doc_hash": "ad4d248705f5499a97024cc4bd88cf8549a760d68dc89f4143837d7fdb00e56b", "ref_doc_id": "a49ff19056394cccc6edd6468a843577c975df85"}, "ed74b761-a34b-445a-b9a1-efb8a9f62722": {"doc_hash": "083faec436a0589e9ec266b79c38875c527c4637031940354941ade5522af748", "ref_doc_id": "a49ff19056394cccc6edd6468a843577c975df85"}, "cc025ace-cb40-4a77-81a8-82751076a6cd": {"doc_hash": "9fc374bc5ab527174c0371e22fb81ecf20b27077434050c46374fcac5bcb5119", "ref_doc_id": "a49ff19056394cccc6edd6468a843577c975df85"}, "d3f8dbff-163a-4bb6-9eae-4859880ec8e9": {"doc_hash": "d6e91eb7d1216b26eb72916a7fa466ae5e7fc4bd45362922d28f1208c0d0b641", "ref_doc_id": "a49ff19056394cccc6edd6468a843577c975df85"}, "05ca7f5a-9547-4c3b-ba02-bf5462d8d2e8": {"doc_hash": "3e6cfac07edee4dd647e36abdba5cccfbf4028a35699a84885f35679c2b05887", "ref_doc_id": "a49ff19056394cccc6edd6468a843577c975df85"}, "a4a66cef-2f9c-4e8f-b9ab-04657c8c8eb5": {"doc_hash": "5538818ea5cf92e8fc31bfa9bdf93a5801fdc8ac63765efdc3844ace8c9417f9", "ref_doc_id": "3672e45951c269b2bd6dd95807bfe3bce85bba28"}, "710d7a5d-f84e-4081-adea-d805ff64780e": {"doc_hash": "cb2ab50c9955b4f8eb7a404c56eb6d7a5c1ec0a44cedb8df2818f5c9f9fe58bc", "ref_doc_id": "3672e45951c269b2bd6dd95807bfe3bce85bba28"}, "edc1d4bf-117f-4980-a605-852ee607be0f": {"doc_hash": "6799e4090a34fcd418cf09db7117df24b87b1f853bf162e2f76e5fc400c280b7", "ref_doc_id": "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe"}, "da85ce69-19b1-4a70-9afe-04139870362b": {"doc_hash": "d988aed8c7424b029bb8d9a78281ffacaad982577c50ac63eb0691b2c4ea12f4", "ref_doc_id": "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe"}, "aa1d6d87-f87c-4397-89c6-1b292b4dfbcd": {"doc_hash": "131c043c096ad68935d579612e819b63d061de010d56fef1e2949ba1cffea064", "ref_doc_id": "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe"}, "308a86e4-4311-4283-964f-0f56f1b59aa8": {"doc_hash": "56732fc4f4acd406245eccf89177770e92c2e766f591ac4301c5475ab2650630", "ref_doc_id": "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe"}, "316d6b4f-c66d-480d-a138-d674c12cd5bf": {"doc_hash": "233da2c4b72a85a2ab6934300e6d4a94196a8e038e30a1beb48a34d020efecda", "ref_doc_id": "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe"}, "54e3b84c-4b34-471d-ba03-83b81cffcdff": {"doc_hash": "8931af407b9a3697957a3a1a3cf30c9fe5da299f2e77674c4df8fc95ec2c78ac", "ref_doc_id": "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe"}, "26f17a9c-9f78-4121-9c3e-8b678881e2d1": {"doc_hash": "4318b83dade4b9444f2bd50d06e2fb749b753b5b112b29996648907e2f84bbd5", "ref_doc_id": "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe"}, "1eb09a0d-9a2f-47f2-a9d5-302cede099fe": {"doc_hash": "b4fceec8b13f8ca1c930696dccaf6c037078d26a446e29adaaf5f57e012df344", "ref_doc_id": "6999ddb20d8eb26ee5e7d97400ca8087881db3aa"}, "f3172549-7bad-401b-83ff-0f05ca606fdd": {"doc_hash": "0a629ce3d9e470a31a6cddb618f1fdf5ae454b3f73b838d4b28937a306bc364a", "ref_doc_id": "6999ddb20d8eb26ee5e7d97400ca8087881db3aa"}, "e2a69a0d-4ad8-43da-b83c-6222b2ce48c9": {"doc_hash": "55a1f32a47251fdbd7925f92c06bfb79a050ecfbc49100fc00287bfc1739bfa9", "ref_doc_id": "6999ddb20d8eb26ee5e7d97400ca8087881db3aa"}, "54e3bbb3-a2f7-4728-b483-e2396ac2d8da": {"doc_hash": "840819eb29d73a98faf5d3c3af089d30141e05855bc43b2ea2eee83c821c404c", "ref_doc_id": "8f7ef9f0f3c7d236fd3fde3ffcdf1493912c651a"}, "8aa640a8-6807-4de6-a871-86e5147469a6": {"doc_hash": "a16b2bc4ee68e77ec2211ea5d2199eb739c703bd89f0da15ce6220b97f09f689", "ref_doc_id": "8f7ef9f0f3c7d236fd3fde3ffcdf1493912c651a"}, "1cbb002a-aad8-4a4e-809a-487750a09011": {"doc_hash": "4ad55f727c5dc4cea1fa476d70aef361ce71562ad4da6570c876326407997f56", "ref_doc_id": "8f7ef9f0f3c7d236fd3fde3ffcdf1493912c651a"}, "b87c8bb0-701d-4d01-9a37-d352c224aabc": {"doc_hash": "c4d317c31f5b9895ad18fff4fc739872d7383213aa9178b870ce63ab3e173f8a", "ref_doc_id": "8f7ef9f0f3c7d236fd3fde3ffcdf1493912c651a"}, "ae44dc33-8745-48ba-a9d1-891a089ff3da": {"doc_hash": "7d47d4bf9b5358c162cb29019957b361cc0e89c3c4ef9917b47a7e6bee0d9ef5", "ref_doc_id": "180ad52f2da3ec42345fff91fc5600cccd0bea30"}, "5ab1785d-eb85-4eda-a634-c27701f32933": {"doc_hash": "86a28a1affb46cde3a88639218421ee34643339ad2cbe7bd116c395e3edaada6", "ref_doc_id": "180ad52f2da3ec42345fff91fc5600cccd0bea30"}, "4cb6643c-e750-4d6f-9f45-8aa5258a5476": {"doc_hash": "d40c0d5cf4389ad32eb525f144e68d03e5ff590852f836e01386342d59555ccd", "ref_doc_id": "180ad52f2da3ec42345fff91fc5600cccd0bea30"}, "8dcc3b0a-b64d-4841-984d-2b53db438140": {"doc_hash": "0357855429805fb33d7bf21d03e79739d6ac0e074a1f6cb32245dc85749f6bf8", "ref_doc_id": "2a8b4c15dfdb2bdc9ac61e7d7de5cc3c12faa120"}, "dbee2876-fb43-4199-aa57-d0546e4e5fe3": {"doc_hash": "44dbe8c7aea01b69568a13336498e7df0cf4ef17511ed89013e27e2604f46c73", "ref_doc_id": "2a8b4c15dfdb2bdc9ac61e7d7de5cc3c12faa120"}, "a2905fc3-672f-40a5-bc6d-c1bda3b7dbde": {"doc_hash": "9ba7e1215dce1570d3c7f97d4abd4a8293e7d425296cfc209514dfddae6683a0", "ref_doc_id": "2a8b4c15dfdb2bdc9ac61e7d7de5cc3c12faa120"}, "edaae358-034d-4353-9d6d-9af1bfc5b7e5": {"doc_hash": "bfdbab7375c1525b98f65aeed7264d52c127f95b3f5c04cba80d31129f48e63f", "ref_doc_id": "6559548f00cf53c2278b3fe6a75ffd2ee2993a47"}, "fea5312a-3e50-4d69-bd4e-7e9a22c51575": {"doc_hash": "a498a66ba38a9c62136f429dedf5ddef2cd05896d1fb02d85d047a48067bc4a3", "ref_doc_id": "6559548f00cf53c2278b3fe6a75ffd2ee2993a47"}, "9e5a009c-4901-4dda-b2ed-39faacd796d5": {"doc_hash": "214bc80afdd2f3aeae24798516c64ffed9a42402c537e9db0f44cfb6cd605d3a", "ref_doc_id": "6559548f00cf53c2278b3fe6a75ffd2ee2993a47"}, "fdfc0b54-ba9c-4293-9ef8-0abc7716425e": {"doc_hash": "388145983626f858cf3b24f82a974f41898fcb72c402056bf6beb0b9a8ff9c0f", "ref_doc_id": "c3e4d8a3db57f4a201d5b1908eed39490d927979"}, "49e7657c-a984-42fc-8acb-3b0848e0f6d4": {"doc_hash": "3053241003ede87e4921095d4abb673d753ae551ff59b1ed1fba33bd172d824c", "ref_doc_id": "c3e4d8a3db57f4a201d5b1908eed39490d927979"}, "6e506e27-c14a-4407-a025-6f9c1ed8e113": {"doc_hash": "3f377f9588cde2dc0943c32e147e8a33cecf146afd8352a526b3563a72153b7a", "ref_doc_id": "c3e4d8a3db57f4a201d5b1908eed39490d927979"}, "24b7a03c-4cc9-432b-bc88-84eec1f1b6df": {"doc_hash": "d39aa6814b039ab9f5789c89819518917cb7167587c68e86b02d513ab7ce38e0", "ref_doc_id": "99e582f5e4bb25201eb787c4c25f3595b79a99c4"}, "12ac23c4-3322-4877-a843-c77329d06717": {"doc_hash": "48987813e7d2013d8cd2bd822ef2b435e6ba864229c36066a50282d65702f7f9", "ref_doc_id": "99e582f5e4bb25201eb787c4c25f3595b79a99c4"}, "309964db-a4a6-4ad8-93cb-6e1167c08b8c": {"doc_hash": "50cdaa4843e6c993cdfb1e842e88c5b04f658f8e81a89fe885ea88f150cccb0b", "ref_doc_id": "e5145607a664c4fbcd798937af25f06af67bbd07"}, "c7fd056d-c400-4d03-87c4-f790bb142f2b": {"doc_hash": "3ee69cb0fea00f01e1bdec89bc7303951fa57d83a53004ef85490dec4eaa79bf", "ref_doc_id": "e5145607a664c4fbcd798937af25f06af67bbd07"}, "1ea711c6-086e-4127-91f3-a3b2b661a6c5": {"doc_hash": "fb31992b29493b63a412de7c16e30b6c759d2f58b02720676eb2cddea911409b", "ref_doc_id": "e5be40b9e630c1c422992678103cd452639d999e"}, "b426c2f9-b8db-4e99-b506-fde8ac0b9f4b": {"doc_hash": "b3244d61b50c63e50e27f2726945f77f1eaa320f9dbe385b56a6176cb1ca0796", "ref_doc_id": "75146769cd0bbfe85f507692e23930cb590b5ade"}, "8fbf1a80-e0bc-4493-baa4-486bdc2437b2": {"doc_hash": "d21d9543cf2df9591ea601d41e3f73371d0adf540bbe24b22c82eb91ac28e61b", "ref_doc_id": "6bf410fd47bf11af378ee8c632dafdf4ccbb6048"}, "b7dc3c4c-539c-4139-b3ad-517595b44b9f": {"doc_hash": "ea71925e00ef73c092877b5c9a332100c0a9ef26812f08030870cfc77a186b3c", "ref_doc_id": "6bf410fd47bf11af378ee8c632dafdf4ccbb6048"}, "ea3b8ec4-7925-4a0d-8deb-8e69f2c0e09e": {"doc_hash": "3732e965bc82c06dfdfb1dddb854252d18b621cbd130dd4e802293bead9100b4", "ref_doc_id": "55ac3421090689d6ed03a34d1fa4efc29d9d0a90"}, "c044a701-9820-45ec-84e0-d552d3040a79": {"doc_hash": "eca2a0ffd23eed12c47bcf1d730643f01baa69c28c244ed9e754662d916a2fdd", "ref_doc_id": "55ac3421090689d6ed03a34d1fa4efc29d9d0a90"}, "958ac0c7-e995-4b5a-a2f0-5f5068c385b7": {"doc_hash": "7bd037d0d90d2957e29334934951e38b532dbb296779b2d699259bf8d4e30982", "ref_doc_id": "023e32ed39a29832db7c59384713dffb542dd514"}, "20bf78ed-1d04-4667-9d7c-4b42fc5b9fd0": {"doc_hash": "be69021c55d3b3fdf3cb5bbda04cb3c6fd5154a3a23b26340fc51118bf0983ee", "ref_doc_id": "023e32ed39a29832db7c59384713dffb542dd514"}, "5fb32cd4-2e3d-498a-a209-2349d49db46d": {"doc_hash": "5c704992ebd6f3b77d9bcd53556236bc7c4ebe8460773a3af59244fe83b003c2", "ref_doc_id": "8f6be040beb4aa62c1a856cc6d6fa6140ba85e9d"}, "12f655da-e440-4b61-9cf8-c112556321c2": {"doc_hash": "0a6595220cd1028ba1c76657044edd2005d50f8c99dadbc3b6296684f082802c", "ref_doc_id": "8f6be040beb4aa62c1a856cc6d6fa6140ba85e9d"}, "5f94ee7a-6f2c-49d5-8cae-de1da2e2822c": {"doc_hash": "2261d1cf8e53ee27b74a9ed11f02d80549a96e9c27945094949a76ebfc4411b5", "ref_doc_id": "8a53f83feb681521de57f5e18a32622a4c9e5794"}, "e2f5a4ec-d117-498c-bd0b-472c99134fc8": {"doc_hash": "dca7c90754dd74d410340ae265e95cb0fdeb2a208f8f8f35bc167cbe65e7ae75", "ref_doc_id": "ae9fc253fbe51513e7dd250ce709446876c1ebf0"}, "1a613b18-bb73-4ca1-b570-685fc3b276c7": {"doc_hash": "0aa028902df3e5676842e6ccf99c4f751a852485f382fc02d75f8181fd013321", "ref_doc_id": "ae9fc253fbe51513e7dd250ce709446876c1ebf0"}, "7c5b3d7f-3e0b-4803-af3f-e3c2ffc4b20f": {"doc_hash": "df78a17d0c4d2b7d7acb4eb25e3f13731e9bc57dc193087b16333988c729d673", "ref_doc_id": "ae9fc253fbe51513e7dd250ce709446876c1ebf0"}, "68e50d0c-9cad-4f11-a6fa-d9658bcb4399": {"doc_hash": "9626b79ab34dea9477f66236380cd0de8af23944a5bba708c788f70e34148d47", "ref_doc_id": "6491e4a6f8dd499e2ca221136062da883b0ec8c3"}, "ead8f21c-fa24-4c5c-b747-6bcd6b4d732e": {"doc_hash": "14a8264c0beace30fe582bab820a9ad9f93dc63c851de650858a39c74f4070ec", "ref_doc_id": "8cbb27e66e7624c2757f0b36f7464a36eb8c0824"}, "a1f56649-324d-40df-be37-ed71f9f375bb": {"doc_hash": "5b98e8d78419f9c3e6cc22aeea451098ede85a496adbd0c4e8d3dc18cbbdb523", "ref_doc_id": "8cbb27e66e7624c2757f0b36f7464a36eb8c0824"}, "bf3fb169-353b-43f5-99d6-2de4d7008657": {"doc_hash": "7942d2da1ef6b66c2a94fc77ff2b11f4d17303edc3a007c2bcf8e0a7b61f520c", "ref_doc_id": "a3c4e255903c742d97cdba70ba353058aa86a86f"}, "a6a33ae0-68e4-44fd-9026-8da6034e26bc": {"doc_hash": "a22ab9ad63137a51a8ce32043983f2b4c4bb09c2642484b307d31c6d86299dc6", "ref_doc_id": "1edff04a6189f3fb9ef30288e593bab64f1b1205"}, "a3801d42-00d0-4265-a1c3-280fed071fee": {"doc_hash": "f947bc2bdde2e8299768738e1e6bf6cd626850c0da4149b518989b37c628244c", "ref_doc_id": "1edff04a6189f3fb9ef30288e593bab64f1b1205"}, "83c6586a-3fcf-42d0-85cd-d7f1c70c9551": {"doc_hash": "649ccef01254c3d4fe0950e9d1b704dded49424ddc66ca2ebedfe4a16b3e16d4", "ref_doc_id": "1edff04a6189f3fb9ef30288e593bab64f1b1205"}, "653212f5-ace5-4fd6-a071-88cd46b08aef": {"doc_hash": "17ea5a1a31ca5e4b1ef686aa3dd8b2b656f2303bae6d9dc40cf939e40dfe455f", "ref_doc_id": "1edff04a6189f3fb9ef30288e593bab64f1b1205"}, "758f01ed-ba5b-4600-9885-d63d15175dbe": {"doc_hash": "df21a2b146ce57f325ecd8d6cb216bcde231cfd3374eb7754a76100a6c5a84b4", "ref_doc_id": "1edff04a6189f3fb9ef30288e593bab64f1b1205"}, "6691fce2-8aca-45bf-9801-e0f077480014": {"doc_hash": "974e95b063c0cab401da19855ff594b0619a83a59e8a347a553c63f81054a30b", "ref_doc_id": "1edff04a6189f3fb9ef30288e593bab64f1b1205"}, "8c191632-d8b0-4d9e-a943-120e6cf899b5": {"doc_hash": "f8cafd9c308e01c713bb2111a176aa97eb9ab0227f9977c223334904b46804eb", "ref_doc_id": "2c64e5d05c028555a16ea464e75e60aa2cfd2ae5"}, "568130d8-abe9-45af-bd4a-67b6e6136904": {"doc_hash": "5ffd685c7eadbfcf5cd31087f58bd8a752b7a7138449ad4b6847b683ebc0b01c", "ref_doc_id": "6b2e7a5ac172c373054b45a6c590eaed97bec3c5"}, "399fce46-c0ce-4791-8f02-fd4e71bb249a": {"doc_hash": "83c7812c5101118b08ea0e9e6fbe868b2ae7f3b26aeeeaa6d0cc23c94658c930", "ref_doc_id": "f11d6e689d5997e8cf97c44042ff6f29a2fefe20"}, "84730f98-f307-4325-ad6b-d718e388f649": {"doc_hash": "a30368284bfaa4d9cb903c26a91c9e0965bbef33cf90e4bd7d3ddaa59d08001d", "ref_doc_id": "f11d6e689d5997e8cf97c44042ff6f29a2fefe20"}, "73faea67-36e5-41e7-8258-26ee47ca42c6": {"doc_hash": "15f43280e13faea240d62d938af6aee6581c5b48580405026f35cd7437a53c2f", "ref_doc_id": "7990f6b219c8736ba354fc1c565ad2637749ff91"}, "a6af2e3a-69dd-45cd-9685-8a0c1ee28798": {"doc_hash": "004ed434ad2bb83149369876a67bb19bd8d8a493e056c46b829657d7596b7ea2", "ref_doc_id": "7990f6b219c8736ba354fc1c565ad2637749ff91"}, "be3d22a3-e5ab-4da0-bd4a-e4a9ca11552f": {"doc_hash": "dc199af07f004c4e1d2dc3f41d5d58c55effe2056da56ca5f6d1e80d91bb57ce", "ref_doc_id": "7990f6b219c8736ba354fc1c565ad2637749ff91"}, "4d5c72b7-7040-4e3b-b463-7c3b864c955e": {"doc_hash": "6b8dde8474f43489fc3ba867235505fb7664f9718bf8981b4d4c490bd30ffbd5", "ref_doc_id": "7990f6b219c8736ba354fc1c565ad2637749ff91"}, "fae31607-7fe0-473b-9c3d-f0be21ca5e8a": {"doc_hash": "193e1545dd29b7d68b27baeda9aa7900d67501aee9340df2fed80dd459e1ee10", "ref_doc_id": "7990f6b219c8736ba354fc1c565ad2637749ff91"}, "28f04b57-d122-4ddb-854c-c5fea7f0d1f7": {"doc_hash": "b1f6b7946575c45c9e82c9784b8af4ceeccb256b3eda92cd9d8319cd47bd1b9c", "ref_doc_id": "7990f6b219c8736ba354fc1c565ad2637749ff91"}, "0cd86a3d-6800-4d17-833c-4c3d3160e9a2": {"doc_hash": "e42c73a5335bb043e563d694f58380d8f05698ac6d54ee620d155821f7782476", "ref_doc_id": "bc86df408f308e87e1ed25f73e16c4ce7733d7ce"}, "bdda39ed-ff04-4ccd-af7e-94e43efe39a0": {"doc_hash": "137a2923a08b936de2b0ce9ac14ea3fcea24e90b7514e656c0bbf27ce7f319b6", "ref_doc_id": "bc86df408f308e87e1ed25f73e16c4ce7733d7ce"}, "ad20579b-ad4c-470a-a553-beeee73e4e06": {"doc_hash": "d40252f46190ad569813e19360eb8381da17f64edb688c810e0b7c81514c5918", "ref_doc_id": "bc86df408f308e87e1ed25f73e16c4ce7733d7ce"}, "cdc316d1-f0c8-4104-ba7a-9dfdc30f6992": {"doc_hash": "23fb7364dcafa2da44e72636ee7f588b7f43dc4939db17ffc72208edebb38ce8", "ref_doc_id": "cf495018c3923b314fe53b809b329991bce28a11"}, "10a13adc-5775-436a-b2fb-c8e2d686f9fa": {"doc_hash": "bd752c6c55b31a089e6c279263ad447cf9a7a394bea1a665f98fc19e6f35a635", "ref_doc_id": "cf495018c3923b314fe53b809b329991bce28a11"}, "ddfd8b1c-7e92-454a-b76f-19d3f574cfdd": {"doc_hash": "f840dbfe20ba87b3001bd95ec86c178c3dbe0d4a096c73eb84d2bb0a46370618", "ref_doc_id": "cf495018c3923b314fe53b809b329991bce28a11"}, "311b47be-9a49-4485-90a7-088f81852141": {"doc_hash": "c6ba43f01cac8ea1ce5605d83648b0e0c877bb9416b05a31578a77fcd3e62489", "ref_doc_id": "cf495018c3923b314fe53b809b329991bce28a11"}, "8a4ed934-413f-425e-98fc-e1b8e98c4297": {"doc_hash": "23769711d5b10c0921773629f556d125b2024c92f68d563d038efe69676bec27", "ref_doc_id": "cf495018c3923b314fe53b809b329991bce28a11"}, "0efbff4c-f928-4ba1-8e48-ce04e45960d1": {"doc_hash": "ca2992bb12271450663482ed7ac03378a9975c9a996edce182175b43d66d24d8", "ref_doc_id": "cf495018c3923b314fe53b809b329991bce28a11"}, "a129317b-0564-45e7-bbc9-083158b6286b": {"doc_hash": "44c533abfd2e355929a211b96fd3cf14355e2ad047e46ca4126a20e79e46f32d", "ref_doc_id": "cf495018c3923b314fe53b809b329991bce28a11"}, "a536b0d3-dedd-46fe-ba41-c5e14cd1b5cf": {"doc_hash": "3293e9423c2fcddb6d068c42854996ba6c6d2ca3200ac33ff7ec06047262797b", "ref_doc_id": "cf495018c3923b314fe53b809b329991bce28a11"}, "40d27f4e-9dd0-44c9-b7ab-45250fd910de": {"doc_hash": "3eff2f45963eb820c3d7921312abac89f63e99d3d2b11f4ff6260b38f57f5535", "ref_doc_id": "cf495018c3923b314fe53b809b329991bce28a11"}, "268d72cc-57f2-4213-86d8-1e413820ee91": {"doc_hash": "3d08cbe4af08d6a7411c56654637f9d7fe44905ffd8f93f5f7fa0706c463196b", "ref_doc_id": "12a3a18476c8ad859d941066b2e40d67a37c53b4"}, "c37a6f8d-45a5-41bb-bd39-96e38e48d8ca": {"doc_hash": "ba06986e99a0dd317d2ddaa159abb8fc1b52ae57f04ea16c7d969220da8c2229", "ref_doc_id": "12a3a18476c8ad859d941066b2e40d67a37c53b4"}, "9ef9d3f4-5018-41ef-bc6c-e9181f43fb1f": {"doc_hash": "79450f4dab9a0fa4a7fad93653c4ca4cbf5b46e8797369736acf28722934d7e2", "ref_doc_id": "12a3a18476c8ad859d941066b2e40d67a37c53b4"}, "b712667d-6794-4353-8879-a6249ef19ac2": {"doc_hash": "ccf554afbd6cbc9bf93b0d8ac74e05b0ee3389d3103d269b9e4fbb851300c3a2", "ref_doc_id": "e3b8ffce248ffc0217cd918184dc4e8177c1ded5"}, "82fec383-afab-46fe-8ae2-f44c7b369a72": {"doc_hash": "98ad5bc6b096d24e63de15e37bef516ce01c9819f8c0df49db8eeddc3ce585a3", "ref_doc_id": "841023378a35b92f18ff2b2a8e5c01c25d86c704"}, "e2d28dc3-df1a-4693-b378-b8711f0bd097": {"doc_hash": "e18fd32c87ee0e3ac5fd008e3cace4dd24780adf700c78fa89fd8a17b24e8583", "ref_doc_id": "841023378a35b92f18ff2b2a8e5c01c25d86c704"}, "7d69bb6f-8daa-4ef6-be14-56f8c83312e6": {"doc_hash": "c831b24acce9666410a0c18ca7766798999678a0ca79b1abb96d03d6f10a96b3", "ref_doc_id": "ca5f9c438cf41a085e22086a908d2b6df0545a1a"}, "958982da-230d-4dd4-904b-f95541c5c894": {"doc_hash": "ba9902b8d29b0468084ce73bea153b6bca4b0c199d2fbee381457fe27bcf7a3c", "ref_doc_id": "5e9cb56a9b8e0e66898c159919cb2b899d09bcd8"}, "a244e969-03d8-4ee1-9df9-9a01960b7719": {"doc_hash": "7b6ff08b79412fd76eaedaaa9c9ef5342657d776ede342444d1ea716e1878bc1", "ref_doc_id": "5e9cb56a9b8e0e66898c159919cb2b899d09bcd8"}, "63225a43-ab80-4a26-b81e-97e688ed300e": {"doc_hash": "008170a07bc953b8269935d010192d2ac844ba8faa5b6477cfab1575928987b6", "ref_doc_id": "48d8bc88662c0d4251d17fe4e2e392a573be343e"}, "1c54bcff-dbc4-44c1-9618-f7d22a755a83": {"doc_hash": "a1a46af6d66905c53868565738c4d400e75baed88342f5162e12508e49fd3d59", "ref_doc_id": "48d8bc88662c0d4251d17fe4e2e392a573be343e"}, "9d10228c-1c47-4862-a07b-40b9d6bd8374": {"doc_hash": "1db68727bbd131b8ebfd33ca957d302ca6d5f5a78fefb6d355ef009b38a51099", "ref_doc_id": "c7216e92174294615d4325b5a003e51c4d62529f"}, "177bad4e-8a58-4ca9-9e41-a02d462832d7": {"doc_hash": "1135bda252d591963c9d50c79e90b0f22fc15f69461e32e28bacaadbfbef2c72", "ref_doc_id": "c7216e92174294615d4325b5a003e51c4d62529f"}, "dc3dac88-d71d-4db1-a44a-3efc3f8f4404": {"doc_hash": "450c2d7176eeb5ad638b3cde6e4654fbb51f7a6fbc36d69cba770a1d29c05651", "ref_doc_id": "d47dd17a08ec9bacb03abc2221742a74ffa2eab0"}, "744024c0-006e-449f-bf33-98e572287121": {"doc_hash": "05d28318e02a0070b45f4358713fe98dac884980e2e943fb0e4e52e532b3a12d", "ref_doc_id": "d47dd17a08ec9bacb03abc2221742a74ffa2eab0"}, "05b9c81c-16de-4360-a9f2-928ff883b45f": {"doc_hash": "d9ed16dce8c295a3d20254de8ef333ecb98ef61cdc4f867613d86a55577278b1", "ref_doc_id": "d47dd17a08ec9bacb03abc2221742a74ffa2eab0"}, "613ab669-7265-411e-a817-0af805180706": {"doc_hash": "ea8a7f8568e5666b0eb38a07b0bd4495c1109936d9900236d62ab547dfc9d8fb", "ref_doc_id": "d47dd17a08ec9bacb03abc2221742a74ffa2eab0"}, "a0ffcebb-18c6-449c-9830-13650df90817": {"doc_hash": "21549a905d7fb84efda8ca17fc2b1152a59d17b2258720ab157c7f13ec619dfb", "ref_doc_id": "d47dd17a08ec9bacb03abc2221742a74ffa2eab0"}, "1dca59c3-a2a4-4941-a0f0-a7b7e088183e": {"doc_hash": "57c7db919d1b38b75b79f912950b81d42ae436865a504c2caf54919a99d6540f", "ref_doc_id": "d47dd17a08ec9bacb03abc2221742a74ffa2eab0"}, "e7fa0cfb-9e0d-4b2b-b1e1-1bc0d70d8d0c": {"doc_hash": "5eba9ce95d89c2fd4697ba13b82a02b3c7042f11862ce9f3369417d95fc06efb", "ref_doc_id": "d47dd17a08ec9bacb03abc2221742a74ffa2eab0"}, "ae5b810c-374b-4e8a-8401-a6e7059e6eed": {"doc_hash": "13cde5c1e5056d12b7d0d42df8efb6d57f6361a53f02d9262747e4297101eeaa", "ref_doc_id": "670bb4ffa78ce830eab4537488114925a8414caa"}, "3f0d4574-c426-487e-9e80-f8e47e48f95c": {"doc_hash": "15aa73f583e65cac8b2c60be7f4205f9b66e47b6ab0624f648cf2b246224b8d4", "ref_doc_id": "670bb4ffa78ce830eab4537488114925a8414caa"}, "94cbae46-db87-492e-b62c-5588f9c4e905": {"doc_hash": "7f5a44392d4a6ecf8c49f47900d8a06a84d9535fc9c72e10842045de238e2ba7", "ref_doc_id": "fb3c0a397534b5ec9ac0e5031dff6f1070126dce"}, "83e2ab3d-0b5a-4e28-bec2-9c7e20ccee55": {"doc_hash": "a9d854e7d1c4840630242b3735c6eb485fb8f4c05909e7630f01d971e7db188a", "ref_doc_id": "f4ec0c5331090c62666eea03fcc90424707fac89"}, "6a316e71-b6f6-4dcc-be46-84f5bd978160": {"doc_hash": "2d0367ced1c3824debc397be96f08cf2a3cb84cfd0d1414d45f54a4872834dbf", "ref_doc_id": "6cff944ddb431c5df8bfc5f82151f3b3d28245d5"}, "2c352522-ea53-43cd-9ac3-2c83290e14cb": {"doc_hash": "f3304770792ab259db2063025f52fbe9d850fdab14af2a17e82fdfa5196b30b5", "ref_doc_id": "6cff944ddb431c5df8bfc5f82151f3b3d28245d5"}, "8b617041-69ca-4e62-b4b5-35c2fc6204de": {"doc_hash": "8354476c1a9ec427c8b5d3f011d486cf17d93ce768171aaa368e9e12791fff55", "ref_doc_id": "3f76cf31b9c61617e8bf72feafc551e8e5b9375c"}, "6563b7a0-11fa-4014-a9b8-4b94d03a8574": {"doc_hash": "7bea5b1388318c9c24c2351976eebe1e8505e63818137f56b9446baca102dc52", "ref_doc_id": "3f76cf31b9c61617e8bf72feafc551e8e5b9375c"}, "02188bf4-cb7f-4cbf-be60-1631b8bc92f2": {"doc_hash": "0a7fb38f2a8f5166899a037ac65a6b24dd00e2445b6bc0098432042925ca177e", "ref_doc_id": "01b422dcfa458f449eced403b14fa2684b165902"}, "843fda7f-5785-4422-a8df-4cb3ac522a43": {"doc_hash": "30e3ce02c526abba212bb1d038ef85ba8bfe6d667fe58df983112c45609c5dc9", "ref_doc_id": "218a84150c94facf9cd66235521de0a2a631e210"}, "d3a54cc4-398d-402f-af80-a4ca3928333f": {"doc_hash": "bfd6ac8fc6306c1cf5f49d0220de5b390c27098a5c054d854400c0a0cc5ec626", "ref_doc_id": "218a84150c94facf9cd66235521de0a2a631e210"}, "53edab88-f23a-43c5-aa2a-98223f8a893e": {"doc_hash": "adbab8c2e1ab6640e925ef80319347b177ffe427b2b1b9acceffc6aab4689554", "ref_doc_id": "5ed2043a4b6f51480cb63704de79fb1cabb9637d"}, "dfa16c86-b9a4-4c67-b725-2d1c7319be73": {"doc_hash": "8acc491cd6645a9681fd38a3623e3e7c973870c002df278d2a905fa2e1cda283", "ref_doc_id": "5ed2043a4b6f51480cb63704de79fb1cabb9637d"}, "316a9b85-0bcc-4231-85af-b613b3764b5a": {"doc_hash": "d6de7b67be02d1d495be89b27c1093e8da59196b98cc3b2322d679e89f5be022", "ref_doc_id": "5ed2043a4b6f51480cb63704de79fb1cabb9637d"}, "b6f3af2e-c751-4dbe-b20d-48e8e58d6c04": {"doc_hash": "10f8f48ec0cc6770402973e2773472065f25ee07d7188835758e8f5a288fbcfa", "ref_doc_id": "5ed2043a4b6f51480cb63704de79fb1cabb9637d"}, "a5b2e6f3-db62-4fa5-a29b-141484305aa7": {"doc_hash": "1812cb21ffe9fe3beba1773da94913b717255edfa87a941dbc24ff8bae7172e0", "ref_doc_id": "5ed2043a4b6f51480cb63704de79fb1cabb9637d"}, "2dcbe754-7673-48c4-b9c8-e77d88c3ab17": {"doc_hash": "df2961a5b0ca7f60569a5875da69bc9c13db56b11b6fd6d2927304e00dcade36", "ref_doc_id": "5ed2043a4b6f51480cb63704de79fb1cabb9637d"}, "6a3f2cee-29b7-41ca-90ef-6277cbc662da": {"doc_hash": "b1061b95fa75a920567b92f43b8386f7990ac6d9e92fc85f26c843970109b9dc", "ref_doc_id": "5ed2043a4b6f51480cb63704de79fb1cabb9637d"}, "a217655e-bb28-4194-9b11-9cab21e80bdb": {"doc_hash": "ad29c39156b6ec5af9f82190886110da771fae7cd21b23d54bfc0718a626e286", "ref_doc_id": "5ed2043a4b6f51480cb63704de79fb1cabb9637d"}, "c718d2e7-cddf-4bb8-85bc-50f5614a5ad9": {"doc_hash": "1d1b7dc7991addb77d62f76b6e219630114b48320c14488ab697445d2c4b33cb", "ref_doc_id": "392335ad98d7cccc885f7f45f27c4826cca2c705"}, "81af03f8-e144-4637-ad19-e09c080b3ad4": {"doc_hash": "5ad7ff8bf75cc8050723506069943aaffa49caf1ece901fe2f6060bf73b0052a", "ref_doc_id": "392335ad98d7cccc885f7f45f27c4826cca2c705"}, "ca0c3725-6fb1-4871-922a-a1d134b7c5e3": {"doc_hash": "8f1612bdbae7ca1fa645a57631d4a043978fdf6620f631ea443427a0850b499c", "ref_doc_id": "b1c032053e04b7312e49f60639ed7a2f6b6ded0b"}, "908dd528-6112-464a-baf8-1cd58d687991": {"doc_hash": "7f605dfcf05f49248c558179959cb50b4063cfa5a9b6782570ba0d493336cc9f", "ref_doc_id": "6a55dfb00de3b6929546cf3793750e90e5f09796"}, "752d2aef-8845-4f97-9b69-8f0e638fb5a8": {"doc_hash": "6c808fcff08259e2c035cb6aae0d2abbd2793704badfb0c262a36430e405ab93", "ref_doc_id": "6a55dfb00de3b6929546cf3793750e90e5f09796"}, "70856120-303d-4b4b-83ab-7269c4f82c8c": {"doc_hash": "bbe779dc8155098044f0456cbfa39e2a957315e3001051d3d87481adb6a9964a", "ref_doc_id": "b7526e5c7342e1ca6e15d1798972fa00b44a426c"}, "e803dc4f-bc31-4a7a-97f8-90adc5c8ffbe": {"doc_hash": "a71ad692bb688a43cd4c74d801bdf080d63d71469cea03bed6143d1c026a664b", "ref_doc_id": "b7526e5c7342e1ca6e15d1798972fa00b44a426c"}, "0621ff87-e480-4202-8e67-ddf4af6e1134": {"doc_hash": "651eb733daf35818233868a8ec5f403bdd0448e027dac00e2b6af4f858adae49", "ref_doc_id": "b7526e5c7342e1ca6e15d1798972fa00b44a426c"}, "02169094-94b7-4427-bcb6-e46d7cd95860": {"doc_hash": "9b0e4eb270028fa4e9715678d2aa44b2f1a3a01ca66f21c37bb3dd6aa335d604", "ref_doc_id": "65bcc09e9e8f95ae59563202c64ce30b97973643"}, "dcb3b9eb-94a2-4236-b1d0-41a2867f49d5": {"doc_hash": "18d534d1da7a919d8e2a2b8066a9874800625bdf93785fdd64c27b0f2e666262", "ref_doc_id": "65bcc09e9e8f95ae59563202c64ce30b97973643"}, "2dd01795-2f13-4865-9a5f-e5b890cfd0ce": {"doc_hash": "4c9dbcfa36cf59bd65cfa6f03e8074d2b758ef6f07f71bd4c7305ee86e0a5b0e", "ref_doc_id": "65bcc09e9e8f95ae59563202c64ce30b97973643"}, "19430ad6-30f9-46df-878f-41fca43e8c0c": {"doc_hash": "592cd2d121f887844a20ca1fb86bc7eb910855e80ce6e9bb5c069874ebe2fa7f", "ref_doc_id": "ebf805912e099357eb1bbd21e260e81e6f7803bc"}, "2f3d1abe-04db-415f-99ce-afd0b8f4a13e": {"doc_hash": "a59f87b0be0e6da6453a02ea08dd215e1f5c0554829e51cdb408a726e221d28e", "ref_doc_id": "84cf76450fe88c644e4ad1523e075de6e349b53c"}, "4b665a26-61f5-40a2-b9d3-9767296237b5": {"doc_hash": "9c1a1f3531496dbc5391b34fa3c709904dabe3e3769e544ab682f9f54056109a", "ref_doc_id": "d674fa59b61343b1f6e8b2c0c42cbbc53b3760c0"}, "caa7e459-5275-4b06-9373-4af532ebf556": {"doc_hash": "d5f8a8587abc0a66de53d1216bd43160e77a79b94181ca1f351520c9d1478779", "ref_doc_id": "6eeccf7020b8bebb94acfdc39863b2dfcd7c8b67"}, "29d6b0fe-a952-47d6-a70b-e403597ca93c": {"doc_hash": "c2fa510586d5fd273ec0e0e7f13e25f1729737a438f068a9d4379081546677fb", "ref_doc_id": "6eeccf7020b8bebb94acfdc39863b2dfcd7c8b67"}, "c68b33fa-5f87-41d2-a639-5c2fe8c9092e": {"doc_hash": "4b8cc38f50819a1d7f1eb9c6579d6f3cfe0c18d96e709acf10a07cb1b4e77884", "ref_doc_id": "6eeccf7020b8bebb94acfdc39863b2dfcd7c8b67"}, "d4dc1c9b-731b-438c-ac3a-0990fd5ea0bb": {"doc_hash": "676521950518c739160a398917a066d52025c6af70eb0b55d66fe8a38cf7d085", "ref_doc_id": "0e92971a1c24f7e81c639249a5499ada925ba03d"}, "c8d39dd2-b918-41ef-b38a-646d5bd3efa9": {"doc_hash": "bb4ed1aa39cf15f62c018d4dd0421952ce0ae8ace1cda628a8f67c67651d34b9", "ref_doc_id": "62c8c0b0485d3a46bbd171ed8debf0d0d7ab4d26"}, "45fa5b7a-75c1-4ab2-8735-45322758d514": {"doc_hash": "39842563ea07d2c687ed8829431baea28a26a2d8a4cef98766469a8d576610c7", "ref_doc_id": "a2530f2cd25e1a893b2e645af738fb3872fafe65"}}, "docstore/data": {"1de01b7d-b0e6-470f-a8f7-111c770c67da": {"__data__": {"text": "target/\ndbt_modules/\n# newer versions of dbt use this directory instead of dbt_modules for test dependencies\ndbt_packages/\nlogs/\n\n.venv/\n.python-version\n\n# Visual Studio Code files\n*/.vscode\n*.code-workspace\n.history/\n**/.DS_Store\n.vscode/\n.env\n.DS_Store\n.user.yml", "doc_id": "1de01b7d-b0e6-470f-a8f7-111c770c67da", "embedding": null, "doc_hash": "8cf8e7327ad0415b3334ad155c3fb8f948d3a4f831a27fc34ca7fb0c45513d6e", "extra_info": {"file_path": ".gitignore", "file_name": ".gitignore"}, "node_info": {"start": 0, "end": 264, "_node_type": "1"}, "relationships": {"1": "e7f63fa6f050dc095adaa719f3792b2faaed3d25"}}, "__type__": "1"}, "1378ae9a-1ffe-44a8-af81-433bd3000c7a": {"__data__": {"text": "MIT License\n\nCopyright (c) 2022 Flipside Crypto\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n", "doc_id": "1378ae9a-1ffe-44a8-af81-433bd3000c7a", "embedding": null, "doc_hash": "734fd4b19604bb3235f58841c5ef5dd1e6107fadbef47ff66dcf7bc3f93e0a85", "extra_info": {"file_path": "LICENSE", "file_name": "LICENSE"}, "node_info": {"start": 0, "end": 1072, "_node_type": "1"}, "relationships": {"1": "3fa642b53b49b91eba6c77cbfdec5bc123c12000"}}, "__type__": "1"}, "e1606499-953f-4a5d-9982-6fd4d7d36baf": {"__data__": {"text": "## Profile Set Up\n\n#### Use the following within profiles.yml \n----\n\n```yml\nosmosis:\n  target: dev\n  outputs:\n    dev:\n      type: snowflake\n      account: <ACCOUNT>\n      role: <ROLE>\n      user: <USERNAME>\n      password: <PASSWORD>\n      region: <REGION>\n      database: OSMOSIS_DEV\n      warehouse: <WAREHOUSE>\n      schema: silver\n      threads: 4\n      client_session_keep_alive: False\n      query_tag: <TAG>\n```\n\n### Resources:\n- Learn more about dbt [in the docs](https://docs.getdbt.com/docs/introduction)\n- Check out [Discourse](https://discourse.getdbt.com/) for commonly asked questions and answers\n- Join the [chat](https://community.getdbt.com/) on Slack for live discussions and support\n- Find [dbt events](https://events.getdbt.com) near you\n- Check out [the blog](https://blog.getdbt.com/) for the latest news on dbt's development and best practices\n\n- Check out [the blog](https://blog.getdbt.com/) for the latest news on dbt's development and best practices\n\n## Applying Model Tags\n\n### Database / Schema level tags\n\nDatabase and schema tags are applied via the `add_database_or_schema_tags` macro.  These tags are inherited by their downstream objects.  To add/modify tags call the appropriate tag set function within the macro.\n\n```\n{{ set_database_tag_value('SOME_DATABASE_TAG_KEY','SOME_DATABASE_TAG_VALUE') }}\n{{ set_schema_tag_value('SOME_SCHEMA_TAG_KEY','SOME_SCHEMA_TAG_VALUE') }}\n```\n\n### Model tags\n\nTo add/update a model's snowflake tags, add/modify the `meta` model property under `config`.  Only table level tags are supported at this time via DBT.\n\n```\n{{ config(\n    ...,\n    meta={\n        'database_tags':{\n            'table': {\n                'PURPOSE': 'SOME_PURPOSE'\n            }\n        }\n    },\n    ...\n) }}\n```\n\nBy default, model tags are not pushed to snowflake on each load.  You can push a tag update for a model by specifying the `UPDATE_SNOWFLAKE_TAGS` project variable during a run.\n\n```\ndbt run --var '{\"UPDATE_SNOWFLAKE_TAGS\":True}' -s models/core/core__fact_swaps.sql\n```\n\n### Querying for existing tags on a model in snowflake\n\n```\nselect *\nfrom table(solana.information_schema.tag_references('solana.core.fact_blocks', 'table'));\n```", "doc_id": "e1606499-953f-4a5d-9982-6fd4d7d36baf", "embedding": null, "doc_hash": "e81d93bca8bf731d241e60813474a16d3045adba9bd786233419c9717d90ae3d", "extra_info": {"file_path": "README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 2189, "_node_type": "1"}, "relationships": {"1": "5ec9918441fa2e6396702e48418567825cd559da"}}, "__type__": "1"}, "6e5975e9-3e2b-44bb-a2f1-029b40e96849": {"__data__": {"text": "# Name your project! Project names should contain only lowercase characters\n# and underscores. A good package name should reflect your organization's\n# name or the intended use of these models\nname: \"osmosis_models\"\nversion: \"1.0.0\"\nconfig-version: 2\n\nrequire-dbt-version: \">=1.4.0\"\n\n# This setting configures which \"profile\" dbt uses for this project.\nprofile: \"osmosis\"\n\n# These configurations specify where dbt should look for different types of files.\n# The `model-paths` config, for example, states that models in this project can be\n# found in the \"models/\" directory. You probably won't need to change these!\nmodel-paths: [\"models\"]\nanalysis-paths: [\"analysis\"]\ntest-paths: [\"tests\"]\nseed-paths: [\"data\"]\nmacro-paths: [\"macros\"]\nsnapshot-paths: [\"snapshots\"]\n\ntarget-path: \"target\" # directory which will store compiled SQL files\nclean-targets: # directories to be removed by `dbt clean`\n  - \"target\"\n  - \"dbt_modules\"\n  - \"dbt_packages\"\n\n# Configuring models\n# Full documentation: https://docs.getdbt.com/docs/configuring-models\n\n# In this example config, we tell dbt to build all models in the example/ directory\n# as tables. These settings can be overridden in the individual model files\n# using the `{{ config(...) }}` macro.\nmodels:\n  +copy_grants: true\n  +persist_docs:\n    relation: true\n    columns: true\n  +on_schema_change: \"append_new_columns\"\n\nvars:\n  \"dbt_date:time_zone\": GMT\n  \"UPDATE_SNOWFLAKE_TAGS\": TRUE\n\ntests:\n  +store_failures: true # all tests\n\non-run-start:\n  - '{{create_sps()}}'\n  - '{{create_udfs()}}'\n  - '{{sp_bulk_get_asset_metadata()}}'\n  - '{{sp_create_bulk_get_balances()}}'\n  - '{{sp_create_bulk_get_validator_metadata()}}'\n  - '{{sp_create_bulk_get_pool_balances()}}'\n\non-run-end:\n  - '{{ apply_meta_as_tags(results) }}'", "doc_id": "6e5975e9-3e2b-44bb-a2f1-029b40e96849", "embedding": null, "doc_hash": "aa6f79b8af82e68bd4755b677026086a46eaf1427930487d4f9a40f355132222", "extra_info": {"file_path": "dbt_project.yml", "file_name": "dbt_project.yml"}, "node_info": {"start": 0, "end": 1761, "_node_type": "1"}, "relationships": {"1": "1e04f880edfe9b5940366a63b2343d414e56b139"}}, "__type__": "1"}, "850492e1-6f34-4811-b7cc-948ddaf7e491": {"__data__": {"text": "{{ config (\n    materialized = 'view'\n) }}\n\nSELECT\n    *\nFROM\n    {{ source(\n        'bronze_streamline',\n        'asset_metadata_api'\n    ) }}\n", "doc_id": "850492e1-6f34-4811-b7cc-948ddaf7e491", "embedding": null, "doc_hash": "ed218d29ee85c110861db0cb65f610184a44654df4668a0e855ec8e2e8f9546e", "extra_info": {"file_path": "models/bronze/bronze__asset_metadata_api.sql", "file_name": "bronze__asset_metadata_api.sql"}, "node_info": {"start": 0, "end": 144, "_node_type": "1"}, "relationships": {"1": "7df7a9982e2375296669892471311416b6af61de"}}, "__type__": "1"}, "15e150ae-dd14-471d-bda3-0af6a9e23c24": {"__data__": {"text": "{{ config (\n    materialized = 'view'\n) }}\n\nSELECT\n    *\nFROM\n    {{ source(\n        'bronze_streamline',\n        'balances_api'\n    ) }}\n", "doc_id": "15e150ae-dd14-471d-bda3-0af6a9e23c24", "embedding": null, "doc_hash": "7db4827f264aee27ce5f1e22e756b887eb398eef13a7edb69292e52062ed0f8e", "extra_info": {"file_path": "models/bronze/bronze__balances_api.sql", "file_name": "bronze__balances_api.sql"}, "node_info": {"start": 0, "end": 138, "_node_type": "1"}, "relationships": {"1": "ccc378509495b4e3421062fa2e472bd1623d1d25"}}, "__type__": "1"}, "c12e2d7a-6c92-4630-b17f-9a74eac3425b": {"__data__": {"text": "{{ config (\n    materialized = 'view'\n) }}\n\nSELECT \n  record_id, \n  offset_id,\n  block_id,\n  block_timestamp, \n  network, \n  chain_id, \n  tx_count, \n  header, \n  ingested_at,\n  _inserted_timestamp\nFROM \n  {{ source(\n    'prod',\n    'osmosis_blocks'\n  ) }} ", "doc_id": "c12e2d7a-6c92-4630-b17f-9a74eac3425b", "embedding": null, "doc_hash": "67cc92e8bc7d2e61f71ad2538d6da120e63c6cbeb5ec9845fbe3c5d2ba143300", "extra_info": {"file_path": "models/bronze/bronze__blocks.sql", "file_name": "bronze__blocks.sql"}, "node_info": {"start": 0, "end": 256, "_node_type": "1"}, "relationships": {"1": "9ace3fc92367687a26b680d61659929f2ff8ae01"}}, "__type__": "1"}, "d59e23fa-5c3c-4606-9fb0-3401b92f5550": {"__data__": {"text": "{{ config (\n    materialized = 'view'\n) }}\n\nSELECT\n    *\nFROM\n    {{ source(\n        'bronze_streamline',\n        'pool_balances_api'\n    ) }}\n", "doc_id": "d59e23fa-5c3c-4606-9fb0-3401b92f5550", "embedding": null, "doc_hash": "9ea2837fd7de6b532b9df3e2a4898bb94be264b45a2962a2c06a25cab094476c", "extra_info": {"file_path": "models/bronze/bronze__pool_balances_api.sql", "file_name": "bronze__pool_balances_api.sql"}, "node_info": {"start": 0, "end": 143, "_node_type": "1"}, "relationships": {"1": "4bb7996d0648e76f59df4267cb157821d1464797"}}, "__type__": "1"}, "bdb65248-6ba4-444a-86f2-741df4faf90e": {"__data__": {"text": "{{ config (\n    materialized = 'view'\n) }}\n\nSELECT\n  record_id, \n  tx_id, \n  tx_block_index, \n  offset_id, \n  block_id, \n  block_timestamp, \n  network, \n  chain_id, \n  tx, \n  ingested_at,\n  _inserted_timestamp\nFROM \n  {{ source(\n    'prod',\n    'osmosis_txs'\n  ) }} \n    ", "doc_id": "bdb65248-6ba4-444a-86f2-741df4faf90e", "embedding": null, "doc_hash": "2eb6c9241deef06e74c42c39160faaeef8c71ada8fcfa0c7a1aa9c9c09127c28", "extra_info": {"file_path": "models/bronze/bronze__transactions.sql", "file_name": "bronze__transactions.sql"}, "node_info": {"start": 0, "end": 271, "_node_type": "1"}, "relationships": {"1": "fa9a013a0138f9c34c0fd58a3ee2e27e98dbef1c"}}, "__type__": "1"}, "445e7d86-eeb3-4bbc-8150-e646522b6c6b": {"__data__": {"text": "{{ config(\n  materialized = 'incremental',\n  unique_key = \"proposal_id\",\n  incremental_strategy = 'delete+insert',\n  full_refresh = false\n) }}\n\nWITH valid_props AS (\n\n  SELECT\n    A.proposal_id,\n    MAX(\n      A._inserted_timestamp\n    ) AS _inserted_timestamp\n  FROM\n    {{ ref('silver__governance_votes') }} A\n    JOIN {{ ref('silver__governance_submit_proposal') }}\n    b\n    ON A.proposal_id = b.proposal_id\n  GROUP BY\n    A.proposal_id\n),\nbase AS (\n  SELECT\n    proposal_id\n  FROM\n    valid_props\n  WHERE\n    _inserted_timestamp :: DATE > CURRENT_DATE -3\n  UNION\n  SELECT\n    proposal_id\n  FROM\n    (\n      SELECT\n        proposal_id\n      FROM\n        valid_props\n\n{% if is_incremental() %}\nEXCEPT\nSELECT\n  proposal_id\nFROM\n  {{ this }}\n{% endif %}\n)\nORDER BY\n  1\n),\ncall AS (\n  SELECT\n    top 50 ethereum.streamline.udf_api(\n      'GET',\n      'https://api.kube-uw2.keplr-prod.manythings.xyz/v2/validator/proposal/memos?proposalId=' || proposal_id :: STRING || '&chainId=osmosis-1&filter=latest',{},{ 'proposal_id' :proposal_id }\n    ) AS resp,\n    proposal_id,\n    SYSDATE() AS _inserted_timestamp\n  FROM\n    base\n)\nSELECT\n  proposal_id,\n  resp,\n  _inserted_timestamp\nFROM\n  call\n", "doc_id": "445e7d86-eeb3-4bbc-8150-e646522b6c6b", "embedding": null, "doc_hash": "6bb0557695f9f42081e96f9c7bc641461b770f667876634624cb011636a9da04", "extra_info": {"file_path": "models/bronze/bronze_api/bronze_api__validator_memos.sql", "file_name": "bronze_api__validator_memos.sql"}, "node_info": {"start": 0, "end": 1188, "_node_type": "1"}, "relationships": {"1": "db508da309e65d5c543710329e858a69add618e5"}}, "__type__": "1"}, "af2f5d0a-0e71-42b7-812a-78cc4312c5ec": {"__data__": {"text": "{% docs __overview__ %}\n\n# Welcome to the Flipside Crypto Osmosis Models Documentation\n\n## **What does this documentation cover?**\nThe documentation included here details the design of the Osmosis\n tables and views available via [Flipside Crypto.](https://flipsidecrypto.xyz/) For more information on how these models are built, please see [the github repository.](https://github.com/flipsideCrypto/osmosis-models/)\n\n## **How do I use these docs?**\nThe easiest way to navigate this documentation is to use the Quick Links below. These links will take you to the documentation for each table, which contains a description, a list of the columns, and other helpful information.\n\nIf you are experienced with dbt docs, feel free to use the sidebar to navigate the documentation, as well as explore the relationships between tables and the logic building them.\n\nThere is more information on how to use dbt docs in the last section of this document.\n\n## **Quick Links to Table Documentation**\n\n**Click on the links below to jump to the documentation for each schema.**\n\n### Core Tables (`OSMOSIS`.`CORE`.`<table_name>`)\n\n**Dimension Tables:**\n- [dim_labels](#!/model/model.osmosis_models.core__dim_labels)\n- [dim_liquidity_pools](#!/model/model.osmosis_models.core__dim_liquidity_pools)\n- [dim_prices ](#!/model/model.osmosis_models.core__dim_prices)\n- [dim_tokens](#!/model/model.osmosis_models.core__dim_tokens)\n- [dim_dim_vote_options](#!/model/model.osmosis_models.core__dim_vote_options)\n\n**Fact Tables:**\n- [fact_airdrop](#!/model/model.osmosis.core__fact_airdrop)\n- [fact_blocks](#!/model/model.osmosis.core__fact_blocks)\n- [fact_daily_balances](#!/model/model.osmosis.core__fact_daily_balances)\n- [fact_governance_proposal_deposits](#!/model/model.osmosis.core__fact_governance_proposal_deposits)\n- [fact_governance_submit_proposal](#!/model/model.osmosis.core__fact_governance_submit_proposal)\n- [fact_governance_validator_votes](#!/model/model.osmosis.core__fact_governance_validator_votes)\n- [fact_governance_votes](#!/model/model.osmosis.core__fact_governance_votes)\n- [fact_liquidity_provider_actions](#!/model/model.osmosis.core__fact_liquidity_provider_actions)\n- [fact_locked_liquidity_actions](#!/model/model.osmosis.core__fact_locked_liquidity_actions)\n- [fact_msg_attributes](#!/model/model.osmosis.core__fact_msg_attributes)\n- [fact_msgs](#!/model/model.osmosis.core__fact_msgs)\n- [fact_pool_fee_day](#!/model/model.osmosis.core__fact_pool_fee_day)\n- [fact_pool_hour](#!/model/model.osmosis.core__fact_pool_hour)\n- [fact_staking](#!/model/model.osmosis.core__fact_staking)\n- [fact_staking_rewards](#!/model/model.osmosis.core__fact_staking_rewards)\n- [fact_superfluid_staking](#!/model/model.osmosis.core__fact_superfluid_staking)\n- [fact_swaps](#!/model/model.osmosis.core__fact_swaps)\n-", "doc_id": "af2f5d0a-0e71-42b7-812a-78cc4312c5ec", "embedding": null, "doc_hash": "4df4d8ad0339576a5d7202ab139991cdb2c583cefb8dfc203710313547138db3", "extra_info": {"file_path": "models/descriptions/__overview__.md", "file_name": "__overview__.md"}, "node_info": {"start": 0, "end": 2802, "_node_type": "1"}, "relationships": {"1": "3809b9efcab3b6022fd361192616e12fbf84ca8e", "3": "e3e2dfbe-3aca-4aa8-8616-9edf7eacf021"}}, "__type__": "1"}, "e3e2dfbe-3aca-4aa8-8616-9edf7eacf021": {"__data__": {"text": "[fact_token_day](#!/model/model.osmosis.core__fact_token_day)\n- [fact_transactions](#!/model/model.osmosis.core__fact_transactions)\n- [fact_transfers](#!/model/model.osmosis.core__fact_transfers)\n- [fact_validators](#!/model/model.osmosis.core__fact_validators)\n\n\n**Convenience Tables:**\n- [ez_icns](#!/model/model.osmosis.core__ez_icns)\n- [ez_prices](#!/model/model.osmosis.core__ez_prices)\n\n\n## **Data Model Overview**\n\nThe Osmosis models are built a few different ways, but the core fact tables are built using three layers of sql models: **bronze, silver, and gold (or core).**\n\n- Bronze: Data is loaded in from the source as a view\n- Silver: All necessary parsing, filtering, de-duping, and other transformations are done here\n- Gold (or core): Final views and tables that are available publicly\n\nThe dimension tables are sourced from a variety of on-chain and off-chain sources.\n\nConvenience views (denoted ez_) are a combination of different fact and dimension tables. These views are built to make it easier to query the data.\n\n## **Using dbt docs**\n### Navigation\n\nYou can use the ```Project``` and ```Database``` navigation tabs on the left side of the window to explore the models in the project.\n\n### Database Tab\n\nThis view shows relations (tables and views) grouped into database schemas. Note that ephemeral models are *not* shown in this interface, as they do not exist in the database.\n\n### Graph Exploration\n\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the Expand button at the top-right of this lineage pane, you'll be able to see all of the models that are used to build, or are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the ```--models``` and ```--exclude``` model selection syntax to filter the models in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n\n### **More information**\n- [Flipside](https://flipsidecrypto.xyz/)\n- [Velocity](https://app.flipsidecrypto.com/velocity?nav=Discover)\n- [Tutorials](https://docs.flipsidecrypto.com/our-data/tutorials)\n- [Github](https://github.com/FlipsideCrypto/osmosis-models)\n- [What is dbt?](https://docs.getdbt.com/docs/introduction)\n\n{% enddocs %}", "doc_id": "e3e2dfbe-3aca-4aa8-8616-9edf7eacf021", "embedding": null, "doc_hash": "acc6ee72e256f61b308486266e660864d86add710772640976e9d0fd8fe3cca5", "extra_info": {"file_path": "models/descriptions/__overview__.md", "file_name": "__overview__.md"}, "node_info": {"start": 2803, "end": 5298, "_node_type": "1"}, "relationships": {"1": "3809b9efcab3b6022fd361192616e12fbf84ca8e", "2": "af2f5d0a-0e71-42b7-812a-78cc4312c5ec"}}, "__type__": "1"}, "f96d8f49-94f4-401d-a9a8-f46dcf3d9ae6": {"__data__": {"text": "{% docs action %}\n\n<<<<<<< HEAD\nTells what action is happening in the transaction. I.E. is the user adding or removing liquidity to the pool. \n=======\nThe action taken in the msg group. For staking this includes delegate, undelegate, redelegate, withdraw_rewards.\n>>>>>>> main\n\n{% enddocs %}", "doc_id": "f96d8f49-94f4-401d-a9a8-f46dcf3d9ae6", "embedding": null, "doc_hash": "b2c6d948223d4b5a52ada1c5fe41b3a54ca1ee351e5f2d3866a6ada6df846e75", "extra_info": {"file_path": "models/descriptions/action.md", "file_name": "action.md"}, "node_info": {"start": 0, "end": 291, "_node_type": "1"}, "relationships": {"1": "1d33f3e215517ff3c30bd45c62cc4f67d18655c9"}}, "__type__": "1"}, "e75825da-d6a2-4988-b615-acc1cd9fe76c": {"__data__": {"text": "{% docs address %}\n\nAddress unique to an individual wallet, validator, or token. \n\n{% enddocs %}", "doc_id": "e75825da-d6a2-4988-b615-acc1cd9fe76c", "embedding": null, "doc_hash": "270ef97df5f078a67f1f8866a1b4ee24457837f09f4aba2603714f499af7e568", "extra_info": {"file_path": "models/descriptions/address.md", "file_name": "address.md"}, "node_info": {"start": 0, "end": 96, "_node_type": "1"}, "relationships": {"1": "36215fe63e07fe2d1a32f489c4f08e6eafbcf692"}}, "__type__": "1"}, "9f162f06-5ff2-459c-a654-31afc0f40aa2": {"__data__": {"text": "{% docs amount %}\n\nThe amount that was used in the transaction message. \n\n{% enddocs %}", "doc_id": "9f162f06-5ff2-459c-a654-31afc0f40aa2", "embedding": null, "doc_hash": "2f92938b7f659f524e78026975df1e2ef12b964afbf5320919bd82be384e35fb", "extra_info": {"file_path": "models/descriptions/amount.md", "file_name": "amount.md"}, "node_info": {"start": 0, "end": 87, "_node_type": "1"}, "relationships": {"1": "1c7f7a0c0dca48387396c6205f8206ad1476dcb0"}}, "__type__": "1"}, "5f7a03f5-df1f-4c3f-81a0-0da667d64777": {"__data__": {"text": "{% docs amount_sent %}\n\nThe amount that the user sent in a transfer. \n\n{% enddocs %}", "doc_id": "5f7a03f5-df1f-4c3f-81a0-0da667d64777", "embedding": null, "doc_hash": "54b06f7730358ff9722f561e583214c8aa5dcf5a54e8cf4c0af168c433c32494", "extra_info": {"file_path": "models/descriptions/amount_sent.md", "file_name": "amount_sent.md"}, "node_info": {"start": 0, "end": 84, "_node_type": "1"}, "relationships": {"1": "b6f363da862e13ca6516708724dbcf3da954a869"}}, "__type__": "1"}, "db13e7bf-47d1-436b-8a2f-0bc58ebf63a3": {"__data__": {"text": "{% docs auth_info %}\n\nThe top level auth information for the transaction\n\n{% enddocs %}", "doc_id": "db13e7bf-47d1-436b-8a2f-0bc58ebf63a3", "embedding": null, "doc_hash": "d4f08b5671e66a1b8d5f6facb1c9043c9e8955b5882bd97bc2e85d84715f5dbe", "extra_info": {"file_path": "models/descriptions/auth_info.md", "file_name": "auth_info.md"}, "node_info": {"start": 0, "end": 87, "_node_type": "1"}, "relationships": {"1": "fe16bbb782dd422cb32fb98838c4eeb2f22835c8"}}, "__type__": "1"}, "d6c6a6c4-e2c8-441a-b7ba-e1fec3b09e6c": {"__data__": {"text": "{% docs block_id %}\n\nThe block height the block was recorded at. \n\n{% enddocs %}", "doc_id": "d6c6a6c4-e2c8-441a-b7ba-e1fec3b09e6c", "embedding": null, "doc_hash": "1442d0dc61db111e67ddbfaea613d326a36d3141e5a59932c7f9ab6a68332576", "extra_info": {"file_path": "models/descriptions/block_id.md", "file_name": "block_id.md"}, "node_info": {"start": 0, "end": 80, "_node_type": "1"}, "relationships": {"1": "95c8389417804ba33ca8fe431158590b9d87576f"}}, "__type__": "1"}, "9c83cbbc-9bb5-49f8-b674-c77f0ca827e6": {"__data__": {"text": "{% docs block_timestamp %}\n\nThe date and time at which the block began.\n\n{% enddocs %}", "doc_id": "9c83cbbc-9bb5-49f8-b674-c77f0ca827e6", "embedding": null, "doc_hash": "e89c3881cd2042f74d3af75890bc1cc068dc79260ec85e0fc5997942aac6be39", "extra_info": {"file_path": "models/descriptions/block_timestamp.md", "file_name": "block_timestamp.md"}, "node_info": {"start": 0, "end": 86, "_node_type": "1"}, "relationships": {"1": "907f6a36c5633585d6259122ece37c2147c9e288"}}, "__type__": "1"}, "a77e0c3a-78a1-405d-8c9a-9ece1c337834": {"__data__": {"text": "{% docs blockchain %}\n\nIn this table, always Osmosis. Used to join to cross-chain tables. This column will deprecate in all tables except core.fact_blocks soon. Please modify your queries to join to the blocks table to use this field. \n\n{% enddocs %}", "doc_id": "a77e0c3a-78a1-405d-8c9a-9ece1c337834", "embedding": null, "doc_hash": "1666bd4e962c266e939a279d4ed8cd09cea8b34d34e5612ee49f42e6b9494f1d", "extra_info": {"file_path": "models/descriptions/blockchain.md", "file_name": "blockchain.md"}, "node_info": {"start": 0, "end": 250, "_node_type": "1"}, "relationships": {"1": "7851d73c3b521493c29ba4a3a9a0f70534cfa9f7"}}, "__type__": "1"}, "7da1b50d-6655-4d4e-bab9-2a86c7ac0009": {"__data__": {"text": "{% docs chain_id %}\n\nThe name and version of the blockchain. This column will deprecate in all tables except core.fact_blocks soon. Please modify your queries to join to the blocks table to use this field. \n\n{% enddocs %}", "doc_id": "7da1b50d-6655-4d4e-bab9-2a86c7ac0009", "embedding": null, "doc_hash": "f33d86b940a2cf1418dae3e060272c3e3f9dc77989339ed0abde71c83027ad62", "extra_info": {"file_path": "models/descriptions/chain_id.md", "file_name": "chain_id.md"}, "node_info": {"start": 0, "end": 221, "_node_type": "1"}, "relationships": {"1": "28221b011fd18f88994bd605ee8abbd56df72ae2"}}, "__type__": "1"}, "9a49cf18-2797-474a-9f34-bd8975123680": {"__data__": {"text": "{% docs codespace %}\n\nNamespace for the code. \n\n{% enddocs %}", "doc_id": "9a49cf18-2797-474a-9f34-bd8975123680", "embedding": null, "doc_hash": "fdb9fa901872df9c2c107124f3f72eb8ef95aad362474dee8273eddd65fc69aa", "extra_info": {"file_path": "models/descriptions/codespace.md", "file_name": "codespace.md"}, "node_info": {"start": 0, "end": 61, "_node_type": "1"}, "relationships": {"1": "7537e19b807bb9abee61cc86ca7555d09265798f"}}, "__type__": "1"}, "ffb3978f-1970-4c11-917a-0237f234cc77": {"__data__": {"text": "{% docs completion_time %}\n\nThe time at which the undelegate or redelegate staking action is completed.\n\n{% enddocs %}", "doc_id": "ffb3978f-1970-4c11-917a-0237f234cc77", "embedding": null, "doc_hash": "1a243759c228750df88cf1bed8f1ef51869b9f586859c21765f3246c2bedd557", "extra_info": {"file_path": "models/descriptions/completion_time.md", "file_name": "completion_time.md"}, "node_info": {"start": 0, "end": 118, "_node_type": "1"}, "relationships": {"1": "83699d08e8a5c15005212b0fb867d8345ed71c5e"}}, "__type__": "1"}, "e9d91aa3-35ce-473e-81c5-aeb5d1da8102": {"__data__": {"text": "{% docs creator %}\n\nName of the label creator - for now, this will always be \"Flipside.\" \n\n{% enddocs %}", "doc_id": "e9d91aa3-35ce-473e-81c5-aeb5d1da8102", "embedding": null, "doc_hash": "5b755e970febbbf4386e5b12830b80fc551a36199850a03a5a4a5bf00a70d542", "extra_info": {"file_path": "models/descriptions/creator.md", "file_name": "creator.md"}, "node_info": {"start": 0, "end": 104, "_node_type": "1"}, "relationships": {"1": "ff72c36d4d91ad932f6a6413b6cee495e672e8db"}}, "__type__": "1"}, "8d1a6647-f602-49d6-b365-a8a1f1e66d8b": {"__data__": {"text": "{% docs currency %}\n\nThe currency that was used in the transaction message. \n\n{% enddocs %}", "doc_id": "8d1a6647-f602-49d6-b365-a8a1f1e66d8b", "embedding": null, "doc_hash": "e2d1ca93dea5cf4d7b9547408c60a236afb94f1931e181c46609d3ae8f2c8f35", "extra_info": {"file_path": "models/descriptions/currency.md", "file_name": "currency.md"}, "node_info": {"start": 0, "end": 91, "_node_type": "1"}, "relationships": {"1": "93f03273f4d54b25daf20d455bae5af2868994a1"}}, "__type__": "1"}, "4b809129-b740-411f-8c43-d71b70f42a84": {"__data__": {"text": "{% docs decimal %}\n\nDivide the amount by POW(10, decimal) to get the amount used in the transaction. This value can be NULL, as decimals are hand curated from an outside source and not found on-chain. \n\n{% enddocs %}", "doc_id": "4b809129-b740-411f-8c43-d71b70f42a84", "embedding": null, "doc_hash": "00d76da86ae6162df251e8e570bfc84677a554f17cf6e345b2e5ebfe340b2736", "extra_info": {"file_path": "models/descriptions/decimal.md", "file_name": "decimal.md"}, "node_info": {"start": 0, "end": 216, "_node_type": "1"}, "relationships": {"1": "eb9c154b68cf3399b90adc458e64e4b4b652a983"}}, "__type__": "1"}, "e3abe1fe-bcaf-46dc-bf20-67225fd0a7f9": {"__data__": {"text": "{% docs delegator_address %}\n\nThe wallet address of the individual who owns the delegated asset.\n\n{% enddocs %}", "doc_id": "e3abe1fe-bcaf-46dc-bf20-67225fd0a7f9", "embedding": null, "doc_hash": "e1b9917d0369587d22d4ed194c9445bd3333ff1a6995d4f54515b87cf7d6241f", "extra_info": {"file_path": "models/descriptions/delegator_address.md", "file_name": "delegator_address.md"}, "node_info": {"start": 0, "end": 111, "_node_type": "1"}, "relationships": {"1": "2f8196e4a9959ad8c745f34c457ee58655531d12"}}, "__type__": "1"}, "7a7965e5-e02e-42fc-9800-61788304336a": {"__data__": {"text": "{% docs depositor %}\n\nThe wallet address of the individual who deposited funds into the proposal. At least 500 OSMO must be deposited into a proposal after it is submitted for it to go to vote. \n\n{% enddocs %}", "doc_id": "7a7965e5-e02e-42fc-9800-61788304336a", "embedding": null, "doc_hash": "2ac73d238ce67c1991102ca3883ab19120c01bf0eb59cca2989f7952ac8fb843", "extra_info": {"file_path": "models/descriptions/depositor.md", "file_name": "depositor.md"}, "node_info": {"start": 0, "end": 209, "_node_type": "1"}, "relationships": {"1": "343e244c93b79aa7265a9f00f521a0d680cbc865"}}, "__type__": "1"}, "6bf68f8b-1a7e-4e50-930b-e7f1922f2b0c": {"__data__": {"text": "{% docs fee %}\n\nThe fee is paid by the initiator of the transaction. Fee = gas * gas price and is given in micro-OSMO. \n\n{% enddocs %}", "doc_id": "6bf68f8b-1a7e-4e50-930b-e7f1922f2b0c", "embedding": null, "doc_hash": "759f174aa891f3fca2005c6c13207ca91d2372743255b0bb3bb1eafdd57a7a17", "extra_info": {"file_path": "models/descriptions/fee.md", "file_name": "fee.md"}, "node_info": {"start": 0, "end": 134, "_node_type": "1"}, "relationships": {"1": "8247bd4181804ae997ab20c8394c18c71cd8c9ba"}}, "__type__": "1"}, "3cbbd207-ec18-4ed6-bedb-d625a9181780": {"__data__": {"text": "{% docs foreign_address %}\n\nThe foreign address of the transfer if exists. This can be an IBC address or other non-IBC address\n\n{% enddocs %}", "doc_id": "3cbbd207-ec18-4ed6-bedb-d625a9181780", "embedding": null, "doc_hash": "de07871df6062ae51c692d76628a505f94b71c914e275c701ccd9603a189cad4", "extra_info": {"file_path": "models/descriptions/foreign_address.md", "file_name": "foreign_address.md"}, "node_info": {"start": 0, "end": 141, "_node_type": "1"}, "relationships": {"1": "810d20dab0e18239fd2c5ff7f242620097fd68f7"}}, "__type__": "1"}, "a2d89f40-c123-4c19-a688-9633683acf3d": {"__data__": {"text": "{% docs foreign_chain %}\n\nThe name of the foreign chain transfer if exists\n\n{% enddocs %}", "doc_id": "a2d89f40-c123-4c19-a688-9633683acf3d", "embedding": null, "doc_hash": "863ee6b8f8733838f972e6bcc610f6cbe8ab5c8917ef15beda0d8837a66006e5", "extra_info": {"file_path": "models/descriptions/foreign_chain.md", "file_name": "foreign_chain.md"}, "node_info": {"start": 0, "end": 89, "_node_type": "1"}, "relationships": {"1": "e029c3ea2b2045326982e60e5b415353e793d224"}}, "__type__": "1"}, "49cdf900-6c11-4b4e-9057-c644c3f2ac27": {"__data__": {"text": "{% docs from_amount %}\n\nThe amount that the user sent to be swapped for another currency. \n\n{% enddocs %}", "doc_id": "49cdf900-6c11-4b4e-9057-c644c3f2ac27", "embedding": null, "doc_hash": "ec7417dc9d0633bb3fd8f976daaa3814570350814207d6df0bed0fc0b43c22f3", "extra_info": {"file_path": "models/descriptions/from_amount.md", "file_name": "from_amount.md"}, "node_info": {"start": 0, "end": 105, "_node_type": "1"}, "relationships": {"1": "9f6f49179d46cd83b6c8779dbd07e81403d767f6"}}, "__type__": "1"}, "608ab711-8949-4170-9f2f-c0f5952740aa": {"__data__": {"text": "{% docs from_currency %}\n\nThe currency that the user sent to be swapped for another currency. \n\n{% enddocs %}", "doc_id": "608ab711-8949-4170-9f2f-c0f5952740aa", "embedding": null, "doc_hash": "1693e97cd21b53a69dda1c92c3482b1596dacf2db44737add29cd39ad9e66c32", "extra_info": {"file_path": "models/descriptions/from_currency.md", "file_name": "from_currency.md"}, "node_info": {"start": 0, "end": 109, "_node_type": "1"}, "relationships": {"1": "7c003a5d2a703c2f02eadc3db93e3693aa8c1275"}}, "__type__": "1"}, "90bb161f-18d8-485d-b4b3-4106e41b1a4e": {"__data__": {"text": "{% docs from_decimal %}\n\nDivide the swap_from_amount by POW(10, swap_from_decimal) to get the amount the user swapped. \n\n{% enddocs %}", "doc_id": "90bb161f-18d8-485d-b4b3-4106e41b1a4e", "embedding": null, "doc_hash": "cd1beabf457455efb6844679adc76ed477f7433ba8f7b5851b8ea76fa87ba0f2", "extra_info": {"file_path": "models/descriptions/from_decimal.md", "file_name": "from_decimal.md"}, "node_info": {"start": 0, "end": 134, "_node_type": "1"}, "relationships": {"1": "f81fc378f51ade673da06bc79c54d51edd5b7577"}}, "__type__": "1"}, "bf35080e-fd47-4df8-ac2a-828c7bb924f8": {"__data__": {"text": "{% docs gas_used %}\n\nThe amount of gas consumed by the transaction. \n\n{% enddocs %}", "doc_id": "bf35080e-fd47-4df8-ac2a-828c7bb924f8", "embedding": null, "doc_hash": "ee09999f00dbde41e02223e9ceb3fd71d89f165c34db7a59fe614d51e6fe5ddc", "extra_info": {"file_path": "models/descriptions/gas_used.md", "file_name": "gas_used.md"}, "node_info": {"start": 0, "end": 83, "_node_type": "1"}, "relationships": {"1": "ae688aeec49233059b8f3416d74804691e5260dc"}}, "__type__": "1"}, "ed02568c-dfd4-443c-8b67-7f019efc4388": {"__data__": {"text": "{% docs gas_wanted %}\n\nAmount of gas requested for a transaction. It is provided by users when the transaction is generated.\n\n{% enddocs %}", "doc_id": "ed02568c-dfd4-443c-8b67-7f019efc4388", "embedding": null, "doc_hash": "a49e617dde92c6755e98853998be9245b4a4c6e31d1c9a7e02ace47bbb951605", "extra_info": {"file_path": "models/descriptions/gas_wanted.md", "file_name": "gas_wanted.md"}, "node_info": {"start": 0, "end": 139, "_node_type": "1"}, "relationships": {"1": "937d08af0717658b08da8be3a4044fb670e6015b"}}, "__type__": "1"}, "d77d0176-c368-47c1-8cc9-cc42455fad53": {"__data__": {"text": "{% docs ingested_at %}\n\nThe time the block was sent to the Flipside database. \n\n{% enddocs %}", "doc_id": "d77d0176-c368-47c1-8cc9-cc42455fad53", "embedding": null, "doc_hash": "3b8cdb678356a66abb6fccbeea9779a51a13840eace42ffd3130d4f5fd515161", "extra_info": {"file_path": "models/descriptions/ingested_at.md", "file_name": "ingested_at.md"}, "node_info": {"start": 0, "end": 93, "_node_type": "1"}, "relationships": {"1": "70fb7e5c2a9297da2d53eeaedf1f553212fd333d"}}, "__type__": "1"}, "1483eec0-d0ba-45c1-b7b5-30c29ffa41b4": {"__data__": {"text": "{% docs inserted_timestamp %}\n\nThe time the block was inserted into to the Flipside database. \n\n{% enddocs %}", "doc_id": "1483eec0-d0ba-45c1-b7b5-30c29ffa41b4", "embedding": null, "doc_hash": "e770f1815f6779edc1c301ebebd17d15ca516c11485e8afeee62e4e2a15c4e32", "extra_info": {"file_path": "models/descriptions/inserted_timestamp.md", "file_name": "inserted_timestamp.md"}, "node_info": {"start": 0, "end": 109, "_node_type": "1"}, "relationships": {"1": "a5c0ccecd174dc7ef0108f323a66d7e13c3c1c9f"}}, "__type__": "1"}, "651e7c06-1c15-4931-9047-f16ba49408ab": {"__data__": {"text": "{% docs is_superfluid %}\n\nThe length of time the LP toke takes to unlock\n\n{% enddocs %}", "doc_id": "651e7c06-1c15-4931-9047-f16ba49408ab", "embedding": null, "doc_hash": "dd5e101cefb6fc2ccc1063848215ddc83ceb216320deeb5a7048833323f69c71", "extra_info": {"file_path": "models/descriptions/is_superfluid.md", "file_name": "is_superfluid.md"}, "node_info": {"start": 0, "end": 87, "_node_type": "1"}, "relationships": {"1": "82e4942aab0685a94b6e249892f04ef1d780faf9"}}, "__type__": "1"}, "ef9336b5-ba2f-4224-b8a5-e9be387d53bf": {"__data__": {"text": "{% docs label %}\n\nThe label or name of the address. \n\n{% enddocs %}", "doc_id": "ef9336b5-ba2f-4224-b8a5-e9be387d53bf", "embedding": null, "doc_hash": "39ed8c737fa63437dcac0ea80c6604b69051b0578ab7ba1942290becc0fa1011", "extra_info": {"file_path": "models/descriptions/label.md", "file_name": "label.md"}, "node_info": {"start": 0, "end": 67, "_node_type": "1"}, "relationships": {"1": "51af3dc77e81e032ff57b71a872b28985bd4b4e2"}}, "__type__": "1"}, "103774d5-57d1-4236-98df-7b81b9e143c0": {"__data__": {"text": "{% docs label_subtype %}\n\nAdds more detail to the label type. \n\n{% enddocs %}", "doc_id": "103774d5-57d1-4236-98df-7b81b9e143c0", "embedding": null, "doc_hash": "fa1f9c17ea57592bd71ee453777ef4abe11740cbeb9242ca7a83c19bb91f96ed", "extra_info": {"file_path": "models/descriptions/label_subtype.md", "file_name": "label_subtype.md"}, "node_info": {"start": 0, "end": 77, "_node_type": "1"}, "relationships": {"1": "113de57513707b1795888ec3d11a7d4b05c731d8"}}, "__type__": "1"}, "6eb204de-2b71-42de-9e6a-b3cfe14b58f8": {"__data__": {"text": "{% docs label_type %}\n\nA broad category that describes what a label is representing. \n\n{% enddocs %}", "doc_id": "6eb204de-2b71-42de-9e6a-b3cfe14b58f8", "embedding": null, "doc_hash": "621193de4bb6379fcbd5917a619868012c97846c7a13bfccb100ac757eba16b2", "extra_info": {"file_path": "models/descriptions/label_type.md", "file_name": "label_type.md"}, "node_info": {"start": 0, "end": 100, "_node_type": "1"}, "relationships": {"1": "c81472b598869651a087cc4f3abe0a90f63b902b"}}, "__type__": "1"}, "7a6970b7-6014-4e53-8c81-e668e72acdff": {"__data__": {"text": "{% docs liquidity_provider_address %}\n\nThe address of user that provided or removed liquidity from the pool.\n\n{% enddocs %}", "doc_id": "7a6970b7-6014-4e53-8c81-e668e72acdff", "embedding": null, "doc_hash": "ab18be8cedfb57460f795f68d5be6b2e89eef355c54184af2823116829722e8f", "extra_info": {"file_path": "models/descriptions/liquidity_provider_address.md", "file_name": "liquidity_provider_address.md"}, "node_info": {"start": 0, "end": 123, "_node_type": "1"}, "relationships": {"1": "42947c1d8e94c65ace667ed3d584ae8ab8cf0586"}}, "__type__": "1"}, "28c53d6a-d900-4c7d-831d-3f86dc3fbdd6": {"__data__": {"text": "{% docs lock_duration %}\n\nThe length of time the LP toke takes to unlock\n\n{% enddocs %}", "doc_id": "28c53d6a-d900-4c7d-831d-3f86dc3fbdd6", "embedding": null, "doc_hash": "af887d62998ca70c12f57c7c9aeaa89f6891b9c02b28dd029a9f89bfa0dfe4cf", "extra_info": {"file_path": "models/descriptions/lock_duration.md", "file_name": "lock_duration.md"}, "node_info": {"start": 0, "end": 87, "_node_type": "1"}, "relationships": {"1": "cca51c2bbe1ce3398a55d12ee03244c7745fafea"}}, "__type__": "1"}, "eb1fa032-e2d9-4355-a3c8-70ead60d311c": {"__data__": {"text": "{% docs lock_id %}\n\nThe unique id related to the specifc address, pool, and lock duration\n\n{% enddocs %}", "doc_id": "eb1fa032-e2d9-4355-a3c8-70ead60d311c", "embedding": null, "doc_hash": "4a59644e999756086ee7576fb795f931a9cc14496ec49681274c9f401e1b4a80", "extra_info": {"file_path": "models/descriptions/lock_id.md", "file_name": "lock_id.md"}, "node_info": {"start": 0, "end": 104, "_node_type": "1"}, "relationships": {"1": "64fabbe7956bade82218af470eb55bb24ea3ad53"}}, "__type__": "1"}, "8ef6ead6-5863-4b5b-a06f-2c663c7b07aa": {"__data__": {"text": "{% docs locker_address %}\n\nThe address of user that performed an action related to locked lp tokens\n\n{% enddocs %}", "doc_id": "8ef6ead6-5863-4b5b-a06f-2c663c7b07aa", "embedding": null, "doc_hash": "e148312c859e8f18cb8afb0b1ea744915064f2c8e3babb10922663e37e11b26a", "extra_info": {"file_path": "models/descriptions/locker_address.md", "file_name": "locker_address.md"}, "node_info": {"start": 0, "end": 114, "_node_type": "1"}, "relationships": {"1": "b1c6c0ea27381ed28684039bc0427915b85acc05"}}, "__type__": "1"}, "627f3cf8-614d-404b-94a9-26752e5bb3ec": {"__data__": {"text": "{% docs memo %}\n\nThe memo the user input into the transaction body\n\n{% enddocs %}", "doc_id": "627f3cf8-614d-404b-94a9-26752e5bb3ec", "embedding": null, "doc_hash": "290b0d88ee09d6623440cb70f427379893546401472515566272de505547772f", "extra_info": {"file_path": "models/descriptions/memo.md", "file_name": "memo.md"}, "node_info": {"start": 0, "end": 81, "_node_type": "1"}, "relationships": {"1": "f371689d965d57ef92c073835e0a7bf3a186e1e8"}}, "__type__": "1"}, "b8a3829a-0059-411a-a506-8887c55850b2": {"__data__": {"text": "{% docs msg_action %}\n\nThe attribute value when the message type = 'mesage' and the attribute key = 'action'\n\n{% enddocs %}", "doc_id": "b8a3829a-0059-411a-a506-8887c55850b2", "embedding": null, "doc_hash": "e808a4d0b525fdd2e32269325a9c2b9b5111205835e60dcf6e909b255644877a", "extra_info": {"file_path": "models/descriptions/msg_action.md", "file_name": "msg_action.md"}, "node_info": {"start": 0, "end": 123, "_node_type": "1"}, "relationships": {"1": "4a310e191fa95fb7c7bcd461c95cecb5fc66c805"}}, "__type__": "1"}, "96e5d505-d1b1-404c-8af1-1e06b3d32036": {"__data__": {"text": "{% docs msg_action_description %}\n\nA user friendly description of what action occured\n\n{% enddocs %}", "doc_id": "96e5d505-d1b1-404c-8af1-1e06b3d32036", "embedding": null, "doc_hash": "44440dc4388999d9cc28af697f7c61a58259069f40cfaaa92a29116c5da2040d", "extra_info": {"file_path": "models/descriptions/msg_action_description.md", "file_name": "msg_action_description.md"}, "node_info": {"start": 0, "end": 100, "_node_type": "1"}, "relationships": {"1": "42f5269c3f8c0ced5fc7242bf5fb15224387cba2"}}, "__type__": "1"}, "d0e7294d-5d25-4fc7-876d-c12ba17c62a7": {"__data__": {"text": "{% docs msg_group %}\n\nValue grouping different messages together to represent a single action. Format will include the numeric msg_group and msg_sub_group with a \":\" seperator. The subgroup will always be 0 except for \"Exec\" actions. NULL group means messages are related to the header (overall transaction)\n\n{% enddocs %}", "doc_id": "d0e7294d-5d25-4fc7-876d-c12ba17c62a7", "embedding": null, "doc_hash": "9909a923a18ca0f16ea89714b2665c7d02f7a357d2c462c159cad2368dbe8687", "extra_info": {"file_path": "models/descriptions/msg_group.md", "file_name": "msg_group.md"}, "node_info": {"start": 0, "end": 322, "_node_type": "1"}, "relationships": {"1": "ef4c5c1675f609e25d0e078696d6c468fb2141cb"}}, "__type__": "1"}, "b88b7cd9-64f8-4033-8dd4-f31042c57ab6": {"__data__": {"text": "{% docs msg_index %}\n\nShort for \"message index,\" the position in which messages occur in a transaction. \n\n{% enddocs %}", "doc_id": "b88b7cd9-64f8-4033-8dd4-f31042c57ab6", "embedding": null, "doc_hash": "cbf1f4560bc3037c899d7a096dd0a8ea23807edd2b630b4e6a3db268ac406655", "extra_info": {"file_path": "models/descriptions/msg_index.md", "file_name": "msg_index.md"}, "node_info": {"start": 0, "end": 119, "_node_type": "1"}, "relationships": {"1": "8af906527bd50e3af4905a8851b952ed787062e7"}}, "__type__": "1"}, "6ea13be4-1bbf-4b9c-acf2-3ec061afd6d9": {"__data__": {"text": "{% docs msg_sub_group %}\n\nSilver only -- Numeric value grouping different messages together to represent a single action within a group. This is relevent for exec actions that contain mutiple underlying actions. NULL sub group means messages are related to the header (overall transaction)\n\n{% enddocs %}", "doc_id": "6ea13be4-1bbf-4b9c-acf2-3ec061afd6d9", "embedding": null, "doc_hash": "2a5fa8777154b76a374e7eeb9a10ec0ca25d9d3ae2cb61da43d4225778310ec1", "extra_info": {"file_path": "models/descriptions/msg_sub_group.md", "file_name": "msg_sub_group.md"}, "node_info": {"start": 0, "end": 304, "_node_type": "1"}, "relationships": {"1": "8b5a36cf3cd554e7a20f1fcf1f3e03409e2157dc"}}, "__type__": "1"}, "0f30f417-95d7-403c-98e4-17053a938170": {"__data__": {"text": "{% docs msg_type %}\n\nA string containing information about the type of message occurring.\n\n{% enddocs %}", "doc_id": "0f30f417-95d7-403c-98e4-17053a938170", "embedding": null, "doc_hash": "d35f37a856b1591730351d90d5b95a3eda78a6a48584d574e6243010b4eb6313", "extra_info": {"file_path": "models/descriptions/msg_type.md", "file_name": "msg_type.md"}, "node_info": {"start": 0, "end": 104, "_node_type": "1"}, "relationships": {"1": "e16302b6f135fdfd0b305c666725a24e3c510d86"}}, "__type__": "1"}, "d45aafdc-3e53-4f24-acf3-2f14d134513d": {"__data__": {"text": "{% docs pool_assets %}\n\nList of 2 or more asset addresses belonging to the pool\n\n{% enddocs %}", "doc_id": "d45aafdc-3e53-4f24-acf3-2f14d134513d", "embedding": null, "doc_hash": "7909e1990c28a6f3f685264890582eb67c509757a9bed3299adb7c43fa369bcf", "extra_info": {"file_path": "models/descriptions/pool_assets.md", "file_name": "pool_assets.md"}, "node_info": {"start": 0, "end": 94, "_node_type": "1"}, "relationships": {"1": "c185e179b980fa797f928fce6e34a2776e89aaa7"}}, "__type__": "1"}, "d92c30d2-e3e7-4e39-bed1-035318ab3fea": {"__data__": {"text": "{% docs pool_id %}\n\nIdentifier for the pool within the module\n\n{% enddocs %}", "doc_id": "d92c30d2-e3e7-4e39-bed1-035318ab3fea", "embedding": null, "doc_hash": "b2d067268cbf3447e5e337ff05b216120318d13f470ef158bcb538d084e2f9ef", "extra_info": {"file_path": "models/descriptions/pool_id.md", "file_name": "pool_id.md"}, "node_info": {"start": 0, "end": 76, "_node_type": "1"}, "relationships": {"1": "8aa92e3f2ba495a4187941fe042a69de51bd6cb4"}}, "__type__": "1"}, "18701f07-69fd-41d7-b4dc-e7c662203aa1": {"__data__": {"text": "{% docs pool_module %}\n\nModule used to create liquidity pool\n\n{% enddocs %}", "doc_id": "18701f07-69fd-41d7-b4dc-e7c662203aa1", "embedding": null, "doc_hash": "ba2fa1eed6d463a55aa49f262aed5d287f5e2ef2e325a2a63623f9d6e3ba23b0", "extra_info": {"file_path": "models/descriptions/pool_module.md", "file_name": "pool_module.md"}, "node_info": {"start": 0, "end": 75, "_node_type": "1"}, "relationships": {"1": "ae8713be4d0038a6be89dfc10e0008de06730cc7"}}, "__type__": "1"}, "5c525a48-1c5f-4ab7-b154-0e6f51877dd1": {"__data__": {"text": "{% docs project_name %}\n\nThe name of the project the label belongs to. \n\n{% enddocs %}", "doc_id": "5c525a48-1c5f-4ab7-b154-0e6f51877dd1", "embedding": null, "doc_hash": "82a880d71d67d6ca242f309307188a1a6741a51a91c2530cb27176cba7784fe0", "extra_info": {"file_path": "models/descriptions/project_name.md", "file_name": "project_name.md"}, "node_info": {"start": 0, "end": 86, "_node_type": "1"}, "relationships": {"1": "a8a553d961602a782977c6750c98ccf9903282ee"}}, "__type__": "1"}, "c08b5aa8-deff-4218-bbcc-ef637cb16d8e": {"__data__": {"text": "{% docs proposal_description %}\n\nThe description or body of the governance proposal. \n\n{% enddocs %}", "doc_id": "c08b5aa8-deff-4218-bbcc-ef637cb16d8e", "embedding": null, "doc_hash": "49e2f4470a34ed0020bde0157a1d6db7eceb849cf2b29d09421b3f59b25ec599", "extra_info": {"file_path": "models/descriptions/proposal_description.md", "file_name": "proposal_description.md"}, "node_info": {"start": 0, "end": 100, "_node_type": "1"}, "relationships": {"1": "5c37c5641eff49c5a4a191dace7378a06cabce28"}}, "__type__": "1"}, "1127e67c-c994-4217-a5c9-2aec827a45c1": {"__data__": {"text": "{% docs proposal_id %}\n\nNumeric ID that corresponds to the proposal. \n\n{% enddocs %}", "doc_id": "1127e67c-c994-4217-a5c9-2aec827a45c1", "embedding": null, "doc_hash": "9b9424ec6b64dda2266824d606b0a629f56f9e1bcc8a59c785f82523748bb863", "extra_info": {"file_path": "models/descriptions/proposal_id.md", "file_name": "proposal_id.md"}, "node_info": {"start": 0, "end": 84, "_node_type": "1"}, "relationships": {"1": "5c355c2b197a6d6f1d228045d7cf5fd22c4f94a1"}}, "__type__": "1"}, "49301054-5819-48e5-b4ea-84a95447559d": {"__data__": {"text": "{% docs proposal_title %}\n\nThe title of the governance proposal that was submitted on-chain. \n\n{% enddocs %}", "doc_id": "49301054-5819-48e5-b4ea-84a95447559d", "embedding": null, "doc_hash": "d4b815c9c47bb60ebc6d45be25e18a75ab9f7b1c57feeff78acdb53d383be9be", "extra_info": {"file_path": "models/descriptions/proposal_title.md", "file_name": "proposal_title.md"}, "node_info": {"start": 0, "end": 108, "_node_type": "1"}, "relationships": {"1": "7c04919922114a91ab3b3676a54e14d39674405a"}}, "__type__": "1"}, "33b159aa-f46a-4527-83b6-6b0d32c23920": {"__data__": {"text": "{% docs proposal_type %}\n\nThe type of proposal that was submitted. \n\n{% enddocs %}", "doc_id": "33b159aa-f46a-4527-83b6-6b0d32c23920", "embedding": null, "doc_hash": "f48d76b589c3392753e5f94cb9de75512e96fb34a67861f846a135907e5800a7", "extra_info": {"file_path": "models/descriptions/proposal_type.md", "file_name": "proposal_type.md"}, "node_info": {"start": 0, "end": 82, "_node_type": "1"}, "relationships": {"1": "73001471479ef3510b12fecf6ca4e881effb7b54"}}, "__type__": "1"}, "1abe18e3-cc92-4d41-873b-a376406b6b33": {"__data__": {"text": "{% docs proposer %}\n\nThe address of the validator that submitted the proposal.\n\n{% enddocs %}", "doc_id": "1abe18e3-cc92-4d41-873b-a376406b6b33", "embedding": null, "doc_hash": "81c71742b56f18fcb70968b8709cac24b8a9f09b67c71dcf93f87f0b9882e029", "extra_info": {"file_path": "models/descriptions/proposer.md", "file_name": "proposer.md"}, "node_info": {"start": 0, "end": 93, "_node_type": "1"}, "relationships": {"1": "8cf193dd47e680c4ef435bf9bd2e6f63eaf6fb8f"}}, "__type__": "1"}, "2d40275b-be14-4ab4-a5cf-ce120df48d28": {"__data__": {"text": "{% docs proposer_address %}\n\nThe address of the validator that proposed the block.\n\n{% enddocs %}", "doc_id": "2d40275b-be14-4ab4-a5cf-ce120df48d28", "embedding": null, "doc_hash": "bc293453bd9a8cc9fab66f9e2320a4906a35fa8187c37268d101bb9558dd244c", "extra_info": {"file_path": "models/descriptions/proposer_address.md", "file_name": "proposer_address.md"}, "node_info": {"start": 0, "end": 97, "_node_type": "1"}, "relationships": {"1": "0dcaa940c746a305f42327f399c838e0246cea41"}}, "__type__": "1"}, "36e7ef64-7d1e-4144-8161-1f681e646718": {"__data__": {"text": "{% docs raw_metadata %}\n\nAdditional details about the validator or token in json format. \n\n{% enddocs %}", "doc_id": "36e7ef64-7d1e-4144-8161-1f681e646718", "embedding": null, "doc_hash": "8bf8bafc9e70a4c297a301067b608c5ec07fcc74072c2f51fd1be32c625b6136", "extra_info": {"file_path": "models/descriptions/raw_metadata.md", "file_name": "raw_metadata.md"}, "node_info": {"start": 0, "end": 104, "_node_type": "1"}, "relationships": {"1": "539e992f59af7bc0a044cc0efdd49c5a3b1ff0f1"}}, "__type__": "1"}, "2d0cd355-ed61-4f73-a5ef-1dbf1e2b6be7": {"__data__": {"text": "{% docs receiver %}\n\nThe wallet address of the individual received tokens in the transfer.\n\n{% enddocs %}", "doc_id": "2d0cd355-ed61-4f73-a5ef-1dbf1e2b6be7", "embedding": null, "doc_hash": "1a2ee06319406647e7d67a87140fbd83377e4f70b3f1d68e49c42c66c0cf6688", "extra_info": {"file_path": "models/descriptions/receiver.md", "file_name": "receiver.md"}, "node_info": {"start": 0, "end": 105, "_node_type": "1"}, "relationships": {"1": "e82f2dad256034703ec7148802baaeb972866360"}}, "__type__": "1"}, "7009e39a-f690-4dd8-9f75-98a19f7140a8": {"__data__": {"text": "{% docs redelegate_source_validator_address %}\n\nThe wallet address of the source alidator in a redelegation staking action.\n\n{% enddocs %}", "doc_id": "7009e39a-f690-4dd8-9f75-98a19f7140a8", "embedding": null, "doc_hash": "6cafc8afa973140bbb234d12b125b90e3477cebbfc025ef6d64fc68ecb510800", "extra_info": {"file_path": "models/descriptions/redelegate_source_validator_address.md", "file_name": "redelegate_source_validator_address.md"}, "node_info": {"start": 0, "end": 138, "_node_type": "1"}, "relationships": {"1": "01c046087add1a88593455e826f6a1ca86c9cf91"}}, "__type__": "1"}, "699b3087-e6b5-43c9-ab20-3805db6a74ec": {"__data__": {"text": "{% docs sender %}\n\nThe wallet address of the individual sent tokens in the transfer.\n\n{% enddocs %}", "doc_id": "699b3087-e6b5-43c9-ab20-3805db6a74ec", "embedding": null, "doc_hash": "14e5d8656248003ad22f0a3af9698c1c4e1f9986abb017d4c0fd3bd7249c290e", "extra_info": {"file_path": "models/descriptions/sender.md", "file_name": "sender.md"}, "node_info": {"start": 0, "end": 99, "_node_type": "1"}, "relationships": {"1": "1b55aab3946d9df9cd4d9bb72d9a9b045ebb8ec8"}}, "__type__": "1"}, "e9939233-79c1-4170-9dc8-6dc625e7a668": {"__data__": {"text": "{% docs silver_msg_group %}\n\nNumeric value grouping different messages together to represent a single action.  NULL group means messages are related to the header (overall transaction)\n\n{% enddocs %}", "doc_id": "e9939233-79c1-4170-9dc8-6dc625e7a668", "embedding": null, "doc_hash": "1a1fa82d3009be5b81e66a7b3612d06ec55a67bc5cc4fcac5e7548e391a835b9", "extra_info": {"file_path": "models/descriptions/silver_msg_group.md", "file_name": "silver_msg_group.md"}, "node_info": {"start": 0, "end": 199, "_node_type": "1"}, "relationships": {"1": "5ab9567c609fdbedb46eb6b4f74298983b06cffe"}}, "__type__": "1"}, "24b614f9-7021-42f1-888f-f5c20163a1e6": {"__data__": {"text": "{% docs to_amount %}\n\nThe amount that the user sent to be swapped for another currency. \n\n{% enddocs %}", "doc_id": "24b614f9-7021-42f1-888f-f5c20163a1e6", "embedding": null, "doc_hash": "24dd6da398c06a21777cac566a366ee5417f4546edc1d6a7388a383e4ce8ca75", "extra_info": {"file_path": "models/descriptions/to_amount.md", "file_name": "to_amount.md"}, "node_info": {"start": 0, "end": 103, "_node_type": "1"}, "relationships": {"1": "42409e3d82bc0aa9593cc6ddde456f5d94f385e6"}}, "__type__": "1"}, "45b13575-12f0-44e9-b987-4a60d89b0001": {"__data__": {"text": "{% docs to_currency %}\n\nThe currency that the user sent to be swapped for another currency. \n\n{% enddocs %}", "doc_id": "45b13575-12f0-44e9-b987-4a60d89b0001", "embedding": null, "doc_hash": "c09281bb32b1078de4698bacfe0d861c6224ec190144ab16340fad7e35fe3956", "extra_info": {"file_path": "models/descriptions/to_currency.md", "file_name": "to_currency.md"}, "node_info": {"start": 0, "end": 107, "_node_type": "1"}, "relationships": {"1": "1b802cedef27f6eaf03b408d1acc79c2a14283a3"}}, "__type__": "1"}, "8af9f491-83c0-4df0-9dad-343c3e418e30": {"__data__": {"text": "{% docs to_decimal %}\n\nDivide the swap_to_amount by POW(10, swap_to_decimal) to get the amount the user received. \n\n{% enddocs %}", "doc_id": "8af9f491-83c0-4df0-9dad-343c3e418e30", "embedding": null, "doc_hash": "aeed6ac55f0a71ea184d58e6a49e5b6f2153da89221689179019ef0729d9f22b", "extra_info": {"file_path": "models/descriptions/to_decimal.md", "file_name": "to_decimal.md"}, "node_info": {"start": 0, "end": 129, "_node_type": "1"}, "relationships": {"1": "b176f762788b4b0bf53cef3d9114518c202b13b0"}}, "__type__": "1"}, "13d66882-7cc3-48d5-9fca-386eb1073533": {"__data__": {"text": "{% docs trader %}\n\nThe wallet address of the individual who initiated the swap.\n\n{% enddocs %}", "doc_id": "13d66882-7cc3-48d5-9fca-386eb1073533", "embedding": null, "doc_hash": "97c82a07c8e9a884b76bbb8b3ee8ca4d8fb3d8b4139513d4ed087e0e43f00328", "extra_info": {"file_path": "models/descriptions/trader.md", "file_name": "trader.md"}, "node_info": {"start": 0, "end": 94, "_node_type": "1"}, "relationships": {"1": "2bf99dd80b99e8fa76abc03669a50b448a0a0c0a"}}, "__type__": "1"}, "eabf9fbb-c456-4453-96ff-6ac1250e0fcb": {"__data__": {"text": "{% docs transfer_type %}\n\nDetails on the type of transfer occurring during the transaction. \"IBC_Transfer_In\" = depositing tokens onto Osmosis. \"IBC_transfer_out\" = withdrawing tokens from Osmosis. \"Osmosis\" = wallet to wallet transfer on Osmosis.  \n\n{% enddocs %}", "doc_id": "eabf9fbb-c456-4453-96ff-6ac1250e0fcb", "embedding": null, "doc_hash": "42bad7a452daa76474973ab5efba506994761a303197eef6f47e084ad562e37b", "extra_info": {"file_path": "models/descriptions/transfer_type.md", "file_name": "transfer_type.md"}, "node_info": {"start": 0, "end": 264, "_node_type": "1"}, "relationships": {"1": "4b8d2f29071e2d5be77d90f7823ebce071c867d9"}}, "__type__": "1"}, "f7e762b1-0b46-418c-959d-2463dcd28760": {"__data__": {"text": "{% docs tx_body %}\n\nThe top level transaction body for the transaction\n\n{% enddocs %}", "doc_id": "f7e762b1-0b46-418c-959d-2463dcd28760", "embedding": null, "doc_hash": "28d63e0e3742e80826f8dc72157664f9233df8a0d6445b3d64de86b58fb275f6", "extra_info": {"file_path": "models/descriptions/tx_body.md", "file_name": "tx_body.md"}, "node_info": {"start": 0, "end": 85, "_node_type": "1"}, "relationships": {"1": "0f4d372827cf00496c7485d14d16e92da27a5782"}}, "__type__": "1"}, "74589fa4-5db4-476e-a855-5ad2547cd440": {"__data__": {"text": "{% docs tx_caller_address %}\n\nThe wallet address of the individual who initiated the transaction.\n\n{% enddocs %}", "doc_id": "74589fa4-5db4-476e-a855-5ad2547cd440", "embedding": null, "doc_hash": "f0f9e33e2da169550880f2b80cb964cfd149f644446209040deeacd5106b1bcb", "extra_info": {"file_path": "models/descriptions/tx_caller_address.md", "file_name": "tx_caller_address.md"}, "node_info": {"start": 0, "end": 112, "_node_type": "1"}, "relationships": {"1": "307ba3ad4c1c6f0f684ebd313c5f80725b45e2f3"}}, "__type__": "1"}, "d317b21d-60f2-49c3-9f24-719477a3cbce": {"__data__": {"text": "{% docs tx_code %}\n\nA number that corresponds to various error codes. When \"0\", the transaction is successful. Non-zero numbers signify different types of transaction failures. \n\n{% enddocs %}", "doc_id": "d317b21d-60f2-49c3-9f24-719477a3cbce", "embedding": null, "doc_hash": "aa38001e5f402488519a6c5a6fa96f05959b13ddb67f71de63dc50d1511d10b8", "extra_info": {"file_path": "models/descriptions/tx_code.md", "file_name": "tx_code.md"}, "node_info": {"start": 0, "end": 192, "_node_type": "1"}, "relationships": {"1": "5200c7e70fe11decbc5251cccf8a6abf86bfa274"}}, "__type__": "1"}, "478a0894-429b-48be-aa5e-ee4a91ae09a8": {"__data__": {"text": "{% docs tx_count %}\n\nThe number of transactions that occurred during a block. \n\n{% enddocs %}", "doc_id": "478a0894-429b-48be-aa5e-ee4a91ae09a8", "embedding": null, "doc_hash": "e168c1d683e057d6dcbd43b1632519c217dc7281417f9208891d6fc92a91ca56", "extra_info": {"file_path": "models/descriptions/tx_count.md", "file_name": "tx_count.md"}, "node_info": {"start": 0, "end": 93, "_node_type": "1"}, "relationships": {"1": "750dccb77c1965b3372efb287b5e45bb93be83b8"}}, "__type__": "1"}, "cd4a54ea-a44d-4562-a6c5-f18c3e59ac04": {"__data__": {"text": "{% docs tx_from %}\n\nThe wallet address of the individual who initiated the transaction\n\n{% enddocs %}", "doc_id": "cd4a54ea-a44d-4562-a6c5-f18c3e59ac04", "embedding": null, "doc_hash": "d8ec397a42fbe158c94eb232ba1438b32474f08eb8d9fb692e911818ee88300e", "extra_info": {"file_path": "models/descriptions/tx_from.md", "file_name": "tx_from.md"}, "node_info": {"start": 0, "end": 101, "_node_type": "1"}, "relationships": {"1": "d9fd624a1146deaeeca8ed61ff7fe773fbbb290c"}}, "__type__": "1"}, "3e6fbd4f-87a9-463d-b6f7-89d70020f844": {"__data__": {"text": "{% docs tx_id %}\n\nA unique key that identifies a transaction. Called \"TxHash\" on block explorers.\n\n{% enddocs %}", "doc_id": "3e6fbd4f-87a9-463d-b6f7-89d70020f844", "embedding": null, "doc_hash": "39f8c4263bdcdb59903814116034d1ab5b95a55dbc00494d56307b2001a1d340", "extra_info": {"file_path": "models/descriptions/tx_id.md", "file_name": "tx_id.md"}, "node_info": {"start": 0, "end": 112, "_node_type": "1"}, "relationships": {"1": "9232e9889385402cdae54a1c80c5cf0657dd581f"}}, "__type__": "1"}, "01a29338-93c1-48d5-be1e-ced7704415aa": {"__data__": {"text": "{% docs tx_status %}\n\nTransaction status is \"SUCCEEDED\" if the transaction went through, \"FALSE\" if the transaction failed. This column is deprecating soon. Please switch over your queries to use the tx_succeeded column instead.\n\n{% enddocs %}", "doc_id": "01a29338-93c1-48d5-be1e-ced7704415aa", "embedding": null, "doc_hash": "d30e10d69faa19c57bb4a7885539e4dd924a91031d9c7ba9e4d58ff17332e006", "extra_info": {"file_path": "models/descriptions/tx_status.md", "file_name": "tx_status.md"}, "node_info": {"start": 0, "end": 243, "_node_type": "1"}, "relationships": {"1": "58948fe64d76f9b69901191e9eeb7e7a83a30648"}}, "__type__": "1"}, "9a3f8370-92e6-43e9-8244-90dc53eba075": {"__data__": {"text": "{% docs tx_succeeded %}\n\nTransaction status is \"TRUE\" if the transaction was successful, \"FALSE\" if the transaction failed. \n\n{% enddocs %}", "doc_id": "9a3f8370-92e6-43e9-8244-90dc53eba075", "embedding": null, "doc_hash": "2e1dfa7774641caf923bbefac8f24ded5868bade7a97a1d98149684fa8285b33", "extra_info": {"file_path": "models/descriptions/tx_succeeded.md", "file_name": "tx_succeeded.md"}, "node_info": {"start": 0, "end": 139, "_node_type": "1"}, "relationships": {"1": "6b30779a2aff18ac8ac3ae354e3d8e4fe592eb81"}}, "__type__": "1"}, "9a1a5b70-ca9e-4e18-a5b7-060f0e729e71": {"__data__": {"text": "{% docs unlock_time %}\n\nWhen the LP token is fully unlocked and liquid again\n\n{% enddocs %}", "doc_id": "9a1a5b70-ca9e-4e18-a5b7-060f0e729e71", "embedding": null, "doc_hash": "7f2d597a90e92a7968dc3fee42eee992b633ebbdab66860e0e320c1dd90e93e0", "extra_info": {"file_path": "models/descriptions/unlock_time.md", "file_name": "unlock_time.md"}, "node_info": {"start": 0, "end": 91, "_node_type": "1"}, "relationships": {"1": "7919373d518f96f05b88c1384644a6e4701152e8"}}, "__type__": "1"}, "667c095f-7e4f-4b64-9240-6cbfc0f6a139": {"__data__": {"text": "{% docs unpool_new_lock_ids %}\n\nThe new lock ids generated when a lp position is unpooled\n\n{% enddocs %}", "doc_id": "667c095f-7e4f-4b64-9240-6cbfc0f6a139", "embedding": null, "doc_hash": "94444b9972d648e05b9e42f03a2a366c5c0d0b1233aa794553565db3c85def04", "extra_info": {"file_path": "models/descriptions/unpool_new_lock_ids.md", "file_name": "unpool_new_lock_ids.md"}, "node_info": {"start": 0, "end": 104, "_node_type": "1"}, "relationships": {"1": "251415c704030d49e5035fc9f53ae9e46c2c8b33"}}, "__type__": "1"}, "648e118f-5d38-4f97-a2e0-ab34b138e999": {"__data__": {"text": "{% docs validator_address %}\n\nThe wallet address of the validator related to the staking action.\n\n{% enddocs %}", "doc_id": "648e118f-5d38-4f97-a2e0-ab34b138e999", "embedding": null, "doc_hash": "909bfd8e9c8f4a3df88538b8dabb4690d84c59746d37fbc856370361e5f0ca60", "extra_info": {"file_path": "models/descriptions/validator_address.md", "file_name": "validator_address.md"}, "node_info": {"start": 0, "end": 111, "_node_type": "1"}, "relationships": {"1": "870aa3bb2632e38080ec529bdcdeb9ee1dd8231e"}}, "__type__": "1"}, "3068b082-c7fd-4f20-b7c6-5a7965768b71": {"__data__": {"text": "{% docs validator_address_reward %}\n\nThe wallet address that recieves the commissiion of the validator.\n\n{% enddocs %}", "doc_id": "3068b082-c7fd-4f20-b7c6-5a7965768b71", "embedding": null, "doc_hash": "592022f80b1757ea34c55695acde3c60e6faaa9eea1bca536a3bd6b2ea22ef91", "extra_info": {"file_path": "models/descriptions/validator_address_reward.md", "file_name": "validator_address_reward.md"}, "node_info": {"start": 0, "end": 118, "_node_type": "1"}, "relationships": {"1": "2f3f6ecadd2046d85b39451ba0d39029b7417043"}}, "__type__": "1"}, "27991522-8846-4023-bd06-cd4ed949b3a5": {"__data__": {"text": "{% docs validator_hash %}\n\nThe root hash of the new validator set. \n\n{% enddocs %}", "doc_id": "27991522-8846-4023-bd06-cd4ed949b3a5", "embedding": null, "doc_hash": "02fcb784332fd2ce91654ed682f0b9d51bc6a60d8ae1c77541bf024c1b2b0495", "extra_info": {"file_path": "models/descriptions/validator_hash.md", "file_name": "validator_hash.md"}, "node_info": {"start": 0, "end": 82, "_node_type": "1"}, "relationships": {"1": "45364223fd3bbfce518d9f2fdde6c6b99c577775"}}, "__type__": "1"}, "8177380f-9427-4c15-a83b-33137da99fe2": {"__data__": {"text": "{% docs vote_option %}\n\nHow the delegator voted on the proposal. \n\n{% enddocs %}", "doc_id": "8177380f-9427-4c15-a83b-33137da99fe2", "embedding": null, "doc_hash": "9105266d1c849ca8ae65d03be3830d33d455573616ff13b8661ba38685b3aca1", "extra_info": {"file_path": "models/descriptions/vote_option.md", "file_name": "vote_option.md"}, "node_info": {"start": 0, "end": 80, "_node_type": "1"}, "relationships": {"1": "6408db14c910ee6db1191bb07ebf374e7be0e4cd"}}, "__type__": "1"}, "379a3898-9b12-4773-a459-887c8b268f97": {"__data__": {"text": "{% docs vote_weight %}\n\nDenotes what portion of a user's stake is put toward the voting option. If \"1\", 100% of the voter's voting power is put toward the selected option.  \n\n{% enddocs %}", "doc_id": "379a3898-9b12-4773-a459-887c8b268f97", "embedding": null, "doc_hash": "a8831a587b344859d749deb83256fb45a402131d16445995023459956a7413a3", "extra_info": {"file_path": "models/descriptions/vote_weight.md", "file_name": "vote_weight.md"}, "node_info": {"start": 0, "end": 188, "_node_type": "1"}, "relationships": {"1": "e83f47e9a4c95c615184bad6075e11d0ea0c3a0d"}}, "__type__": "1"}, "0f6204a5-e656-4669-b96d-69325f5f874c": {"__data__": {"text": "{% docs voter %}\n\nAddress of the delegator that voted on the proposal. \n\n{% enddocs %}", "doc_id": "0f6204a5-e656-4669-b96d-69325f5f874c", "embedding": null, "doc_hash": "1c208773396c1c2215ad4de42ef4b86ed3fd134265f1356a134a2cd441577df5", "extra_info": {"file_path": "models/descriptions/voter.md", "file_name": "voter.md"}, "node_info": {"start": 0, "end": 86, "_node_type": "1"}, "relationships": {"1": "ff8c0f3e6d034cfce010bf85f50df8046d6abc8a"}}, "__type__": "1"}, "46a677f3-a383-4fc5-bcaf-a07512efcc1e": {"__data__": {"text": "{{ config(\n    materialized = 'view'\n) }}\n\nSELECT\n    blockchain, \n    address, \n    creator, \n    label_type, \n    label_subtype, \n    label, \n    project_name, \n    raw_metadata\nFROM \n    {{ ref('silver__asset_metadata') }}\n\nUNION ALL \n\nSELECT\n    blockchain, \n    address, \n    creator, \n    label_type, \n    label_subtype, \n    label, \n    project_name, \n    raw_metadata\nFROM \n    {{ ref('silver__validator_metadata') }}\n", "doc_id": "46a677f3-a383-4fc5-bcaf-a07512efcc1e", "embedding": null, "doc_hash": "81e71c336d2832952af5ec559759dff728089d7f812d0bb931041aff5a1ecf41", "extra_info": {"file_path": "models/gold/core__dim_labels.sql", "file_name": "core__dim_labels.sql"}, "node_info": {"start": 0, "end": 426, "_node_type": "1"}, "relationships": {"1": "021bb6e5529ca1ba7a92434ab6d3eb56106cb7c5"}}, "__type__": "1"}, "e44b6f7d-6f22-40df-ab1b-b778e356719e": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__dim_labels\n    description: Contains token and validator labels for Osmosis.\n    columns:\n      - name: ADDRESS\n        description: \"{{ doc('address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCKCHAIN\n        description: \"{{ doc('blockchain') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: CREATOR\n        description: \"{{ doc('creator') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: LABEL_TYPE\n        description: \"{{ doc('label_type') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: LABEL_SUBTYPE\n        description: \"{{ doc('label_subtype') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: LABEL \n        description: \"{{ doc('label') }}\" \n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PROJECT_NAME\n        description: \"{{ doc('project_name') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: RAW_METADATA\n        description: \"{{ doc('raw_metadata') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "e44b6f7d-6f22-40df-ab1b-b778e356719e", "embedding": null, "doc_hash": "518a36479e1fe0fce4f64da7fd00a2437bacb4106da1a971e3f1dd5972423630", "extra_info": {"file_path": "models/gold/core__dim_labels.yml", "file_name": "core__dim_labels.yml"}, "node_info": {"start": 0, "end": 1233, "_node_type": "1"}, "relationships": {"1": "711f2c3565c6bf2aa4dd395c677ded7689f2dea9"}}, "__type__": "1"}, "651b55a9-e9d0-460b-9e73-7c3b5daffb14": {"__data__": {"text": "{{ config(\n    materialized = 'view'\n) }}\n\nSELECT \n    'osmosis' AS blockchain, \n    module,\n    pool_id, \n    assets\nFROM {{ ref('silver__pool_metadata') }}", "doc_id": "651b55a9-e9d0-460b-9e73-7c3b5daffb14", "embedding": null, "doc_hash": "f9c5354d4431821597db269cf6f62613d1906eb9f4d392941c8a13db05a386a4", "extra_info": {"file_path": "models/gold/core__dim_liquidity_pools.sql", "file_name": "core__dim_liquidity_pools.sql"}, "node_info": {"start": 0, "end": 157, "_node_type": "1"}, "relationships": {"1": "8908e4d12eeb8645def40330de27378bf5f82bf2"}}, "__type__": "1"}, "aad0cd97-af7a-4572-a510-ba45c430ebb3": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__dim_liquidity_pools\n    description: Contains liquidity pool metadata for assets on the Osmosis blockchain. This table was sourced from an API and may not contain every token. \n    columns:\n      - name: BLOCKCHAIN\n        description: \"{{ doc('blockchain') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MODULE\n        description: \"{{ doc('pool_module') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: POOL_ID\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: ASSETS\n        description: \"{{ doc('pool_assets') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "aad0cd97-af7a-4572-a510-ba45c430ebb3", "embedding": null, "doc_hash": "7581a24440b297b860fb454953d4c6f4d90fa65e2571dfd275721c9b99153a3a", "extra_info": {"file_path": "models/gold/core__dim_liquidity_pools.yml", "file_name": "core__dim_liquidity_pools.yml"}, "node_info": {"start": 0, "end": 772, "_node_type": "1"}, "relationships": {"1": "a5049e5d8c2d54d410faee2ce87823d6dce805a1"}}, "__type__": "1"}, "dd13033b-5692-4011-9729-2b7dd5876404": {"__data__": {"text": "{{ config(\n    materialized = 'table',\n    meta ={ 'database_tags':{ 'table':{ 'PURPOSE': 'PRICES' }} }\n) }}\n\nSELECT\n    recorded_hour AS recorded_at,\n    symbol,\n    NULL AS currency,\n    CLOSE AS price,\n    NULL AS total_supply,\n    NULL AS volume_24h,\n    'coin gecko' AS provider\nFROM\n    {{ ref('silver__token_prices_coin_gecko_hourly') }}\nUNION ALL\nSELECT\n    recorded_hour AS recorded_at,\n    symbol,\n    NULL AS currency,\n    CLOSE AS price,\n    NULL AS total_supply,\n    NULL AS volume_24h,\n    'coin market cap' AS provider\nFROM\n    {{ ref('silver__token_prices_coin_market_cap_hourly') }}\nUNION ALL\nSELECT\n    block_hour AS recorded_at,\n    project_name AS symbol,\n    currency,\n    price_usd AS price,\n    NULL AS total_supply,\n    NULL AS volume_24h,\n    'swaps' AS provider\nFROM\n    {{ ref('silver__prices_swaps') }}\nUNION ALL\nSELECT\n    DATE_TRUNC(\n        'hour',\n        block_timestamp\n    ) AS recorded_at,\n    project_name AS symbol,\n    token_address AS currency,\n    price_usd AS price,\n    NULL AS total_supply,\n    NULL AS volume_24h,\n    'pool balance' AS provider\nFROM\n    {{ ref('silver__pool_token_prices_usd') }} A\n    LEFT JOIN {{ ref('silver__asset_metadata') }}\n    b\n    ON A.token_address = b.address\n", "doc_id": "dd13033b-5692-4011-9729-2b7dd5876404", "embedding": null, "doc_hash": "e561725b144a2909c8d5abbccb0e667ec67353a0a41d80cc2dfe5c1c5abd911e", "extra_info": {"file_path": "models/gold/core__dim_prices.sql", "file_name": "core__dim_prices.sql"}, "node_info": {"start": 0, "end": 1235, "_node_type": "1"}, "relationships": {"1": "46f569509ba99418bf063d6918956d23a946a3e8"}}, "__type__": "1"}, "5857f287-f427-42bf-9745-6187cb9e7b5d": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__dim_prices\n    description: Contains token prices in USD for assets that can be traded on the Osmosis Zone and Frontier. \n    columns:\n      - name: RECORDED_AT\n        description: The time, including the day and hour, that the price of the token corresponds to. \n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: SYMBOL\n        description: The token's symbol\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PRICE\n        description: The price of the token in USD. \n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TOTAL_SUPPLY\n        description: The total circulating supply of the token\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PROVIDER\n        description: Where the price is sourced from. Prices sourced from the swaps table may have outliers for hours with low swap volume. \n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "5857f287-f427-42bf-9745-6187cb9e7b5d", "embedding": null, "doc_hash": "af440327f52c609dfcb3eb5f1c49225d0da66605ac73a1a1a2e33c89a2bffb41", "extra_info": {"file_path": "models/gold/core__dim_prices.yml", "file_name": "core__dim_prices.yml"}, "node_info": {"start": 0, "end": 1027, "_node_type": "1"}, "relationships": {"1": "6689444f26356d9566e370e1bf60cd9f42e57aa6"}}, "__type__": "1"}, "d8eff972-e27b-483d-b010-8cd3a3905c47": {"__data__": {"text": "{{ config(\n    materialized = 'view'\n) }}\n\nSELECT \n    blockchain, \n    address, \n    creator, \n    label_type, \n    label_subtype, \n    label, \n    project_name, \n    alias, \n    decimal, \n    raw_metadata\nFROM {{ ref('silver__asset_metadata') }}", "doc_id": "d8eff972-e27b-483d-b010-8cd3a3905c47", "embedding": null, "doc_hash": "126c228864030acc2c7d341f931f258e7a8657d01259d0c773d56400fa99cf7b", "extra_info": {"file_path": "models/gold/core__dim_tokens.sql", "file_name": "core__dim_tokens.sql"}, "node_info": {"start": 0, "end": 247, "_node_type": "1"}, "relationships": {"1": "1535e5e2755ae967d703440907005c78c19e27b6"}}, "__type__": "1"}, "719fcec9-4ca0-4efb-b467-656aa84dc769": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__dim_tokens\n    description: Contains token metadata for assets on the Osmosis blockchain. This table was sourced from an API and may not contain every token. \n    columns:\n      - name: ADDRESS\n        description: \"{{ doc('address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCKCHAIN\n        description: \"{{ doc('blockchain') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: CREATOR\n        description: \"{{ doc('creator') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: LABEL_TYPE\n        description: \"{{ doc('label_type') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: LABEL_SUBTYPE\n        description: \"{{ doc('label_subtype') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: LABEL \n        description: \"{{ doc('label') }}\" \n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PROJECT_NAME\n        description: \"{{ doc('project_name') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: ALIAS\n        description: A secondary address for the token, where available\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: RAW_METADATA\n        description: \"{{ doc('raw_metadata') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "719fcec9-4ca0-4efb-b467-656aa84dc769", "embedding": null, "doc_hash": "bf25f20ca8a1d8fe6f893d2eda50ec4cc1c6544a71ddca64756d394529b7da72", "extra_info": {"file_path": "models/gold/core__dim_tokens.yml", "file_name": "core__dim_tokens.yml"}, "node_info": {"start": 0, "end": 1609, "_node_type": "1"}, "relationships": {"1": "748c60da6b7a645d0d05399f4da0dda4be8626c0"}}, "__type__": "1"}, "40e5c434-8b12-4b91-acf5-1a102a3c025a": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n      meta={\n        'database_tags':{\n            'table': {\n                'PURPOSE': 'GOVERNANCE'\n            }\n        }\n      }\n) }}\n\nSELECT \n    DISTINCT vote_option AS vote_id, \n    CASE \n        WHEN vote_option = 1 THEN \n            'YES'\n        WHEN vote_option = 2 THEN\n            'ABSTAIN'\n        WHEN vote_option = 3 THEN\n            'NO'\n        WHEN vote_option = 4 THEN\n            'NO WITH VETO'\n        ELSE 'NULL'\n    END AS description \n\nFROM {{ ref('silver__governance_votes') }}\n\n\n", "doc_id": "40e5c434-8b12-4b91-acf5-1a102a3c025a", "embedding": null, "doc_hash": "ce08e6fa1bf93341623d2bc401b48036c21769d638c50b31c0b46c3e55bd0073", "extra_info": {"file_path": "models/gold/core__dim_vote_options.sql", "file_name": "core__dim_vote_options.sql"}, "node_info": {"start": 0, "end": 545, "_node_type": "1"}, "relationships": {"1": "38fd3af44a6b3f6f8f2cf2a6b463b1cb6817454c"}}, "__type__": "1"}, "056a9a00-d103-4423-b065-4f52bca500cc": {"__data__": {"text": "{{ config(\n    materialized = 'view'\n) }}\n\nSELECT\n    blockchain,\n    creator,\n    address,\n    label,\n    project_name,\n    start_date,\n    end_date\nFROM\n    {{ ref(\n        'silver__croschain_icns'\n    ) }}\n", "doc_id": "056a9a00-d103-4423-b065-4f52bca500cc", "embedding": null, "doc_hash": "636abfc274f4d4bc9b016906165109cc98281428acda336a474f1ace2bb0e1b6", "extra_info": {"file_path": "models/gold/core__ez_icns.sql", "file_name": "core__ez_icns.sql"}, "node_info": {"start": 0, "end": 209, "_node_type": "1"}, "relationships": {"1": "a2c88a3bc79d601d1073b4315693be9d1ff92aa2"}}, "__type__": "1"}, "9dae72aa-2138-44ad-b0ef-ff282b3deb3d": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__ez_icns\n    description: Contains address tags for Osmosis and other IBC chains. \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - ADDRESS\n            - START_DATE\n            - LABEL\n    columns:\n      - name: ADDRESS\n        description: \"{{ doc('address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCKCHAIN\n        description: \"{{ doc('blockchain') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: CREATOR\n        description: \"{{ doc('creator') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: LABEL\n        description: The ICNS name of the address.\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: PROJECT_NAME\n        description: The name of the project the name was purchased from. \n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: START_DATE\n        description: Date the ICNS name first applies to the wallet. \n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: END_DATE\n        description: Date the ICNS tag expires or no longer represents the wallet.\n        tests:\n          - dbt_expectations.expect_column_to_exist", "doc_id": "9dae72aa-2138-44ad-b0ef-ff282b3deb3d", "embedding": null, "doc_hash": "1e9c4cd954306c49c092d644b6598530cb722642bb5e47da508330e6874883ca", "extra_info": {"file_path": "models/gold/core__ez_icns.yml", "file_name": "core__ez_icns.yml"}, "node_info": {"start": 0, "end": 1339, "_node_type": "1"}, "relationships": {"1": "c125853ff4d42aa057e79cb152485dc86863bf12"}}, "__type__": "1"}, "e61afc6f-2ae3-43fa-955a-0a94a7f6036b": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    meta ={ 'database_tags':{ 'table':{ 'PURPOSE': 'PRICES' }} }\n) }}\n\nWITH p_base AS (\n\n    SELECT\n        DATE_TRUNC(\n            'hour',\n            recorded_at\n        ) AS recorded_hour,\n        UPPER(\n            A.symbol\n        ) AS symbol,\n        currency,\n        A.price,\n        A.provider,\n        CASE\n            A.provider\n            WHEN 'coin gecko' THEN 1\n            WHEN 'coin market cap' THEN 2\n            WHEN 'pool balances' THEN 3\n            ELSE 4\n        END AS pro_rank\n    FROM\n        {{ ref('core__dim_prices') }} A qualify(ROW_NUMBER() over(PARTITION BY recorded_hour, UPPER(symbol)\n    ORDER BY\n        pro_rank) = 1))\n    SELECT\n        A.recorded_hour,\n        A.symbol,\n        COALESCE(\n            A.currency,\n            b_1.address,\n            b_2.address\n        ) AS currency,\n        A.price\n    FROM\n        p_base A\n        LEFT JOIN {{ ref('silver__asset_metadata') }}\n        b_1\n        ON A.currency = b_1.address\n        LEFT JOIN {{ ref('silver__asset_metadata') }}\n        b_2\n        ON A.symbol = UPPER (\n            b_2.project_name\n        )\n        AND A.currency IS NULL\n", "doc_id": "e61afc6f-2ae3-43fa-955a-0a94a7f6036b", "embedding": null, "doc_hash": "8c42192fd3386d3102fe71c6ddb60fabff7c6478d43c9a0fc1e1b62216036448", "extra_info": {"file_path": "models/gold/core__ez_prices.sql", "file_name": "core__ez_prices.sql"}, "node_info": {"start": 0, "end": 1172, "_node_type": "1"}, "relationships": {"1": "3b6701ce100a8b5baa92ecf81c4226308966338f"}}, "__type__": "1"}, "d5d16a44-2cb9-4494-9b51-ced375bc9688": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__ez_prices\n    description: Contains token prices in USD for assets that can be traded on the Osmosis Zone and Frontier. \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - RECORDED_HOUR\n            - CURRENCY\n          where: CURRENCY is not null\n    columns:\n      - name: RECORDED_HOUR\n        description: The time, including the day and hour, that the price of the token corresponds to. \n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: SYMBOL\n        description: The token's symbol\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PRICE\n        description: The price of the token in USD. \n        tests: \n          - dbt_expectations.expect_column_to_exist\n", "doc_id": "d5d16a44-2cb9-4494-9b51-ced375bc9688", "embedding": null, "doc_hash": "d671c3348784d8c359c8892c207cfb7b655f9587c85ca0c24c6f518d68f1294b", "extra_info": {"file_path": "models/gold/core__ez_prices.yml", "file_name": "core__ez_prices.yml"}, "node_info": {"start": 0, "end": 958, "_node_type": "1"}, "relationships": {"1": "f45b908cf4eaa8fa79d54f651f7450a22391558b"}}, "__type__": "1"}, "460eac43-0003-47aa-b6ed-5b0cbdc71ffb": {"__data__": {"text": "{{ config(\n    materialized = 'view'\n) }}\n\nSELECT \n    block_id, \n    block_timestamp, \n    tx_id, \n    tx_succeeded,\n    transfer_type, \n    sender, \n    amount, \n    currency, \n    decimal, \n    receiver\nFROM {{ ref('silver__airdrops') }}", "doc_id": "460eac43-0003-47aa-b6ed-5b0cbdc71ffb", "embedding": null, "doc_hash": "7c332a57abdcd88105f42825adbded1c2a4387d9982158949a08d58d17f517db", "extra_info": {"file_path": "models/gold/core__fact_airdrop.sql", "file_name": "core__fact_airdrop.sql"}, "node_info": {"start": 0, "end": 240, "_node_type": "1"}, "relationships": {"1": "0178a9a39595b7bbaade2b6f9601062615cf3b71"}}, "__type__": "1"}, "878af416-d0d5-4bd4-9b5b-bf28c12390aa": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_airdrop\n    description: Record of the OSMO airdrop to ATOM stakers. The columns blockchain, chain_id, and tx_status will be deprecating soon.\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TRANSFER_TYPE\n        description: \"{{ doc('transfer_type') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: SENDER\n        description: \"{{ doc('sender') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"\n      - name: RECEIVER\n        description: \"{{ doc('receiver') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "878af416-d0d5-4bd4-9b5b-bf28c12390aa", "embedding": null, "doc_hash": "43793fc2946c6f949f11b917b25a07348c59fd1d4f942fbaa593e309a394eea5", "extra_info": {"file_path": "models/gold/core__fact_airdrop.yml", "file_name": "core__fact_airdrop.yml"}, "node_info": {"start": 0, "end": 1501, "_node_type": "1"}, "relationships": {"1": "d64220a219bf8cecdfc6ffb25142170a3b74bd78"}}, "__type__": "1"}, "ef5b7ca6-dae8-4594-a2a2-afc2fd29b5f9": {"__data__": {"text": "{{ config(\n    materialized = 'view'\n) }}\n\nSELECT \n    block_id, \n    block_timestamp, \n    chain_id, \n    tx_count, \n    proposer_address, \n    validator_hash\nFROM \n    {{ ref('silver__blocks') }}", "doc_id": "ef5b7ca6-dae8-4594-a2a2-afc2fd29b5f9", "embedding": null, "doc_hash": "33e5ff1f7c170166bdbe491ac280fcb41d1c36706e51513e9090e81ddf88147f", "extra_info": {"file_path": "models/gold/core__fact_blocks.sql", "file_name": "core__fact_blocks.sql"}, "node_info": {"start": 0, "end": 197, "_node_type": "1"}, "relationships": {"1": "9a6fc9c5b0b0f8bc4901e4b928de764cfce07b25"}}, "__type__": "1"}, "2f275591-5086-4201-b792-8b68edb37770": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_blocks\n    description: Records of all blocks that have occurred on Osmosis, dating back to the genesis block. \n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: CHAIN_ID\n        description: \"{{ doc('chain_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_COUNT\n        description: \"{{ doc('tx_count') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PROPOSER_ADDRESS\n        description: \"{{ doc('proposer_address') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: VALIDATOR_HASH\n        description: \"{{ doc('validator_hash') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "2f275591-5086-4201-b792-8b68edb37770", "embedding": null, "doc_hash": "9de2c21ed94d8ad051eaa516fee793ec54442f4f179e6c75abd077485aa8fc0e", "extra_info": {"file_path": "models/gold/core__fact_blocks.yml", "file_name": "core__fact_blocks.yml"}, "node_info": {"start": 0, "end": 1018, "_node_type": "1"}, "relationships": {"1": "5b350928c7826814d168583bb3e56d5fd72d5c51"}}, "__type__": "1"}, "becff9d4-0694-4d75-81fa-382d2a5dfcab": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"CONCAT_WS('-', date, address, balance_type, currency)\",\n    incremental_strategy = 'delete+insert',\n    cluster_by = ['date'],\n      meta={\n        'database_tags':{\n            'table': {\n                'PURPOSE': 'BALANCES'\n            }\n        }\n      }\n) }}\n\nSELECT\n    DATE,\n    balance_type,\n    address,\n    currency,\n    DECIMAL,\n    balance\nFROM\n    {{ ref('silver__daily_balances') }}\nWHERE\n    balance > 0\n\n{% if is_incremental() %}\nAND DATE >= (\n    SELECT\n        MAX(\n            DATE\n        )\n    FROM\n        {{ this }}\n) - INTERVAL '48 HOURS'\n{% endif %}\n", "doc_id": "becff9d4-0694-4d75-81fa-382d2a5dfcab", "embedding": null, "doc_hash": "c46f972549dd21f51e0f8662d9f4b8f898dbe36dc6399ac0aa5b3236d2f5d0b0", "extra_info": {"file_path": "models/gold/core__fact_daily_balances.sql", "file_name": "core__fact_daily_balances.sql"}, "node_info": {"start": 0, "end": 638, "_node_type": "1"}, "relationships": {"1": "b0bff941181839c86ad85ecdb6ffde85f6893f60"}}, "__type__": "1"}, "c6441cd2-df87-4132-9290-3adbfb2f905a": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_daily_balances\n    description: A table that contains a daily balance entry for both staked and liquid balance of wallets on the Osmosis chain. \n    columns:\n      - name: DATE\n        description: The day the balance was recorded on. \n        tests: \n          - not_null\n      - name: BALANCE_TYPE\n        description: One of \"staked\", \"liquid\", \"locked liquidity\", \"superfluid staked\" or \"pool\" corresponding to how the currency is in the wallet. \n        tests: \n          - not_null\n      - name: ADDRESS\n        description: \"{{ doc('address') }}\"\n        tests: \n          - not_null\n      - name: BALANCE \n        description: The amount of the currency the wallet held at the given time\n        tests: \n          - not_null\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - not_null\n      - name: DECIMAL \n        description: \"{{ doc('decimal') }}\"\n      \n", "doc_id": "c6441cd2-df87-4132-9290-3adbfb2f905a", "embedding": null, "doc_hash": "2d4e98c848f4ef834758c00d4f6e7bbceeb5057d5464164f7a228bbfe5165721", "extra_info": {"file_path": "models/gold/core__fact_daily_balances.yml", "file_name": "core__fact_daily_balances.yml"}, "node_info": {"start": 0, "end": 952, "_node_type": "1"}, "relationships": {"1": "0d9dc47a53f3198aee5ef67f8468982add80248a"}}, "__type__": "1"}, "a7d4e5c9-22ae-4d1c-8a67-4793be8f0f7e": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n      meta={\n        'database_tags':{\n            'table': {\n                'PURPOSE': 'GOVERNANCE'\n            }\n        }\n      }\n) }}\n\nSELECT \n    block_id, \n    block_timestamp, \n    tx_id, \n    tx_succeeded,\n    depositor, \n    proposal_id, \n    amount, \n    currency, \n    decimal\nFROM {{ ref('silver__governance_proposal_deposits') }}", "doc_id": "a7d4e5c9-22ae-4d1c-8a67-4793be8f0f7e", "embedding": null, "doc_hash": "d549ab5f7d9508ef9deebcee4e03731fd3cc5f4eaf1f794e9b1acde9e727b924", "extra_info": {"file_path": "models/gold/core__fact_governance_proposal_deposits.sql", "file_name": "core__fact_governance_proposal_deposits.sql"}, "node_info": {"start": 0, "end": 381, "_node_type": "1"}, "relationships": {"1": "de0e4f108be36f18f8f9096d15498d12c0c4aa4b"}}, "__type__": "1"}, "566dc678-1dd1-4d2f-9983-5f7e1a81170a": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_governance_proposal_deposits\n    description: Records of all proposal deposits that have occurred on Osmosis, dating back to the genesis block. At least 500 OSMO must be deposited for a proposal to be voted on. The columns blockchain, chain_id, and tx_status will be deprecating soon.\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: DEPOSITOR \n        description: \"{{ doc('depositor') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PROPOSAL_ID\n        description: \"{{ doc('proposal_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist \n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: DECIMAL \n        description: \"{{ doc('decimal') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n", "doc_id": "566dc678-1dd1-4d2f-9983-5f7e1a81170a", "embedding": null, "doc_hash": "020ae059f7eded30b2910608a65233e66aaa753c91b189f5f712a00f1ea0eb1f", "extra_info": {"file_path": "models/gold/core__fact_governance_proposal_deposits.yml", "file_name": "core__fact_governance_proposal_deposits.yml"}, "node_info": {"start": 0, "end": 1581, "_node_type": "1"}, "relationships": {"1": "e8aee922f34cbbcdc2c74099959a6547124abaab"}}, "__type__": "1"}, "d1735f77-ce73-4253-a529-4a4a0bedc0b6": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n      meta={\n        'database_tags':{\n            'table': {\n                'PURPOSE': 'GOVERNANCE'\n            }\n        }\n      }\n) }}\n\nSELECT \n    block_id, \n    block_timestamp, \n    tx_id, \n    tx_succeeded,\n    proposer, \n    proposal_id, \n    proposal_type, \n    proposal_title, \n    proposal_description\nFROM {{ ref('silver__governance_submit_proposal') }}", "doc_id": "d1735f77-ce73-4253-a529-4a4a0bedc0b6", "embedding": null, "doc_hash": "b433a3c7bc4108ff748d2fec2a76be634bdecdc3c34ef6cee4097b5922c6a5ec", "extra_info": {"file_path": "models/gold/core__fact_governance_submit_proposal.sql", "file_name": "core__fact_governance_submit_proposal.sql"}, "node_info": {"start": 0, "end": 404, "_node_type": "1"}, "relationships": {"1": "240c23df493fb4466ee2370a1aa677b932c306e6"}}, "__type__": "1"}, "d08ee0cd-cd74-46bc-8f93-84611a7c140d": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_governance_submit_proposal\n    description: Records of all proposal submissions on Osmosis, dating back to the Genesis block. The columns blockchain, chain_id, and tx_status will be deprecating soon.\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PROPOSER\n        description: \"{{ doc('proposer') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PROPOSAL_ID\n        description: \"{{ doc('proposal_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PROPOSAL_TYPE\n        description: \"{{ doc('proposal_type') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PROPOSAL_TITLE\n        description: \"{{ doc('proposal_title') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PROPOSAL_DESCRIPTION\n        description: \"{{ doc('proposal_description') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "d08ee0cd-cd74-46bc-8f93-84611a7c140d", "embedding": null, "doc_hash": "b1388b6fd09e1ff85ee76a4b868c382b1fdba36c200db935c538482ae793196b", "extra_info": {"file_path": "models/gold/core__fact_governance_submit_proposal.yml", "file_name": "core__fact_governance_submit_proposal.yml"}, "node_info": {"start": 0, "end": 1542, "_node_type": "1"}, "relationships": {"1": "4b24a7eedcbaff7d435a648f7eba5f6b21773668"}}, "__type__": "1"}, "8f25f52c-6279-4e27-b328-d81e62f3828e": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    meta ={ 'database_tags':{ 'table':{ 'PURPOSE': 'GOVERNANCE' }} }\n) }}\n\nSELECT\n    proposal_id,\n    b.label AS validator,\n    validator_address,\n    memo,\n    vote,\n    voting_power,\n    version,\n    created_at,\n    updated_at\nFROM\n    {{ ref('silver__validator_memos') }} A\n    LEFT JOIN {{ ref('silver__validator_metadata') }}\n    b\n    ON A.validator_address = b.address\n", "doc_id": "8f25f52c-6279-4e27-b328-d81e62f3828e", "embedding": null, "doc_hash": "f3c64ec48bb3b02fb7c209ae40dcb8d819062f1cd386f5d962e788d922070549", "extra_info": {"file_path": "models/gold/core__fact_governance_validator_votes.sql", "file_name": "core__fact_governance_validator_votes.sql"}, "node_info": {"start": 0, "end": 415, "_node_type": "1"}, "relationships": {"1": "f7be718aa979d34bac468008eb0119c10a14ba23"}}, "__type__": "1"}, "fc554c53-236a-4c37-a038-f55b3672356a": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_governance_validator_votes\n    description: Records of all votes on proposals by validators\n    columns:\n      - name: PROPOSAL_ID\n        description: \"{{ doc('proposal_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: VALIDATOR_ADDRESS\n        description: \"{{ doc('validator_address') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: MEMO\n        description: \"{{ doc('memo') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VOTE\n        description: \"{{ doc('vote_option') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VOTING_POWER\n        description: The power of the validator that voted\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VERSION\n        description: The vote version. This is increment up if the validator votes more than once\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CREATED_AT\n        description: When the validator vote record was created\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: UPDATED_AT\n        description: When the validator vote record was updated\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "fc554c53-236a-4c37-a038-f55b3672356a", "embedding": null, "doc_hash": "ca46a164b6240d924058020cb141afa13c457cc08dcf4d4c46e6a406ccac4254", "extra_info": {"file_path": "models/gold/core__fact_governance_validator_votes.yml", "file_name": "core__fact_governance_validator_votes.yml"}, "node_info": {"start": 0, "end": 1357, "_node_type": "1"}, "relationships": {"1": "9ca569ef6a6571cd80f30a0ecc9d26cc1c27aed4"}}, "__type__": "1"}, "5e696d68-dd03-4640-be9d-31a9c6d448e0": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n      meta={\n        'database_tags':{\n            'table': {\n                'PURPOSE': 'GOVERNANCE'\n            }\n        }\n      }\n) }}\n\nSELECT\n    block_id, \n    block_timestamp, \n    tx_id, \n    tx_succeeded, \n    voter, \n    proposal_id, \n    vote_option, \n    vote_weight, \n    memo\nFROM {{ ref('silver__governance_votes') }}", "doc_id": "5e696d68-dd03-4640-be9d-31a9c6d448e0", "embedding": null, "doc_hash": "c7397434dfc861379d5a3cd977ae724d7ac1ea60b7f561c7af0629f5c1b336ea", "extra_info": {"file_path": "models/gold/core__fact_governance_votes.sql", "file_name": "core__fact_governance_votes.sql"}, "node_info": {"start": 0, "end": 370, "_node_type": "1"}, "relationships": {"1": "e6fe5d894c20f3c9e251f9b32dd2ea1d7adfb351"}}, "__type__": "1"}, "9f5cf8a8-34db-4094-b84d-b40e54dd9d8b": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_governance_votes\n    description: Records of all votes on proposals. The columns blockchain, chain_id, and tx_status will be deprecating soon. \n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VOTER\n        description: \"{{ doc('voter') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PROPOSAL_ID\n        description: \"{{ doc('proposal_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VOTE_OPTION\n        description: \"{{ doc('vote_option') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MEMO\n        description: \"{{ doc('memo') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "9f5cf8a8-34db-4094-b84d-b40e54dd9d8b", "embedding": null, "doc_hash": "41a6c8497f056463fcf6d1248a03860bba1717247d19a54ac2e7b0c18f166349", "extra_info": {"file_path": "models/gold/core__fact_governance_votes.yml", "file_name": "core__fact_governance_votes.yml"}, "node_info": {"start": 0, "end": 1296, "_node_type": "1"}, "relationships": {"1": "af2be1f5d58440ef2b8353e35393464a5fffab9e"}}, "__type__": "1"}, "565b4ff6-1949-438c-b2e6-decf263c3879": {"__data__": {"text": "{{ config(\n    materialized = 'view'\n) }}\n\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    liquidity_provider_address,\n    action,\n    pool_id :: ARRAY AS pool_id,\n    amount,\n    currency,\n    DECIMAL\nFROM\n    {{ ref('silver__liquidity_provider_actions') }}\nUNION ALL\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    liquidity_provider_address,\n    action,\n    pool_id,\n    amount,\n    currency,\n    DECIMAL\nFROM\n    {{ ref('silver__early_liquidity_provider_actions') }}\nUNION ALL\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    liquidity_provider_address,\n    action,\n    pool_id :: ARRAY AS pool_id,\n    amount,\n    currency,\n    DECIMAL\nFROM\n    {{ ref('silver__liquidity_provider_actions_unpool') }}\n", "doc_id": "565b4ff6-1949-438c-b2e6-decf263c3879", "embedding": null, "doc_hash": "f1b4fdbbc747674c0a12aeed4afab9d9d43b5352ed9aa5bff5ded401f5728ceb", "extra_info": {"file_path": "models/gold/core__fact_liquidity_provider_actions.sql", "file_name": "core__fact_liquidity_provider_actions.sql"}, "node_info": {"start": 0, "end": 785, "_node_type": "1"}, "relationships": {"1": "d62c69d1385273e4d9bcab9091b8e467fe048f4c"}}, "__type__": "1"}, "7c28501d-1870-47f7-91c9-3112f0b47b72": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_liquidity_provider_actions\n    description: Includes all actions entering and exiting liquidity pools. The columns blockchain, chain_id, and tx_status will be deprecating soon.  \n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: LIQUIDITY_PROVIDER_ADDRESS\n        description: \"{{ doc('liquidity_provider_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: ACTION\n        description: \"{{ doc('action') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: POOL_ID\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"", "doc_id": "7c28501d-1870-47f7-91c9-3112f0b47b72", "embedding": null, "doc_hash": "a41af6db6aa4def6982a5661ff7dc859f6450135f82fe6fa321a659cbe0ee055", "extra_info": {"file_path": "models/gold/core__fact_liquidity_provider_actions.yml", "file_name": "core__fact_liquidity_provider_actions.yml"}, "node_info": {"start": 0, "end": 1561, "_node_type": "1"}, "relationships": {"1": "75c7f7b5814286880af828f1ac2a4f6be3acd5a7"}}, "__type__": "1"}, "0dfb5bc7-e529-42e6-ba8b-2a2c03144851": {"__data__": {"text": "{{ config(\n    materialized = 'view'\n) }}\n\nSELECT\n    A.block_id,\n    A.block_timestamp,\n    A.tx_id,\n    A.tx_succeeded,\n    A.msg_group,\n    A.msg_type,\n    A.msg_action,\n    A.msg_action_description,\n    A.locker_address,\n    A.lock_id,\n    A.amount,\n    A.currency,\n    A.decimal,\n    A.pool_id,\n    A.lock_duration,\n    A.unlock_time,\n    A.is_superfluid,\n    A.unpool_new_lock_ids\nFROM\n    {{ ref('silver__locked_liquidity_actions') }} A\nUNION ALL\nSELECT\n    A.block_id,\n    A.block_timestamp,\n    A.tx_id,\n    A.tx_succeeded,\n    A.msg_group,\n    A.msg_type,\n    A.msg_action,\n    A.msg_action_description,\n    A.locker_address,\n    A.lock_id,\n    amount,\n    currency,\n    DECIMAL,\n    NULL AS pool_id,\n    NULL AS lock_duration,\n    NULL AS unlock_time,\n    A.is_superfluid,\n    NULL AS unpool_new_lock_ids\nFROM\n    {{ ref('silver__locked_liquidity_actions_convert') }} A\n", "doc_id": "0dfb5bc7-e529-42e6-ba8b-2a2c03144851", "embedding": null, "doc_hash": "fc21329b9221de6c71912624eb5547267bece122c951b764af2a637921f7002a", "extra_info": {"file_path": "models/gold/core__fact_locked_liquidity_actions.sql", "file_name": "core__fact_locked_liquidity_actions.sql"}, "node_info": {"start": 0, "end": 881, "_node_type": "1"}, "relationships": {"1": "30190859a62377547b3130ccfcf82294930489c7"}}, "__type__": "1"}, "fc0f8323-b609-4faa-b3d5-24a2bcd3b115": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_locked_liquidity_actions\n    description: Includes all actions related to locked LP tokens. The columns blockchain, chain_id, and tx_status will be deprecating soon.\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MSG_ACTION\n        description: \"{{ doc('msg_action') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MSG_ACTION_DESCRIPTION\n        description: \"{{ doc('msg_action_description') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: LOCKER_ADDRESS\n        description: \"{{ doc('locker_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: LOCK_ID\n        description: \"{{ doc('lock_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: POOL_ID\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name:", "doc_id": "fc0f8323-b609-4faa-b3d5-24a2bcd3b115", "embedding": null, "doc_hash": "73d3e82414a683dbde67de36252635d9910622e6c58d9bdd65b8be7b6bc6cbc6", "extra_info": {"file_path": "models/gold/core__fact_locked_liquidity_actions.yml", "file_name": "core__fact_locked_liquidity_actions.yml"}, "node_info": {"start": 0, "end": 2050, "_node_type": "1"}, "relationships": {"1": "2700e6a9c54458566fc7e39d82550193d68616ee", "3": "ba6c6266-1dbc-41ac-916e-1624197d0b34"}}, "__type__": "1"}, "ba6c6266-1dbc-41ac-916e-1624197d0b34": {"__data__": {"text": "     - name: LOCK_DURATION\n        description: \"{{ doc('lock_duration') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: UNLOCK_TIME\n        description: \"{{ doc('unlock_time') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: IS_SUPERFLUID\n        description: \"{{ doc('is_superfluid') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: UNPOOL_NEW_LOCK_IDS\n        description: \"{{ doc('unpool_new_lock_ids') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n", "doc_id": "ba6c6266-1dbc-41ac-916e-1624197d0b34", "embedding": null, "doc_hash": "eddcd2202eec5b55f76f87a085702eefbb0ab9fcbfeaacb9710e1480a019fd1a", "extra_info": {"file_path": "models/gold/core__fact_locked_liquidity_actions.yml", "file_name": "core__fact_locked_liquidity_actions.yml"}, "node_info": {"start": 2038, "end": 2629, "_node_type": "1"}, "relationships": {"1": "2700e6a9c54458566fc7e39d82550193d68616ee", "2": "fc0f8323-b609-4faa-b3d5-24a2bcd3b115"}}, "__type__": "1"}, "3290451c-5592-4bda-ab16-da1403780f39": {"__data__": {"text": "{{ config(\n    materialized = 'view'\n) }}\n\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    CONCAT(\n        msg_group,\n        ':',\n        msg_sub_group\n    ) AS msg_group,\n    msg_index,\n    msg_type,\n    attribute_index,\n    attribute_key,\n    attribute_value\nFROM\n    {{ ref('silver__msg_attributes') }}\n", "doc_id": "3290451c-5592-4bda-ab16-da1403780f39", "embedding": null, "doc_hash": "104750264bca9fdbc282dce9f797cf09ce99516f8557a665b9b14e579e929ae4", "extra_info": {"file_path": "models/gold/core__fact_msg_attributes.sql", "file_name": "core__fact_msg_attributes.sql"}, "node_info": {"start": 0, "end": 334, "_node_type": "1"}, "relationships": {"1": "13e77438cbd878f0a90d28a637645aa3e0e7eb52"}}, "__type__": "1"}, "24fa7475-7589-4071-bf33-7846b8f3f677": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_msg_attributes\n    description: Records of all message attributes associated to messages that have occurred on Osmosis, dating back to the genesis block. The columns blockchain and chain_id will be deprecating soon. \n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist \n      - name: MSG_INDEX\n        description: \"{{ doc('msg_index') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist \n      - name: MSG_TYPE\n        description: \"{{ doc('msg_type') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: ATTRIBUTE_KEY\n        description: \"They key from the key-value pair from the message attribute\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: ATTRIBUTE_VALUE\n        description: \"They value from the key-value pair from the message attribute\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      \n", "doc_id": "24fa7475-7589-4071-bf33-7846b8f3f677", "embedding": null, "doc_hash": "83517c532a08eaf741170e4d7c6d5b7336846725b90c4eb48c417cc36132c868", "extra_info": {"file_path": "models/gold/core__fact_msg_attributes.yml", "file_name": "core__fact_msg_attributes.yml"}, "node_info": {"start": 0, "end": 1611, "_node_type": "1"}, "relationships": {"1": "9baadc745a336a7c0634e9732a64a0d73be7c09e"}}, "__type__": "1"}, "b3b3f14d-6ff8-484a-b5f2-f0533f4037f9": {"__data__": {"text": "{{ config(\n    materialized = 'view'\n) }}\n\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    CONCAT(\n        msg_group,\n        ':',\n        msg_sub_group\n    ) AS msg_group,\n    msg_index,\n    msg_type,\n    msg\nFROM\n    {{ ref('silver__msgs') }}\n", "doc_id": "b3b3f14d-6ff8-484a-b5f2-f0533f4037f9", "embedding": null, "doc_hash": "b803cd84189bbfb38edc5a7f24b1cfd9c7aa05fb49760b97e58d0f1caab7f7e1", "extra_info": {"file_path": "models/gold/core__fact_msgs.sql", "file_name": "core__fact_msgs.sql"}, "node_info": {"start": 0, "end": 272, "_node_type": "1"}, "relationships": {"1": "3908d014cecce4a5f4e5144339a6ca8399fb850e"}}, "__type__": "1"}, "ea103120-3c0a-4a48-9477-f72763707f3f": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_msgs\n    description: Records of all message attributes associated to messages that have occurred on Osmosis, dating back to the genesis block. The columns blockchain, chain_id, and tx_status will be deprecating soon. \n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist \n      - name: MSG_INDEX\n        description: \"{{ doc('msg_index') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist \n      - name: MSG_TYPE\n        description: \"{{ doc('msg_type') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MSG\n        description: \"A block of json that contains the message attributes in base64 encoding.\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      \n", "doc_id": "ea103120-3c0a-4a48-9477-f72763707f3f", "embedding": null, "doc_hash": "9649b5be84bec00633f71cb868ae0c19dd3854132901dd219470de2362714cae", "extra_info": {"file_path": "models/gold/core__fact_msgs.yml", "file_name": "core__fact_msgs.yml"}, "node_info": {"start": 0, "end": 1433, "_node_type": "1"}, "relationships": {"1": "24cc199ac66cf075f99a4713c62b3eb3e6e54195"}}, "__type__": "1"}, "358d0118-73df-460f-b9d1-b6c9993e2f54": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    meta ={ 'database_tags':{ 'table':{ 'PURPOSE': 'DEFI' }} }\n) }}\n\nSELECT\n    block_id,\n    block_date,\n    pool_id,\n    currency,\n    fees,\n    fees_usd,\n    fee_type\nFROM\n    {{ ref('silver__pool_fee_summary_day') }}\n", "doc_id": "358d0118-73df-460f-b9d1-b6c9993e2f54", "embedding": null, "doc_hash": "11d2cbcb555fec392f2b4e56035b673eb5847528f1bd4e0253aaf740c907a6c2", "extra_info": {"file_path": "models/gold/core__fact_pool_fee_day.sql", "file_name": "core__fact_pool_fee_day.sql"}, "node_info": {"start": 0, "end": 259, "_node_type": "1"}, "relationships": {"1": "d0d9677c80c97259187a200016a47d821dffe7a7"}}, "__type__": "1"}, "c46f1dfa-3bfe-4948-8d82-30fa68daca02": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_pool_fee_day\n    description: The table is an daily summary of fees accumulated each pool within Osmosis\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_DATE\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: POOL_ID\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description: \"The currency the fee was paid in\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: FEES\n        description: \"The decimal adjusted amount of the fee paid\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: FEES_USD\n        description: \"The USD amount of the fee paid\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: FEE_TYPE\n        description: \"The type of fee paid. Will be either 'swap' or 'exit'\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n  ", "doc_id": "c46f1dfa-3bfe-4948-8d82-30fa68daca02", "embedding": null, "doc_hash": "57f2a12dce98b8aac4d2d500adc1e9b390a1981b450a1877bfd8062263d5e281", "extra_info": {"file_path": "models/gold/core__fact_pool_fee_day.yml", "file_name": "core__fact_pool_fee_day.yml"}, "node_info": {"start": 0, "end": 1187, "_node_type": "1"}, "relationships": {"1": "fc90e98c75d5c4d498efc3941e5d0e4a9ca66932"}}, "__type__": "1"}, "2f007bfc-f71e-4293-880e-6a5db4d6c2dc": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    meta ={ 'database_tags':{ 'table':{ 'PURPOSE': 'DEFI, PRICES' }} }\n) }}\n\nSELECT\n    block_id,\n    block_timestamp,\n    pool_id,\n    token_0_denom AS token_0_currency,\n    token_0_amount,\n    token_1_denom AS token_1_currency,\n    token_1_amount,\n    price,\n    price_usd,\n    twap,\n    twap_usd,\n    liquidity,\n    liquidity_usd,\n    volume,\n    volume_usd,\n    token_2_denom AS token_2_currency,\n    token_2_amount,\n    token_3_denom AS token_3_currency,\n    token_3_amount\nFROM\n    {{ ref('silver__pool_summary_hour') }}\n", "doc_id": "2f007bfc-f71e-4293-880e-6a5db4d6c2dc", "embedding": null, "doc_hash": "153ae01bf1fa4797d0e8eabd56674344cf319feacf650cab32aa55775aebac63", "extra_info": {"file_path": "models/gold/core__fact_pool_hour.sql", "file_name": "core__fact_pool_hour.sql"}, "node_info": {"start": 0, "end": 565, "_node_type": "1"}, "relationships": {"1": "71c8ab5db0b99ff477fd78448b4ce904f1fa74f5"}}, "__type__": "1"}, "bae0a07e-57d9-428e-8f39-da7f0fbda3f0": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_pool_hour\n    description:  \"The table is an hourly summary of each pool within Osmosis. The table is currently limited to show at most four tokens. For pools that contain more than four tokens, those tokens are omitted.\"\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: POOL_ID\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TOKEN_0_CURRENCY\n        description: \"The first token address contained within this liquidity pool\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TOKEN_0_AMOUNT\n        description: \"The decimal adjusted amount of the first token within this liquidity pool\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TOKEN_1_CURRENCY\n        description: \"The second token address contained within this liquidity pool\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TOKEN_1_AMOUNT\n        description: \"The decimal adjusted amount of the second token within this liquidity pool\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PRICE\n        description: \"The price of the first token as denominated in the token_1_currency. This only applies to two-token pools where one of the tokens is osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PRICE_USD\n        description: \"The price of the token in USD\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TWAP\n        description: \"The time weighted asset price, denominated in osmos. This is calculated by averaging the high, low, open, and close of the day\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TWAP_USD\n        description: The time weighted asset price, denominated in USD. This is calculated by averaging the high, low, open, and close of the day\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: LIQUIDITY\n        description: \"The total value of tokens within the pool, denominated in osmos\"\n", "doc_id": "bae0a07e-57d9-428e-8f39-da7f0fbda3f0", "embedding": null, "doc_hash": "35254f6b46a6665f6599764accbadce4635a2a5d039e0e7210ef0c3ed6694e54", "extra_info": {"file_path": "models/gold/core__fact_pool_hour.yml", "file_name": "core__fact_pool_hour.yml"}, "node_info": {"start": 0, "end": 2429, "_node_type": "1"}, "relationships": {"1": "453c3c4eb9dcc16b15f94e4178162f78f8e18edb", "3": "b5c5508a-17df-454a-a921-72173b23bfb8"}}, "__type__": "1"}, "b5c5508a-17df-454a-a921-72173b23bfb8": {"__data__": {"text": "\"The total value of tokens within the pool, denominated in osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: LIQUIDITY_USD\n        description: \"The total value of tokens within the pool, denominated in osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VOLUME\n        description: \"The total value of tokens swapped in and out of the pool, denominated in osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VOLUME_USD\n        description:  \"The total value of tokens swapped in and out of the pool, denominated in USD\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TOKEN_2_CURRENCY\n        description: \"The third token address contained within this liquidity pool\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TOKEN_2_AMOUNT\n        description: \"The decimal adjusted amount of the third token within this liquidity pool (if exists)\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TOKEN_3_CURRENCY\n        description: \"The fourth token address contained within this liquidity pool\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TOKEN_3_AMOUNT\n        description: \"The decimal adjusted amount of the fourth token within this liquidity pool (if exists)\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n", "doc_id": "b5c5508a-17df-454a-a921-72173b23bfb8", "embedding": null, "doc_hash": "b0c6a8b87962b07c6cf9d62ab67ab246e9e0264e69a51cd1b87d48caa1b55b34", "extra_info": {"file_path": "models/gold/core__fact_pool_hour.yml", "file_name": "core__fact_pool_hour.yml"}, "node_info": {"start": 2363, "end": 3845, "_node_type": "1"}, "relationships": {"1": "453c3c4eb9dcc16b15f94e4178162f78f8e18edb", "2": "bae0a07e-57d9-428e-8f39-da7f0fbda3f0"}}, "__type__": "1"}, "e1dfcbdc-bf05-41a3-8a89-e6f272878c29": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n      meta={\n        'database_tags':{\n            'table': {\n                'PURPOSE': 'STAKING'\n            }\n        }\n      }\n) }}\n\nSELECT \n    block_id, \n    block_timestamp, \n    tx_id, \n    tx_succeeded,\n    tx_caller_address, \n    action, \n    delegator_address,\n    validator_address, \n    redelegate_source_validator_address,  \n    amount, \n    currency, \n    decimal, \n    completion_time\nFROM {{ ref('silver__staking') }}", "doc_id": "e1dfcbdc-bf05-41a3-8a89-e6f272878c29", "embedding": null, "doc_hash": "7956dfb270a70b25cd19091e561600b660b1d40edd9a75bed2ff5999bc5416fc", "extra_info": {"file_path": "models/gold/core__fact_staking.sql", "file_name": "core__fact_staking.sql"}, "node_info": {"start": 0, "end": 472, "_node_type": "1"}, "relationships": {"1": "1deb649c827d81751f4433df78e5610c1cd6b04b"}}, "__type__": "1"}, "88a6c46b-e7f6-4cad-8234-0f0b4be3a52a": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_staking\n    description: Records of all staking related transactions that have occurred on Osmosis, dating back to the genesis block. These actions include delegate, undelegate, and redelegate. The columns blockchain, chain_id, and tx_status will be deprecating soon.\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_CALLER_ADDRESS\n        description: \"{{ doc('tx_caller_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: ACTION\n        description: \"{{ doc('action') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: DELEGATOR_ADDRESS\n        description: \"{{ doc('delegator_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VALIDATOR_ADDRESS\n        description: \"{{ doc('validator_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: REDELEGATE_SOURCE_VALIDATOR_ADDRESS\n        description: \"{{ doc('redelegate_source_validator_address') }}\"\n      - name: COMPLETION_TIME\n        description: \"{{ doc('completion_time') }}\"\n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"\n", "doc_id": "88a6c46b-e7f6-4cad-8234-0f0b4be3a52a", "embedding": null, "doc_hash": "94b5647f26cea75a086613a16ef45a0fe363efaf8a17cbe40888f1371c013557", "extra_info": {"file_path": "models/gold/core__fact_staking.yml", "file_name": "core__fact_staking.yml"}, "node_info": {"start": 0, "end": 2010, "_node_type": "1"}, "relationships": {"1": "050400d781940d18d85fc01ce3a04ea20f1b21d3"}}, "__type__": "1"}, "40332814-ca92-49d2-897a-8951e006feb4": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n      meta={\n        'database_tags':{\n            'table': {\n                'PURPOSE': 'STAKING'\n            }\n        }\n      }\n) }}\n\nSELECT\n    block_id, \n    block_timestamp, \n    tx_id, \n    tx_succeeded, \n    tx_caller_address, \n    action, \n    delegator_address,\n    validator_address,  \n    amount, \n    currency, \n    decimal\nFROM {{ ref('silver__staking_rewards') }}", "doc_id": "40332814-ca92-49d2-897a-8951e006feb4", "embedding": null, "doc_hash": "6617a8cdacff68f27ffc4dfbe15a9c8023827bfb1166d9ac59b82e461e578aeb", "extra_info": {"file_path": "models/gold/core__fact_staking_rewards.sql", "file_name": "core__fact_staking_rewards.sql"}, "node_info": {"start": 0, "end": 416, "_node_type": "1"}, "relationships": {"1": "3351ce74f5c858772583b0521ebfcbc340942a43"}}, "__type__": "1"}, "e825797b-b0bb-4490-8f4e-65e8985b02b9": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_staking_rewards\n    description: Records of all claimed rewards earned from staking that have occurred on Osmosis, dating back to the genesis block. These actions include claim and withdrawal_rewards. The columns blockchain, chain_id, and tx_status will be deprecating soon.\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_CALLER_ADDRESS\n        description: \"{{ doc('tx_caller_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: ACTION\n        description: \"{{ doc('action') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist \n      - name: DELEGATOR_ADDRESS\n        description: \"{{ doc('delegator_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist \n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VALIDATOR_ADDRESS\n        description: \"{{ doc('validator_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"\n", "doc_id": "e825797b-b0bb-4490-8f4e-65e8985b02b9", "embedding": null, "doc_hash": "8d5fb9895c03cf39ddbd573f6ede910cb595526b23910c5241aeb117e51aa343", "extra_info": {"file_path": "models/gold/core__fact_staking_rewards.yml", "file_name": "core__fact_staking_rewards.yml"}, "node_info": {"start": 0, "end": 1815, "_node_type": "1"}, "relationships": {"1": "d9f124f0acc944891c0383543f524e0af4c170a9"}}, "__type__": "1"}, "36f125a4-e9ea-4731-9f4d-c36d5e6e43e4": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    meta ={ 'database_tags':{ 'table':{ 'PURPOSE': 'STAKING' }} }\n) }}\n\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    action,\n    delegator_address,\n    amount,\n    currency,\n    DECIMAL,\n    validator_address,\n    lock_id,\n    IFF(\n        action = 'undelegate'\n        AND currency IS NOT NULL,\n        TRUE,\n        FALSE\n    ) AS is_unpool\nFROM\n    {{ ref('silver__superfluid_staking') }}\nUNION ALL\nSELECT\n    A.block_id,\n    A.block_timestamp,\n    A.tx_id,\n    A.tx_succeeded,\n    A.msg_action AS action,\n    A.locker_address AS delegator_address,\n    amount,\n    currency,\n    DECIMAL,\n    A.validator_address,\n    A.lock_id,\n    FALSE AS is_unpool\nFROM\n    {{ ref('silver__locked_liquidity_actions_convert') }} A\n", "doc_id": "36f125a4-e9ea-4731-9f4d-c36d5e6e43e4", "embedding": null, "doc_hash": "4405bd5141e0cf491a0e28e44fd6db3d2848f622a2ad1f09dbbb5cc551177eee", "extra_info": {"file_path": "models/gold/core__fact_superfluid_staking.sql", "file_name": "core__fact_superfluid_staking.sql"}, "node_info": {"start": 0, "end": 787, "_node_type": "1"}, "relationships": {"1": "1654603b384c0623c5ac0a837cd9ce1b1e1b3e42"}}, "__type__": "1"}, "9d8a70f1-f80c-4b01-8d8d-dbc779b28ae1": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_superfluid_staking\n    description: Records of all staking related transactions that have occurred on Osmosis, dating back to the genesis block. These actions include delegate, undelegate, and redelegate. The columns blockchain, chain_id, and tx_status will be deprecating soon.\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: ACTION\n        description: \"{{ doc('action') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: DELEGATOR_ADDRESS\n        description: \"{{ doc('delegator_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VALIDATOR_ADDRESS\n        description: \"{{ doc('validator_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: LOCK_ID\n        description: An ID corresponding to the locking step of the transaction.  \n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: IS_UNPOOL\n        description: Boolean value indicating whether the transaction is an unpool action.\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "9d8a70f1-f80c-4b01-8d8d-dbc779b28ae1", "embedding": null, "doc_hash": "dc3f1b5b89f09e81f4bd510b6629093ead765bc7639b558268d9b2c3e07dd2ab", "extra_info": {"file_path": "models/gold/core__fact_superfluid_staking.yml", "file_name": "core__fact_superfluid_staking.yml"}, "node_info": {"start": 0, "end": 2086, "_node_type": "1"}, "relationships": {"1": "47096e1d78450578ebe358ddb07d88fc59e2ee7f"}}, "__type__": "1"}, "687f149f-7b29-40e9-890a-e58f2496ff8b": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n      meta={\n        'database_tags':{\n            'table': {\n                'PURPOSE': 'SWAPS'\n            }\n        }\n      }\n) }}\n\nSELECT \n    block_id, \n    block_timestamp, \n    tx_id, \n    tx_succeeded, \n    trader, \n    from_amount, \n    from_currency, \n    from_decimal, \n    to_amount, \n    to_currency, \n    to_decimal, \n    pool_ids\nFROM {{ ref('silver__swaps') }}", "doc_id": "687f149f-7b29-40e9-890a-e58f2496ff8b", "embedding": null, "doc_hash": "96a3ab4f599334d3ebb35c24601575a30f2fcbc5cea66af342ad2d248cffc450", "extra_info": {"file_path": "models/gold/core__fact_swaps.sql", "file_name": "core__fact_swaps.sql"}, "node_info": {"start": 0, "end": 414, "_node_type": "1"}, "relationships": {"1": "619c8824737b2ff7df9433fd345a52eba380cf4a"}}, "__type__": "1"}, "08d31965-b6ba-42f6-bb21-04fdfe4527f7": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_swaps\n    description: Records of all transactions that have occurred on Osmosis, dating back to the genesis block. The columns blockchain, chain_id, and tx_status will be deprecating soon. \n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TRADER\n        description: \"{{ doc('trader') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: FROM_AMOUNT\n        description: \"{{ doc('from_amount') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: FROM_CURRENCY\n        description: \"{{ doc('from_currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: FROM_DECIMAL\n        description: \"{{ doc('from_decimal') }}\"\n      - name: TO_AMOUNT\n        description: \"{{ doc('to_amount') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TO_CURRENCY\n        description: \"{{ doc('to_currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TO_DECIMAL\n        description: \"{{ doc('to_decimal') }}\"\n      - name: POOL_IDS\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n", "doc_id": "08d31965-b6ba-42f6-bb21-04fdfe4527f7", "embedding": null, "doc_hash": "97cadac3b7f7d215ec821e0968964531237fe9400153db19fdb3766882165e6d", "extra_info": {"file_path": "models/gold/core__fact_swaps.yml", "file_name": "core__fact_swaps.yml"}, "node_info": {"start": 0, "end": 1785, "_node_type": "1"}, "relationships": {"1": "244d0cd82c097a4bebaa13454157d531d5ddd287"}}, "__type__": "1"}, "4dfbd9c3-eaa2-4be9-8294-5ed7da35b484": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    meta ={ 'database_tags':{ 'table':{ 'PURPOSE': 'DEFI, PRICES' }} }\n) }}\n\nSELECT\n    block_id,\n    block_date,\n    currency,\n    market_cap,\n    price,\n    price_usd,\n    liquidity,\n    liquidity_usd,\n    volume,\n    volume_usd\nFROM\n    {{ ref('silver__token_summary_day') }}\n", "doc_id": "4dfbd9c3-eaa2-4be9-8294-5ed7da35b484", "embedding": null, "doc_hash": "b400ecbbfd1a8ed862cc4607b760ee3b34c0f3e93dfd644bdbf8fa9f42e6e607", "extra_info": {"file_path": "models/gold/core__fact_token_day.sql", "file_name": "core__fact_token_day.sql"}, "node_info": {"start": 0, "end": 317, "_node_type": "1"}, "relationships": {"1": "8f30e5767b0a9efc2807c674aa5078539d2ffa9a"}}, "__type__": "1"}, "e69b8441-d37d-4f7a-9d65-665863982a9e": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_token_day\n    description: The table is an daily summary of each asset within Osmosis\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_DATE\n        description: The block \n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description:  \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MARKET_CAP\n        description: This is always null\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PRICE\n        description: \"The price of the token as denominated in osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PRICE_USD\n        description: \"The price of the token in USD\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: LIQUIDITY\n        description: \"The total value of tokens within the pools, denominated in osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: LIQUIDITY_USD\n        description: \"The total value of tokens within the pools, denominated in osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VOLUME\n        description: \"The total value of tokens swapped in and out of the pools, denominated in osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VOLUME_USD\n        description:  \"The total value of tokens swapped in and out of the pools, denominated in USD\"\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "e69b8441-d37d-4f7a-9d65-665863982a9e", "embedding": null, "doc_hash": "8d363a4b4ea2ed9c2431ad4df322045118d50d73113d42775f6ed4bb528d39de", "extra_info": {"file_path": "models/gold/core__fact_token_day.yml", "file_name": "core__fact_token_day.yml"}, "node_info": {"start": 0, "end": 1722, "_node_type": "1"}, "relationships": {"1": "45131f2ca0355f8b83ec0ce3fa5b2bb39990c609"}}, "__type__": "1"}, "c52d8144-1b16-423c-a345-b7155585cd9e": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"tx_id\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH fee AS (\n\n    SELECT\n        tx_id,\n        attribute_value AS fee\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        attribute_key = 'fee'\n\n{% if is_incremental() %}\nAND _inserted_timestamp :: DATE >= CURRENT_DATE -2\n{% endif %}\nqualify(ROW_NUMBER() over(PARTITION BY tx_id\nORDER BY\n    msg_index)) = 1\n),\nspender AS (\n    SELECT\n        tx_id,\n        SPLIT_PART(\n            attribute_value,\n            '/',\n            0\n        ) AS tx_from\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        attribute_key = 'acc_seq'\n\n{% if is_incremental() %}\nAND _inserted_timestamp :: DATE >= CURRENT_DATE -2\n{% endif %}\n\nqualify(ROW_NUMBER() over(PARTITION BY tx_id\nORDER BY\n    msg_index)) = 1\n)\nSELECT\n    t.block_id,\n    t.block_timestamp,\n    t.tx_id,\n    s.tx_from,\n    tx_succeeded,\n    codespace,\n    COALESCE(\n        fee,\n        '0uosmo'\n    ) AS fee,\n    gas_used,\n    gas_wanted,\n    tx_code,\n    msgs\nFROM\n    {{ ref('silver__transactions') }}\n    t\n    LEFT OUTER JOIN fee f\n    ON t.tx_id = f.tx_id\n    LEFT OUTER JOIN spender s\n    ON t.tx_id = s.tx_id\n\n{% if is_incremental() %}\nWHERE\n    _inserted_timestamp :: DATE >= CURRENT_DATE -2\n{% endif %}\n", "doc_id": "c52d8144-1b16-423c-a345-b7155585cd9e", "embedding": null, "doc_hash": "dbed184c31080a0cafa350b8f93ef811adcf759d1d18c742c648a5ec22e8a685", "extra_info": {"file_path": "models/gold/core__fact_transactions.sql", "file_name": "core__fact_transactions.sql"}, "node_info": {"start": 0, "end": 1361, "_node_type": "1"}, "relationships": {"1": "326aaf7061d07f06849e6eba586789b3294e51d7"}}, "__type__": "1"}, "572be706-cc05-4a0e-bcd2-3d1c8ea2576e": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_transactions\n    description: Records of all transactions that have occurred on Osmosis, dating back to the genesis block. The columns blockchain, chain_id, and tx_status will be deprecating soon. \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_FROM\n        description: \"{{ doc('tx_from') }}\"\n        tests: \n          - not_null: \n              where: tx_succeeded = 'TRUE'\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CODESPACE\n        description: \"{{ doc('codespace') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: FEE\n        description: \"{{ doc('fee') }}\"\n        tests: \n          - not_null\n      - name: GAS_USED\n        description: \"{{ doc('gas_used') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist  \n      - name: GAS_WANTED\n        description: \"{{ doc('gas_wanted') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist  \n      - name: TX_CODE\n        description: \"{{ doc('tx_code') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist \n      - name: MSGS\n        description: \"The underlying json from the messages or events within the transactions\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n", "doc_id": "572be706-cc05-4a0e-bcd2-3d1c8ea2576e", "embedding": null, "doc_hash": "4270e3c89d7cfddd89672c2c790dbd77bcd53f81b90965fd0c1ac1508fa8ae7c", "extra_info": {"file_path": "models/gold/core__fact_transactions.yml", "file_name": "core__fact_transactions.yml"}, "node_info": {"start": 0, "end": 1900, "_node_type": "1"}, "relationships": {"1": "aeb0795606e250b938daed24b05df5e703ebfc07"}}, "__type__": "1"}, "37395874-678a-4c00-9593-f0fdc058f9b0": {"__data__": {"text": "{{ config(\n    materialized = 'view'\n) }}\n\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    transfer_type,\n    sender,\n    amount,\n    currency,\n    DECIMAL,\n    receiver,\n    foreign_address,\n    foreign_chain\nFROM\n    {{ ref('silver__transfers') }}\n", "doc_id": "37395874-678a-4c00-9593-f0fdc058f9b0", "embedding": null, "doc_hash": "77dc0fde034a97908544601f3eff81d3f46255c95ddb9caafa10eee543e3248c", "extra_info": {"file_path": "models/gold/core__fact_transfers.sql", "file_name": "core__fact_transfers.sql"}, "node_info": {"start": 0, "end": 277, "_node_type": "1"}, "relationships": {"1": "3d508b650d643732a6d69d9d8f6f904471081d6f"}}, "__type__": "1"}, "99dfb909-7dcc-45ac-afe7-687b8d77bb9b": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_transfers\n    description: Records of all transfers on Osmosis, including IBC transfers as on- and off-ramps to Osmosis and wallet to wallet transfers. The columns blockchain, chain_id, and tx_status will be deprecating soon.\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TRANSFER_TYPE\n        description: \"{{ doc('transfer_type') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: SENDER\n        description: \"{{ doc('sender') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"\n      - name: RECEIVER\n        description: \"{{ doc('receiver') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: FOREIGN_ADDRESS\n        description: \"{{ doc('foreign_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: FOREIGN_CHAIN\n        description: \"{{ doc('foreign_chain') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "99dfb909-7dcc-45ac-afe7-687b8d77bb9b", "embedding": null, "doc_hash": "5e20abf30c92e69cc5bac3fd3bfe5c87551680e0438448334db5caa5343b8132", "extra_info": {"file_path": "models/gold/core__fact_transfers.yml", "file_name": "core__fact_transfers.yml"}, "node_info": {"start": 0, "end": 1880, "_node_type": "1"}, "relationships": {"1": "693b23e38ee610dfd04fcdf2336ead7a7778d741"}}, "__type__": "1"}, "41f3f7e0-539e-4a53-85c3-05f89457c4e0": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    meta ={ 'database_tags':{ 'table':{ 'PURPOSE': 'STAKING' }}}\n) }}\n\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    tx_caller_address,\n    msg_group,\n    amount,\n    currency,\n    validator_address_operator,\n    validator_address_reward\nFROM\n    {{ ref('silver__validator_commission') }}\n", "doc_id": "41f3f7e0-539e-4a53-85c3-05f89457c4e0", "embedding": null, "doc_hash": "a0394be3e2d88bb3671d98581ba31278c49ec1e42fa10ae2f13710cc9a5ee366", "extra_info": {"file_path": "models/gold/core__fact_validator_commission.sql", "file_name": "core__fact_validator_commission.sql"}, "node_info": {"start": 0, "end": 356, "_node_type": "1"}, "relationships": {"1": "ba556001e64d6b011b62e8c553bf80fe37c51499"}}, "__type__": "1"}, "264d183f-e5c3-46e9-8452-d824c402781e": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_validator_commission\n    description: Information about all validator commission that have been claimed on Axelar. \n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_CALLER_ADDRESS\n        description: \"{{ doc('tx_caller_address') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: AMOUNT\n        description: The amount of tokens in the staking action\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VALIDATOR_ADDRESS_OPERATOR\n        description: \"{{ doc('validator_address') }}\" \n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VALIDATOR_ADDRESS_REWARD\n        description: \"{{ doc('validator_address_reward') }}\" \n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\" \n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "264d183f-e5c3-46e9-8452-d824c402781e", "embedding": null, "doc_hash": "6567f6df49130b26dbc81ae1b8972f4830beef089401c4b73a4de46f71bb9171", "extra_info": {"file_path": "models/gold/core__fact_validator_commission.yml", "file_name": "core__fact_validator_commission.yml"}, "node_info": {"start": 0, "end": 1639, "_node_type": "1"}, "relationships": {"1": "148cb0578cf52b42fc6f90a4393f21c8694b9ad4"}}, "__type__": "1"}, "5d9a7fec-2c3d-4da0-a7c3-a6c5f1c9b796": {"__data__": {"text": "{{ config(\n    materialized = 'view'\n) }}\n\nSELECT\n    address,\n    blockchain,\n    creator,\n    label_type,\n    label_subtype,\n    label,\n    project_name,\n    account_address,\n    delegator_shares,\n    jailed,\n    max_change_rate,\n    max_rate,\n    min_self_delegation,\n    RANK,\n    missed_blocks,\n    raw_metadata\nFROM\n    {{ ref('silver__validator_metadata') }}\n", "doc_id": "5d9a7fec-2c3d-4da0-a7c3-a6c5f1c9b796", "embedding": null, "doc_hash": "c1058989e47296013a2aa497ac2a7de38b6687c92891d0adc7a58d4b283d8655", "extra_info": {"file_path": "models/gold/core__fact_validators.sql", "file_name": "core__fact_validators.sql"}, "node_info": {"start": 0, "end": 366, "_node_type": "1"}, "relationships": {"1": "05f65dfc81b7e51c8c09f8fc5c39f831299d6a68"}}, "__type__": "1"}, "e1248606-73be-45c2-a52e-ad283f0984bf": {"__data__": {"text": "version: 2\nmodels:\n  - name: core__fact_validators\n    description: Contains validator metadata for assets on the Osmosis blockchain. This table was sourced from an API and may not contain every token.\n    columns:\n      - name: ADDRESS\n        description: \"{{ doc('address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCKCHAIN\n        description: \"{{ doc('blockchain') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: CREATOR\n        description: \"{{ doc('creator') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: LABEL_TYPE\n        description: \"{{ doc('label_type') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: LABEL_SUBTYPE\n        description: \"{{ doc('label_subtype') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: LABEL \n        description: \"{{ doc('label') }}\" \n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PROJECT_NAME\n        description: \"{{ doc('project_name') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: ACCOUNT_ADDRESS\n        description: The osmosis address of the user / entity that operates the validator. \n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: DELEGATOR_SHARES\n        description: The number of tokens staked to the validator. \n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: JAILED\n        description: FALSE when a validator is not jailed, TRUE when a validator is jailed\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MAX_CHANGE_RATE\n        description: The maximum rate at which a validator can change their commission per day. \n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MAX_RATE\n        description: The maximum commission rate that the validator can charge\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MIN_SELF_DELEGATION\n        description: The minimum number of OSMO tokens that the operator must be staking with their own validator\n        tests: \n          -", "doc_id": "e1248606-73be-45c2-a52e-ad283f0984bf", "embedding": null, "doc_hash": "5c459c1acac637213b8787f70cffebdc6cd782032c7affead66f0a38e62bc53f", "extra_info": {"file_path": "models/gold/core__fact_validators.yml", "file_name": "core__fact_validators.yml"}, "node_info": {"start": 0, "end": 2257, "_node_type": "1"}, "relationships": {"1": "80d75cd1ac9594c5d835edd0d79a1642d13a2599", "3": "5ac432cd-b168-444a-bc18-b498bb4fe4d3"}}, "__type__": "1"}, "5ac432cd-b168-444a-bc18-b498bb4fe4d3": {"__data__": {"text": "       tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: RANK\n        description: The rank of the validator in the validator set. Rank is determined by the number of OSMO tokens staked to the validator\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MISSED_BLOCKS\n        description: The number of blocks the validator has been down for during it's lifetime. \n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: RAW_METADATA\n        description: \"{{ doc('raw_metadata') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "5ac432cd-b168-444a-bc18-b498bb4fe4d3", "embedding": null, "doc_hash": "599f03e821b44435ee061dd252ae82b1f4f54beaf6b0f55234709baa101846be", "extra_info": {"file_path": "models/gold/core__fact_validators.yml", "file_name": "core__fact_validators.yml"}, "node_info": {"start": 2231, "end": 2862, "_node_type": "1"}, "relationships": {"1": "80d75cd1ac9594c5d835edd0d79a1642d13a2599", "2": "e1248606-73be-45c2-a52e-ad283f0984bf"}}, "__type__": "1"}, "4acb4586-85a1-47e2-8adf-1bc48cbbeb48": {"__data__": {"text": "{{ config(\n    materialized = 'view'\n) }}\n\nWITH pools AS (\n\n    SELECT\n        pool_id\n    FROM\n        {{ ref('silver__pool_metadata') }},\n        LATERAL FLATTEN(assets)\n    WHERE\n        VALUE :asset_address = 'ibc/573FCD90FACEE750F55A8864EF7D38265F07E5A9273FA0E8DAFD39951332B580'\n)\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    liquidity_provider_address,\n    action,\n    pool_id,\n    COALESCE(\n        amount / pow(\n            10,\n            CASE\n                WHEN amount LIKE 'gamm/pool/%' THEN 18\n                ELSE b.decimal\n            END\n        ),\n        amount\n    ) AS amount,\n    currency,\n    b.project_name AS symbol\nFROM\n    {{ ref('silver__liquidity_provider_actions') }} A\n    LEFT JOIN {{ ref('silver__asset_metadata') }}\n    b\n    ON A.currency = b.address\nWHERE\n    pool_id IN (\n        SELECT\n            pool_id\n        FROM\n            pools\n    )\n", "doc_id": "4acb4586-85a1-47e2-8adf-1bc48cbbeb48", "embedding": null, "doc_hash": "0ca820bddd03d409ddbe4dac64c3f2d3a8c840aa53a4a56bd62fa725558fddd4", "extra_info": {"file_path": "models/gold/mars/mars__ez_liquidity_provider_actions.sql", "file_name": "mars__ez_liquidity_provider_actions.sql"}, "node_info": {"start": 0, "end": 911, "_node_type": "1"}, "relationships": {"1": "9d6070c43f3265e0087d5e55b4266e72c352816b"}}, "__type__": "1"}, "2dcdec01-208b-472a-b92b-1258909677fc": {"__data__": {"text": "version: 2\nmodels:\n  - name: mars__ez_liquidity_provider_actions\n    description: Includes all actions entering and exiting liquidity mars pools. \n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: LIQUIDITY_PROVIDER_ADDRESS\n        description: \"{{ doc('liquidity_provider_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: ACTION\n        description: \"{{ doc('action') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: POOL_ID\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: SYMBOL\n        description: The token symbol.\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "2dcdec01-208b-472a-b92b-1258909677fc", "embedding": null, "doc_hash": "9829413b15e6029ebe166cf89e5ea6de2ee7c95d97610cd69c6a9f2d4ed827fb", "extra_info": {"file_path": "models/gold/mars/mars__ez_liquidity_provider_actions.yml", "file_name": "mars__ez_liquidity_provider_actions.yml"}, "node_info": {"start": 0, "end": 1551, "_node_type": "1"}, "relationships": {"1": "6b3e86c03f5a0261067a61adc7cf3c75f1a0ce7e"}}, "__type__": "1"}, "4d774b43-860b-47a1-959c-41d9e031e84d": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    meta ={ 'database_tags':{ 'table':{ 'PURPOSE': 'DEFI' }} }\n) }}\n\nWITH pools AS (\n\n    SELECT\n        pool_id\n    FROM\n        {{ ref('silver__pool_metadata') }},\n        LATERAL FLATTEN(assets)\n    WHERE\n        VALUE :asset_address = 'ibc/573FCD90FACEE750F55A8864EF7D38265F07E5A9273FA0E8DAFD39951332B580'\n)\nSELECT\n    block_id,\n    block_date,\n    pool_id,\n    currency,\n    b.project_name AS symbol,\n    fees,\n    fees_usd,\n    fee_type\nFROM\n    {{ ref('silver__pool_fee_summary_day') }} A\n    LEFT JOIN {{ ref('silver__asset_metadata') }}\n    b\n    ON A.currency = b.address\nWHERE\n    pool_id IN (\n        SELECT\n            pool_id\n        FROM\n            pools\n    )\n", "doc_id": "4d774b43-860b-47a1-959c-41d9e031e84d", "embedding": null, "doc_hash": "096e033e09bab086b07cc3dce5dc47723db47a6f60464d2db2e57b2f11d80057", "extra_info": {"file_path": "models/gold/mars/mars__ez_pool_fee_day.sql", "file_name": "mars__ez_pool_fee_day.sql"}, "node_info": {"start": 0, "end": 715, "_node_type": "1"}, "relationships": {"1": "5c6beba5703cc7b389211a478a64cbcda8ceabf2"}}, "__type__": "1"}, "239ea15d-b0a0-46fa-ace7-c18c8912f18b": {"__data__": {"text": "version: 2\nmodels:\n  - name: mars__ez_pool_fee_day\n    description: The table is an daily summary of fees accumulated each pool within Osmosis\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_DATE\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: POOL_ID\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description: \"The currency the fee was paid in\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: SYMBOL\n        description: \"The symbol of the currency the fee was paid in\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: FEES\n        description: \"The decimal adjusted amount of the fee paid\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: FEES_USD\n        description: \"The USD amount of the fee paid\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: FEE_TYPE\n        description: \"The type of fee paid. Will be either 'swap' or 'exit'\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n  ", "doc_id": "239ea15d-b0a0-46fa-ace7-c18c8912f18b", "embedding": null, "doc_hash": "eeb7b4b279ade9843803b4c3a59edcedb6d918ceea8322df64b38a687d61f773", "extra_info": {"file_path": "models/gold/mars/mars__ez_pool_fee_day.yml", "file_name": "mars__ez_pool_fee_day.yml"}, "node_info": {"start": 0, "end": 1344, "_node_type": "1"}, "relationships": {"1": "6fb765f3cd6e3114a32558c0a80177f57628e624"}}, "__type__": "1"}, "4d938f70-72fd-48e5-b4a6-1f79ef59e8fe": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    meta ={ 'database_tags':{ 'table':{ 'PURPOSE': 'DEFI' }} }\n) }}\n\nWITH pools AS (\n\n    SELECT\n        pool_id\n    FROM\n        {{ ref('silver__pool_metadata') }},\n        LATERAL FLATTEN(assets)\n    WHERE\n        VALUE :asset_address = 'ibc/573FCD90FACEE750F55A8864EF7D38265F07E5A9273FA0E8DAFD39951332B580'\n)\nSELECT\n    block_id,\n    block_timestamp,\n    pool_id,\n    token_0_denom AS token_0_currency,\n    b.project_name AS token_0_symbol,\n    token_0_amount,\n    token_1_denom AS token_1_currency,\n    C.project_name AS token_1_symbol,\n    token_1_amount,\n    price,\n    price_usd,\n    twap,\n    twap_usd,\n    liquidity,\n    liquidity_usd,\n    volume,\n    volume_usd\nFROM\n    {{ ref('silver__pool_summary_hour') }} A\n    LEFT JOIN {{ ref('silver__asset_metadata') }}\n    b\n    ON A.token_0_denom = b.address\n    LEFT JOIN {{ ref('silver__asset_metadata') }} C\n    ON A.token_1_denom = C.address\nWHERE\n    pool_id IN (\n        SELECT\n            pool_id\n        FROM\n            pools\n    )\n", "doc_id": "4d938f70-72fd-48e5-b4a6-1f79ef59e8fe", "embedding": null, "doc_hash": "5640542ff162784f5f82c02f3ad31941f7b8195db4a8bea4d5388f6b3088b7da", "extra_info": {"file_path": "models/gold/mars/mars__ez_pool_hour.sql", "file_name": "mars__ez_pool_hour.sql"}, "node_info": {"start": 0, "end": 1033, "_node_type": "1"}, "relationships": {"1": "6a896eaccad79aec7d025611485d396eea73a21e"}}, "__type__": "1"}, "3c6ef6da-9bf2-41a5-9454-81f132c18239": {"__data__": {"text": "version: 2\nmodels:\n  - name: mars__ez_pool_hour\n    description:  \"The table is an hourly summary of each pool within Osmosis. The table is currently limited to show at most four tokens. For pools that contain more than four tokens, those tokens are omitted.\"\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: POOL_ID\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TOKEN_0_CURRENCY\n        description: \"The first token address contained within this liquidity pool\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TOKEN_0_SYMBOL\n        description: \"The token symbol of first token address contained within this liquidity pool\"\n        tests: \n          - dbt_expectations.expect_column_to_exist            \n      - name: TOKEN_0_AMOUNT\n        description: \"The decimal adjusted amount of the first token within this liquidity pool\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TOKEN_1_CURRENCY\n        description: \"The second token address contained within this liquidity pool\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TOKEN_1_SYMBOL\n        description: \"The token symbol of second token address contained within this liquidity pool\"\n        tests: \n          - dbt_expectations.expect_column_to_exist      \n      - name: TOKEN_1_AMOUNT\n        description: \"The decimal adjusted amount of the second token within this liquidity pool\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PRICE\n        description: \"The price of the first token as denominated in the token_1_currency. This only applies to two-token pools where one of the tokens is osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PRICE_USD\n        description: \"The price of the token in USD\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TWAP\n        description: \"The time weighted asset price, denominated in osmos. This is calculated by averaging the high,", "doc_id": "3c6ef6da-9bf2-41a5-9454-81f132c18239", "embedding": null, "doc_hash": "40df07272d0e9adac81c028f957a016b354c37ee12bb5decd1fafe6ca2eb2a3c", "extra_info": {"file_path": "models/gold/mars/mars__ez_pool_hour.yml", "file_name": "mars__ez_pool_hour.yml"}, "node_info": {"start": 0, "end": 2390, "_node_type": "1"}, "relationships": {"1": "5181cd0b483f1c490db96613e0a1ace56b8778a5", "3": "8d8d77c8-f065-4198-acd3-0789281857d5"}}, "__type__": "1"}, "8d8d77c8-f065-4198-acd3-0789281857d5": {"__data__": {"text": "asset price, denominated in osmos. This is calculated by averaging the high, low, open, and close of the day\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TWAP_USD\n        description: The time weighted asset price, denominated in USD. This is calculated by averaging the high, low, open, and close of the day\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: LIQUIDITY\n        description: \"The total value of tokens within the pool, denominated in osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: LIQUIDITY_USD\n        description: \"The total value of tokens within the pool, denominated in osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VOLUME\n        description: \"The total value of tokens swapped in and out of the pool, denominated in osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VOLUME_USD\n        description:  \"The total value of tokens swapped in and out of the pool, denominated in USD\"\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "8d8d77c8-f065-4198-acd3-0789281857d5", "embedding": null, "doc_hash": "596d155012b6e63f09d73e507b4f72479764e41d6e91cfbc22fba702b5954301", "extra_info": {"file_path": "models/gold/mars/mars__ez_pool_hour.yml", "file_name": "mars__ez_pool_hour.yml"}, "node_info": {"start": 2314, "end": 3475, "_node_type": "1"}, "relationships": {"1": "5181cd0b483f1c490db96613e0a1ace56b8778a5", "2": "3c6ef6da-9bf2-41a5-9454-81f132c18239"}}, "__type__": "1"}, "5bc9ddd7-7f3e-4164-a76f-d1a7c3949614": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    meta ={ 'database_tags':{ 'table':{ 'PROTOCOL': 'MARS',\n    'PURPOSE': 'DEFI' }} }\n) }}\n\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    msg_group,\n    msg_sub_group,\n    msg_index,\n    contract_name,\n    action,\n    sender,\n    recipient,\n    on_behalf_of,\n    denom AS currency,\n    amount :: INT amount,\n    amount_scaled :: INT amount_scaled\nFROM\n    {{ ref('silver__red_bank_actions') }}\nWHERE\n    action IN (\n        'deposit',\n        'withdraw',\n        'borrow',\n        'repay'\n    )\n", "doc_id": "5bc9ddd7-7f3e-4164-a76f-d1a7c3949614", "embedding": null, "doc_hash": "ba39d46f6d91879427839c3ad9c45cb522c3895f4c525fe43fa73edc085045a0", "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_actions.sql", "file_name": "mars__ez_redbank_actions.sql"}, "node_info": {"start": 0, "end": 563, "_node_type": "1"}, "relationships": {"1": "ff83fead0ffbc4ce2d3f4b6b49b079d8b3821fad"}}, "__type__": "1"}, "90a2b3a2-d7a0-4f02-a1df-d5eb004ad074": {"__data__": {"text": "version: 2\nmodels:\n  - name: mars__ez_redbank_actions\n    description: Records of all collateral and debt actions taken using MARS red bank on osmosis\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n         - dbt_expectations.expect_column_to_exist\n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MSG_SUB_GROUP\n        description: \"{{ doc('msg_sub_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MSG_INDEX\n        description: \"{{ doc('msg_index') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CONTRACT_NAME\n        description: The name of the contract that was interacted with\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: ACTION\n        description: The action that took place in the transaction. This will be one of deposit, withdraw, borrow, or repay.\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: SENDER\n        description: The address that sent the transactions\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: RECIPIENT\n        description: The address that recieved the tokens\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: ON_BEHALF_OF\n        description: Often then same as the sender or recipient, but could be another address\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n", "doc_id": "90a2b3a2-d7a0-4f02-a1df-d5eb004ad074", "embedding": null, "doc_hash": "922e4ee94210ac9b08ac980758201e79261613c0def430e5715d5441d7c04530", "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_actions.yml", "file_name": "mars__ez_redbank_actions.yml"}, "node_info": {"start": 0, "end": 2148, "_node_type": "1"}, "relationships": {"1": "b2133b0461cf783d09365e776c55dfdc35c903da", "3": "e0ca31a5-1c29-40d0-be60-109c756859fa"}}, "__type__": "1"}, "e0ca31a5-1c29-40d0-be60-109c756859fa": {"__data__": {"text": "   - dbt_expectations.expect_column_to_exist\n      - name: AMOUNT\n        description: The amount of the token that was transfered\n        tests: \n          - dbt_expectations.expect_column_to_exist\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: AMOUNT_SCALED\n        description: Total amount scaled for the market's currency\n        tests: \n          - dbt_expectations.expect_column_to_exist\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT", "doc_id": "e0ca31a5-1c29-40d0-be60-109c756859fa", "embedding": null, "doc_hash": "5eab6fc46ec2b0e2db0c189ee1263ced2ac8e95c632c41f9c81c6c72a55f2d1d", "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_actions.yml", "file_name": "mars__ez_redbank_actions.yml"}, "node_info": {"start": 2103, "end": 2766, "_node_type": "1"}, "relationships": {"1": "b2133b0461cf783d09365e776c55dfdc35c903da", "2": "90a2b3a2-d7a0-4f02-a1df-d5eb004ad074"}}, "__type__": "1"}, "d9041d0f-9f98-4143-855e-616faa95a403": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    meta ={ 'database_tags':{ 'table':{ 'PROTOCOL': 'MARS',\n    'PURPOSE': 'DEFI' }} }\n) }}\n\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    msg_group,\n    msg_sub_group,\n    msg_index,\n    contract_name,\n    action,\n    USER,\n    asset_index,\n    denom AS currency,\n    rewards_accrued :: INT AS rewards_accrued\nFROM\n    {{ ref('silver__red_bank_actions') }}\nWHERE\n    action = 'balance_change'\n", "doc_id": "d9041d0f-9f98-4143-855e-616faa95a403", "embedding": null, "doc_hash": "bd4ae6664872a8c208ff23e7b7f3d3b9176a8c5d0ee730104d1c0d25b93e5be5", "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_balance_changes.sql", "file_name": "mars__ez_redbank_balance_changes.sql"}, "node_info": {"start": 0, "end": 461, "_node_type": "1"}, "relationships": {"1": "b296bd078ba3fd1110602ab8611e026397cdd6e0"}}, "__type__": "1"}, "26eb6508-32c7-43fa-b73b-3c0eed56933e": {"__data__": {"text": "version: 2\nmodels:\n  - name: mars__ez_redbank_balance_changes\n    description: Records of all balance change actions that occured within MARS red bank on osmosis\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n         - dbt_expectations.expect_column_to_exist\n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MSG_SUB_GROUP\n        description: \"{{ doc('msg_sub_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MSG_INDEX\n        description: \"{{ doc('msg_index') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CONTRACT_NAME\n        description: The name of the contract that was interacted with\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: ACTION\n        description: The action that took place in the transaction. This always be balance_change.\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: USER\n        description: The address that the balance change is relevant for\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: ASSET_INDEX\n        description: The index of the asset\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: REWARDS_ACCRUED\n        description: The amount of rewards that have accured\n        tests: \n          - dbt_expectations.expect_column_to_exist\n          -", "doc_id": "26eb6508-32c7-43fa-b73b-3c0eed56933e", "embedding": null, "doc_hash": "39f97cca534f38da8dba53564768d97e175c5b327d6cfae1c487135700e07395", "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_balance_changes.yml", "file_name": "mars__ez_redbank_balance_changes.yml"}, "node_info": {"start": 0, "end": 2113, "_node_type": "1"}, "relationships": {"1": "f0b8cb9c584f353dd6dee279d653c87ec86011c0", "3": "3de9b0b2-9388-4e0b-b591-c0b24c31d0b4"}}, "__type__": "1"}, "3de9b0b2-9388-4e0b-b591-c0b24c31d0b4": {"__data__": {"text": "         - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      ", "doc_id": "3de9b0b2-9388-4e0b-b591-c0b24c31d0b4", "embedding": null, "doc_hash": "2549dd42fd8e4e35598f49f3f43c29ea43f66cd3ee44487d98c5a320fd56a001", "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_balance_changes.yml", "file_name": "mars__ez_redbank_balance_changes.yml"}, "node_info": {"start": 2103, "end": 2259, "_node_type": "1"}, "relationships": {"1": "f0b8cb9c584f353dd6dee279d653c87ec86011c0", "2": "26eb6508-32c7-43fa-b73b-3c0eed56933e"}}, "__type__": "1"}, "f7341639-3a37-4e61-a4a1-3bfe81d04714": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    meta ={ 'database_tags':{ 'table':{ 'PROTOCOL': 'MARS',\n    'PURPOSE': 'DEFI' }} }\n) }}\n\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    msg_group,\n    msg_sub_group,\n    msg_index,\n    contract_name,\n    action,\n    USER,\n    mars_rewards\nFROM\n    {{ ref('silver__red_bank_actions') }}\nWHERE\n    action = 'claim_rewards'\n", "doc_id": "f7341639-3a37-4e61-a4a1-3bfe81d04714", "embedding": null, "doc_hash": "6cbc1942818e33cac4a4cad80e8a67d6dcde02bd10c76e8afaec43e0e3fd9ac0", "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_reward_claims.sql", "file_name": "mars__ez_redbank_reward_claims.sql"}, "node_info": {"start": 0, "end": 391, "_node_type": "1"}, "relationships": {"1": "e88a8ac7e134d22e0e7f0889522f225b367ce504"}}, "__type__": "1"}, "826f31f6-eb9c-4fa2-b934-54bb41fd6848": {"__data__": {"text": "version: 2\nmodels:\n  - name: mars__ez_redbank_reward_claims\n    description: Records of all reward claim actions that occured within MARS red bank on osmosis\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n         - dbt_expectations.expect_column_to_exist\n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MSG_SUB_GROUP\n        description: \"{{ doc('msg_sub_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MSG_INDEX\n        description: \"{{ doc('msg_index') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CONTRACT_NAME\n        description: The name of the contract that was interacted with\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: ACTION\n        description: The action that took place in the transaction. This will always be claim_rewards.\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: USER\n        description: The address that the reward claim is relevant for\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MARS_REWARDS\n        description: The amount of rewards that were claimed\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "826f31f6-eb9c-4fa2-b934-54bb41fd6848", "embedding": null, "doc_hash": "f550ce8714421fb4986eec85dd595ba18e83bd2e1da6f6909ad3b331952ca7bd", "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_reward_claims.yml", "file_name": "mars__ez_redbank_reward_claims.yml"}, "node_info": {"start": 0, "end": 1822, "_node_type": "1"}, "relationships": {"1": "eb2667288eac01ad2f76127cac00e090e3506bdb"}}, "__type__": "1"}, "2f5e8ced-8692-4121-8716-16dfca0ea091": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    meta ={ 'database_tags':{ 'table':{ 'PROTOCOL': 'MARS',\n    'PURPOSE': 'DEFI' }} }\n) }}\n\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    msg_group,\n    msg_sub_group,\n    msg_index,\n    contract_name,\n    action,\n    to_address,\n    denom AS currency,\n    amount :: INT AS amount\nFROM\n    {{ ref('silver__red_bank_actions') }}\nWHERE\n    action = 'distribute_rewards'\n", "doc_id": "2f5e8ced-8692-4121-8716-16dfca0ea091", "embedding": null, "doc_hash": "1a34f43a1cad3389b95329a2900f70d47bc184d34b99804ae016884697b5aeb9", "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_reward_distributions.sql", "file_name": "mars__ez_redbank_reward_distributions.sql"}, "node_info": {"start": 0, "end": 436, "_node_type": "1"}, "relationships": {"1": "734d95b6ff9211003fb19f1c503a226f394e0986"}}, "__type__": "1"}, "a9cc360e-4f28-463c-b6a4-cbae81ccbf32": {"__data__": {"text": "version: 2\nmodels:\n  - name: mars__ez_redbank_reward_distributions\n    description: Records of all reward claim actions that occured within MARS red bank on osmosis\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n         - dbt_expectations.expect_column_to_exist\n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MSG_SUB_GROUP\n        description: \"{{ doc('msg_sub_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: MSG_INDEX\n        description: \"{{ doc('msg_index') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CONTRACT_NAME\n        description: The name of the contract that was interacted with\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: ACTION\n        description: The action that took place in the transaction. This will always be distribute_rewards.\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TO_ADDRESS\n        description: The address that the distribution went to\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist      \n      - name: AMOUNT\n        description: The amount of token that was distributed\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "a9cc360e-4f28-463c-b6a4-cbae81ccbf32", "embedding": null, "doc_hash": "42cb1fe8262f0f1817d0e1f3aef0b2c2944680596f6b798c36a54adc4b6210a0", "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_reward_distributions.yml", "file_name": "mars__ez_redbank_reward_distributions.yml"}, "node_info": {"start": 0, "end": 1969, "_node_type": "1"}, "relationships": {"1": "dccbe53be30151846212f49b84ab532c5a1528f1"}}, "__type__": "1"}, "a34f27b1-8fd5-422d-9f10-d74b4c2f365d": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    meta ={ 'database_tags':{ 'table':{ 'PURPOSE': 'SWAPS' }} }\n) }}\n\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    trader,\n    COALESCE(\n        from_amount / pow(\n            10,\n            CASE\n                WHEN from_amount LIKE 'gamm/pool/%' THEN 18\n                ELSE f.decimal\n            END\n        ),\n        from_amount\n    ) AS from_amount,\n    from_currency,\n    f.project_name from_symbol,\n    COALESCE(\n        to_amount / pow(\n            10,\n            CASE\n                WHEN to_amount LIKE 'gamm/pool/%' THEN 18\n                ELSE t.decimal\n            END\n        ),\n        to_amount\n    ) AS to_amount,\n    to_currency,\n    t.project_name to_symbol,\n    pool_ids\nFROM\n    {{ ref('silver__swaps') }} A\n    LEFT JOIN {{ ref('silver__asset_metadata') }}\n    f\n    ON A.from_currency = f.address\n    LEFT JOIN {{ ref('silver__asset_metadata') }}\n    t\n    ON A.to_currency = t.address\nWHERE\n    from_currency = 'ibc/573FCD90FACEE750F55A8864EF7D38265F07E5A9273FA0E8DAFD39951332B580'\n    OR to_currency = 'ibc/573FCD90FACEE750F55A8864EF7D38265F07E5A9273FA0E8DAFD39951332B580'\n", "doc_id": "a34f27b1-8fd5-422d-9f10-d74b4c2f365d", "embedding": null, "doc_hash": "a6afd85ae956d745085c8fe2bc7f0f0c45f5ac90772da5b49b51e4ddfc4dc081", "extra_info": {"file_path": "models/gold/mars/mars__ez_swaps.sql", "file_name": "mars__ez_swaps.sql"}, "node_info": {"start": 0, "end": 1169, "_node_type": "1"}, "relationships": {"1": "d1607385afc4ed2ddff08dfd3bdbc533cd3a9323"}}, "__type__": "1"}, "8788af37-eec0-4844-ba24-2cfe3cf44cc6": {"__data__": {"text": "version: 2\nmodels:\n  - name: mars__ez_swaps\n    description: Records of all transactions that have occurred on Osmosis that involved MARS, dating back to the genesis block.\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TRADER\n        description: \"{{ doc('trader') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: FROM_AMOUNT\n        description: \"{{ doc('from_amount') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: FROM_CURRENCY\n        description: \"{{ doc('from_currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: FROM_SYMBOL\n        description: The token symbol of the from currency.\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TO_AMOUNT\n        description: \"{{ doc('to_amount') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TO_CURRENCY\n        description: \"{{ doc('to_currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: TO_SYMBOL\n        description: The token symbol of the to currency.\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: POOL_IDS\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n", "doc_id": "8788af37-eec0-4844-ba24-2cfe3cf44cc6", "embedding": null, "doc_hash": "9f8afee5100c494b5df9cce61d5f0b51cb803fba059ef74aebc7691deea64e0b", "extra_info": {"file_path": "models/gold/mars/mars__ez_swaps.yml", "file_name": "mars__ez_swaps.yml"}, "node_info": {"start": 0, "end": 1883, "_node_type": "1"}, "relationships": {"1": "048f94707ff90bf6a93134541d96b13d946e9c4c"}}, "__type__": "1"}, "99f5de9b-79d4-43d4-8f73-94663b291103": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    meta ={ 'database_tags':{ 'table':{ 'PURPOSE': 'DEFI, PRICES' }} }\n) }}\n\nSELECT\n    block_id,\n    block_date,\n    currency,\n    'MARS' AS symbol,\n    price,\n    price_usd,\n    liquidity,\n    liquidity_usd,\n    volume,\n    volume_usd\nFROM\n    {{ ref('silver__token_summary_day') }}\nWHERE\n    currency = 'ibc/573FCD90FACEE750F55A8864EF7D38265F07E5A9273FA0E8DAFD39951332B580'\n", "doc_id": "99f5de9b-79d4-43d4-8f73-94663b291103", "embedding": null, "doc_hash": "a739d4e2600f21f5d4a1ba1b0b334c353a10fefb1569cd72ff356f1f9bf06dbf", "extra_info": {"file_path": "models/gold/mars/mars__ez_token_day.sql", "file_name": "mars__ez_token_day.sql"}, "node_info": {"start": 0, "end": 415, "_node_type": "1"}, "relationships": {"1": "9bfa9c4c01df697c230b67b81853fd4611998d7d"}}, "__type__": "1"}, "8a5961ab-25d9-4857-9ce1-495d365f3981": {"__data__": {"text": "version: 2\nmodels:\n  - name: mars__ez_token_day\n    description: The table is an daily summary of each asset within Osmosis\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: BLOCK_DATE\n        description: The block \n        tests:\n          - dbt_expectations.expect_column_to_exist\n      - name: CURRENCY\n        description:  \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: SYMBOL\n        description:  The token symbol\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PRICE\n        description: \"The price of the token as denominated in osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: PRICE_USD\n        description: \"The price of the token in USD\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: LIQUIDITY\n        description: \"The total value of tokens within the pools, denominated in osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: LIQUIDITY_USD\n        description: \"The total value of tokens within the pools, denominated in osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VOLUME\n        description: \"The total value of tokens swapped in and out of the pools, denominated in osmos\"\n        tests: \n          - dbt_expectations.expect_column_to_exist\n      - name: VOLUME_USD\n        description:  \"The total value of tokens swapped in and out of the pools, denominated in USD\"\n        tests: \n          - dbt_expectations.expect_column_to_exist", "doc_id": "8a5961ab-25d9-4857-9ce1-495d365f3981", "embedding": null, "doc_hash": "e66ae1e9ab76f877157244872f77cb57b6875ed6e74e5f0b5077e06838413542", "extra_info": {"file_path": "models/gold/mars/mars__ez_token_day.yml", "file_name": "mars__ez_token_day.yml"}, "node_info": {"start": 0, "end": 1714, "_node_type": "1"}, "relationships": {"1": "19d45674f2c8161ca3a17bc630af7785a791d0b6"}}, "__type__": "1"}, "7528109e-9562-45c6-8d76-da7f40c93dbe": {"__data__": {"text": "{{ config(\n    materialized = 'table'\n) }}\n\nSELECT\n    blockchain,\n    creator,\n    address,\n    tag_name AS label,\n    tag_type AS project_name,\n    start_date,\n    end_date\nFROM\n    {{ source(\n        'crosschain',\n        'address_tags'\n    ) }}\nWHERE\n    tag_type = 'ICNS'\n", "doc_id": "7528109e-9562-45c6-8d76-da7f40c93dbe", "embedding": null, "doc_hash": "5245e7484d41be7fd088fef1ea69bb2d9f74ba878a7934b01cabb86453f99a30", "extra_info": {"file_path": "models/silver/crossdb/silver__croschain_icns.sql", "file_name": "silver__croschain_icns.sql"}, "node_info": {"start": 0, "end": 277, "_node_type": "1"}, "relationships": {"1": "256ae99656442f1654cb7d26a79b1e905d75bc85"}}, "__type__": "1"}, "380b8f76-82ca-48dd-a327-68cdf101e568": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = [\"tx_id\",\"msg_index\"],\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE','action']\n) }}\n\nWITH mars_contracts AS (\n\n    SELECT\n        'mars-address-provider' contract_name,\n        'osmo1g677w7mfvn78eeudzwylxzlyz69fsgumqrscj6tekhdvs8fye3asufmvxr' address\n    UNION ALL\n    SELECT\n        'mars-incentives' contract_name,\n        'osmo1nkahswfr8shg8rlxqwup0vgahp0dk4x8w6tkv3rra8rratnut36sk22vrm' address\n    UNION ALL\n    SELECT\n        'mars-oracle' contract_name,\n        'osmo1mhznfr60vjdp2gejhyv2gax9nvyyzhd3z0qcwseyetkfustjauzqycsy2g' address\n    UNION ALL\n    SELECT\n        'mars-red-bank' contract_name,\n        'osmo1c3ljch9dfw5kf52nfwpxd2zmj2ese7agnx0p9tenkrryasrle5sqf3ftpg' address\n    UNION ALL\n    SELECT\n        'mars-rewards-collector' contract_name,\n        'osmo1urvqe5mw00ws25yqdd4c4hlh8kdyf567mpcml7cdve9w08z0ydcqvsrgdy' address\n    UNION ALL\n    SELECT\n        'mars-liquidation-filterer' contract_name,\n        'osmo1v0ezrc0f7l5tlw6ws2r8kalhmvrfhe0fywrmj8kjgrwvud5r83uqywn66c' address\n),\ntx AS (\n    SELECT\n        DISTINCT A.block_timestamp,\n        A.tx_id,\n        A.msg_index,\n        b.contract_name\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n        JOIN mars_contracts b\n        ON A.attribute_value = b.address\n    WHERE\n        block_timestamp :: DATE >= '2023-02-07'\n        AND attribute_key = '_contract_address'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n)\n{% endif %}\n)\nSELECT\n    block_id,\n    A.block_timestamp,\n    A.tx_id,\n    tx_succeeded,\n    A.msg_group,\n    A.msg_sub_group,\n    A.msg_index,\n    contract_name,\n    OBJECT_AGG(\n        attribute_key :: STRING,\n        attribute_value ::", "doc_id": "380b8f76-82ca-48dd-a327-68cdf101e568", "embedding": null, "doc_hash": "0a855f179e672c42ae6d5d6adaa70554ce7a0f0c2689444a346dd57f9c48a167", "extra_info": {"file_path": "models/silver/mars/silver__red_bank_actions.sql", "file_name": "silver__red_bank_actions.sql"}, "node_info": {"start": 0, "end": 1858, "_node_type": "1"}, "relationships": {"1": "5945a6670e6b90248ae41ce860c5431c8f180e90", "3": "c66aa19d-9b2a-44a5-a60e-b2c311f6d2bc"}}, "__type__": "1"}, "c66aa19d-9b2a-44a5-a60e-b2c311f6d2bc": {"__data__": {"text": " attribute_key :: STRING,\n        attribute_value :: variant\n    ) AS attributes,\n    attributes :action :: STRING AS action,\n    attributes :user :: STRING AS USER,\n    attributes :sender :: STRING AS sender,\n    attributes :recipient :: STRING AS recipient,\n    attributes :on_behalf_of :: STRING AS on_behalf_of,\n    attributes :\"to\" :: STRING AS to_address,\n    attributes :asset_index :: STRING AS asset_index,\n    attributes :denom :: STRING AS denom,\n    attributes :rewards_accrued :: FLOAT AS rewards_accrued,\n    attributes :amount :: STRING AS amount,\n    attributes :amount_scaled :: STRING AS amount_scaled,\n    attributes :mars_rewards :: STRING AS mars_rewards,\n    attributes :collateral_amount :: INT AS collateral_amount,\n    attributes :collateral_amount_scaled :: INT AS collateral_amount_scaled,\n    attributes :collateral_denom :: STRING AS collateral_denom,\n    attributes :debt_amount :: INT AS debt_amount,\n    attributes :debt_amount_scaled :: INT AS debt_amount_scaled,\n    attributes :debt_denom :: STRING AS debt_denom,\n    attributes :liquidator :: STRING AS liquidator,\n    attributes :borrow_index :: STRING AS borrow_index,\n    attributes :borrow_rate :: FLOAT AS borrow_rate,\n    attributes :liquidity_index :: STRING AS liquidity_index,\n    attributes :liquidity_rate :: FLOAT AS liquidity_rate,\n    _inserted_timestamp\nFROM\n    {{ ref('silver__msg_attributes') }} A\n    JOIN tx b\n    ON A.tx_id = b.tx_id\n    AND A.block_timestamp :: DATE = b.block_timestamp :: DATE\n    AND A.msg_index = b.msg_index\nWHERE\n    A.block_timestamp :: DATE >= '2023-02-07'\n    AND msg_type = 'wasm'\n    AND attribute_key <> '_contract_address'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n)\n{% endif %}\nGROUP BY\n    block_id,\n    A.block_timestamp,\n    A.tx_id,\n    tx_succeeded,\n    A.msg_group,\n    A.msg_sub_group,\n    A.msg_index,\n    contract_name,\n    _inserted_timestamp\nHAVING\n    action IN (\n        'deposit',\n        'borrow',\n        'repay',\n        'claim_rewards',\n        'balance_change',\n        'withdraw',\n        'distribute_rewards'\n    )\n", "doc_id": "c66aa19d-9b2a-44a5-a60e-b2c311f6d2bc", "embedding": null, "doc_hash": "cc58f160611a6da3cccd92588bf7ad7473794ee660784f2952b58401ac25603d", "extra_info": {"file_path": "models/silver/mars/silver__red_bank_actions.sql", "file_name": "silver__red_bank_actions.sql"}, "node_info": {"start": 1806, "end": 4008, "_node_type": "1"}, "relationships": {"1": "5945a6670e6b90248ae41ce860c5431c8f180e90", "2": "380b8f76-82ca-48dd-a327-68cdf101e568"}}, "__type__": "1"}, "7cdee7ce-6047-4ddb-8c1b-a2ae4c04ded8": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__red_bank_actions\n    description: Records of all collateral and debt actions taken using MARS red bank on osmosis\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_INDEX\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        description: \"{{ doc('tx_succeeded') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n      - name: MSG_SUB_GROUP\n        description: \"{{ doc('msg_sub_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name:", "doc_id": "7cdee7ce-6047-4ddb-8c1b-a2ae4c04ded8", "embedding": null, "doc_hash": "3700b3feb83c3526a56f90250a7eb101d645e5e0ec340de11e9b497cb70320ed", "extra_info": {"file_path": "models/silver/mars/silver__red_bank_actions.yml", "file_name": "silver__red_bank_actions.yml"}, "node_info": {"start": 0, "end": 1779, "_node_type": "1"}, "relationships": {"1": "4b063866c7ec402c2d3450d6e7cce58eec495de6", "3": "0d630c02-ca51-46b9-81c1-c0376f6fa1eb"}}, "__type__": "1"}, "0d630c02-ca51-46b9-81c1-c0376f6fa1eb": {"__data__": {"text": "       - FLOAT\n      - name: MSG_INDEX\n        description: \"{{ doc('msg_index') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n      - name: ATTRIBUTES\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - OBJECT\n      - name: CONTRACT_NAME\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: ACTION\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: USER\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: SENDER\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: RECIPIENT\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: ON_BEHALF_OF\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: ASSET_INDEX\n   ", "doc_id": "0d630c02-ca51-46b9-81c1-c0376f6fa1eb", "embedding": null, "doc_hash": "1804fb309d50ed677e9f0f3de43e253db81155ca4c046d9a97cb2e26d4048ad9", "extra_info": {"file_path": "models/silver/mars/silver__red_bank_actions.yml", "file_name": "silver__red_bank_actions.yml"}, "node_info": {"start": 1767, "end": 3409, "_node_type": "1"}, "relationships": {"1": "4b063866c7ec402c2d3450d6e7cce58eec495de6", "2": "7cdee7ce-6047-4ddb-8c1b-a2ae4c04ded8", "3": "791073a2-2a6c-421b-b129-4b0aff034846"}}, "__type__": "1"}, "791073a2-2a6c-421b-b129-4b0aff034846": {"__data__": {"text": "     - name: ASSET_INDEX\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: DENOM\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: REWARDS_ACCRUED\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: AMOUNT\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: AMOUNT_SCALED\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: MARS_REWARDS\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: COLLATERAL_AMOUNT\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: COLLATERAL_AMOUNT_SCALED\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT      \n      - name: COLLATERAL_DENOM\n        tests: \n    ", "doc_id": "791073a2-2a6c-421b-b129-4b0aff034846", "embedding": null, "doc_hash": "0198a2071ca039dcfa3996951d16aa1166334507e1a9f7a0b2623b510d3f395d", "extra_info": {"file_path": "models/silver/mars/silver__red_bank_actions.yml", "file_name": "silver__red_bank_actions.yml"}, "node_info": {"start": 3405, "end": 5030, "_node_type": "1"}, "relationships": {"1": "4b063866c7ec402c2d3450d6e7cce58eec495de6", "2": "0d630c02-ca51-46b9-81c1-c0376f6fa1eb", "3": "733ac00d-cfcc-410a-9be4-1e958cb1311f"}}, "__type__": "1"}, "733ac00d-cfcc-410a-9be4-1e958cb1311f": {"__data__": {"text": "       tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR        \n      - name: DEBT_AMOUNT\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: DEBT_AMOUNT_SCALED\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT      \n      - name: DEBT_DENOM\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR  \n      - name: LIQUIDATOR\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR    \n      - name: BORROW_INDEX\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR      \n      - name: BORROW_RATE\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT          \n      - name: LIQUIDITY_INDEX\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR          \n      - name:", "doc_id": "733ac00d-cfcc-410a-9be4-1e958cb1311f", "embedding": null, "doc_hash": "127fb6739d38cd8959eb1a63543ee4429f44396e9747df804ad90d16a37518b5", "extra_info": {"file_path": "models/silver/mars/silver__red_bank_actions.yml", "file_name": "silver__red_bank_actions.yml"}, "node_info": {"start": 5042, "end": 6638, "_node_type": "1"}, "relationships": {"1": "4b063866c7ec402c2d3450d6e7cce58eec495de6", "2": "791073a2-2a6c-421b-b129-4b0aff034846", "3": "8fc0ebbb-0703-47d1-b99d-88d4a0df6ad6"}}, "__type__": "1"}, "8fc0ebbb-0703-47d1-b99d-88d4a0df6ad6": {"__data__": {"text": "         \n      - name: LIQUIDITY_RATE\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT                                                                                                                              \n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "8fc0ebbb-0703-47d1-b99d-88d4a0df6ad6", "embedding": null, "doc_hash": "2e6b3071d00ba5a3e698bb0543b806baad7cc007147815a6d7ca177c0651f03f", "extra_info": {"file_path": "models/silver/mars/silver__red_bank_actions.yml", "file_name": "silver__red_bank_actions.yml"}, "node_info": {"start": 6622, "end": 7213, "_node_type": "1"}, "relationships": {"1": "4b063866c7ec402c2d3450d6e7cce58eec495de6", "2": "733ac00d-cfcc-410a-9be4-1e958cb1311f"}}, "__type__": "1"}, "4bf22346-f551-484f-848b-0bd5cddf587e": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"tx_id\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH tx AS (\n\n    SELECT\n        DISTINCT A.block_timestamp,\n        A.tx_id\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n    WHERE\n        block_timestamp :: DATE >= '2023-02-13'\n        AND attribute_key = 'action'\n        AND attribute_value = 'liquidate'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n)\n{% endif %}\n),\nrelevant_msgs AS (\n    SELECT\n        A.block_id,\n        A.block_timestamp,\n        A.tx_id,\n        tx_succeeded,\n        A.msg_group,\n        A.msg_sub_group,\n        A.msg_index,\n        A.msg_type,\n        attribute_index,\n        attribute_key,\n        attribute_value,\n        _inserted_timestamp\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n        JOIN tx b\n        ON A.tx_id = b.tx_id\n        AND A.block_timestamp :: DATE = b.block_timestamp :: DATE\n    WHERE\n        A.block_timestamp :: DATE >= '2023-02-13'\n        AND msg_type IN (\n            'transfer',\n            'wasm'\n        )\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n)\n{% endif %}\n),\nfilter_msgs AS (\n    SELECT\n        A.block_id,\n        A.block_timestamp,\n        A.tx_id,\n        tx_succeeded,\n        A.msg_group,\n        A.msg_sub_group,\n        A.msg_index,\n        A.msg_type,\n        attribute_index,\n        attribute_key,\n        attribute_value,\n        _inserted_timestamp\n    FROM\n        relevant_msgs A\n        LEFT JOIN (\n            SELECT\n               ", "doc_id": "4bf22346-f551-484f-848b-0bd5cddf587e", "embedding": null, "doc_hash": "d0a1035157214eff688d6d80c57355967197668499fdf23b41efd77b492424de", "extra_info": {"file_path": "models/silver/mars/silver__red_bank_liquidations.sql", "file_name": "silver__red_bank_liquidations.sql"}, "node_info": {"start": 0, "end": 1800, "_node_type": "1"}, "relationships": {"1": "d42fce84ec0d751bfa6f12508103eaec04bdcc92", "3": "79b7d68b-1985-4d52-98ce-4017e1b7c950"}}, "__type__": "1"}, "79b7d68b-1985-4d52-98ce-4017e1b7c950": {"__data__": {"text": "   SELECT\n                tx_id,\n                msg_index\n            FROM\n                relevant_msgs\n            WHERE\n                attribute_key = 'action'\n                AND attribute_value = 'balance_change'\n        ) b\n        ON A.tx_id = b.tx_id\n        AND A.msg_index = b.msg_index\n    WHERE\n        b.tx_id IS NULL\n),\nfirst_agg AS (\n    SELECT\n        A.block_id,\n        A.block_timestamp,\n        A.tx_id,\n        tx_succeeded,\n        msg_group,\n        msg_index,\n        msg_type,\n        OBJECT_AGG(\n            attribute_key :: STRING,\n            attribute_value :: variant\n        ) AS j,CASE\n            WHEN j :action :: STRING IS NOT NULL THEN TRUE\n            ELSE FALSE\n        END action,\n        NULLIF(\n            (conditional_true_event(action) over (PARTITION BY tx_id\n            ORDER BY\n                msg_index) -1),\n                -1\n        ) abc,CASE\n            WHEN msg_group IS NULL THEN 'fee'\n            WHEN abc IS NULL\n            AND msg_type = 'transfer' THEN 'sent'\n            WHEN msg_type = 'wasm' THEN 'liq'\n            WHEN abc IS NOT NULL THEN 'rec'\n        END msg_index_desc,\n        _inserted_timestamp\n    FROM\n        filter_msgs A\n    GROUP BY\n        block_id,\n        A.block_timestamp,\n        A.tx_id,\n        tx_succeeded,\n        msg_group,\n        msg_index,\n        msg_type,\n        _inserted_timestamp\n)\nSELECT\n    A.block_id,\n    A.block_timestamp,\n    A.tx_id,\n    tx_succeeded,\n    A.j :amount :: STRING AS fee_amount,\n    A.j :sender :: STRING AS fee_sender,\n    b.liq_sent_amount,\n    liq_sent_sender,\n    collateral_amount,\n    collateral_amount_scaled,\n    collateral_denom,\n    debt_amount,\n    debt_amount_scaled,\n   ", "doc_id": "79b7d68b-1985-4d52-98ce-4017e1b7c950", "embedding": null, "doc_hash": "156318700bfd7789209c8cdfb9a2c549739a28423a7891458da86368bbc1f258", "extra_info": {"file_path": "models/silver/mars/silver__red_bank_liquidations.sql", "file_name": "silver__red_bank_liquidations.sql"}, "node_info": {"start": 1794, "end": 3499, "_node_type": "1"}, "relationships": {"1": "d42fce84ec0d751bfa6f12508103eaec04bdcc92", "2": "4bf22346-f551-484f-848b-0bd5cddf587e", "3": "a863f3bf-f964-414c-9410-f52a192192c9"}}, "__type__": "1"}, "a863f3bf-f964-414c-9410-f52a192192c9": {"__data__": {"text": "   debt_amount_scaled,\n    debt_denom,\n    liquidator,\n    recipient,\n    USER,\n    liq_rec_payment,\n    liq_rec_sender,\n    _inserted_timestamp\nFROM\n    first_agg A\n    JOIN (\n        SELECT\n            block_id,\n            block_timestamp,\n            tx_id,\n            j :amount :: STRING AS liq_sent_amount,\n            j :sender :: STRING AS liq_sent_sender\n        FROM\n            first_agg\n        WHERE\n            msg_index_desc = 'sent'\n    ) b\n    ON A.tx_id = b.tx_id\n    JOIN (\n        SELECT\n            tx_id,\n            j :collateral_amount :: INT AS collateral_amount,\n            j :collateral_amount_scaled :: INT AS collateral_amount_scaled,\n            j :collateral_denom :: STRING AS collateral_denom,\n            j :debt_amount :: INT AS debt_amount,\n            j :debt_amount_scaled :: INT AS debt_amount_scaled,\n            j :debt_denom :: STRING AS debt_denom,\n            j :liquidator :: STRING AS liquidator,\n            j :recipient :: STRING AS recipient,\n            j :user :: STRING AS USER\n        FROM\n            first_agg\n        WHERE\n            msg_index_desc = 'liq'\n    ) C\n    ON A.tx_id = C.tx_id\n    JOIN (\n        SELECT\n            tx_id,\n            j :amount :: STRING AS liq_rec_payment,\n            j :recipient :: STRING AS liq_rec_sender\n        FROM\n            first_agg\n        WHERE\n            msg_index_desc = 'rec'\n    ) d\n    ON A.tx_id = d.tx_id\nWHERE\n    A.msg_index_desc = 'fee'\n", "doc_id": "a863f3bf-f964-414c-9410-f52a192192c9", "embedding": null, "doc_hash": "a3682a44c4dbced7380367b7122d84061564cc8059d969fda98009f3ef6feb74", "extra_info": {"file_path": "models/silver/mars/silver__red_bank_liquidations.sql", "file_name": "silver__red_bank_liquidations.sql"}, "node_info": {"start": 3480, "end": 4931, "_node_type": "1"}, "relationships": {"1": "d42fce84ec0d751bfa6f12508103eaec04bdcc92", "2": "79b7d68b-1985-4d52-98ce-4017e1b7c950"}}, "__type__": "1"}, "6fcf45aa-c522-454c-88b7-3e61496a29fe": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = [\"token_address\",\"pool_id\",\"block_id\"],\n    incremental_strategy = 'merge',\n    cluster_by = ['_inserted_timestamp::DATE']\n) }}\n\nWITH top_pools AS (\n\n    SELECT\n        A.block_id,\n        A.block_timestamp,\n        token_0_denom,\n        COALESCE(\n            token_0_amount / pow(\n                10,\n                CASE\n                    WHEN token_0_denom LIKE 'gamm/pool/%' THEN 18\n                    ELSE t0.decimal\n                END\n            ),\n            token_0_amount\n        ) AS token_0_amount,\n        token_1_denom,\n        COALESCE(\n            token_1_amount / pow(\n                10,\n                CASE\n                    WHEN token_1_denom LIKE 'gamm/pool/%' THEN 18\n                    ELSE t1.decimal\n                END\n            ),\n            token_1_amount\n        ) AS token_1_amount,\n        pool_id,\n        pool_type,\n        A._inserted_timestamp\n    FROM\n        {{ ref('silver__pool_balances') }} A\n        LEFT JOIN {{ ref('silver__asset_metadata') }}\n        t0\n        ON A.token_0_denom = t0.address\n        LEFT JOIN {{ ref('silver__asset_metadata') }}\n        t1\n        ON A.token_1_denom = t1.address\n    WHERE\n        pool_type NOT ILIKE '%stable%'\n        AND token_2_denom IS NULL\n        AND (\n            t0.decimal IS NOT NULL\n            OR token_0_denom LIKE 'gamm/pool/%'\n            OR t1.decimal IS NOT NULL\n            OR token_1_denom LIKE 'gamm/pool/%'\n        )\n\n{% if is_incremental() %}\nAND A._inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        {{ this }}\n)\n{% endif %}\n\nqualify(ROW_NUMBER()", "doc_id": "6fcf45aa-c522-454c-88b7-3e61496a29fe", "embedding": null, "doc_hash": "09b18cd9536639b8f4c6bb46fcd496a3330aa12f2ea6984e1d6a0d6458a12766", "extra_info": {"file_path": "models/silver/prices/silver__pool_token_prices.sql", "file_name": "silver__pool_token_prices.sql"}, "node_info": {"start": 0, "end": 1681, "_node_type": "1"}, "relationships": {"1": "dba4749ab0058560c7b1ffc97f394cba73dc35ac", "3": "c09ad35b-99da-4d38-b24e-b6f5784bf6c0"}}, "__type__": "1"}, "c09ad35b-99da-4d38-b24e-b6f5784bf6c0": {"__data__": {"text": "}}\n)\n{% endif %}\n\nqualify(ROW_NUMBER() over(PARTITION BY DATE_TRUNC('hour', block_timestamp), pool_id\nORDER BY\n    block_id DESC) = 1)\n),\nfin AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        token_0_denom AS token_address,\n        token_0_amount / token_1_amount AS price,\n        token_1_denom AS price_denom,\n        pool_id,\n        token_0_amount + token_1_amount AS pool_total,\n        pool_type,\n        _inserted_timestamp\n    FROM\n        top_pools\n    UNION ALL\n    SELECT\n        block_id,\n        block_timestamp,\n        token_1_denom AS token_address,\n        token_1_amount / token_0_amount AS price,\n        token_0_denom AS price_denom,\n        pool_id,\n        token_0_amount + token_1_amount AS pool_total,\n        pool_type,\n        _inserted_timestamp\n    FROM\n        top_pools\n)\nSELECT\n    block_id,\n    block_timestamp,\n    token_address,\n    price,\n    price_denom,\n    pool_id,\n    pool_total,\n    ROW_NUMBER() over(\n        PARTITION BY block_id,\n        token_address,\n        price_denom\n        ORDER BY\n            pool_total DESC\n    ) AS token_pool_rank,\n    pool_type,\n    _inserted_timestamp\nFROM\n    fin\n", "doc_id": "c09ad35b-99da-4d38-b24e-b6f5784bf6c0", "embedding": null, "doc_hash": "356575cc61dbcda2fec51f15440ec38421b089cbef013211960152db89742631", "extra_info": {"file_path": "models/silver/prices/silver__pool_token_prices.sql", "file_name": "silver__pool_token_prices.sql"}, "node_info": {"start": 1643, "end": 2800, "_node_type": "1"}, "relationships": {"1": "dba4749ab0058560c7b1ffc97f394cba73dc35ac", "2": "6fcf45aa-c522-454c-88b7-3e61496a29fe"}}, "__type__": "1"}, "dd1c9cc9-a13c-46b5-a148-10f8dba29929": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__pool_token_prices\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - BLOCK_ID\n            - TOKEN_ADDRESS\n            - POOL_ID\n    columns:\n      - name: BLOCK_ID\n        tests:\n          - not_null\n      - name: BLOCK_TIMESTAMP\n        tests:\n          - not_null\n      - name: TOKEN_ADDRESS\n        tests:\n          - not_null\n      - name: PRICE\n        tests:\n          - not_null\n      - name: PRICE_DENOM\n        description: the denomination price is listed in\n        tests:\n          - not_null\n      - name: POOL_ID\n        tests:\n          - not_null\n      - name: POOL_TOTAL\n        description: total assets in the pool \n        tests:\n          - not_null\n      - name: TOKEN_POOL_RANK\n        description: rank of the pool by token -- allows for filtering out low liquidity pools in pricing\n        tests:\n          - not_null\n      - name: _INSERTED_TIMESTAMP\n        tests:\n          - not_null", "doc_id": "dd1c9cc9-a13c-46b5-a148-10f8dba29929", "embedding": null, "doc_hash": "4160d9acf95fca83d1d349d2d979e301e034b145c42bb9d149420d5289c10526", "extra_info": {"file_path": "models/silver/prices/silver__pool_token_prices.yml", "file_name": "silver__pool_token_prices.yml"}, "node_info": {"start": 0, "end": 1006, "_node_type": "1"}, "relationships": {"1": "33070961f1ed43043ba3df4c176cc518996d6ba4"}}, "__type__": "1"}, "1aad74d6-3830-496e-aeb4-3a38fceac085": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = [\"token_address\",\"block_id\"],\n    incremental_strategy = 'merge',\n    cluster_by = ['_inserted_timestamp::DATE']\n) }}\n\nWITH osmo_price AS (\n\n    SELECT\n        block_id,\n        block_timestamp,\n        price AS osmo_price,\n        price_denom token_address,\n        pool_id,\n        _inserted_timestamp\n    FROM\n        {{ ref('silver__pool_token_prices') }} A\n    WHERE\n        price_denom = 'uosmo'\n        AND token_address = 'ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858' --axUSDC\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        {{ this }}\n)\n{% endif %}\n),\nosmo_pools AS (\n    SELECT\n        osmo_price / price AS price_usd,\n        A.block_id,\n        A.block_timestamp,\n        A.token_address,\n        A.pool_total,\n        A.pool_id,\n        A._inserted_timestamp\n    FROM\n        {{ ref('silver__pool_token_prices') }} A\n        JOIN osmo_price b\n        ON A.block_id = b.block_id\n    WHERE\n        price_denom = 'uosmo'\n        AND token_pool_rank = 1\n\n{% if is_incremental() %}\nAND A._inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        {{ this }}\n)\n{% endif %}\n),\nnon_osomo_price AS (\n    SELECT\n        A.token_address,\n        A.price_usd,\n        A.block_id\n    FROM\n        osmo_pools A qualify(ROW_NUMBER() over(PARTITION BY A.token_address\n    ORDER BY\n        pool_total DESC) = 1)\n),\nnon_osmo_pools AS (\n    SELECT\n        b.price_usd / price AS price_usd,\n        A.block_id,\n        A.block_timestamp,\n        A.token_address,\n        A.pool_id,\n        A._inserted_timestamp\n    FROM\n        {{ ref('silver__pool_token_prices') }} A\n        JOIN non_osomo_price b\n        ON A.block_id = b.block_id\n ", "doc_id": "1aad74d6-3830-496e-aeb4-3a38fceac085", "embedding": null, "doc_hash": "23c831c0a7be3998ca9eda4513f40a0fd63bc810be2eff31a65c6a2b8501a3f4", "extra_info": {"file_path": "models/silver/prices/silver__pool_token_prices_usd.sql", "file_name": "silver__pool_token_prices_usd.sql"}, "node_info": {"start": 0, "end": 1857, "_node_type": "1"}, "relationships": {"1": "a1f71bd038868b95dfa51d8ef1e0cfa12d447dff", "3": "5f4dc9b1-2dd8-4589-b3c6-88a47573ef08"}}, "__type__": "1"}, "5f4dc9b1-2dd8-4589-b3c6-88a47573ef08": {"__data__": {"text": "      ON A.block_id = b.block_id\n        AND A.price_denom = b.token_address\n        LEFT JOIN osmo_pools ex\n        ON A.token_address = ex.token_address\n        AND A.block_id = ex.block_id\n    WHERE\n        price_denom <> 'uosmo'\n        AND A.token_address <> 'uosmo'\n        AND ex.token_address IS NULL\n\n{% if is_incremental() %}\nAND A._inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        {{ this }}\n)\n{% endif %}\n\nqualify(ROW_NUMBER() over(PARTITION BY A.token_address\nORDER BY\n    A.pool_total DESC) = 1)\n),\nstable_pools AS (\n    SELECT\n        *\n    FROM\n        {{ ref('silver__pool_balances') }}\n    WHERE\n        pool_type ILIKE '%stable%'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        {{ this }}\n)\n{% endif %}\n),\nadjust_stable AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        pool_id,\n        _inserted_timestamp,\n        token_0_amount / scaling_factors [0] :: INT AS amount,\n        scaling_factors [0] :: INT AS sf,\n        token_0_denom AS denom\n    FROM\n        stable_pools A\n    WHERE\n        token_0_amount IS NOT NULL\n    UNION ALL\n    SELECT\n        block_id,\n        block_timestamp,\n        pool_id,\n        _inserted_timestamp,\n        token_1_amount / scaling_factors [1] :: INT AS amount,\n        scaling_factors [1] :: INT AS sf,\n        token_1_denom\n    FROM\n        stable_pools A\n    WHERE\n        token_1_amount IS NOT NULL\n    UNION ALL\n    SELECT\n        block_id,\n        block_timestamp,\n        pool_id,\n        _inserted_timestamp,\n        token_2_amount / scaling_factors [2] :: INT AS amount,\n        scaling_factors [2] :: INT AS sf,\n        token_2_denom\n    FROM\n        stable_pools A\n    WHERE\n        token_2_amount IS NOT NULL\n    UNION ALL\n    SELECT\n        block_id,\n  ", "doc_id": "5f4dc9b1-2dd8-4589-b3c6-88a47573ef08", "embedding": null, "doc_hash": "526b0ece91154bc866736cb9452a168e6ff92b8254da7574ca6cbc9f2ea4adcb", "extra_info": {"file_path": "models/silver/prices/silver__pool_token_prices_usd.sql", "file_name": "silver__pool_token_prices_usd.sql"}, "node_info": {"start": 1834, "end": 3721, "_node_type": "1"}, "relationships": {"1": "a1f71bd038868b95dfa51d8ef1e0cfa12d447dff", "2": "1aad74d6-3830-496e-aeb4-3a38fceac085", "3": "ed36cf1d-5dbc-4a98-aaf8-96559b27b793"}}, "__type__": "1"}, "ed36cf1d-5dbc-4a98-aaf8-96559b27b793": {"__data__": {"text": "   SELECT\n        block_id,\n        block_timestamp,\n        pool_id,\n        _inserted_timestamp,\n        token_3_amount / scaling_factors [3] :: INT AS amount,\n        scaling_factors [3] :: INT AS sf,\n        token_3_denom\n    FROM\n        stable_pools A\n    WHERE\n        token_3_amount IS NOT NULL\n),\nno_price AS (\n    SELECT\n        A.block_id,\n        A.block_timestamp,\n        A.pool_id,\n        A.amount,\n        A.sf,\n        A.denom,\n        A._INSERTED_timestamp\n    FROM\n        adjust_stable A\n        LEFT JOIN (\n            SELECT\n                block_id,\n                token_address\n            FROM\n                osmo_price\n            UNION ALL\n            SELECT\n                block_id,\n                token_address\n            FROM\n                osmo_pools\n            UNION ALL\n            SELECT\n                block_id,\n                token_address\n            FROM\n                non_osmo_pools\n        ) b\n        ON A.block_id = b.block_id\n        AND A.denom = b.token_address\n    WHERE\n        b.block_id IS NULL qualify(ROW_NUMBER() over(PARTITION BY A.denom\n    ORDER BY\n        A.amount DESC) = 1)\n),\nyes_price AS (\n    SELECT\n        A.block_id,\n        A.pool_id,\n        b.price_usd,\n        b.token_address\n    FROM\n        adjust_stable A\n        JOIN (\n            SELECT\n                block_id,\n                token_address,\n                osmo_price AS price_usd\n            FROM\n                osmo_price\n            UNION ALL\n            SELECT\n                block_id,\n                token_address,\n", "doc_id": "ed36cf1d-5dbc-4a98-aaf8-96559b27b793", "embedding": null, "doc_hash": "4feaa36a72a7cfa21db60e25b8bcb83d43da3e9227b4c4f8bf2c5193aba26133", "extra_info": {"file_path": "models/silver/prices/silver__pool_token_prices_usd.sql", "file_name": "silver__pool_token_prices_usd.sql"}, "node_info": {"start": 3729, "end": 5292, "_node_type": "1"}, "relationships": {"1": "a1f71bd038868b95dfa51d8ef1e0cfa12d447dff", "2": "5f4dc9b1-2dd8-4589-b3c6-88a47573ef08", "3": "168567fb-427b-4935-9716-9998df19a41f"}}, "__type__": "1"}, "168567fb-427b-4935-9716-9998df19a41f": {"__data__": {"text": "               token_address,\n                price_usd\n            FROM\n                osmo_pools\n            UNION ALL\n            SELECT\n                block_id,\n                token_address,\n                price_usd\n            FROM\n                non_osmo_pools\n        ) b\n        ON A.block_id = b.block_id\n        AND A.denom = b.token_address qualify(ROW_NUMBER() over(PARTITION BY A.pool_id\n    ORDER BY\n        A.amount DESC) = 1)\n),\nstable_prices AS (\n    SELECT\n        A.block_id,\n        A.block_timestamp,\n        A.denom AS token_address,\n        (\n            sf2.sf / sf1.sf\n        ) * b.price_usd AS price_usd,\n        A.pool_id,\n        A._inserted_timestamp\n    FROM\n        no_price A\n        JOIN yes_price b\n        ON A.block_id = b.block_id\n        AND A.pool_id = b.pool_id\n        LEFT JOIN adjust_stable sf1\n        ON A.block_id = sf1.block_id\n        AND A.pool_id = sf1.pool_id\n        AND A.denom = sf1.denom\n        LEFT JOIN adjust_stable sf2\n        ON b.block_id = sf2.block_id\n        AND b.pool_id = sf2.pool_id\n        AND b.token_address = sf2.denom\n)\nSELECT\n    block_id,\n    block_timestamp,\n    token_address,\n    osmo_price AS price_usd,\n    pool_id,\n    _inserted_timestamp\nFROM\n    osmo_price\nUNION ALL\nSELECT\n    block_id,\n    block_timestamp,\n    token_address,\n    price_usd,\n    pool_id,\n    _inserted_timestamp\nFROM\n    osmo_pools\nUNION ALL\nSELECT\n    block_id,\n    block_timestamp,\n    token_address,\n    price_usd,\n    pool_id,\n    _inserted_timestamp\nFROM\n    non_osmo_pools\nUNION ALL\nSELECT\n    block_id,\n    block_timestamp,\n    token_address,\n    price_usd,\n    pool_id,\n    _inserted_timestamp\nFROM\n    stable_prices\n", "doc_id": "168567fb-427b-4935-9716-9998df19a41f", "embedding": null, "doc_hash": "49a9df2c33fde5e2a0c327b59a7b85651ef5331f3d670e11f5c1c4602e259110", "extra_info": {"file_path": "models/silver/prices/silver__pool_token_prices_usd.sql", "file_name": "silver__pool_token_prices_usd.sql"}, "node_info": {"start": 5279, "end": 6962, "_node_type": "1"}, "relationships": {"1": "a1f71bd038868b95dfa51d8ef1e0cfa12d447dff", "2": "ed36cf1d-5dbc-4a98-aaf8-96559b27b793"}}, "__type__": "1"}, "fcb1ccd3-81ec-4b4d-b7b4-b87cbb7aee9d": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__pool_token_prices_usd\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - BLOCK_ID\n            - TOKEN_ADDRESS\n    columns:\n      - name: BLOCK_ID\n        tests:\n          - not_null\n      - name: BLOCK_TIMESTAMP\n        tests:\n          - not_null\n      - name: TOKEN_ADDRESS\n        tests:\n          - not_null\n      - name: PRICE_USD\n        tests:\n          - not_null  \n      - name: _INSERTED_TIMESTAMP\n        tests:\n          - not_null", "doc_id": "fcb1ccd3-81ec-4b4d-b7b4-b87cbb7aee9d", "embedding": null, "doc_hash": "41b959df93777318bfc48040663d6185efb427a78cf5220f8e9b5a7402e161db", "extra_info": {"file_path": "models/silver/prices/silver__pool_token_prices_usd.yml", "file_name": "silver__pool_token_prices_usd.yml"}, "node_info": {"start": 0, "end": 537, "_node_type": "1"}, "relationships": {"1": "ba432edc3d82916a7181a19da522b983e6da8587"}}, "__type__": "1"}, "0f3ee68c-3135-4932-a586-854d12759de6": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = [\"block_hour\", \"currency\"],\n    incremental_strategy = 'merge',\n    cluster_by = ['block_hour::DATE'],\n) }}\n\nWITH swaps AS (\n\n    SELECT\n        DATE_TRUNC(\n            'HOUR',\n            block_timestamp\n        ) AS block_hour,\n        from_currency,\n        TRY_TO_NUMBER(from_amount) / pow(\n            10,\n            f.raw_metadata [1] :exponent\n        ) AS from_amount,\n        f.project_name AS from_project_name,\n        to_currency,\n        TRY_TO_NUMBER(to_amount) / pow(\n            10,\n            t.raw_metadata [1] :exponent\n        ) AS to_amount,\n        t.project_name AS to_project_name,\n        'osmosis' AS dex\n    FROM\n        {{ ref('silver__swaps') }}\n        s\n        INNER JOIN {{ ref('silver__asset_metadata') }}\n        f\n        ON from_currency = f.address\n        INNER JOIN {{ ref('silver__asset_metadata') }}\n        t\n        ON to_currency = t.address\n    WHERE\n        TRY_TO_NUMBER(from_amount) > 0\n        AND TRY_TO_NUMBER(to_amount) > 0\n        AND f.raw_metadata [1] :exponent IS NOT NULL\n        AND t.raw_metadata [1] :exponent IS NOT NULL\n\n{% if is_incremental() %}\nAND block_hour >=(\n    SELECT\n        DATEADD('day', -3, MAX(block_hour :: DATE))\n    FROM\n        {{ this }}\n)\n{% endif %}\n\nqualify(RANK() over(\nORDER BY\n    block_hour DESC)) <> 1\n),\nswap_range AS (\n    SELECT\n        MIN(\n            block_hour\n        ) min_date,\n        MAX(\n            block_hour\n        ) max_date\n    FROM\n        swaps\n),\nusd AS (\n    SELECT\n        block_hour,\n        from_currency,\n        from_project_name,\n        from_amount,\n        CASE\n            WHEN from_currency IN (\n                'ibc/9F9B07EF9AD291167CF5700628145DE1DEB777C2CFC7907553B24446515F6D0E',\n               ", "doc_id": "0f3ee68c-3135-4932-a586-854d12759de6", "embedding": null, "doc_hash": "1b48f170484d5c6cb1dc9078833b46fcd39738ddf51a1f066c1fd94af1a663f1", "extra_info": {"file_path": "models/silver/prices/silver__prices_swaps.sql", "file_name": "silver__prices_swaps.sql"}, "node_info": {"start": 0, "end": 1786, "_node_type": "1"}, "relationships": {"1": "a27b2a5800f4897fba3c7339620fed1fdd995674", "3": "86c1d5d1-8db6-4bd6-8538-e298474f1bfd"}}, "__type__": "1"}, "86c1d5d1-8db6-4bd6-8538-e298474f1bfd": {"__data__": {"text": "               'ibc/8242AD24008032E457D2E12D46588FD39FB54FB29680C6C7663D296B383C37C4',\n                'ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858',\n                'ibc/0CD3A0285E1341859B5E86B6AB7682F023D03E97607CCC1DC95706411D866DF7'\n            ) THEN 1\n            ELSE to_amount / NULLIF(\n                from_amount,\n                0\n            )\n        END AS from_usd,\n        to_currency,\n        to_project_name,\n        to_amount,\n        CASE\n            WHEN to_currency IN (\n                'ibc/9F9B07EF9AD291167CF5700628145DE1DEB777C2CFC7907553B24446515F6D0E',\n                'ibc/8242AD24008032E457D2E12D46588FD39FB54FB29680C6C7663D296B383C37C4',\n                'ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858',\n                'ibc/0CD3A0285E1341859B5E86B6AB7682F023D03E97607CCC1DC95706411D866DF7'\n            ) THEN 1\n            ELSE from_amount / NULLIF(\n                to_amount,\n                0\n            )\n        END AS to_usd,\n        dex\n    FROM\n        swaps A\n),\nusd_2 AS (\n    SELECT\n        block_hour,\n        from_currency AS currency,\n        from_project_name AS project_name,\n        from_usd AS price\n    FROM\n        usd\n    WHERE\n        to_currency IN (\n            'ibc/9F9B07EF9AD291167CF5700628145DE1DEB777C2CFC7907553B24446515F6D0E',\n            'ibc/8242AD24008032E457D2E12D46588FD39FB54FB29680C6C7663D296B383C37C4',\n            'ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858',\n           ", "doc_id": "86c1d5d1-8db6-4bd6-8538-e298474f1bfd", "embedding": null, "doc_hash": "e244e72caf2fa1f4a932d1b4a9acb2ffd2086e83a26e02c97a8340c3bedc6a3e", "extra_info": {"file_path": "models/silver/prices/silver__prices_swaps.sql", "file_name": "silver__prices_swaps.sql"}, "node_info": {"start": 1787, "end": 3303, "_node_type": "1"}, "relationships": {"1": "a27b2a5800f4897fba3c7339620fed1fdd995674", "2": "0f3ee68c-3135-4932-a586-854d12759de6", "3": "06b03e59-9b38-4326-a5ee-ec569acbedfb"}}, "__type__": "1"}, "06b03e59-9b38-4326-a5ee-ec569acbedfb": {"__data__": {"text": "           'ibc/0CD3A0285E1341859B5E86B6AB7682F023D03E97607CCC1DC95706411D866DF7'\n        )\n    UNION ALL\n    SELECT\n        block_hour,\n        to_currency AS currency,\n        to_project_name AS project_name,\n        to_usd AS price\n    FROM\n        usd\n    WHERE\n        from_currency IN (\n            'ibc/9F9B07EF9AD291167CF5700628145DE1DEB777C2CFC7907553B24446515F6D0E',\n            'ibc/8242AD24008032E457D2E12D46588FD39FB54FB29680C6C7663D296B383C37C4',\n            'ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858',\n            'ibc/0CD3A0285E1341859B5E86B6AB7682F023D03E97607CCC1DC95706411D866DF7'\n        )\n),\nusd_3 AS (\n    SELECT\n        block_hour,\n        currency,\n        project_name,\n        price,\n        STDDEV(TO_NUMERIC(price)) over (\n            PARTITION BY currency,\n            block_hour\n        ) stddev_price -- TO_NUMERIC USED TO FIX ERROR RELATED TO TOO BIG OF INTEGER\n    FROM\n        usd_2\n    WHERE\n        currency = 'uosmo'\n),\nusd_4 AS (\n    SELECT\n        block_hour,\n        currency,\n        project_name,\n        price,\n        stddev_price,\n        CASE\n            WHEN ABS(price - AVG(price) over(PARTITION BY currency, block_hour)) > stddev_price * 2 THEN TRUE\n            ELSE FALSE\n        END exclude_from_pricing,\n        AVG(price) over(\n            PARTITION BY currency,\n            block_hour\n        ) avg_price\n    FROM\n        usd_3\n),\nosmo_price_hour AS (\n    SELECT\n        DATE_TRUNC(\n            'HOUR',\n            block_timestamp\n        ) AS block_hour,\n        AVG(price) AS price\n    FROM\n        {{ ref('silver__pool_token_prices') }} A\n    WHERE\n        price_denom = 'uosmo'\n        AND token_address =", "doc_id": "06b03e59-9b38-4326-a5ee-ec569acbedfb", "embedding": null, "doc_hash": "13fec2e8331e17c8c9576e7ad6f8566242c72474df4cd7df7bd57a2924fb0a10", "extra_info": {"file_path": "models/silver/prices/silver__prices_swaps.sql", "file_name": "silver__prices_swaps.sql"}, "node_info": {"start": 3304, "end": 4995, "_node_type": "1"}, "relationships": {"1": "a27b2a5800f4897fba3c7339620fed1fdd995674", "2": "86c1d5d1-8db6-4bd6-8538-e298474f1bfd", "3": "bbe521ac-58b5-4344-b8fc-5eb15b7b5638"}}, "__type__": "1"}, "bbe521ac-58b5-4344-b8fc-5eb15b7b5638": {"__data__": {"text": "= 'uosmo'\n        AND token_address = 'ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858' --axUSDC\n\n{% if is_incremental() %}\nAND block_hour >=(\n    SELECT\n        DATEADD('day', -3, MAX(block_hour :: DATE))\n    FROM\n        {{ this }}\n)\n{% endif %}\nGROUP BY\n    block_hour\n),\nosmo AS (\n    SELECT\n        A.block_hour,\n        from_currency,\n        from_project_name,\n        from_amount,\n        CASE\n            WHEN to_currency = 'uosmo' THEN (\n                to_amount * prices.price\n            ) / NULLIF(\n                from_amount,\n                0\n            )\n        END AS from_usd,\n        to_currency,\n        to_project_name,\n        to_amount,\n        CASE\n            WHEN from_currency = 'uosmo' THEN (\n                from_amount * prices.price\n            ) / NULLIF(\n                to_amount,\n                0\n            )\n        END AS to_usd,\n        dex\n    FROM\n        swaps A\n        LEFT JOIN osmo_price_hour prices\n        ON A.block_hour = prices.block_hour\n    WHERE\n        (\n            A.from_currency = 'uosmo'\n            OR A.to_currency = 'uosmo'\n        )\n        AND NOT (\n            A.from_currency = 'uosmo'\n            AND A.to_currency = 'uosmo'\n        )\n),\ncombo_1 AS (\n    SELECT\n        block_hour,\n        from_currency AS currency,\n        from_project_name AS project_name,\n        from_usd AS price,\n        dex,\n        from_amount AS amount\n    FROM\n        usd\n    WHERE\n        to_currency IN (\n            'ibc/9F9B07EF9AD291167CF5700628145DE1DEB777C2CFC7907553B24446515F6D0E',\n            'ibc/8242AD24008032E457D2E12D46588FD39FB54FB29680C6C7663D296B383C37C4',\n     ", "doc_id": "bbe521ac-58b5-4344-b8fc-5eb15b7b5638", "embedding": null, "doc_hash": "4f98fdb82c0fed983e5e24ac5c11adb37228692ff53eabc92fbcbd7fda6862bd", "extra_info": {"file_path": "models/silver/prices/silver__prices_swaps.sql", "file_name": "silver__prices_swaps.sql"}, "node_info": {"start": 4970, "end": 6624, "_node_type": "1"}, "relationships": {"1": "a27b2a5800f4897fba3c7339620fed1fdd995674", "2": "06b03e59-9b38-4326-a5ee-ec569acbedfb", "3": "c6b897fa-1b10-4edc-9909-0ef38c08df54"}}, "__type__": "1"}, "c6b897fa-1b10-4edc-9909-0ef38c08df54": {"__data__": {"text": "           'ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858',\n            'ibc/0CD3A0285E1341859B5E86B6AB7682F023D03E97607CCC1DC95706411D866DF7'\n        )\n    UNION ALL\n    SELECT\n        block_hour,\n        to_currency AS currency,\n        to_project_name AS project_name,\n        to_usd AS price,\n        dex,\n        to_amount AS amount\n    FROM\n        usd\n    WHERE\n        from_currency IN (\n            'ibc/9F9B07EF9AD291167CF5700628145DE1DEB777C2CFC7907553B24446515F6D0E',\n            'ibc/8242AD24008032E457D2E12D46588FD39FB54FB29680C6C7663D296B383C37C4',\n            'ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858',\n            'ibc/0CD3A0285E1341859B5E86B6AB7682F023D03E97607CCC1DC95706411D866DF7'\n        )\n    UNION ALL\n    SELECT\n        block_hour,\n        to_currency AS currency,\n        to_project_name AS project_name,\n        CASE\n            WHEN to_currency IN (\n                'ibc/9F9B07EF9AD291167CF5700628145DE1DEB777C2CFC7907553B24446515F6D0E',\n                'ibc/8242AD24008032E457D2E12D46588FD39FB54FB29680C6C7663D296B383C37C4',\n                'ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858',\n                'ibc/0CD3A0285E1341859B5E86B6AB7682F023D03E97607CCC1DC95706411D866DF7'\n            ) THEN 1\n            ELSE to_usd\n        END price,\n        dex,\n        to_amount AS amount\n    FROM\n        osmo\n    WHERE\n        from_currency = 'uosmo'\n    UNION ALL\n    SELECT\n        block_hour,\n        from_currency AS currency,\n        from_project_name AS project_name,\n        CASE\n            WHEN from_currency IN (\n  ", "doc_id": "c6b897fa-1b10-4edc-9909-0ef38c08df54", "embedding": null, "doc_hash": "745368379d87f22eb668e8fa64cd7ef4dd3bde04d6c389cde69203a30530cd96", "extra_info": {"file_path": "models/silver/prices/silver__prices_swaps.sql", "file_name": "silver__prices_swaps.sql"}, "node_info": {"start": 6651, "end": 8275, "_node_type": "1"}, "relationships": {"1": "a27b2a5800f4897fba3c7339620fed1fdd995674", "2": "bbe521ac-58b5-4344-b8fc-5eb15b7b5638", "3": "6b847043-daa1-4f75-9c1e-b5f6410ca95d"}}, "__type__": "1"}, "6b847043-daa1-4f75-9c1e-b5f6410ca95d": {"__data__": {"text": "          WHEN from_currency IN (\n                'ibc/9F9B07EF9AD291167CF5700628145DE1DEB777C2CFC7907553B24446515F6D0E',\n                'ibc/8242AD24008032E457D2E12D46588FD39FB54FB29680C6C7663D296B383C37C4',\n                'ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858',\n                'ibc/0CD3A0285E1341859B5E86B6AB7682F023D03E97607CCC1DC95706411D866DF7'\n            ) THEN 1\n            ELSE from_usd\n        END price,\n        dex,\n        from_amount AS amount\n    FROM\n        osmo\n    WHERE\n        to_currency = 'uosmo'\n),\ncombo_2 AS (\n    SELECT\n        block_hour,\n        currency,\n        project_name,\n        price,\n        MEDIAN(\n            price\n        ) over (\n            PARTITION BY currency,\n            block_hour\n        ) stddev_price,\n        dex,\n        amount\n    FROM\n        combo_1\n),\ncombo_3 AS (\n    SELECT\n        block_hour,\n        currency,\n        project_name,\n        price,\n        stddev_price,\n        CASE\n            WHEN ABS(\n                price - stddev_price\n            ) > stddev_price * 2 THEN TRUE\n            ELSE FALSE\n        END exclude_from_pricing,\n        AVG(price) over(\n            PARTITION BY currency,\n            block_hour\n        ) avg_price,\n        dex,\n        amount\n    FROM\n        combo_2\n),\nfinal_dex AS (\n    SELECT\n        block_hour,\n        block_hour :: DATE AS block_date,\n        currency,\n        project_name,\n        dex,\n        AVG(\n            CASE\n                WHEN exclude_from_pricing = FALSE THEN price\n            END\n        ) avg_price_usd_hour_excludes,\n   ", "doc_id": "6b847043-daa1-4f75-9c1e-b5f6410ca95d", "embedding": null, "doc_hash": "b8821b97bd571c87976deec85d2a5dfa884074bdf7c28ca4a5c8f8be3e58a92d", "extra_info": {"file_path": "models/silver/prices/silver__prices_swaps.sql", "file_name": "silver__prices_swaps.sql"}, "node_info": {"start": 8255, "end": 9845, "_node_type": "1"}, "relationships": {"1": "a27b2a5800f4897fba3c7339620fed1fdd995674", "2": "c6b897fa-1b10-4edc-9909-0ef38c08df54", "3": "402722a7-b371-4bfe-9161-4e6f6bc3cdac"}}, "__type__": "1"}, "402722a7-b371-4bfe-9161-4e6f6bc3cdac": {"__data__": {"text": "  ) avg_price_usd_hour_excludes,\n        MIN(\n            price\n        ) min_price_usd_hour,\n        MAX(\n            price\n        ) max_price_usd_hour,\n        MAX(\n            price\n        ) - MIN(\n            price\n        ) AS volatility_measure,\n        SUM(\n            CASE\n                WHEN exclude_from_pricing = FALSE THEN 1\n            END\n        ) swaps_in_hour_excludes,\n        COUNT(1) AS swaps_in_hour,\n        SUM(\n            CASE\n                WHEN exclude_from_pricing = FALSE THEN amount\n            END\n        ) total_amount_excludes,\n        SUM(amount) AS total_amount\n    FROM\n        combo_3\n    GROUP BY\n        block_hour,\n        block_hour :: DATE,\n        currency,\n        project_name,\n        dex\n),\nFINAL AS (\n    SELECT\n        A.block_hour,\n        A.currency,\n        A.project_name,\n        MIN(min_price_usd_hour) AS min_price_usd_hour,\n        MAX(max_price_usd_hour) AS max_price_usd_hour,\n        MAX(max_price_usd_hour) - MIN(min_price_usd_hour) AS volatility_measure,\n        SUM(swaps_in_hour) AS swaps_in_hour,\n        SUM(total_amount) AS volume_in_hour,\n        SUM(\n            avg_price_usd_hour_excludes\n        ) AS price\n    FROM\n        (\n            SELECT\n                block_hour,\n                block_date,\n                currency,\n                project_name,\n                dex,\n                avg_price_usd_hour_excludes,\n                min_price_usd_hour,\n                max_price_usd_hour,\n                volatility_measure,\n                swaps_in_hour,\n                total_amount\n            FROM\n       ", "doc_id": "402722a7-b371-4bfe-9161-4e6f6bc3cdac", "embedding": null, "doc_hash": "6bb435686401ccfefcdb7f8ce028b1df74776ee94cbe011693eb1ba220f96652", "extra_info": {"file_path": "models/silver/prices/silver__prices_swaps.sql", "file_name": "silver__prices_swaps.sql"}, "node_info": {"start": 9837, "end": 11430, "_node_type": "1"}, "relationships": {"1": "a27b2a5800f4897fba3c7339620fed1fdd995674", "2": "6b847043-daa1-4f75-9c1e-b5f6410ca95d", "3": "55fc185b-be34-46b1-84fd-2780d10a75b4"}}, "__type__": "1"}, "55fc185b-be34-46b1-84fd-2780d10a75b4": {"__data__": {"text": "          FROM\n                final_dex\n        ) A\n    GROUP BY\n        A.block_hour,\n        A.currency,\n        A.project_name\n) {# {% if is_incremental() %},\nnot_in_final AS (\n    SELECT\n        DATEADD(\n            'HOUR',\n            1,\n            block_hour\n        ) block_hour,\n        currency,\n        project_name,\n        0 AS min_price_usd_hour,\n        0 AS max_price_usd_hour,\n        0 AS volatility_measure,\n        0 AS swaps_in_hour,\n        0 AS volume_in_hour,\n        price_usd\n    FROM\n        {{ this }}\n    WHERE\n        currency NOT IN(\n            SELECT\n                DISTINCT currency\n            FROM\n                FINAL\n        )\n)\n{% endif %}\n\n#},\nfill_in_the_blanks_temp AS (\n    SELECT\n        A.hour AS block_hour,\n        b.currency,\n        b.project_name,\n        C.price,\n        C.min_price_usd_hour,\n        C.max_price_usd_hour,\n        C.volatility_measure,\n        C.swaps_in_hour,\n        C.volume_in_hour\n    FROM\n        (\n            SELECT\n                date_hour AS HOUR\n            FROM\n                {{ source(\n                    'crosschain',\n                    'dim_date_hours'\n                ) }} A {# {% if is_incremental() %}\n            WHERE\n                HOUR > (\n                    SELECT\n                        MAX(block_hour)\n                    FROM\n                        {{ this }}\n                )\n                AND HOUR <= (\n                    SELECT\n                        max_date\n                  ", "doc_id": "55fc185b-be34-46b1-84fd-2780d10a75b4", "embedding": null, "doc_hash": "e88c01c88a3e2670a28d3cb258d0133a59c8967bffc0d28e6616702ddcb12de6", "extra_info": {"file_path": "models/silver/prices/silver__prices_swaps.sql", "file_name": "silver__prices_swaps.sql"}, "node_info": {"start": 11456, "end": 12949, "_node_type": "1"}, "relationships": {"1": "a27b2a5800f4897fba3c7339620fed1fdd995674", "2": "402722a7-b371-4bfe-9161-4e6f6bc3cdac", "3": "3a766122-ff3a-4813-b357-c28670d5962f"}}, "__type__": "1"}, "3a766122-ff3a-4813-b357-c28670d5962f": {"__data__": {"text": "                   FROM\n                        swap_range\n                )\n            {% else %}\n                JOIN swap_range b\n                ON A.date_hour BETWEEN b.min_date\n                AND max_date\n            {% endif %}\n\n            #}\n        ) A\n        CROSS JOIN (\n            SELECT\n                DISTINCT currency,\n                project_name\n            FROM\n                FINAL {# {% if is_incremental() %}\n            UNION\n            SELECT\n                DISTINCT currency,\n                project_name\n            FROM\n                {{ this }}\n            {% endif %}\n\n            #}\n        ) b\n        LEFT JOIN (\n            SELECT\n                *\n            FROM\n                FINAL {# {% if is_incremental() %}\n            UNION ALL\n            SELECT\n                *\n            FROM\n                not_in_final\n            {% endif %}\n\n            #}\n        ) C\n        ON A.hour = C.block_hour\n        AND b.currency = C.currency\n)\nSELECT\n    block_hour,\n    currency,\n    project_name,\n    LAST_VALUE(\n        price ignore nulls\n    ) over(\n        PARTITION BY currency\n        ORDER BY\n            block_hour ASC rows unbounded preceding\n    ) AS price_usd,\n    min_price_usd_hour,\n    max_price_usd_hour,\n    volatility_measure,\n    swaps_in_hour,\n    volume_in_hour * price AS volume_usd_in_hour\nFROM\n    fill_in_the_blanks_temp\nWHERE\n    project_name IN (\n        'axlUSDC',\n        'axlWBTC',\n        'gWETH',\n        'MARBLE',\n        'axlFRAX',\n        'gUSDC',\n       ", "doc_id": "3a766122-ff3a-4813-b357-c28670d5962f", "embedding": null, "doc_hash": "567878bc0d9e56b1ab0ff368fb62d6204ebf7257d518300b2a030775a25a202d", "extra_info": {"file_path": "models/silver/prices/silver__prices_swaps.sql", "file_name": "silver__prices_swaps.sql"}, "node_info": {"start": 12955, "end": 14488, "_node_type": "1"}, "relationships": {"1": "a27b2a5800f4897fba3c7339620fed1fdd995674", "2": "55fc185b-be34-46b1-84fd-2780d10a75b4", "3": "827d0537-7328-4a14-ab74-99ec46041148"}}, "__type__": "1"}, "827d0537-7328-4a14-ab74-99ec46041148": {"__data__": {"text": "       'gUSDC',\n        'axlUSDT',\n        'ASVT',\n        'axlDAI',\n        'axlWETH',\n        'RAW',\n        'gDAI',\n        'ION'\n    ) qualify(LAST_VALUE(price ignore nulls) over(PARTITION BY currency\nORDER BY\n    block_hour ASC rows unbounded preceding)) IS NOT NULL\n", "doc_id": "827d0537-7328-4a14-ab74-99ec46041148", "embedding": null, "doc_hash": "0a1f8c299545a4ab16a4691c8c81e8c6302cdc6e6c568c0c304b15521477549b", "extra_info": {"file_path": "models/silver/prices/silver__prices_swaps.sql", "file_name": "silver__prices_swaps.sql"}, "node_info": {"start": 14465, "end": 14737, "_node_type": "1"}, "relationships": {"1": "a27b2a5800f4897fba3c7339620fed1fdd995674", "2": "3a766122-ff3a-4813-b357-c28670d5962f"}}, "__type__": "1"}, "78a71ec2-9191-490c-9b0a-9aa013bcab2f": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__prices_swaps\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - BLOCK_HOUR\n            - CURRENCY\n    columns:\n      - name: BLOCK_HOUR\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 1\n      - name: CURRENCY\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: PRICE_USD\n        description: \"The price of the asset in USD\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: MIN_PRICE_USD_HOUR\n        description: \"The lowest price found in the hour in USD\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: MAX_PRICE_USD_HOUR\n        description: \"The highest price found in the hour in USD\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: VOLATILITY_MEASURE\n        description: \"The difference between the min and max price for the hour\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: SWAPS_IN_HOUR\n        description: \"The number of swap transactions in the hour\"\n        tests: \n          -", "doc_id": "78a71ec2-9191-490c-9b0a-9aa013bcab2f", "embedding": null, "doc_hash": "46237c3ea50ab5683eae5b31bf30b8a8bf3ce7ef4371769cfc6de03a61d7e088", "extra_info": {"file_path": "models/silver/prices/silver__prices_swaps.yml", "file_name": "silver__prices_swaps.yml"}, "node_info": {"start": 0, "end": 1798, "_node_type": "1"}, "relationships": {"1": "038398c861c6c187545de3f11c323e4d1135d42a", "3": "757d2fff-a71a-492c-9221-c0233fd55ef4"}}, "__type__": "1"}, "757d2fff-a71a-492c-9221-c0233fd55ef4": {"__data__": {"text": "       tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: VOLUME_USD_IN_HOUR\n        description: \"The volume of swap transactions (in USD) in the hour\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n  ", "doc_id": "757d2fff-a71a-492c-9221-c0233fd55ef4", "embedding": null, "doc_hash": "27307eebf631ed588600314679754dae71cc34faba8eea38f499d25fc108418e", "extra_info": {"file_path": "models/silver/prices/silver__prices_swaps.yml", "file_name": "silver__prices_swaps.yml"}, "node_info": {"start": 1772, "end": 2216, "_node_type": "1"}, "relationships": {"1": "038398c861c6c187545de3f11c323e4d1135d42a", "2": "78a71ec2-9191-490c-9b0a-9aa013bcab2f"}}, "__type__": "1"}, "8a32a25b-2ed5-4c1a-ae70-412ebd898e99": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['recorded_hour::DATE'],\n) }}\n\nWITH date_hours AS (\n\n    SELECT\n        date_hour\n    FROM\n        {{ source (\n            'crosschain',\n            'dim_date_hours'\n        ) }}\n    WHERE\n        date_hour >= '2020-04-10'\n        AND date_hour <= (\n            SELECT\n                MAX(recorded_hour)\n            FROM\n                {{ source(\n                    'crosschain_silver',\n                    'hourly_prices_coin_gecko'\n                ) }}\n        )\n\n{% if is_incremental() %}\nAND date_hour > (\n    SELECT\n        MAX(recorded_hour)\n    FROM\n        {{ this }}\n)\n{% endif %}\n),\nasset_metadata AS (\n    SELECT\n        id,\n        symbol\n    FROM\n        {{ source(\n            'crosschain_silver',\n            'asset_metadata_coin_gecko'\n        ) }}\n    WHERE\n        id IN (\n            'pstake-finance',\n            'e-money-eur',\n            'juno-network',\n            'terra-luna',\n            'cerberus-2',\n            'hash-token',\n            'sommelier',\n            'assetmantle',\n            'microtick',\n            'regen',\n            'galaxer',\n            'bootleg-nft',\n            'terrausd',\n            'umee',\n            'cmdx',\n            'terra-krw',\n            'cheqd-network',\n            'neta',\n            'medibloc',\n            'kujira',\n            'likecoin',\n            'dig-chain',\n            'hope-galaxy',\n            'wrapped-bitcoin',\n            'comdex',\n           ", "doc_id": "8a32a25b-2ed5-4c1a-ae70-412ebd898e99", "embedding": null, "doc_hash": "08d51c782a4d545f6d97390220f857ec8a0e92cba69de966e7b819fc1a76a261", "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_gecko_hourly.sql", "file_name": "silver__token_prices_coin_gecko_hourly.sql"}, "node_info": {"start": 0, "end": 1558, "_node_type": "1"}, "relationships": {"1": "83dbe886a230ace75d3d8cafb06e83af332b0c82", "3": "88767bd7-a8df-499d-9771-885b3564078d"}}, "__type__": "1"}, "88767bd7-a8df-499d-9771-885b3564078d": {"__data__": {"text": "   'comdex',\n            'darcmatter-coin',\n            'ixo',\n            'osmosis',\n            'persistence',\n            'stakeeasy-bjuno',\n            'stakeeasy-juno-derivative',\n            'stride-staked-atom',\n            'seasy',\n            'cosmos',\n            'crescent-network',\n            'crypto-com-chain',\n            'injective-protocol',\n            'arable-protocol',\n            'inter-stable-token',\n            'weth',\n            'usdx',\n            'odin-protocol',\n            'chihuahua-token',\n            'agoric',\n            'stargaze',\n            'lum-network',\n            'starname',\n            'ki',\n            'graviton',\n            'e-money',\n            'fetch-ai',\n            'axelar',\n            'racoon',\n            'posthuman',\n            'sentinel',\n            'stride',\n            'usk',\n            'dai',\n            'ion',\n            'iris-network',\n            'evmos',\n            'desmos',\n            'akash-network'\n        )\n    GROUP BY\n        1,\n        2\n),\nbase_date_hours_symbols AS (\n    SELECT\n        date_hour,\n        id,\n        symbol\n    FROM\n        date_hours\n        CROSS JOIN asset_metadata\n),\nbase_legacy_prices AS (\n    SELECT\n        DATE_TRUNC(\n            'hour',\n            recorded_at\n        ) AS recorded_hour,\n        asset_id AS id,\n        symbol,\n        price AS CLOSE\n    FROM\n        {{ source(\n            'shared',\n            'prices_v2'\n        ) }}\n    WHERE\n        provider =", "doc_id": "88767bd7-a8df-499d-9771-885b3564078d", "embedding": null, "doc_hash": "36f7c983e7d436dcf7288a9063251ca8fa59aa7f253892efde8e8efd08eb799d", "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_gecko_hourly.sql", "file_name": "silver__token_prices_coin_gecko_hourly.sql"}, "node_info": {"start": 1549, "end": 3034, "_node_type": "1"}, "relationships": {"1": "83dbe886a230ace75d3d8cafb06e83af332b0c82", "2": "8a32a25b-2ed5-4c1a-ae70-412ebd898e99", "3": "b1824d9b-fced-4cdd-a776-fd11e49ae870"}}, "__type__": "1"}, "b1824d9b-fced-4cdd-a776-fd11e49ae870": {"__data__": {"text": "  ) }}\n    WHERE\n        provider = 'coingecko'\n        AND asset_id IN (\n            'pstake-finance',\n            'e-money-eur',\n            'juno-network',\n            'terra-luna',\n            'cerberus-2',\n            'hash-token',\n            'sommelier',\n            'assetmantle',\n            'microtick',\n            'regen',\n            'galaxer',\n            'bootleg-nft',\n            'terrausd',\n            'umee',\n            'cmdx',\n            'terra-krw',\n            'cheqd-network',\n            'neta',\n            'medibloc',\n            'kujira',\n            'likecoin',\n            'dig-chain',\n            'hope-galaxy',\n            'wrapped-bitcoin',\n            'comdex',\n            'darcmatter-coin',\n            'ixo',\n            'osmosis',\n            'persistence',\n            'stakeeasy-bjuno',\n            'stakeeasy-juno-derivative',\n            'stride-staked-atom',\n            'seasy',\n            'cosmos',\n            'crescent-network',\n            'crypto-com-chain',\n            'injective-protocol',\n            'arable-protocol',\n            'inter-stable-token',\n            'weth',\n            'usdx',\n            'odin-protocol',\n            'chihuahua-token',\n            'agoric',\n            'stargaze',\n            'lum-network',\n            'starname',\n            'ki',\n            'graviton',\n            'e-money',\n            'fetch-ai',\n            'axelar',\n           ", "doc_id": "b1824d9b-fced-4cdd-a776-fd11e49ae870", "embedding": null, "doc_hash": "22fc63b07eb8905a79d726f0fb25acde80b58bcab4d84d4025ae6ebbc746e028", "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_gecko_hourly.sql", "file_name": "silver__token_prices_coin_gecko_hourly.sql"}, "node_info": {"start": 3026, "end": 4455, "_node_type": "1"}, "relationships": {"1": "83dbe886a230ace75d3d8cafb06e83af332b0c82", "2": "88767bd7-a8df-499d-9771-885b3564078d", "3": "a5a6489f-df3e-418b-a5d3-32722c904ffc"}}, "__type__": "1"}, "a5a6489f-df3e-418b-a5d3-32722c904ffc": {"__data__": {"text": "   'axelar',\n            'racoon',\n            'posthuman',\n            'sentinel',\n            'stride',\n            'usk',\n            'dai',\n            'ion',\n            'iris-network',\n            'evmos',\n            'desmos',\n            'akash-network'\n        )\n        AND MINUTE(recorded_at) = 59\n        AND recorded_at :: DATE < '2022-07-20' -- use legacy data before this date\n\n{% if is_incremental() %}\nAND recorded_at > (\n    SELECT\n        MAX(recorded_hour)\n    FROM\n        {{ this }}\n)\n{% endif %}\n),\nbase_prices AS (\n    SELECT\n        recorded_hour,\n        p.id,\n        m.symbol,\n        p.close\n    FROM\n        {{ source(\n            'crosschain_silver',\n            'hourly_prices_coin_gecko'\n        ) }}\n        p\n        LEFT OUTER JOIN asset_metadata m\n        ON m.id = p.id\n    WHERE\n        p.id IN (\n            'pstake-finance',\n            'e-money-eur',\n            'juno-network',\n            'terra-luna',\n            'cerberus-2',\n            'hash-token',\n            'sommelier',\n            'assetmantle',\n            'microtick',\n            'regen',\n            'galaxer',\n            'bootleg-nft',\n            'terrausd',\n            'umee',\n            'cmdx',\n            'terra-krw',\n            'cheqd-network',\n            'neta',\n            'medibloc',\n            'kujira',\n            'likecoin',\n            'dig-chain',\n            'hope-galaxy',\n            'wrapped-bitcoin',\n            'comdex',\n            'darcmatter-coin',\n            'ixo',\n   ", "doc_id": "a5a6489f-df3e-418b-a5d3-32722c904ffc", "embedding": null, "doc_hash": "469f0e5f5d2084da9e2a99bb05b9e308d5ec42db429044d0ea6018f1fd2f4e9a", "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_gecko_hourly.sql", "file_name": "silver__token_prices_coin_gecko_hourly.sql"}, "node_info": {"start": 4465, "end": 5978, "_node_type": "1"}, "relationships": {"1": "83dbe886a230ace75d3d8cafb06e83af332b0c82", "2": "b1824d9b-fced-4cdd-a776-fd11e49ae870", "3": "c8e7a7ff-8574-4cb2-9ad7-369be2893fd0"}}, "__type__": "1"}, "c8e7a7ff-8574-4cb2-9ad7-369be2893fd0": {"__data__": {"text": "           'ixo',\n            'osmosis',\n            'persistence',\n            'stakeeasy-bjuno',\n            'stakeeasy-juno-derivative',\n            'stride-staked-atom',\n            'seasy',\n            'cosmos',\n            'crescent-network',\n            'crypto-com-chain',\n            'injective-protocol',\n            'arable-protocol',\n            'inter-stable-token',\n            'weth',\n            'usdx',\n            'odin-protocol',\n            'chihuahua-token',\n            'agoric',\n            'stargaze',\n            'lum-network',\n            'starname',\n            'ki',\n            'graviton',\n            'e-money',\n            'fetch-ai',\n            'axelar',\n            'racoon',\n            'posthuman',\n            'sentinel',\n            'stride',\n            'usk',\n            'dai',\n            'ion',\n            'iris-network',\n            'evmos',\n            'desmos',\n            'akash-network'\n        )\n        AND recorded_hour :: DATE >= '2022-07-20'\n\n{% if is_incremental() %}\nAND recorded_hour > (\n    SELECT\n        MAX(recorded_hour)\n    FROM\n        {{ this }}\n)\n{% endif %}\n),\nprices AS (\n    SELECT\n        *\n    FROM\n        base_legacy_prices\n    UNION\n    SELECT\n        *\n    FROM\n        base_prices\n),\nimputed_prices AS (\n    SELECT\n        d.*,\n        p.close AS hourly_close,\n        LAST_VALUE(\n            p.close ignore nulls\n        ) over (\n            PARTITION BY d.symbol\n            ORDER BY\n                d.date_hour rows unbounded preceding\n        ) AS", "doc_id": "c8e7a7ff-8574-4cb2-9ad7-369be2893fd0", "embedding": null, "doc_hash": "d1baf5ce3d8d57a585765a2d230c7c8b63a3dd559a1458ac8f15b6eaa137a310", "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_gecko_hourly.sql", "file_name": "silver__token_prices_coin_gecko_hourly.sql"}, "node_info": {"start": 5982, "end": 7510, "_node_type": "1"}, "relationships": {"1": "83dbe886a230ace75d3d8cafb06e83af332b0c82", "2": "a5a6489f-df3e-418b-a5d3-32722c904ffc", "3": "fab8dbc8-6399-45eb-bc47-09f3b0d813b3"}}, "__type__": "1"}, "fab8dbc8-6399-45eb-bc47-09f3b0d813b3": {"__data__": {"text": "rows unbounded preceding\n        ) AS imputed_close\n    FROM\n        base_date_hours_symbols d\n        LEFT OUTER JOIN prices p\n        ON p.recorded_hour = d.date_hour\n        AND p.id = d.id\n)\nSELECT\n    p.date_hour AS recorded_hour,\n    p.id,\n    CASE\n        WHEN p.symbol IS NOT NULL THEN p.symbol\n        ELSE CASE\n            p.id\n            WHEN 'cerberus-2' THEN 'CRBRUS'\n            WHEN 'cheqd-network' THEN 'CHEQ'\n            WHEN 'e-money-eur' THEN 'EEUR'\n            WHEN 'juno-network' THEN 'JUNO'\n            WHEN 'kujira' THEN 'KUJI'\n            WHEN 'medibloc' THEN 'MED'\n            WHEN 'microtick' THEN 'TICK'\n            WHEN 'neta' THEN 'NETA'\n            WHEN 'regen' THEN 'REGEN'\n            WHEN 'sommelier' THEN 'SOMM'\n            WHEN 'terra-luna' THEN 'LUNC'\n            WHEN 'umee' THEN 'UMEE'\n        END\n    END AS symbol,\n    COALESCE(\n        p.hourly_close,\n        p.imputed_close\n    ) AS CLOSE,\n    CASE\n        WHEN p.hourly_close IS NULL THEN TRUE\n        ELSE FALSE\n    END AS imputed,\n    concat_ws(\n        '-',\n        recorded_hour,\n        symbol\n    ) AS _unique_key\nFROM\n    imputed_prices p\nWHERE\n    CLOSE IS NOT NULL\n    AND symbol IS NOT NULL qualify(ROW_NUMBER() over(PARTITION BY recorded_hour, symbol\nORDER BY\n    id) = 1)\n", "doc_id": "fab8dbc8-6399-45eb-bc47-09f3b0d813b3", "embedding": null, "doc_hash": "ba5f05d1d76ff137835435cbb18ba381498954caedab78bf3427658660d619da", "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_gecko_hourly.sql", "file_name": "silver__token_prices_coin_gecko_hourly.sql"}, "node_info": {"start": 7480, "end": 8759, "_node_type": "1"}, "relationships": {"1": "83dbe886a230ace75d3d8cafb06e83af332b0c82", "2": "c8e7a7ff-8574-4cb2-9ad7-369be2893fd0"}}, "__type__": "1"}, "77ef345a-671b-42c5-a1d2-b990a51f6606": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__token_prices_coin_gecko_hourly\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - RECORDED_HOUR\n            - SYMBOL\n    columns:\n      - name: RECORDED_HOUR\n        description: Hour that the price was recorded at\n        tests:\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 2\n      - name: ID\n        description: ID of the asset from CoinGecko\n        tests:\n          - not_null\n      - name: SYMBOL\n        description: Symbol of the token\n        tests:\n          - not_null\n      - name: CLOSE\n        description: Closing price of the recorded hour in USD\n        tests: \n          - not_null\n      - name: IMPUTED\n        description: Whether the price was imputed from an earlier record (generally used for low trade volume tokens)\n        tests: \n          - not_null \n      - name: _UNIQUE_KEY\n        description: Concatenation of multiple columns used for incremental merge", "doc_id": "77ef345a-671b-42c5-a1d2-b990a51f6606", "embedding": null, "doc_hash": "cd0332b96bc45e8dec35908c3099300c141a2ce8acf99e830e8b1e6e6927347a", "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_gecko_hourly.yml", "file_name": "silver__token_prices_coin_gecko_hourly.yml"}, "node_info": {"start": 0, "end": 1055, "_node_type": "1"}, "relationships": {"1": "7bff700d406f6e260a4fcf921a5ec831c281c38f"}}, "__type__": "1"}, "1d891540-019c-4d58-9fd1-6f199b0a0d6a": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['recorded_hour::DATE'],\n) }}\n\nWITH date_hours AS (\n\n    SELECT\n        date_hour\n    FROM\n        {{ source (\n            'crosschain',\n            'dim_date_hours'\n        ) }}\n    WHERE\n        date_hour >= '2020-04-10'\n        AND date_hour <= (\n            SELECT\n                MAX(recorded_hour)\n            FROM\n                {{ source(\n                    'crosschain_silver',\n                    'hourly_prices_coin_market_cap'\n                ) }}\n        )\n\n{% if is_incremental() %}\nAND date_hour > (\n    SELECT\n        MAX(recorded_hour)\n    FROM\n        {{ this }}\n)\n{% endif %}\n),\nasset_metadata AS (\n    SELECT\n        id,\n        symbol\n    FROM\n        {{ source(\n            'crosschain_silver',\n            'asset_metadata_coin_market_cap'\n        ) }}\n    WHERE\n        id IN (\n            7431,\n            7281,\n            3874,\n            3635,\n            7271,\n            4679,\n            3794,\n            14973,\n            17748,\n            2909,\n            8905,\n            13314,\n            19899,\n            18051,\n            8279,\n            17338,\n            3773,\n            4315,\n            5604,\n            9908,\n            5835,\n            2620,\n            4263,\n            17208,\n            9480,\n            3717,\n            2396,\n            12220,\n            7226,\n         ", "doc_id": "1d891540-019c-4d58-9fd1-6f199b0a0d6a", "embedding": null, "doc_hash": "f7422df3901eb8a9229611488dd8b1068bb11a49cf1200d5556f6f5ec0800629", "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_market_cap_hourly.sql", "file_name": "silver__token_prices_coin_market_cap_hourly.sql"}, "node_info": {"start": 0, "end": 1472, "_node_type": "1"}, "relationships": {"1": "83682e27844b075aaf184171dfadf1aa7bd48cd0", "3": "b14a0f3a-57de-42e1-bf04-5b6c0f5a793c"}}, "__type__": "1"}, "b14a0f3a-57de-42e1-bf04-5b6c0f5a793c": {"__data__": {"text": "       7226,\n            17799,\n            4846,\n            14299,\n            17451,\n            22630,\n            328,\n            19640,\n            14713,\n            13877,\n            22669,\n            12256,\n            19111,\n            19938,\n            11646,\n            4172,\n            9388,\n            17183,\n            7129,\n            18699,\n            16389,\n            19686,\n            9546,\n            2643,\n            5590,\n            3408,\n            16697,\n            20381,\n            2303,\n            21781,\n            16842\n        )\n    GROUP BY\n        1,\n        2\n),\nbase_date_hours_symbols AS (\n    SELECT\n        date_hour,\n        id,\n        symbol\n    FROM\n        date_hours\n        CROSS JOIN asset_metadata\n),\nbase_legacy_prices AS (\n    SELECT\n        DATE_TRUNC(\n            'hour',\n            recorded_at\n        ) AS recorded_hour,\n        asset_id :: NUMBER AS id,\n        symbol,\n        price AS CLOSE\n    FROM\n        {{ source(\n            'shared',\n            'prices_v2'\n        ) }}\n    WHERE\n        provider = 'coinmarketcap'\n        AND asset_id IN (\n            7431,\n            7281,\n            3874,\n            3635,\n            7271,\n            4679,\n            3794,\n            14973,\n            17748,\n            2909,\n            8905,\n            13314,\n ", "doc_id": "b14a0f3a-57de-42e1-bf04-5b6c0f5a793c", "embedding": null, "doc_hash": "d64f0e1afe665998f42027c7b18df9a8d10655ca88aea9799a146da6ec1fe8b8", "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_market_cap_hourly.sql", "file_name": "silver__token_prices_coin_market_cap_hourly.sql"}, "node_info": {"start": 1467, "end": 2814, "_node_type": "1"}, "relationships": {"1": "83682e27844b075aaf184171dfadf1aa7bd48cd0", "2": "1d891540-019c-4d58-9fd1-6f199b0a0d6a", "3": "3246af6f-bcb0-4b4d-a7c8-77fad7b8121c"}}, "__type__": "1"}, "3246af6f-bcb0-4b4d-a7c8-77fad7b8121c": {"__data__": {"text": "8905,\n            13314,\n            19899,\n            18051,\n            8279,\n            17338,\n            3773,\n            4315,\n            5604,\n            9908,\n            5835,\n            2620,\n            4263,\n            17208,\n            9480,\n            3717,\n            2396,\n            12220,\n            7226,\n            17799,\n            4846,\n            14299,\n            17451,\n            22630,\n            328,\n            19640,\n            14713,\n            13877,\n            22669,\n            12256,\n            19111,\n            19938,\n            11646,\n            4172,\n            9388,\n            17183,\n            7129,\n            18699,\n            16389,\n            19686,\n            9546,\n            2643,\n            5590,\n            3408,\n            16697,\n            20381,\n            2303,\n            21781,\n            16842\n        )\n        AND MINUTE(recorded_at) = 59\n        AND recorded_at :: DATE < '2022-07-20' -- use legacy data before this date\n\n{% if is_incremental() %}\nAND recorded_at > (\n    SELECT\n        MAX(recorded_hour)\n    FROM\n        {{ this }}\n)\n{% endif %}\n),\nbase_prices AS (\n    SELECT\n        recorded_hour,\n        p.id,\n        m.symbol,\n        p.close\n    FROM\n        {{ source(\n            'crosschain_silver',\n            'hourly_prices_coin_market_cap'\n     ", "doc_id": "3246af6f-bcb0-4b4d-a7c8-77fad7b8121c", "embedding": null, "doc_hash": "aacd83a15f3f63322cfa6c93d79e7e8b31055064e8e1f905c06370a09616655c", "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_market_cap_hourly.sql", "file_name": "silver__token_prices_coin_market_cap_hourly.sql"}, "node_info": {"start": 2808, "end": 4171, "_node_type": "1"}, "relationships": {"1": "83682e27844b075aaf184171dfadf1aa7bd48cd0", "2": "b14a0f3a-57de-42e1-bf04-5b6c0f5a793c", "3": "bb72b6f0-aba6-4ffd-bc5d-87eee29076ed"}}, "__type__": "1"}, "bb72b6f0-aba6-4ffd-bc5d-87eee29076ed": {"__data__": {"text": " 'hourly_prices_coin_market_cap'\n        ) }}\n        p\n        LEFT OUTER JOIN asset_metadata m\n        ON m.id = p.id\n    WHERE\n        p.id IN (\n            7431,\n            7281,\n            3874,\n            3635,\n            7271,\n            4679,\n            3794,\n            14973,\n            17748,\n            2909,\n            8905,\n            13314,\n            19899,\n            18051,\n            8279,\n            17338,\n            3773,\n            4315,\n            5604,\n            9908,\n            5835,\n            2620,\n            4263,\n            17208,\n            9480,\n            3717,\n            2396,\n            12220,\n            7226,\n            17799,\n            4846,\n            14299,\n            17451,\n            22630,\n            328,\n            19640,\n            14713,\n            13877,\n            22669,\n            12256,\n            19111,\n            19938,\n            11646,\n            4172,\n            9388,\n            17183,\n            7129,\n            18699,\n            16389,\n            19686,\n            9546,\n            2643,\n            5590,\n            3408,\n            16697,\n            20381,\n            2303,\n            21781,\n            16842\n ", "doc_id": "bb72b6f0-aba6-4ffd-bc5d-87eee29076ed", "embedding": null, "doc_hash": "5b906c637e0eaef66146224bf18ff89c130ce2261150b9908348b77c529f632a", "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_market_cap_hourly.sql", "file_name": "silver__token_prices_coin_market_cap_hourly.sql"}, "node_info": {"start": 4153, "end": 5390, "_node_type": "1"}, "relationships": {"1": "83682e27844b075aaf184171dfadf1aa7bd48cd0", "2": "3246af6f-bcb0-4b4d-a7c8-77fad7b8121c", "3": "98b6d156-3d15-4769-9198-dedaee21d996"}}, "__type__": "1"}, "98b6d156-3d15-4769-9198-dedaee21d996": {"__data__": {"text": " 21781,\n            16842\n        )\n        AND recorded_hour :: DATE >= '2022-07-20'\n\n{% if is_incremental() %}\nAND recorded_hour > (\n    SELECT\n        MAX(recorded_hour)\n    FROM\n        {{ this }}\n)\n{% endif %}\n),\nprices AS (\n    SELECT\n        *\n    FROM\n        base_legacy_prices\n    UNION\n    SELECT\n        *\n    FROM\n        base_prices\n),\nimputed_prices AS (\n    SELECT\n        d.*,\n        p.close AS hourly_close,\n        LAST_VALUE(\n            p.close ignore nulls\n        ) over (\n            PARTITION BY d.symbol\n            ORDER BY\n                d.date_hour rows unbounded preceding\n        ) AS imputed_close\n    FROM\n        base_date_hours_symbols d\n        LEFT OUTER JOIN prices p\n        ON p.recorded_hour = d.date_hour\n        AND p.id = d.id\n)\nSELECT\n    p.date_hour AS recorded_hour,\n    p.id,\n    p.symbol,\n    COALESCE(\n        p.hourly_close,\n        p.imputed_close\n    ) AS CLOSE,\n    CASE\n        WHEN p.hourly_close IS NULL THEN TRUE\n        ELSE FALSE\n    END AS imputed,\n    concat_ws(\n        '-',\n        recorded_hour,\n        id\n    ) AS _unique_key\nFROM\n    imputed_prices p\nWHERE\n    CLOSE IS NOT NULL\n    AND symbol IS NOT NULL qualify(ROW_NUMBER() over(PARTITION BY recorded_hour, symbol\nORDER BY\n    id) = 1)\n", "doc_id": "98b6d156-3d15-4769-9198-dedaee21d996", "embedding": null, "doc_hash": "2bc1ba9d186ebc8c33f56e91adb5e2c6cfd05cf112665f46bb1af407372ebc90", "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_market_cap_hourly.sql", "file_name": "silver__token_prices_coin_market_cap_hourly.sql"}, "node_info": {"start": 5395, "end": 6654, "_node_type": "1"}, "relationships": {"1": "83682e27844b075aaf184171dfadf1aa7bd48cd0", "2": "bb72b6f0-aba6-4ffd-bc5d-87eee29076ed"}}, "__type__": "1"}, "4cd74c2d-6c68-48e4-98d9-5d8553201bdb": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__token_prices_coin_market_cap_hourly\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - RECORDED_HOUR\n            - SYMBOL\n    columns:\n      - name: RECORDED_HOUR\n        description: Hour that the price was recorded at\n        tests:\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 2\n      - name: ID\n        description: ID of the asset from CoinMarketCap\n        tests:\n          - not_null\n      - name: SYMBOL\n        description: Symbol of the token\n        tests:\n          - not_null\n      - name: CLOSE\n        description: Closing price of the recorded hour in USD\n        tests: \n          - not_null\n      - name: IMPUTED\n        description: Whether the price was imputed from an earlier record (generally used for low trade volume tokens)\n        tests: \n          - not_null \n      - name: _UNIQUE_KEY\n        description: Concatenation of multiple columns used for incremental merge", "doc_id": "4cd74c2d-6c68-48e4-98d9-5d8553201bdb", "embedding": null, "doc_hash": "1c27e789a609ebb6a9a75a9a8a6660feb91dcc1e8ebceb4696287f73f5413c87", "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_market_cap_hourly.yml", "file_name": "silver__token_prices_coin_market_cap_hourly.yml"}, "node_info": {"start": 0, "end": 1064, "_node_type": "1"}, "relationships": {"1": "a4bf124f0a9965e8924ac10e5589e36a7faa89ea"}}, "__type__": "1"}, "4a400709-33ac-41c3-b895-7d0e71514ed5": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"tx_id\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH\n\n{% if is_incremental() %}\nmax_date AS (\n\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n),\n{% endif %}\n\nearly_swaps AS (\n    SELECT\n        DISTINCT tx_id\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        block_timestamp :: DATE < '2021-09-25'\n        AND msg_type = 'message'\n        AND attribute_key = 'action'\n        AND attribute_value = 'swap_exact_amount_in'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nINDEXES AS (\n    SELECT\n        e.tx_id,\n        MIN(\n            m.msg_index\n        ) AS index_in,\n        MAX(\n            m.msg_index\n        ) AS index_out\n    FROM\n        early_swaps e\n        LEFT OUTER JOIN {{ ref('silver__msg_attributes') }}\n        m\n        ON e.tx_id = m.tx_id\n    WHERE\n        m.msg_type = 'transfer'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\nGROUP BY\n    e.tx_id\n),\ntrader AS (\n    SELECT\n        tx_id,\n        SPLIT_PART(\n            attribute_value,\n            '/',\n            0\n        ) AS trader\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        block_timestamp :: DATE < '2021-09-25'\n        AND attribute_key = 'acc_seq'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nfrom_token AS (\n    SELECT\n        i.tx_id,\n        RIGHT(attribute_value,", "doc_id": "4a400709-33ac-41c3-b895-7d0e71514ed5", "embedding": null, "doc_hash": "d01d731d2915ad754ec3e7bfe686e462e40b1cebfb7013dc2ab90950188e4e84", "extra_info": {"file_path": "models/silver/silver___early_swaps.sql", "file_name": "silver___early_swaps.sql"}, "node_info": {"start": 0, "end": 1827, "_node_type": "1"}, "relationships": {"1": "dc9d9450a2d855402117b3ef6e32c8f889b39c51", "3": "40fb3c5f-beff-4ebb-88e6-7f75eb85943f"}}, "__type__": "1"}, "40fb3c5f-beff-4ebb-88e6-7f75eb85943f": {"__data__": {"text": "       RIGHT(attribute_value, LENGTH(attribute_value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(attribute_value, '[^[:digit:]]', ' ')), ' ', 0))) AS from_currency,\n        SPLIT_PART(\n            TRIM(\n                REGEXP_REPLACE(\n                    attribute_value,\n                    '[^[:digit:]]',\n                    ' '\n                )\n            ),\n            ' ',\n            0\n        ) AS from_amount,\n        A.raw_metadata [1] :exponent AS from_decimal\n    FROM\n        INDEXES i\n        LEFT OUTER JOIN {{ ref('silver__msg_attributes') }}\n        m\n        ON i.tx_id = m.tx_id\n        AND i.index_in = m.msg_index\n        LEFT OUTER JOIN {{ ref('silver__asset_metadata') }} A\n        ON RIGHT(attribute_value, LENGTH(attribute_value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(attribute_value, '[^[:digit:]]', ' ')), ' ', 0))) = A.address\n    WHERE\n        msg_type = 'transfer'\n        AND attribute_key = 'amount'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nto_token AS (\n    SELECT\n        i.tx_id,\n        RIGHT(attribute_value, LENGTH(attribute_value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(attribute_value, '[^[:digit:]]', ' ')), ' ', 0))) AS to_currency,\n        SPLIT_PART(\n            TRIM(\n                REGEXP_REPLACE(\n                    attribute_value,\n                    '[^[:digit:]]',\n                    ' '\n                )\n            ),\n            ' ',\n            0\n        ) AS to_amount,\n        A.raw_metadata [1] :exponent AS TO_DECIMAL\n    FROM\n        INDEXES i\n        LEFT OUTER JOIN {{ ref('silver__msg_attributes') }}\n        m\n        ON i.tx_id = m.tx_id\n   ", "doc_id": "40fb3c5f-beff-4ebb-88e6-7f75eb85943f", "embedding": null, "doc_hash": "6ff28f6d9407d941bf3c6e12b55940389594543ec3727e4b7ef06a8cf68cc2d0", "extra_info": {"file_path": "models/silver/silver___early_swaps.sql", "file_name": "silver___early_swaps.sql"}, "node_info": {"start": 1806, "end": 3543, "_node_type": "1"}, "relationships": {"1": "dc9d9450a2d855402117b3ef6e32c8f889b39c51", "2": "4a400709-33ac-41c3-b895-7d0e71514ed5", "3": "267a7cd0-1726-4a8c-830c-034d9b5f5048"}}, "__type__": "1"}, "267a7cd0-1726-4a8c-830c-034d9b5f5048": {"__data__": {"text": "    ON i.tx_id = m.tx_id\n        AND i.index_out = m.msg_index\n        LEFT OUTER JOIN {{ ref('silver__asset_metadata') }} A\n        ON RIGHT(attribute_value, LENGTH(attribute_value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(attribute_value, '[^[:digit:]]', ' ')), ' ', 0))) = A.address\n    WHERE\n        msg_type = 'transfer'\n        AND attribute_key = 'amount'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n)\nSELECT\n    block_id,\n    block_timestamp,\n    blockchain,\n    chain_id,\n    e.tx_id,\n    tx_status,\n    tt.trader,\n    from_amount :: NUMBER AS from_amount,\n    from_currency,\n    CASE\n        WHEN f.from_currency LIKE 'gamm/pool/%' THEN 18\n        ELSE f.from_decimal :: NUMBER\n    END AS from_decimal,\n    to_amount :: NUMBER AS to_amount,\n    to_currency,\n    CASE\n        WHEN tok.to_currency LIKE 'gamm/pool/%' THEN 18\n        ELSE tok.to_decimal :: NUMBER\n    END AS TO_DECIMAL,\n    NULL :: ARRAY AS pool_ids,\n    _inserted_timestamp\nFROM\n    early_swaps e\n    LEFT OUTER JOIN {{ ref('silver__transactions') }}\n    t\n    ON e.tx_id = t.tx_id\n    INNER JOIN trader tt\n    ON e.tx_id = tt.tx_id\n    INNER JOIN from_token f\n    ON e.tx_id = f.tx_id\n    INNER JOIN to_token tok\n    ON e.tx_id = tok.tx_id\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n", "doc_id": "267a7cd0-1726-4a8c-830c-034d9b5f5048", "embedding": null, "doc_hash": "31dedef6f68696087ce61c39eeee569bb9f67ec1a62929141fa47d487d981dd2", "extra_info": {"file_path": "models/silver/silver___early_swaps.sql", "file_name": "silver___early_swaps.sql"}, "node_info": {"start": 3537, "end": 5032, "_node_type": "1"}, "relationships": {"1": "dc9d9450a2d855402117b3ef6e32c8f889b39c51", "2": "40fb3c5f-beff-4ebb-88e6-7f75eb85943f"}}, "__type__": "1"}, "4345155b-7717-4655-836f-e4f051f5f49a": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver___early_swaps\n    description: Records of all transactions that have occurred on Osmosis, dating back to the genesis block. \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: BLOCKCHAIN\n        description: \"{{ doc('blockchain') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: CHAIN_ID\n        description: \"{{ doc('chain_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_STATUS\n        description: \"{{ doc('tx_status') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                -", "doc_id": "4345155b-7717-4655-836f-e4f051f5f49a", "embedding": null, "doc_hash": "9ea1ca44ce2b9b67241e754f8e50df0582e59002ce50edc26ee7119569337fe9", "extra_info": {"file_path": "models/silver/silver___early_swaps.yml", "file_name": "silver___early_swaps.yml"}, "node_info": {"start": 0, "end": 1798, "_node_type": "1"}, "relationships": {"1": "68546612462e87086c43f2eb553d1ac75b299c33", "3": "b4e80a98-24da-4e13-9280-b117f5e9e3d8"}}, "__type__": "1"}, "b4e80a98-24da-4e13-9280-b117f5e9e3d8": {"__data__": {"text": "               - STRING\n                - VARCHAR\n      - name: TRADER\n        description: \"{{ doc('trader') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: FROM_AMOUNT\n        description: \"{{ doc('from_amount') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: FROM_CURRENCY\n        description: \"{{ doc('from_currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: FROM_DECIMAL\n        description: \"{{ doc('from_decimal') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: TO_AMOUNT\n        description: \"{{ doc('to_amount') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: TO_CURRENCY\n        description: \"{{ doc('to_currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n          ", "doc_id": "b4e80a98-24da-4e13-9280-b117f5e9e3d8", "embedding": null, "doc_hash": "d667dbb1a86ccb10aabb53a3861b8d5e9eec2cb2835e773b88289dcfb82e9bb2", "extra_info": {"file_path": "models/silver/silver___early_swaps.yml", "file_name": "silver___early_swaps.yml"}, "node_info": {"start": 1798, "end": 3489, "_node_type": "1"}, "relationships": {"1": "68546612462e87086c43f2eb553d1ac75b299c33", "2": "4345155b-7717-4655-836f-e4f051f5f49a", "3": "fa2a3ade-b5dd-4800-b439-dcbedebcbbf2"}}, "__type__": "1"}, "fa2a3ade-b5dd-4800-b439-dcbedebcbbf2": {"__data__": {"text": "      - STRING\n                - VARCHAR\n      - name: TO_DECIMAL\n        description: \"{{ doc('to_decimal') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: POOL_IDS\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - ARRAY \n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "fa2a3ade-b5dd-4800-b439-dcbedebcbbf2", "embedding": null, "doc_hash": "23fca50a7e9fae9a57aeedf42253a94ef100e68a9f4b42395dfd74970fb1e5d8", "extra_info": {"file_path": "models/silver/silver___early_swaps.yml", "file_name": "silver___early_swaps.yml"}, "node_info": {"start": 3465, "end": 4214, "_node_type": "1"}, "relationships": {"1": "68546612462e87086c43f2eb553d1ac75b299c33", "2": "b4e80a98-24da-4e13-9280-b117f5e9e3d8"}}, "__type__": "1"}, "af54eb8b-058b-4c3c-ac99-ee796f4cef1c": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH\n\n{% if is_incremental() %}\nmax_date AS (\n\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n),\n{% endif %}\n\nsender AS (\n    SELECT\n        tx_id,\n        msg_index,\n        SPLIT_PART(\n            attribute_value,\n            '/',\n            0\n        ) AS sender\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        attribute_key = 'acc_seq'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\ntx_ids AS (\n    SELECT\n        DISTINCT tx_id\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        attribute_key = 'sender'\n        AND attribute_value = 'osmo1m5dncvfv7lvpvycr23zja93fecun2kcv226glq'\n        AND block_timestamp >= '2021-06-18'\n        AND block_timestamp <= '2021-12-31'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nmessage_indexes AS (\n    SELECT\n        v.tx_id,\n        attribute_key,\n        m.msg_index\n    FROM\n        tx_ids v\n        LEFT OUTER JOIN {{ ref('silver__msg_attributes') }}\n        m\n        ON v.tx_id = m.tx_id\n        INNER JOIN sender s\n        ON v.tx_id = s.tx_id\n    WHERE\n        msg_type = 'transfer'\n        AND attribute_key = 'amount'\n        AND m.msg_index > s.msg_index\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nareceiver AS (\n    SELECT\n        o.tx_id,\n       ", "doc_id": "af54eb8b-058b-4c3c-ac99-ee796f4cef1c", "embedding": null, "doc_hash": "044abc80d08838c8bb39b35976b98b1df92639cdc9ed41620b91a9969a57e9f6", "extra_info": {"file_path": "models/silver/silver__airdrops.sql", "file_name": "silver__airdrops.sql"}, "node_info": {"start": 0, "end": 1834, "_node_type": "1"}, "relationships": {"1": "c6fb2ba98f9dd88575d58b4435c6cecd27b94dc2", "3": "6408451e-0147-4b33-8593-49854507747f"}}, "__type__": "1"}, "6408451e-0147-4b33-8593-49854507747f": {"__data__": {"text": "      o.tx_id,\n        m.msg_index,\n        attribute_value AS receiver\n    FROM\n        tx_ids o\n        LEFT OUTER JOIN {{ ref('silver__msg_attributes') }}\n        m\n        ON o.tx_id = m.tx_id\n        LEFT OUTER JOIN message_indexes idx\n        ON idx.tx_id = m.tx_id\n    WHERE\n        m.msg_type = 'transfer'\n        AND m.attribute_key = 'recipient'\n        AND idx.msg_index = m.msg_index\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\naamount AS (\n    SELECT\n        o.tx_id,\n        m.msg_index,\n        SPLIT_PART(\n            TRIM(\n                REGEXP_REPLACE(\n                    attribute_value,\n                    '[^[:digit:]]',\n                    ' '\n                )\n            ),\n            ' ',\n            0\n        ) AS amount,\n        RIGHT(attribute_value, LENGTH(attribute_value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(attribute_value, '[^[:digit:]]', ' ')), ' ', 0))) AS currency,\n        l.decimal AS DECIMAL\n    FROM\n        tx_ids o\n        LEFT OUTER JOIN {{ ref('silver__msg_attributes') }}\n        m\n        ON o.tx_id = m.tx_id\n        LEFT OUTER JOIN message_indexes idx\n        ON idx.tx_id = m.tx_id\n        LEFT OUTER JOIN {{ ref('silver__asset_metadata') }}\n        l\n        ON RIGHT(attribute_value, LENGTH(attribute_value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(attribute_value, '[^[:digit:]]', ' ')), ' ', 0))) = l.address\n    WHERE\n        m.msg_type = 'transfer'\n        AND m.attribute_key = 'amount'\n        AND idx.msg_index = m.msg_index\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n)\nSELECT\n   ", "doc_id": "6408451e-0147-4b33-8593-49854507747f", "embedding": null, "doc_hash": "871d1576ebec0a60c5bceb8dd24a2a13bbb863ecc3b79d46a600c75592bd6c2c", "extra_info": {"file_path": "models/silver/silver__airdrops.sql", "file_name": "silver__airdrops.sql"}, "node_info": {"start": 1826, "end": 3613, "_node_type": "1"}, "relationships": {"1": "c6fb2ba98f9dd88575d58b4435c6cecd27b94dc2", "2": "af54eb8b-058b-4c3c-ac99-ee796f4cef1c", "3": "2e0cfb82-9a59-4ebb-bcc3-b42ea5f269c3"}}, "__type__": "1"}, "2e0cfb82-9a59-4ebb-bcc3-b42ea5f269c3": {"__data__": {"text": " max_date\n)\n{% endif %}\n)\nSELECT\n    block_id,\n    block_timestamp,\n    r.tx_id,\n    tx_succeeded,\n    'AIRDROP' AS transfer_type,\n    r.msg_index,\n    sender,\n    amount :: NUMBER as amount,\n    currency,\n    DECIMAL,\n    receiver,\n    _inserted_timestamp,\n    concat_ws(\n        '-',\n        r.tx_id,\n        r.msg_index,\n        currency\n    ) _unique_key\nFROM\n    areceiver r\n    LEFT OUTER JOIN aamount C\n    ON r.tx_id = C.tx_id\n    AND r.msg_index = C.msg_index\n    LEFT OUTER JOIN sender s\n    ON r.tx_id = s.tx_id\n    LEFT OUTER JOIN {{ ref('silver__transactions') }}\n    t\n    ON r.tx_id = t.tx_id\nWHERE\n    currency IS NOT NULL\n    AND amount IS NOT NULL\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n", "doc_id": "2e0cfb82-9a59-4ebb-bcc3-b42ea5f269c3", "embedding": null, "doc_hash": "929fce25fee914501a5e12cad1bd29cf8b99e9e17de01d80c82f66a72d31e8cb", "extra_info": {"file_path": "models/silver/silver__airdrops.sql", "file_name": "silver__airdrops.sql"}, "node_info": {"start": 3586, "end": 4414, "_node_type": "1"}, "relationships": {"1": "c6fb2ba98f9dd88575d58b4435c6cecd27b94dc2", "2": "6408451e-0147-4b33-8593-49854507747f"}}, "__type__": "1"}, "96eccd88-adb9-40f9-b940-98931495b7f6": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__airdrops\n    description: Records of all transfers on Osmosis, including IBC transfers as on- and off-ramps to Osmosis and wallet to wallet transfers\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_INDEX\n            - CURRENCY\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: TRANSFER_TYPE\n        description: \"{{ doc('transfer_type') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_be_in_set:\n              value_set: ['AIRDROP']\n      - name: SENDER\n        description: \"{{ doc('sender') }}\"\n        tests: \n          - not_null\n          -", "doc_id": "96eccd88-adb9-40f9-b940-98931495b7f6", "embedding": null, "doc_hash": "27f407c7b7280b20f1157a2e1f8513d521d8f92742173d0baf4f7ea19ea59cfc", "extra_info": {"file_path": "models/silver/silver__airdrops.yml", "file_name": "silver__airdrops.yml"}, "node_info": {"start": 0, "end": 1798, "_node_type": "1"}, "relationships": {"1": "cd1b2c3ab5ae21b7cfd2c5dccc20393d0a9ee20c", "3": "fdcd1668-037a-4a98-832b-d17a2aeaa232"}}, "__type__": "1"}, "fdcd1668-037a-4a98-832b-d17a2aeaa232": {"__data__": {"text": "     - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT \n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"\n      - name: RECEIVER\n        description: \"{{ doc('receiver') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ", "doc_id": "fdcd1668-037a-4a98-832b-d17a2aeaa232", "embedding": null, "doc_hash": "a182e81fdc4bc67bdfd37c106086db466ce146442528e6b95c26445ad284e6a8", "extra_info": {"file_path": "models/silver/silver__airdrops.yml", "file_name": "silver__airdrops.yml"}, "node_info": {"start": 1771, "end": 3145, "_node_type": "1"}, "relationships": {"1": "cd1b2c3ab5ae21b7cfd2c5dccc20393d0a9ee20c", "2": "96eccd88-adb9-40f9-b940-98931495b7f6"}}, "__type__": "1"}, "d609a54a-465a-4be0-885d-4e5dba3e9f85": {"__data__": {"text": "{{ config(\n  materialized = 'view',\n  post_hook = \"call silver.sp_bulk_get_asset_metadata()\"\n) }}\n\nSELECT\n  DISTINCT A.value :asset_address :: STRING AS address\nFROM\n  {{ ref('silver__pool_metadata') }},\n  TABLE(FLATTEN(assets)) A\nWHERE\n  --ignore low liquidity pools with unlabeled assets\n  pool_id NOT IN (\n    290,\n    291,\n    677,\n    684,\n    354,\n    691,\n    694,\n    293,\n    654,\n    647,\n    646\n  )\nEXCEPT\nSELECT\n  base AS address\nFROM\n  {{ ref(\n    'bronze__asset_metadata_api'\n  ) }}\n", "doc_id": "d609a54a-465a-4be0-885d-4e5dba3e9f85", "embedding": null, "doc_hash": "03c0b957d1f6659883249c59a4db55ac3eac59b4ca2f9a21d48cfbf39aaf5995", "extra_info": {"file_path": "models/silver/silver__all_undecoded_assets.sql", "file_name": "silver__all_undecoded_assets.sql"}, "node_info": {"start": 0, "end": 498, "_node_type": "1"}, "relationships": {"1": "61efce43603a3d91a571c9165903f2110fdd268d"}}, "__type__": "1"}, "66803637-3231-4aff-b911-3a1755899c2a": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n) }}\n\nWITH base AS (\n\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        msg_type,\n        attribute_key,\n        attribute_value\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        RLIKE(\n            attribute_value,\n            'osmo\\\\w{39}'\n        )\n        OR (\n            msg_type = 'message'\n            AND attribute_key = 'action'\n            AND attribute_value = 'superfluid_delegate'\n        )\n),\nall_wallets AS (\n    SELECT\n        DISTINCT attribute_value AS address\n    FROM\n        base\n    WHERE\n        RLIKE(\n            attribute_value,\n            'osmo\\\\w{39}'\n        )\n        AND block_timestamp :: DATE <= '2022-05-31' -- some snapshot date\n),\nwallets_per_block AS (\n    SELECT\n        DISTINCT block_id,\n        block_timestamp :: DATE AS block_timestamp_date,\n        attribute_value AS address\n    FROM\n        base\n    WHERE\n        RLIKE(\n            attribute_value,\n            'osmo\\\\w{39}'\n        )\n        AND block_id > 2383300\n        AND block_timestamp_date < CURRENT_DATE - 1\n),\nmax_block_id_per_date AS (\n    SELECT\n        block_timestamp_date,\n        MAX(block_id) AS max_block_id\n    FROM\n        wallets_per_block\n    GROUP BY\n        1\n),\nmax_block_id_per_date_all AS (\n    SELECT\n        block_timestamp :: DATE AS block_timestamp_date,\n        MAX(block_id) AS max_block_id\n    FROM\n        base\n    WHERE\n        block_id > 2383300\n    GROUP BY\n        1\n),\nunique_address_per_block_date AS (\n    SELECT\n        DISTINCT max_block_id,\n        address\n    FROM\n        wallets_per_block b\n        LEFT OUTER JOIN max_block_id_per_date d\n        ON d.block_timestamp_date = b.block_timestamp_date\n),\nall_lp_wallets AS (\n    SELECT\n        DISTINCT liquidity_provider_address AS address\n    FROM\n        {{ ref('silver__liquidity_provider_actions') }}\n    WHERE\n  ", "doc_id": "66803637-3231-4aff-b911-3a1755899c2a", "embedding": null, "doc_hash": "8226c45e5edbc3a705a09e522130c33cc2e317f1cc59668484ce90c3969db9e0", "extra_info": {"file_path": "models/silver/silver__all_unknown_balances.sql", "file_name": "silver__all_unknown_balances.sql"}, "node_info": {"start": 0, "end": 1897, "_node_type": "1"}, "relationships": {"1": "7d8b408b8de1473d0c068bb6c47132ae163c617a", "3": "3002d6a0-1b07-42f9-95c3-b3a4effebd3e"}}, "__type__": "1"}, "3002d6a0-1b07-42f9-95c3-b3a4effebd3e": {"__data__": {"text": "}}\n    WHERE\n        action = 'pool_joined'\n    UNION\n    SELECT\n        DISTINCT b.address\n    FROM\n        (\n            SELECT\n                block_id,\n                tx_id\n            FROM\n                base\n            WHERE\n                msg_type = 'message'\n                AND attribute_key = 'action'\n                AND attribute_value = 'superfluid_delegate'\n        ) A\n        INNER JOIN (\n            SELECT\n                SPLIT_PART(\n                    attribute_value,\n                    '/',\n                    0\n                ) address,\n                tx_ID\n            FROM\n                base\n            WHERE\n                attribute_key = 'acc_seq'\n        ) b\n        ON A.tx_ID = b.tx_ID\n),\npossible_balances_needed AS (\n    SELECT\n        2383300 AS block_id,\n        address\n    FROM\n        all_wallets\n    UNION\n    SELECT\n        *\n    FROM\n        unique_address_per_block_date\n    UNION\n    SELECT\n        max_block_id,\n        address\n    FROM\n        all_lp_wallets\n        CROSS JOIN (\n            SELECT\n                DISTINCT max_block_id\n            FROM\n                unique_address_per_block_date\n        )\n    UNION\n    SELECT\n        max_block_id,\n        address\n    FROM\n        {{ ref('bronze__balance_addresses_everyday') }}\n        CROSS JOIN (\n            SELECT\n                DISTINCT max_block_id\n            FROM\n                max_block_id_per_date_all\n        )\n)\nSELECT\n    block_id,\n    address\nFROM\n    possible_balances_needed\nEXCEPT\nSELECT\n    DISTINCT block_id,\n    address\nFROM\n    {{ ref(\n       ", "doc_id": "3002d6a0-1b07-42f9-95c3-b3a4effebd3e", "embedding": null, "doc_hash": "f65933cefc1ed1b19643d26ad5bc5b82a173c37d36735b18c2cb1fbdc1375115", "extra_info": {"file_path": "models/silver/silver__all_unknown_balances.sql", "file_name": "silver__all_unknown_balances.sql"}, "node_info": {"start": 1889, "end": 3468, "_node_type": "1"}, "relationships": {"1": "7d8b408b8de1473d0c068bb6c47132ae163c617a", "2": "66803637-3231-4aff-b911-3a1755899c2a", "3": "e9ab36f2-6fc1-438b-8030-f8c35ce07edb"}}, "__type__": "1"}, "e9ab36f2-6fc1-438b-8030-f8c35ce07edb": {"__data__": {"text": " address\nFROM\n    {{ ref(\n        'bronze__balances_api'\n    ) }}\nORDER BY\n    block_id\n", "doc_id": "e9ab36f2-6fc1-438b-8030-f8c35ce07edb", "embedding": null, "doc_hash": "02fad910772859a3fb1f9f3103b3f0264ba77c552fc4539fa1ecec0ef1080e61", "extra_info": {"file_path": "models/silver/silver__all_unknown_balances.sql", "file_name": "silver__all_unknown_balances.sql"}, "node_info": {"start": 3444, "end": 3532, "_node_type": "1"}, "relationships": {"1": "7d8b408b8de1473d0c068bb6c47132ae163c617a", "2": "3002d6a0-1b07-42f9-95c3-b3a4effebd3e"}}, "__type__": "1"}, "b9764121-d75a-460e-978e-84a668d59cdc": {"__data__": {"text": "{{ config(\n    materialized = 'view',\n    post_hook = 'call silver.sp_bulk_get_pool_balances()',\n) }}\n\nWITH last_block_of_hour AS (\n\n    SELECT\n        DATE_TRUNC(\n            'hour',\n            block_timestamp\n        ) AS block_hour,\n        MAX(block_id) AS block_id\n    FROM\n        {{ ref('silver__blocks') }}\n    WHERE\n        block_id >= 2300000 {# AND block_timestamp :: DATE <= CURRENT_DATE - 1 #}\n    GROUP BY\n        1\n)\nSELECT\n    block_id\nFROM\n    last_block_of_hour\nUNION\nSELECT\n    2300000 -- origin block of data available from api\nEXCEPT\nSELECT\n    block_id\nFROM\n    {{ ref(\n        'bronze__pool_balances_api'\n    ) }}\nORDER BY\n    block_id DESC\n", "doc_id": "b9764121-d75a-460e-978e-84a668d59cdc", "embedding": null, "doc_hash": "e932a3f0af1d76b3654cde224852a830f2438ad1130246659c58ad822de0815d", "extra_info": {"file_path": "models/silver/silver__all_unknown_pool_balances.sql", "file_name": "silver__all_unknown_pool_balances.sql"}, "node_info": {"start": 0, "end": 665, "_node_type": "1"}, "relationships": {"1": "1dbe8a34573c34a1346faac572002669ec4a6177"}}, "__type__": "1"}, "61e000a1-777f-4c25-99a9-0dad615d7263": {"__data__": {"text": "{{ config(\n  materialized = 'table'\n) }}\n\nWITH base AS (\n\n  SELECT\n    base AS address,\n    NAME AS label,\n    symbol AS project_name,\n    denom_units AS raw_metadata\n  FROM\n    {{ source(\n      'bronze_streamline',\n      'asset_metadata_api'\n    ) }}\n  GROUP BY\n    1,\n    2,\n    3,\n    4\n)\nSELECT\n  'osmosis' AS blockchain,\n  address,\n  'flipside' AS creator,\n  'token' AS label_type,\n  'token_contract' AS label_subtype,\n  label,\n  project_name,\n  raw_metadata [0] :aliases [0] :: STRING AS alias,\n  raw_metadata [array_size(raw_metadata)-1] :exponent :: NUMBER AS DECIMAL,\n  raw_metadata, \n  concat_ws(\n        '-',\n        address, \n        creator, \n        blockchain\n    ) AS _unique_key\nFROM\n  base qualify(ROW_NUMBER() over(PARTITION BY blockchain, creator, address\nORDER BY\n  project_name DESC)) = 1\n", "doc_id": "61e000a1-777f-4c25-99a9-0dad615d7263", "embedding": null, "doc_hash": "6922bd2bb8b0223118f26a94bcb78fe54f1bec641db9e7fae3854be430d15b22", "extra_info": {"file_path": "models/silver/silver__asset_metadata.sql", "file_name": "silver__asset_metadata.sql"}, "node_info": {"start": 0, "end": 811, "_node_type": "1"}, "relationships": {"1": "87a35971eed46a091941c3bc0d4a116226825d22"}}, "__type__": "1"}, "eaaa013a-2b60-4b14-a1f2-f16ea27597af": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__asset_metadata\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - _UNIQUE_KEY\n    columns:\n      - name: BLOCKCHAIN\n        description: \"{{ doc('blockchain') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_set:\n              value_set: ['osmosis']\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: ADDRESS\n        description: \"{{ doc('address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: CREATOR\n        description: \"{{ doc('creator') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: LABEL_TYPE\n        description: \"{{ doc('label_type') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_set:\n              value_set: ['token']\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: LABEL_SUBTYPE\n        description: \"{{ doc('label_subtype') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: LABEL \n        description: \"{{ doc('label') }}\"\n        tests: \n  ", "doc_id": "eaaa013a-2b60-4b14-a1f2-f16ea27597af", "embedding": null, "doc_hash": "00be8341d08b9b78a360004390d44d44c2a92423294845b7e07348f85c36278f", "extra_info": {"file_path": "models/silver/silver__asset_metadata.yml", "file_name": "silver__asset_metadata.yml"}, "node_info": {"start": 0, "end": 1766, "_node_type": "1"}, "relationships": {"1": "ed44129971994c583c2f7ba0e9c58415fa69c84a", "3": "7961b408-ca68-4b3c-9c4b-bed79e8dd3ef"}}, "__type__": "1"}, "7961b408-ca68-4b3c-9c4b-bed79e8dd3ef": {"__data__": {"text": "doc('label') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: PROJECT_NAME\n        description: \"{{ doc('project_name') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: ALIAS\n        description: A secondary address for the token, where available\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT\n      - name: RAW_METADATA\n        description: \"{{ doc('raw_metadata') }}\"\n        tests: \n          - not_null", "doc_id": "7961b408-ca68-4b3c-9c4b-bed79e8dd3ef", "embedding": null, "doc_hash": "0c76b91138177838d8dbf71f92bef2a73ad1f064e9019e50d17059a1e6c5e9c5", "extra_info": {"file_path": "models/silver/silver__asset_metadata.yml", "file_name": "silver__asset_metadata.yml"}, "node_info": {"start": 1731, "end": 2834, "_node_type": "1"}, "relationships": {"1": "ed44129971994c583c2f7ba0e9c58415fa69c84a", "2": "eaaa013a-2b60-4b14-a1f2-f16ea27597af"}}, "__type__": "1"}, "570c1193-2878-4cf2-96a5-c125dea0d235": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"block_id\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH base AS (\n\n    SELECT\n        DATA,\n        _inserted_timestamp\n    FROM\n        {{ source(\n            'bronze_api',\n            'blockchain'\n        ) }}\n\n{% if is_incremental() %}\nWHERE\n    _inserted_timestamp >= (\n        SELECT\n            MAX(\n                _inserted_timestamp\n            )\n        FROM\n            {{ this }}\n    )\n{% endif %}\n),\nfin AS (\n    SELECT\n        VALUE :header :chain_id :: STRING AS chain_id,\n        VALUE :header :height :: INT AS height,\n        VALUE :header :time :: datetime AS block_timestamp,\n        VALUE :block_size :: INT AS block_size,\n        VALUE :header AS block_header,\n        VALUE :block_id AS block_id,\n        VALUE :num_txs :: INT AS num_txs,\n        _inserted_timestamp\n    FROM\n        (\n            SELECT\n                DATA,\n                _inserted_timestamp\n            FROM\n                base\n        ),\n        LATERAL FLATTEN(\n            DATA,\n            recursive => TRUE\n        ) b\n    WHERE\n        b.path LIKE 'data%.result.block_metas%'\n        AND INDEX IS NOT NULL\n)\nSELECT\n    chain_id,\n    height AS block_id,\n    block_timestamp,\n    block_size,\n    block_header,\n    block_id AS block_id_object,\n    num_txs,\n    _inserted_timestamp\nFROM\n    fin qualify(ROW_NUMBER() over(PARTITION BY height\nORDER BY\n    _inserted_timestamp DESC) = 1)\n", "doc_id": "570c1193-2878-4cf2-96a5-c125dea0d235", "embedding": null, "doc_hash": "a72376f0472b0d3a6cc1ec83565c5a15c41096db138b956daccb74c94d44a95a", "extra_info": {"file_path": "models/silver/silver__blockchain.sql", "file_name": "silver__blockchain.sql"}, "node_info": {"start": 0, "end": 1492, "_node_type": "1"}, "relationships": {"1": "d89fd03fc59a6c617e5a151a56a87b2a0b4349fa"}}, "__type__": "1"}, "1a101376-23bc-4aaa-90ce-18dc29fa6099": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__blockchain\n    tests: \n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - BLOCK_ID\n    columns:\n      - name: CHAIN_ID\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: BLOCK_ID\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: BLOCK_TIMESTAMP\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: BLOCK_SIZE\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: BLOCK_HEADER\n        tests:\n          - not_null\n      - name: BLOCK_ID_OBJECT\n        tests:\n          - not_null         \n      - name: NUM_TXS\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT", "doc_id": "1a101376-23bc-4aaa-90ce-18dc29fa6099", "embedding": null, "doc_hash": "3dddacb5b8d8d2194c287b7332ecf85c26329a068ed04c9a9091380c04a7c21b", "extra_info": {"file_path": "models/silver/silver__blockchain.yml", "file_name": "silver__blockchain.yml"}, "node_info": {"start": 0, "end": 1359, "_node_type": "1"}, "relationships": {"1": "f4ada54ef27dc3a2ebd97070e6db411c07eb8447"}}, "__type__": "1"}, "5236e8bc-7aab-4245-9874-a20b5fb13ebf": {"__data__": {"text": "{{ config(\n  materialized = 'incremental',\n  unique_key = \"_unique_key\",\n  incremental_strategy = 'merge',\n  cluster_by = ['block_timestamp::DATE'],\n) }}\n\nSELECT\n  block_id,\n  block_timestamp,\n  chain_id,\n  tx_count,\n  header :proposer_address :: STRING AS proposer_address,\n  header :validators_hash :: STRING AS validator_hash,\n  _inserted_timestamp AS _inserted_timestamp,\n  concat_ws(\n    '-',\n    chain_id,\n    block_id\n  ) _unique_key\nFROM\n  {{ ref('bronze__blocks') }}\n\n{% if is_incremental() %}\nWHERE\n  _inserted_timestamp >= (\n    SELECT\n      MAX(\n        _inserted_timestamp\n      )\n    FROM\n      {{ this }}\n  )\n{% endif %}\n\nqualify(ROW_NUMBER() over(PARTITION BY chain_id, block_id\nORDER BY\n  _inserted_timestamp DESC)) = 1\n", "doc_id": "5236e8bc-7aab-4245-9874-a20b5fb13ebf", "embedding": null, "doc_hash": "3313d707a65516a755925b95d29cc25f9917bfeceecd26da6e5f990d61c65696", "extra_info": {"file_path": "models/silver/silver__blocks.sql", "file_name": "silver__blocks.sql"}, "node_info": {"start": 0, "end": 737, "_node_type": "1"}, "relationships": {"1": "f549a70f3f85f2b0d1b00246672926944157ff52"}}, "__type__": "1"}, "14ddd702-e11d-437d-b85a-837bd1968304": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__blocks\n    description: Records of all blocks that have occurred on Osmosis, dating back to the genesis block. \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - CHAIN_ID\n            - BLOCK_ID\n      - sequence_gaps:\n          column_name: BLOCK_ID\n          config:\n            severity: error\n            error_if: \">10\"\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 1\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: CHAIN_ID\n        description: \"{{ doc('chain_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_COUNT\n        description: \"{{ doc('tx_count') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT \n      - name: PROPOSER_ADDRESS\n        description: \"{{ doc('proposer_address') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n           ", "doc_id": "14ddd702-e11d-437d-b85a-837bd1968304", "embedding": null, "doc_hash": "b4a6726671fa7c2901ddf0d90be1f342bed542f8ef1a08b1d07fadbb1a33994f", "extra_info": {"file_path": "models/silver/silver__blocks.yml", "file_name": "silver__blocks.yml"}, "node_info": {"start": 0, "end": 1808, "_node_type": "1"}, "relationships": {"1": "1aaadab948454b086fdd17d38bfea2a75f66b1b0", "3": "bc03734e-4c2e-4934-8d9a-67e88efdf6c2"}}, "__type__": "1"}, "bc03734e-4c2e-4934-8d9a-67e88efdf6c2": {"__data__": {"text": "     - STRING\n                - VARCHAR\n      - name: VALIDATOR_HASH\n        description: \"{{ doc('validator_hash') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "bc03734e-4c2e-4934-8d9a-67e88efdf6c2", "embedding": null, "doc_hash": "41eab0f1583d9a9602d695ab7a90eacb329d7fa1040fe34f72e2773c9f60e8de", "extra_info": {"file_path": "models/silver/silver__blocks.yml", "file_name": "silver__blocks.yml"}, "node_info": {"start": 1783, "end": 2352, "_node_type": "1"}, "relationships": {"1": "1aaadab948454b086fdd17d38bfea2a75f66b1b0", "2": "14ddd702-e11d-437d-b85a-837bd1968304"}}, "__type__": "1"}, "4011d12a-2833-4cf5-a13a-13e0b033ce07": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = [\"date\", \"address\", \"balance_type\", \"currency\"],\n    incremental_strategy = 'delete+insert',\n    cluster_by = ['date'],\n) }}\n\nWITH\n\n{% if is_incremental() %}\nrecent AS (\n\n    SELECT\n        DATE,\n        balance_type,\n        address,\n        balance,\n        currency,\n        DECIMAL\n    FROM\n        {{ this }}\n    WHERE\n        DATE = (\n            SELECT\n                DATEADD('day', -1, MAX(DATE))\n            FROM\n                {{ this }})\n        ),\n        NEW AS (\n            SELECT\n                block_timestamp :: DATE AS DATE,\n                balance_type,\n                address,\n                balance,\n                currency,\n                DECIMAL,\n                1 AS RANK\n            FROM\n                {{ ref('silver__liquid_balances') }}\n            WHERE\n                block_timestamp :: DATE >= (\n                    SELECT\n                        DATEADD('day', -1, MAX(DATE))\n                    FROM\n                        {{ this }}) qualify(ROW_NUMBER() over (PARTITION BY block_timestamp :: DATE, address, balance_type, currency\n                    ORDER BY\n                        block_timestamp DESC)) = 1\n                    UNION ALL\n                    SELECT\n                        block_timestamp :: DATE AS DATE,\n                        balance_type,\n                        address,\n                        balance,\n                        currency,\n                        DECIMAL,\n                        1 AS RANK\n                    FROM\n             ", "doc_id": "4011d12a-2833-4cf5-a13a-13e0b033ce07", "embedding": null, "doc_hash": "47c326a5f4acc970648131c6f5f951990eaf4831a5c84ce588d4ed242c9f8436", "extra_info": {"file_path": "models/silver/silver__daily_balances.sql", "file_name": "silver__daily_balances.sql"}, "node_info": {"start": 0, "end": 1575, "_node_type": "1"}, "relationships": {"1": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9", "3": "4489bb4e-65d7-4656-98ed-3eb6acea883e"}}, "__type__": "1"}, "4489bb4e-65d7-4656-98ed-3eb6acea883e": {"__data__": {"text": "    FROM\n                        {{ ref('silver__staked_balances') }}\n                    WHERE\n                        block_timestamp :: DATE >= (\n                            SELECT\n                                DATEADD('day', -1, MAX(DATE))\n                            FROM\n                                {{ this }}) qualify(ROW_NUMBER() over (PARTITION BY block_timestamp :: DATE, address, balance_type, currency\n                            ORDER BY\n                                block_timestamp DESC)) = 1\n                            UNION ALL\n                            SELECT\n                                block_timestamp,\n                                balance_type,\n                                address,\n                                SUM(balance) AS balance,\n                                currency,\n                                DECIMAL,\n                                1 AS RANK\n                            FROM\n                                (\n                                    SELECT\n                                        block_timestamp,\n                                        balance_type,\n                                        address,\n                                        balance,\n                                        currency,\n                         ", "doc_id": "4489bb4e-65d7-4656-98ed-3eb6acea883e", "embedding": null, "doc_hash": "1dab176bf3f64a15aa3ba813abd76f058a37f50a36fb7a88dd194f33799140b5", "extra_info": {"file_path": "models/silver/silver__daily_balances.sql", "file_name": "silver__daily_balances.sql"}, "node_info": {"start": 1571, "end": 2872, "_node_type": "1"}, "relationships": {"1": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9", "2": "4011d12a-2833-4cf5-a13a-13e0b033ce07", "3": "8b6613b1-ee27-4412-82c6-a20d03e20f5b"}}, "__type__": "1"}, "8b6613b1-ee27-4412-82c6-a20d03e20f5b": {"__data__": {"text": "                                  DECIMAL,\n                                        1 AS RANK\n                                    FROM\n                                        {{ ref('silver__locked_liquidity_balances') }}\n                                    WHERE\n                                        block_timestamp :: DATE >= (\n                                            SELECT\n                                                DATEADD('day', -1, MAX(DATE))\n                                            FROM\n                                                {{ this }})\n                                                AND lock_id || '---' || block_timestamp :: DATE :: STRING NOT IN (\n                                                    SELECT\n                                                        lock_id || '---' || block_timestamp :: DATE :: STRING\n                                                    FROM\n                                                        {{ ref('silver__superfluid_staked_balances') }}\n                                                    WHERE\n                                                        block_timestamp :: DATE >= (\n                                                            SELECT\n                       ", "doc_id": "8b6613b1-ee27-4412-82c6-a20d03e20f5b", "embedding": null, "doc_hash": "36193dca91d39d9bbf17e27e32e8fae7e8ccb06438c3cf5f6bb59f063ee2d561", "extra_info": {"file_path": "models/silver/silver__daily_balances.sql", "file_name": "silver__daily_balances.sql"}, "node_info": {"start": 2878, "end": 4126, "_node_type": "1"}, "relationships": {"1": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9", "2": "4489bb4e-65d7-4656-98ed-3eb6acea883e", "3": "bb42dc4a-e217-4362-8f98-f27a68b38292"}}, "__type__": "1"}, "bb42dc4a-e217-4362-8f98-f27a68b38292": {"__data__": {"text": "                                                            DATEADD('day', -1, MAX(DATE))\n                                                            FROM\n                                                                {{ this }})\n                                                        ) qualify(ROW_NUMBER() over (PARTITION BY block_timestamp :: DATE, address, balance_type, currency, lock_id\n                                                    ORDER BY\n                                                        block_timestamp DESC)) = 1\n                                                    UNION ALL\n                                                    SELECT\n                                                        block_timestamp,\n                                                        balance_type,\n                                                        address,\n                                                        balance,\n                                                        currency,\n                                                        DECIMAL,\n                                                        1 AS RANK\n                                                    FROM\n ", "doc_id": "bb42dc4a-e217-4362-8f98-f27a68b38292", "embedding": null, "doc_hash": "17cd58041849d7ce8d7109faacd0048d829db33dfff56f8f8533d178336d2e3b", "extra_info": {"file_path": "models/silver/silver__daily_balances.sql", "file_name": "silver__daily_balances.sql"}, "node_info": {"start": 4127, "end": 5315, "_node_type": "1"}, "relationships": {"1": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9", "2": "8b6613b1-ee27-4412-82c6-a20d03e20f5b", "3": "76cea375-1323-4dfc-be40-b3e7477989aa"}}, "__type__": "1"}, "76cea375-1323-4dfc-be40-b3e7477989aa": {"__data__": {"text": "                FROM\n                                                        {{ ref('silver__superfluid_staked_balances') }}\n                                                    WHERE\n                                                        block_timestamp :: DATE >= (\n                                                            SELECT\n                                                                DATEADD('day', -1, MAX(DATE))\n                                                            FROM\n                                                                {{ this }}) qualify(ROW_NUMBER() over (PARTITION BY block_timestamp :: DATE, address, balance_type, currency, lock_id\n                                                            ORDER BY\n                                                                block_timestamp DESC)) = 1\n                                                        ) liq\n                                                    GROUP BY\n                                                        block_timestamp,\n                                                        balance_type,\n                                                        address,\n                                                     ", "doc_id": "76cea375-1323-4dfc-be40-b3e7477989aa", "embedding": null, "doc_hash": "401f59e6120c9f320de71519646dc1b52c957a600ed91d1306eeb893fe787c49", "extra_info": {"file_path": "models/silver/silver__daily_balances.sql", "file_name": "silver__daily_balances.sql"}, "node_info": {"start": 5311, "end": 6531, "_node_type": "1"}, "relationships": {"1": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9", "2": "bb42dc4a-e217-4362-8f98-f27a68b38292", "3": "3682ee00-3fde-465f-b308-7638fdbff212"}}, "__type__": "1"}, "3682ee00-3fde-465f-b308-7638fdbff212": {"__data__": {"text": "                      currency,\n                                                        DECIMAL\n                                                ),\n                                                incremental AS (\n                                                    SELECT\n                                                        DATE,\n                                                        balance_type,\n                                                        address,\n                                                        balance,\n                                                        currency,\n                                                        DECIMAL\n                                                    FROM\n                                                        (\n                                                            SELECT\n                                                                DATE,\n                                                                balance_type,\n                                                                address,\n                              ", "doc_id": "3682ee00-3fde-465f-b308-7638fdbff212", "embedding": null, "doc_hash": "f256c96d3e39d45a772a047693d0bdad3efb4fe503ff12407f4db2baa83ca283", "extra_info": {"file_path": "models/silver/silver__daily_balances.sql", "file_name": "silver__daily_balances.sql"}, "node_info": {"start": 6537, "end": 7633, "_node_type": "1"}, "relationships": {"1": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9", "2": "76cea375-1323-4dfc-be40-b3e7477989aa", "3": "b18acd29-3508-4a82-80d4-13399362c2d0"}}, "__type__": "1"}, "b18acd29-3508-4a82-80d4-13399362c2d0": {"__data__": {"text": "                                                     balance,\n                                                                currency,\n                                                                DECIMAL,\n                                                                2 AS RANK\n                                                            FROM\n                                                                recent\n                                                            UNION\n                                                            SELECT\n                                                                DATE,\n                                                                balance_type,\n                                                                address,\n                                                                balance,\n                                                                currency,\n                                                                DECIMAL,\n                                                                1 AS RANK\n                ", "doc_id": "b18acd29-3508-4a82-80d4-13399362c2d0", "embedding": null, "doc_hash": "d1d572541546ebb5c164397566b91d4bcd765f504c4e2032678de86d6c68b42b", "extra_info": {"file_path": "models/silver/silver__daily_balances.sql", "file_name": "silver__daily_balances.sql"}, "node_info": {"start": 7634, "end": 8717, "_node_type": "1"}, "relationships": {"1": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9", "2": "3682ee00-3fde-465f-b308-7638fdbff212", "3": "f9f39b23-cbef-4947-af16-5a1ccdbe8192"}}, "__type__": "1"}, "f9f39b23-cbef-4947-af16-5a1ccdbe8192": {"__data__": {"text": "AS RANK\n                                                            FROM\n                                                                NEW\n                                                        ) qualify(ROW_NUMBER() over (PARTITION BY DATE, address, balance_type, currency\n                                                    ORDER BY\n                                                        RANK ASC)) = 1\n                                                ),\n                                            {% endif %}\n\n                                            base AS (\n\n{% if is_incremental() %}\nSELECT\n    DATE AS block_timestamp, balance_type, address, balance, currency, DECIMAL\nFROM\n    incremental\n{% else %}\nSELECT\n    block_timestamp, balance_type, address, balance, currency, DECIMAL\nFROM\n    {{ ref('silver__liquid_balances') }}\nUNION ALL\nSELECT\n    block_timestamp, balance_type, address, balance, currency, DECIMAL\nFROM\n    {{ ref('silver__staked_balances') }}\nUNION ALL\nSELECT\n    block_timestamp, balance_type, address, SUM(balance) AS balance, currency, DECIMAL\nFROM\n    (\nSELECT\n    block_timestamp, balance_type, address, balance, currency, DECIMAL\nFROM\n    {{ ref('silver__locked_liquidity_balances') }}\nWHERE\n    lock_id || '---' || block_timestamp :: DATE :: STRING NOT IN (\nSELECT\n    lock_id || '---' || block_timestamp :: DATE :: STRING\nFROM\n    {{ ref('silver__superfluid_staked_balances') }})\nUNION ALL\nSELECT\n    block_timestamp, balance_type, address, balance, currency, DECIMAL\nFROM\n    {{ ref('silver__superfluid_staked_balances') }}) liq\nGROUP BY\n    block_timestamp, balance_type, address, currency, DECIMAL\n{% endif %}),\naddress_ranges AS (\n    SELECT\n        address,\n        balance_type,\n        currency,\n        DECIMAL,\n        MIN(\n            block_timestamp :: DATE\n        ) AS min_block_date,\n        MAX (\n            CURRENT_TIMESTAMP ::", "doc_id": "f9f39b23-cbef-4947-af16-5a1ccdbe8192", "embedding": null, "doc_hash": "f89eb13e9158c200e4764895c4c3f52c278e234e25b3fc5ef3a9dc24e0027dc0", "extra_info": {"file_path": "models/silver/silver__daily_balances.sql", "file_name": "silver__daily_balances.sql"}, "node_info": {"start": 8711, "end": 10594, "_node_type": "1"}, "relationships": {"1": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9", "2": "b18acd29-3508-4a82-80d4-13399362c2d0", "3": "06415d74-eb55-4b5e-a060-c09c2722fa8e"}}, "__type__": "1"}, "06415d74-eb55-4b5e-a060-c09c2722fa8e": {"__data__": {"text": "           CURRENT_TIMESTAMP :: DATE\n        ) AS max_block_date\n    FROM\n        base\n    GROUP BY\n        address,\n        balance_type,\n        currency,\n        DECIMAL\n),\nddate AS (\n    SELECT\n        date_day :: DATE AS DATE\n    FROM\n        {{ source(\n            'crosschain',\n            'dim_dates'\n        ) }}\n    GROUP BY\n        DATE\n),\nall_dates AS (\n    SELECT\n        d.date,\n        A.balance_type,\n        A.address,\n        A.currency,\n        A.decimal\n    FROM\n        ddate d\n        LEFT JOIN address_ranges A\n        ON d.date BETWEEN A.min_block_date\n        AND A.max_block_date\n    WHERE\n        A.address IS NOT NULL\n),\nosmosis_balances AS (\n    SELECT\n        block_timestamp,\n        balance_type,\n        address,\n        balance,\n        currency,\n        DECIMAL\n    FROM\n        base qualify(ROW_NUMBER() over (PARTITION BY block_timestamp :: DATE, address, balance_type, currency\n    ORDER BY\n        block_timestamp DESC)) = 1\n),\nbalance_temp AS (\n    SELECT\n        d.date,\n        d.balance_type,\n        d.address,\n        b.balance,\n        d.currency,\n        d.decimal\n    FROM\n        all_dates d\n        LEFT JOIN osmosis_balances b\n        ON d.date = b.block_timestamp :: DATE\n        AND d.address = b.address\n        AND d.currency = b.currency\n        AND d.balance_type = b.balance_type\n)\nSELECT\n    DATE,\n    balance_type,\n    address,\n    currency,\n    DECIMAL,\n    LAST_VALUE(\n        balance ignore nulls\n    ) over(\n        PARTITION BY address,\n        currency,\n        balance_type\n        ORDER BY\n            DATE ASC rows unbounded preceding\n    ) AS balance\nFROM\n    balance_temp\nWHERE\n    balance_type <> 'pool'\nUNION ALL\nSELECT\n    A.block_timestamp :: DATE AS DATE,\n    'pool' AS balance_type,\n    A.pool_address AS address,\n    token_0_denom currency,\n    DECIMAL,\n    token_0_amount balance\nFROM\n    {{ ref('silver__pool_balances') }} A\n    LEFT JOIN {{", "doc_id": "06415d74-eb55-4b5e-a060-c09c2722fa8e", "embedding": null, "doc_hash": "452f718ad3e77abc854d9b04cb580fcdfb87941ffc7143768f933c2d7c54e106", "extra_info": {"file_path": "models/silver/silver__daily_balances.sql", "file_name": "silver__daily_balances.sql"}, "node_info": {"start": 10583, "end": 12504, "_node_type": "1"}, "relationships": {"1": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9", "2": "f9f39b23-cbef-4947-af16-5a1ccdbe8192", "3": "0260eea5-4503-4166-880d-db20b0acdde8"}}, "__type__": "1"}, "0260eea5-4503-4166-880d-db20b0acdde8": {"__data__": {"text": "ref('silver__pool_balances') }} A\n    LEFT JOIN {{ ref('silver__asset_metadata') }}\n    am\n    ON A.token_0_denom = am.address\n\n{% if is_incremental() %}\nWHERE\n    A.block_timestamp :: DATE >= (\n        SELECT\n            DATEADD('day', -1, MAX(DATE))\n        FROM\n            {{ this }})\n        {% endif %}\n\n        qualify(ROW_NUMBER() over(PARTITION BY block_timestamp :: DATE, pool_id, token_0_denom\n        ORDER BY\n            block_timestamp DESC) = 1)\n        UNION ALL\n        SELECT\n            A.block_timestamp :: DATE AS DATE,\n            'pool' AS balance_type,\n            A.pool_address AS address,\n            token_1_denom currency,\n            DECIMAL,\n            token_1_amount balance\n        FROM\n            {{ ref('silver__pool_balances') }} A\n            LEFT JOIN {{ ref('silver__asset_metadata') }}\n            am\n            ON A.token_1_denom = am.address\n\n{% if is_incremental() %}\nWHERE\n    A.block_timestamp :: DATE >= (\n        SELECT\n            DATEADD('day', -1, MAX(DATE))\n        FROM\n            {{ this }})\n        {% endif %}\n\n        qualify(ROW_NUMBER() over(PARTITION BY block_timestamp :: DATE, pool_id, token_1_denom\n        ORDER BY\n            block_timestamp DESC) = 1)\n        UNION ALL\n        SELECT\n            A.block_timestamp :: DATE AS DATE,\n            'pool' AS balance_type,\n            A.pool_address AS address,\n            token_2_denom currency,\n            DECIMAL,\n            token_2_amount balance\n        FROM\n            {{ ref('silver__pool_balances') }} A\n            LEFT JOIN {{ ref('silver__asset_metadata') }}\n            am\n            ON A.token_2_denom = am.address\n        WHERE\n            token_2_denom IS NOT NULL\n\n{% if is_incremental() %}\nAND A.block_timestamp :: DATE >= (\n    SELECT\n        DATEADD('day', -1, MAX(DATE))\n    FROM\n        {{ this }})\n    {% endif %}\n\n", "doc_id": "0260eea5-4503-4166-880d-db20b0acdde8", "embedding": null, "doc_hash": "883508ddc9853e22a874552135e282a52ba954c30691c161350b795278eb9660", "extra_info": {"file_path": "models/silver/silver__daily_balances.sql", "file_name": "silver__daily_balances.sql"}, "node_info": {"start": 12482, "end": 14338, "_node_type": "1"}, "relationships": {"1": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9", "2": "06415d74-eb55-4b5e-a060-c09c2722fa8e", "3": "e1ec6c5a-5f9f-4b45-8db9-d99a31c18a72"}}, "__type__": "1"}, "e1ec6c5a-5f9f-4b45-8db9-d99a31c18a72": {"__data__": {"text": "      {{ this }})\n    {% endif %}\n\n    qualify(ROW_NUMBER() over(PARTITION BY block_timestamp :: DATE, pool_id, token_2_denom\n    ORDER BY\n        block_timestamp DESC) = 1)\n    UNION ALL\n    SELECT\n        A.block_timestamp :: DATE AS DATE,\n        'pool' AS balance_type,\n        A.pool_address AS address,\n        token_3_denom currency,\n        DECIMAL,\n        token_3_amount balance\n    FROM\n        {{ ref('silver__pool_balances') }} A\n        LEFT JOIN {{ ref('silver__asset_metadata') }}\n        am\n        ON A.token_3_denom = am.address\n    WHERE\n        token_3_denom IS NOT NULL\n\n{% if is_incremental() %}\nAND A.block_timestamp :: DATE >= (\n    SELECT\n        DATEADD('day', -1, MAX(DATE))\n    FROM\n        {{ this }})\n    {% endif %}\n\n    qualify(ROW_NUMBER() over(PARTITION BY block_timestamp :: DATE, pool_id, token_3_denom\n    ORDER BY\n        block_timestamp DESC) = 1)\n", "doc_id": "e1ec6c5a-5f9f-4b45-8db9-d99a31c18a72", "embedding": null, "doc_hash": "28836082b1dbebca53c655f41bf881cdb45a381c277dec45f2ee522ae03f6fae", "extra_info": {"file_path": "models/silver/silver__daily_balances.sql", "file_name": "silver__daily_balances.sql"}, "node_info": {"start": 14345, "end": 15233, "_node_type": "1"}, "relationships": {"1": "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9", "2": "0260eea5-4503-4166-880d-db20b0acdde8"}}, "__type__": "1"}, "448e809c-1421-4fa8-b1ef-26d80e2ea394": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__daily_balances\n    description: A table that contains a daily balance entry for both staked and liquid balance of wallets on the Osmosis chain. \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - DATE\n            - ADDRESS\n            - BALANCE_TYPE\n            - CURRENCY\n      - compare_model_subset:\n          name: silver__daily_balances_business_logic_test\n          compare_model: ref('testing__daily_balances')\n          compare_columns: \n            - date\n            - balance_type\n            - address\n            - currency\n            - balance\n          model_condition: \"where date = '2022-07-17' \n                and ADDRESS IN ('osmo195khh6nr3zsvaxkm53wavkxv46uucdlatdux5m','osmo1ka4zctlzr2uee5s29y9qn2rcer3hcaunxvcptc','osmo1fjh798fyn9vqldc8ru09c99r89v5mt3czu4jfp')\n                and balance <> 0\"\n    columns:\n      - name: DATE\n        description: The day the balance was recorded on. \n        tests: \n          - not_null\n      - name: BALANCE_TYPE\n        description: Either \"staked\" or \"liquid\" corresponding to how the currency is in the wallet. \n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_be_in_set:\n              value_set: ['staked', 'liquid', 'locked liquidity', 'superfluid staked', 'pool']\n      - name: ADDRESS\n        description: \"{{ doc('address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name:", "doc_id": "448e809c-1421-4fa8-b1ef-26d80e2ea394", "embedding": null, "doc_hash": "108e32015c71d08246d71823d16fa2c1f0b1f280b2acd784b803042b15d9a497", "extra_info": {"file_path": "models/silver/silver__daily_balances.yml", "file_name": "silver__daily_balances.yml"}, "node_info": {"start": 0, "end": 1896, "_node_type": "1"}, "relationships": {"1": "08c08e787361149d5c5006b5e188bef7b51d1501", "3": "8c02dd98-65a7-4cd7-9e28-0d2e23079e06"}}, "__type__": "1"}, "8c02dd98-65a7-4cd7-9e28-0d2e23079e06": {"__data__": {"text": "     - name: BALANCE \n        description: The amount of the currency the wallet held at the given time\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: DECIMAL \n        description: \"{{ doc('decimal') }}\"\n      ", "doc_id": "8c02dd98-65a7-4cd7-9e28-0d2e23079e06", "embedding": null, "doc_hash": "b5b40a501e4125d96a7f1a475b060bfd793dd9011d9a0a931d697994845191d4", "extra_info": {"file_path": "models/silver/silver__daily_balances.yml", "file_name": "silver__daily_balances.yml"}, "node_info": {"start": 1884, "end": 2507, "_node_type": "1"}, "relationships": {"1": "08c08e787361149d5c5006b5e188bef7b51d1501", "2": "448e809c-1421-4fa8-b1ef-26d80e2ea394"}}, "__type__": "1"}, "0b5f3a63-2a93-464f-87a0-460318aa14f0": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH\n\n{% if is_incremental() %}\nmax_date AS (\n\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n),\n{% endif %}\n\nin_play AS (\n    SELECT\n        tx_ID,\n        msg_group,\n        msg_sub_group,\n        attribute_value action,\n        block_timestamp\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        msg_type = 'message'\n        AND attribute_key = 'action'\n        AND attribute_value IN (\n            'join_pool',\n            'exit_pool'\n        )\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\nEXCEPT\nSELECT\n    tx_ID,\n    msg_group,\n    msg_sub_group,\n    CASE\n        msg_type\n        WHEN 'pool_exited' THEN 'exit_pool'\n        WHEN 'pool_joined' THEN 'join_pool'\n    END action,\n    block_timestamp\nFROM\n    {{ ref('silver__msg_attributes') }}\nWHERE\n    msg_type IN(\n        'pool_exited',\n        'pool_joined'\n    )\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nmsg_atts AS (\n    SELECT\n        CASE\n            WHEN msg_type = 'message'\n            AND attribute_key = 'action'\n            AND attribute_value IN (\n                'join_pool',\n                'exit_pool'\n            ) THEN 'action'\n            WHEN msg_type = 'transfer'\n            AND attribute_key = 'amount'\n            AND attribute_value LIKE '%gamm%pool%'\n            AND attribute_value NOT LIKE '%,%' THEN 'lp tokens'\n            WHEN msg_type = 'transfer'\n            AND attribute_key =", "doc_id": "0b5f3a63-2a93-464f-87a0-460318aa14f0", "embedding": null, "doc_hash": "65a3c6111d6d57feeec055ace64d0a3b976fb0efd414ea7d996e85f1b684d3a5", "extra_info": {"file_path": "models/silver/silver__early_liquidity_provider_actions.sql", "file_name": "silver__early_liquidity_provider_actions.sql"}, "node_info": {"start": 0, "end": 1857, "_node_type": "1"}, "relationships": {"1": "eccda3802fba6e86c320dd5d1572c3eb006d94d3", "3": "77691135-227e-41a1-9c44-0860d06ac02c"}}, "__type__": "1"}, "77691135-227e-41a1-9c44-0860d06ac02c": {"__data__": {"text": "           AND attribute_key = 'amount' THEN 'non lp tokens'\n            WHEN attribute_key = 'acc_seq' THEN 'lper'\n            WHEN attribute_key = 'sender' THEN 'msg sender'\n        END what_is_this,\n        b.action,\n        A.tx_ID,\n        A.msg_group,\n        A.msg_sub_group,\n        A.msg_index,\n        A.attribute_key,\n        A.attribute_value,\n        A.block_timestamp\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n        JOIN in_play b\n        ON A.tx_id = b.tx_ID\n    WHERE\n        (\n            (\n                msg_type = 'message'\n                AND attribute_key = 'action'\n                AND attribute_value IN (\n                    'join_pool',\n                    'exit_pool'\n                )\n                AND A.msg_sub_group = b.msg_sub_group\n                AND A.msg_group = b.msg_group\n            )\n            OR (\n                A.msg_type = 'transfer'\n                AND A.attribute_key = 'amount'\n                AND A.msg_sub_group = b.msg_sub_group\n                AND A.msg_group = b.msg_group\n                AND (\n                    attribute_value LIKE '%gamm%pool%'\n                    OR attribute_value LIKE '%,%'\n                )\n            )\n            OR attribute_key = 'acc_seq'\n            OR (\n                msg_type = 'message'\n                AND attribute_key = 'sender'\n            )\n        )\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nlper AS (\n    SELECT\n        tx_id,\n        SPLIT_PART(\n    ", "doc_id": "77691135-227e-41a1-9c44-0860d06ac02c", "embedding": null, "doc_hash": "7a3c1c093662cd54354bfc017fc6bdeb2324eb2faa9cd5fd784fb4d788180a68", "extra_info": {"file_path": "models/silver/silver__early_liquidity_provider_actions.sql", "file_name": "silver__early_liquidity_provider_actions.sql"}, "node_info": {"start": 1841, "end": 3436, "_node_type": "1"}, "relationships": {"1": "eccda3802fba6e86c320dd5d1572c3eb006d94d3", "2": "0b5f3a63-2a93-464f-87a0-460318aa14f0", "3": "36fcce39-ea83-4902-a37e-ba9ca165c888"}}, "__type__": "1"}, "36fcce39-ea83-4902-a37e-ba9ca165c888": {"__data__": {"text": "       SPLIT_PART(\n            attribute_value,\n            '/',\n            0\n        ) AS liquidity_provider_address\n    FROM\n        msg_atts\n    WHERE\n        what_is_this = 'lper'\n),\ntokens AS (\n    SELECT\n        tx_id,\n        msg_index,\n        msg_group,\n        msg_sub_group,\n        SPLIT_PART(\n            TRIM(\n                REGEXP_REPLACE(\n                    t.value,\n                    '[^[:digit:]]',\n                    ' '\n                )\n            ),\n            ' ',\n            0\n        ) :: INTEGER AS amount,\n        RIGHT(t.value, LENGTH(t.value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(t.value, '[^[:digit:]]', ' ')), ' ', 0))) :: STRING AS currency,\n        what_is_this,\n        action,\n        block_timestamp\n    FROM\n        msg_atts,\n        LATERAL SPLIT_TO_TABLE (\n            attribute_value,\n            ','\n        ) t\n    WHERE\n        what_is_this IN (\n            'lp tokens',\n            'non lp tokens'\n        )\n),\nsndr AS (\n    SELECT\n        tx_id,\n        msg_index,\n        attribute_value\n    FROM\n        msg_atts\n    WHERE\n        attribute_key = 'sender'\n),\ntokens_2 AS (\n    SELECT\n        A.tx_id,\n        A.msg_index,\n        A.msg_group,\n        A.msg_sub_group,\n        A.what_is_this,\n        A.amount,\n        A.currency,\n        A.action,\n        A.block_timestamp\n    FROM\n        tokens A\n        LEFT JOIN lper b\n        ON A.tx_id = b.tx_id\n        LEFT JOIN (\n            SELECT\n                DISTINCT tx_id,\n                attribute_value\n            FROM\n", "doc_id": "36fcce39-ea83-4902-a37e-ba9ca165c888", "embedding": null, "doc_hash": "fb87057be06d421958915d38df1b904e3b39f4f1d0d74ad77c7f4a03de4a5c56", "extra_info": {"file_path": "models/silver/silver__early_liquidity_provider_actions.sql", "file_name": "silver__early_liquidity_provider_actions.sql"}, "node_info": {"start": 3442, "end": 4975, "_node_type": "1"}, "relationships": {"1": "eccda3802fba6e86c320dd5d1572c3eb006d94d3", "2": "77691135-227e-41a1-9c44-0860d06ac02c", "3": "e0660a0d-6448-4d5a-a295-87f6f893894f"}}, "__type__": "1"}, "e0660a0d-6448-4d5a-a295-87f6f893894f": {"__data__": {"text": "  attribute_value\n            FROM\n                sndr\n        ) C\n        ON A.tx_Id = C.tx_ID\n        AND b.liquidity_provider_address = C.attribute_value -- AND A.msg_index = C.msg_index + 1\n    WHERE\n        what_is_this = 'non lp tokens'\n        OR (\n            what_is_this = 'lp tokens'\n            AND C.tx_ID IS NOT NULL\n        )\n),\ndecimals AS (\n    SELECT\n        tx_id,\n        msg_index,\n        t.msg_group,\n        t.msg_sub_group,\n        what_is_this,\n        amount,\n        currency,\n        CASE\n            WHEN currency LIKE '%pool%' THEN 18\n            ELSE DECIMAL\n        END AS DECIMAL,\n        action,\n        block_timestamp\n    FROM\n        tokens_2 t\n        LEFT OUTER JOIN {{ ref('silver__asset_metadata') }}\n        ON currency = address\n),\npools AS (\n    SELECT\n        tx_id,\n        msg_group,\n        msg_sub_group,\n        REPLACE(SPLIT_PART(currency, 'gamm', 2), '/pool/') :: INT pool_id\n    FROM\n        tokens_2\n    WHERE\n        what_is_this = 'lp tokens'\n),\ntxn AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        _inserted_timestamp\n    FROM\n        {{ ref('silver__transactions') }}\n\n{% if is_incremental() %}\nWHERE\n    _inserted_timestamp >= (\n        SELECT\n            MAX(\n                _inserted_timestamp\n            )\n        FROM\n            max_date\n    )\n{% endif %}\n)\nSELECT\n    tx.block_id,\n    tx.block_timestamp,\n    tx.tx_id,\n    tx.tx_succeeded,\n    d.msg_index,\n    l.liquidity_provider_address,\n    CASE\n        WHEN action = 'join_pool'\n        AND what_is_this = 'lp tokens' THEN 'lp_tokens_minted'\n        WHEN action = 'exit_pool'\n        AND what_is_this = 'lp tokens' THEN 'lp_tokens_burned'\n        WHEN action", "doc_id": "e0660a0d-6448-4d5a-a295-87f6f893894f", "embedding": null, "doc_hash": "66b67dbcf14d504028365c5e9795ce8f67db264db920f7403085ce11b8a780df", "extra_info": {"file_path": "models/silver/silver__early_liquidity_provider_actions.sql", "file_name": "silver__early_liquidity_provider_actions.sql"}, "node_info": {"start": 4967, "end": 6704, "_node_type": "1"}, "relationships": {"1": "eccda3802fba6e86c320dd5d1572c3eb006d94d3", "2": "36fcce39-ea83-4902-a37e-ba9ca165c888", "3": "da06f037-f1a7-40da-a579-64d35ad08b1d"}}, "__type__": "1"}, "da06f037-f1a7-40da-a579-64d35ad08b1d": {"__data__": {"text": "       WHEN action = 'join_pool'\n        AND what_is_this = 'non lp tokens' THEN 'pool_joined'\n        WHEN action = 'exit_pool'\n        AND what_is_this = 'non lp tokens' THEN 'pool_exited'\n    END action,\n    p.pool_id :: ARRAY AS pool_id,\n    d.amount,\n    d.currency,\n    d.decimal,\n    tx._inserted_timestamp,\n    concat_ws(\n        '-',\n        d.tx_id,\n        msg_index,\n        currency\n    ) AS _unique_key\nFROM\n    decimals d\n    JOIN pools p\n    ON d.tx_id = p.tx_id\n    AND d.msg_group = p.msg_group\n    AND d.msg_sub_group = p.msg_sub_group\n    JOIN lper l\n    ON d.tx_id = l.tx_id\n    JOIN txn tx\n    ON d.tx_id = tx.tx_id\n    AND d.block_timestamp = tx.block_timestamp\n", "doc_id": "da06f037-f1a7-40da-a579-64d35ad08b1d", "embedding": null, "doc_hash": "d13f4dd5f7235fefb2ff54377703c0c657cebd3869635dd99f261444322b77bb", "extra_info": {"file_path": "models/silver/silver__early_liquidity_provider_actions.sql", "file_name": "silver__early_liquidity_provider_actions.sql"}, "node_info": {"start": 6707, "end": 7392, "_node_type": "1"}, "relationships": {"1": "eccda3802fba6e86c320dd5d1572c3eb006d94d3", "2": "e0660a0d-6448-4d5a-a295-87f6f893894f"}}, "__type__": "1"}, "1ff5cf51-ae35-420a-9b84-9b9ba70162da": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__early_liquidity_provider_actions\n    description: Includes all actions entering and exiting liquidity pools  (for transactions using the old (pre 2022))\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_INDEX\n            - CURRENCY\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: LIQUIDITY_PROVIDER_ADDRESS\n        description: \"{{ doc('liquidity_provider_address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: ACTION\n        description: \"{{ doc('action') }}\"\n        tests:", "doc_id": "1ff5cf51-ae35-420a-9b84-9b9ba70162da", "embedding": null, "doc_hash": "f3804a50653d46d524702a1255989a28de12595e6710aa5ed3503113164efc3b", "extra_info": {"file_path": "models/silver/silver__early_liquidity_provider_actions.yml", "file_name": "silver__early_liquidity_provider_actions.yml"}, "node_info": {"start": 0, "end": 1800, "_node_type": "1"}, "relationships": {"1": "3a2a92b3239fa515533506d97ffa2d255116afd5", "3": "2748cdf8-b029-4e5d-9a85-3a5b836dd667"}}, "__type__": "1"}, "2748cdf8-b029-4e5d-9a85-3a5b836dd667": {"__data__": {"text": "description: \"{{ doc('action') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: POOL_ID\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - ARRAY \n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ", "doc_id": "2748cdf8-b029-4e5d-9a85-3a5b836dd667", "embedding": null, "doc_hash": "f015bdef2831b5cd1c0b505f7b9746f621579c9152b316778545d16263a131b2", "extra_info": {"file_path": "models/silver/silver__early_liquidity_provider_actions.yml", "file_name": "silver__early_liquidity_provider_actions.yml"}, "node_info": {"start": 1751, "end": 3040, "_node_type": "1"}, "relationships": {"1": "3a2a92b3239fa515533506d97ffa2d255116afd5", "2": "1ff5cf51-ae35-420a-9b84-9b9ba70162da"}}, "__type__": "1"}, "5da9fee3-df4b-480c-a42e-02b6e6659401": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"tx_id\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH\n\n{% if is_incremental() %}\nmax_date AS (\n\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n),\n{% endif %}\n\nproposal_ids AS (\n    SELECT\n        tx_id,\n        attribute_value AS proposal_id\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        msg_type = 'proposal_deposit'\n        AND attribute_key = 'proposal_id'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\ndeposit_value AS (\n    SELECT\n        tx_id,\n        SPLIT_PART(\n            TRIM(\n                REGEXP_REPLACE(\n                    attribute_value,\n                    '[^[:digit:]]',\n                    ' '\n                )\n            ),\n            ' ',\n            0\n        ) / pow(10, COALESCE(A.decimal, 0)) AS amount,\n        RIGHT(attribute_value, LENGTH(attribute_value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(attribute_value, '[^[:digit:]]', ' ')), ' ', 0))) AS currency,\n        A.decimal AS DECIMAL\n    FROM\n        {{ ref('silver__msg_attributes') }}\n        m\n        LEFT OUTER JOIN {{ ref('silver__asset_metadata') }} A\n        ON RIGHT(attribute_value, LENGTH(attribute_value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(attribute_value, '[^[:digit:]]', ' ')), ' ', 0))) = A.address\n    WHERE\n        msg_type = 'proposal_deposit'\n        AND attribute_key = 'amount'\n        AND attribute_value IS NOT NULL\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\ndepositors AS (\n    SELECT\n        tx_id,\n       ", "doc_id": "5da9fee3-df4b-480c-a42e-02b6e6659401", "embedding": null, "doc_hash": "5ff60ddc7d3e89cb08150538c8b1fbeaeba4cddfb9fd7d6126d963dfcfa46bb9", "extra_info": {"file_path": "models/silver/silver__governance_proposal_deposits.sql", "file_name": "silver__governance_proposal_deposits.sql"}, "node_info": {"start": 0, "end": 1867, "_node_type": "1"}, "relationships": {"1": "0012dae838fab5aa34020c7c506cd16363ec4c15", "3": "a4e0b372-747c-4100-ae58-b87e4c47d3a9"}}, "__type__": "1"}, "a4e0b372-747c-4100-ae58-b87e4c47d3a9": {"__data__": {"text": "       tx_id,\n        SPLIT_PART(\n            attribute_value,\n            '/',\n            0\n        ) AS depositor\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        attribute_key = 'acc_seq'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        {{ this }}\n)\n{% endif %}\n\nqualify(ROW_NUMBER() over(PARTITION BY tx_id\nORDER BY\n    msg_index)) = 1\n)\nSELECT\n    block_id,\n    block_timestamp,\n    p.tx_id,\n    tx_succeeded,\n    d.depositor,\n    p.proposal_id :: NUMBER AS proposal_id,\n    v.amount,\n    v.currency,\n    DECIMAL,\n    _inserted_timestamp\nFROM\n    deposit_value v\n    INNER JOIN proposal_ids p\n    ON p.tx_id = v.tx_id\n    INNER JOIN depositors d\n    ON v.tx_id = d.tx_id\n    LEFT OUTER JOIN {{ ref('silver__transactions') }}\n    t\n    ON v.tx_id = t.tx_id\n\n{% if is_incremental() %}\nWHERE\n    _inserted_timestamp >= (\n        SELECT\n            MAX(\n                _inserted_timestamp\n            )\n        FROM\n            {{ this }}\n    )\n{% endif %}\n", "doc_id": "a4e0b372-747c-4100-ae58-b87e4c47d3a9", "embedding": null, "doc_hash": "0af22b68348d5c060e64f56355c14ea13f841329101d2c9166ef6f569f99fadf", "extra_info": {"file_path": "models/silver/silver__governance_proposal_deposits.sql", "file_name": "silver__governance_proposal_deposits.sql"}, "node_info": {"start": 1846, "end": 2918, "_node_type": "1"}, "relationships": {"1": "0012dae838fab5aa34020c7c506cd16363ec4c15", "2": "5da9fee3-df4b-480c-a42e-02b6e6659401"}}, "__type__": "1"}, "3c0d9c2e-4430-4c7d-8cff-6f33124b118a": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__governance_proposal_deposits\n    description: Records of all proposal deposits that have occurred on Osmosis, dating back to the genesis block. At least 500 OSMO must be deposited for a proposal to be voted on.\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: DEPOSITOR \n        description: \"{{ doc('depositor') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: PROPOSAL_ID\n        description: \"{{ doc('proposal_id') }}\"\n        tests: \n          - not_null\n", "doc_id": "3c0d9c2e-4430-4c7d-8cff-6f33124b118a", "embedding": null, "doc_hash": "3006d689cf72fe4e43321ff281d1d4377daee7154a8c3e70573421033e054e0e", "extra_info": {"file_path": "models/silver/silver__governance_proposal_deposits.yml", "file_name": "silver__governance_proposal_deposits.yml"}, "node_info": {"start": 0, "end": 1811, "_node_type": "1"}, "relationships": {"1": "da816c5363d2092e65647c82ef39562bd0043895", "3": "39ebc3e9-db0c-4d5d-8883-11efe84e9f11"}}, "__type__": "1"}, "39ebc3e9-db0c-4d5d-8883-11efe84e9f11": {"__data__": {"text": "   tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT \n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: DECIMAL \n        description: \"{{ doc('decimal') }}\"\n        tests: \n          - not_null\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "39ebc3e9-db0c-4d5d-8883-11efe84e9f11", "embedding": null, "doc_hash": "a79d14b1bb3dc94114f709cc54a18c9ed564263adf215ce3f9e5500a7db99149", "extra_info": {"file_path": "models/silver/silver__governance_proposal_deposits.yml", "file_name": "silver__governance_proposal_deposits.yml"}, "node_info": {"start": 1779, "end": 2836, "_node_type": "1"}, "relationships": {"1": "da816c5363d2092e65647c82ef39562bd0043895", "2": "3c0d9c2e-4430-4c7d-8cff-6f33124b118a"}}, "__type__": "1"}, "6ba96a99-e86e-49aa-b367-fc5d09616a12": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"tx_id\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH\n\n{% if is_incremental() %}\nmax_date AS (\n\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n),\n{% endif %}\n\nproposal_ids AS (\n    SELECT\n        tx_id,\n        attribute_value AS proposal_id\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        msg_type = 'submit_proposal'\n        AND attribute_key = 'proposal_id'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nproposal_type AS (\n    SELECT\n        tx_id,\n        attribute_value AS proposal_type\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        msg_type = 'submit_proposal'\n        AND attribute_key = 'proposal_type'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nproposer AS (\n    SELECT\n        tx_id,\n        SPLIT_PART(\n            attribute_value,\n            '/',\n            0\n        ) AS proposer\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        attribute_key = 'acc_seq'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n\nqualify(ROW_NUMBER() over(PARTITION BY tx_id\nORDER BY\n    msg_index)) = 1\n)\nSELECT\n    block_id,\n    block_timestamp,\n    p.tx_id,\n    tx_succeeded,\n    proposer,\n    p.proposal_id :: NUMBER AS proposal_id,\n    y.proposal_type,\n    COALESCE(\n        tx_body :messages [0] :content :title,\n        tx_body :messages [0] :msgs [0] :content :title\n    ) :: STRING AS proposal_title,\n    COALESCE(\n   ", "doc_id": "6ba96a99-e86e-49aa-b367-fc5d09616a12", "embedding": null, "doc_hash": "9a3ffebce2369263a5d10b15f69dc7f1ddb459d93c84ba96983eb4d0ed0e8b8e", "extra_info": {"file_path": "models/silver/silver__governance_submit_proposal.sql", "file_name": "silver__governance_submit_proposal.sql"}, "node_info": {"start": 0, "end": 1918, "_node_type": "1"}, "relationships": {"1": "f900319efd26247f8674d0e4a326f64fe44e6f43", "3": "176cd8a4-1fed-4038-a815-bde6cbb7e157"}}, "__type__": "1"}, "176cd8a4-1fed-4038-a815-bde6cbb7e157": {"__data__": {"text": "AS proposal_title,\n    COALESCE(\n        tx_body :messages [0] :content :description,\n        tx_body :messages [0] :msgs [0] :content :description\n    ) :: STRING AS proposal_description,\n    _inserted_timestamp\nFROM\n    proposal_ids p\n    INNER JOIN proposal_type y\n    ON p.tx_id = y.tx_id\n    INNER JOIN proposer pp\n    ON p.tx_id = pp.tx_id\n    LEFT OUTER JOIN {{ ref('silver__transactions') }}\n    t\n    ON p.tx_id = t.tx_id\n\n{% if is_incremental() %}\nWHERE\n    _inserted_timestamp >= (\n        SELECT\n            MAX(\n                _inserted_timestamp\n            )\n        FROM\n            max_date\n    )\n{% endif %}\n", "doc_id": "176cd8a4-1fed-4038-a815-bde6cbb7e157", "embedding": null, "doc_hash": "cd052d69857d259891b182677f26bd302d9b4c74828f7a46e13bf25bf900e266", "extra_info": {"file_path": "models/silver/silver__governance_submit_proposal.sql", "file_name": "silver__governance_submit_proposal.sql"}, "node_info": {"start": 1882, "end": 2509, "_node_type": "1"}, "relationships": {"1": "f900319efd26247f8674d0e4a326f64fe44e6f43", "2": "6ba96a99-e86e-49aa-b367-fc5d09616a12"}}, "__type__": "1"}, "36553473-515a-4c3c-a46c-881741efc82e": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__governance_submit_proposal\n    description: Records of all proposal submissions on Osmosis, dating back to the Genesis block. \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: PROPOSER\n        description: \"{{ doc('proposer') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: PROPOSAL_ID\n        description: \"{{ doc('proposal_id') }}\"\n        tests: \n          - not_null\n          -", "doc_id": "36553473-515a-4c3c-a46c-881741efc82e", "embedding": null, "doc_hash": "75671aafafe165df81d9c1bd8f5f48965db82af24a821cffa1bfa2829a31f7a0", "extra_info": {"file_path": "models/silver/silver__governance_submit_proposal.yml", "file_name": "silver__governance_submit_proposal.yml"}, "node_info": {"start": 0, "end": 1735, "_node_type": "1"}, "relationships": {"1": "f4e28d202b2a911d05af735920eade92c75674ce", "3": "0db60b02-21a4-4b14-8242-5d975f097055"}}, "__type__": "1"}, "0db60b02-21a4-4b14-8242-5d975f097055": {"__data__": {"text": "     - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: PROPOSAL_TYPE\n        description: \"{{ doc('proposal_type') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: PROPOSAL_TITLE\n        description: \"{{ doc('proposal_title') }}\"\n        tests: \n          - not_null: \n              where: tx_id <> '515A92D6DE7561E1BCDB11C0D453BFDE87B25F981F8E94AFB848CA97EA65F34A' ## We are missing this transaction body \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: PROPOSAL_DESCRIPTION\n        description: \"{{ doc('proposal_description') }}\"\n        tests: \n          - not_null: \n              where: tx_id <> '515A92D6DE7561E1BCDB11C0D453BFDE87B25F981F8E94AFB848CA97EA65F34A' ## We are missing this transaction body\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ", "doc_id": "0db60b02-21a4-4b14-8242-5d975f097055", "embedding": null, "doc_hash": "d760dc7d66cf17495aef65891f14389bbf6be31172ead0ad61260f391bb32641", "extra_info": {"file_path": "models/silver/silver__governance_submit_proposal.yml", "file_name": "silver__governance_submit_proposal.yml"}, "node_info": {"start": 1708, "end": 3232, "_node_type": "1"}, "relationships": {"1": "f4e28d202b2a911d05af735920eade92c75674ce", "2": "36553473-515a-4c3c-a46c-881741efc82e"}}, "__type__": "1"}, "94a712d0-25cd-40ee-b9d7-a237f5cc63e9": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH base_tx AS (\n\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        tx_body :memo :: STRING AS memo,\n        tx_body :messages AS messages,\n        _inserted_timestamp\n    FROM\n        {{ ref('silver__transactions') }}\n\n{% if is_incremental() %}\nWHERE\n    _inserted_timestamp >= (\n        SELECT\n            MAX(\n                _inserted_timestamp\n            )\n        FROM\n            {{ this }}\n    )\n{% endif %}\n),\nmemo_text AS (\n    SELECT\n        tx_id,\n        memo\n    FROM\n        base_tx\n    WHERE\n        memo IS NOT NULL\n),\nweighted_votes AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        messages,\n        path :: STRING AS _path,\n        _inserted_timestamp\n    FROM\n        base_tx,\n        LATERAL FLATTEN (\n            input => messages,\n            recursive => TRUE\n        ) b\n    WHERE\n        key = '@type'\n        AND VALUE :: STRING = '/cosmos.gov.v1beta1.MsgVoteWeighted'\n),\npre_final AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        path :: STRING AS _path,\n        this :proposal_id :: STRING AS proposal_id,\n        this :voter :: STRING AS voter,\n        CASE\n            WHEN this :option :: STRING = 'VOTE_OPTION_YES' THEN 1\n            WHEN this :option :: STRING = 'VOTE_OPTION_ABSTAIN' THEN 2\n            WHEN this :option :: STRING = 'VOTE_OPTION_NO' THEN 3\n            WHEN this :option :: STRING = 'VOTE_OPTION_NO_WITH_VETO' THEN 4\n            ELSE this :option\n        END AS vote_option,\n        1.000 AS vote_weight,\n        _inserted_timestamp,\n        concat_ws(\n           ", "doc_id": "94a712d0-25cd-40ee-b9d7-a237f5cc63e9", "embedding": null, "doc_hash": "6679bb49af37707a63eea2ed7e6d76949ee7ca830aef029fda454bd22e61e0ed", "extra_info": {"file_path": "models/silver/silver__governance_votes.sql", "file_name": "silver__governance_votes.sql"}, "node_info": {"start": 0, "end": 1839, "_node_type": "1"}, "relationships": {"1": "08cded504e79aa8af55a6a4e366ebc46e9a334ae", "3": "f3018f84-a543-459d-985c-8b6e60be6d78"}}, "__type__": "1"}, "f3018f84-a543-459d-985c-8b6e60be6d78": {"__data__": {"text": "   concat_ws(\n            '-',\n            tx_id,\n            proposal_id,\n            voter,\n            vote_option,\n            _path\n        ) AS _unique_key\n    FROM\n        base_tx,\n        LATERAL FLATTEN (\n            input => messages,\n            recursive => TRUE\n        ) b\n    WHERE\n        key = '@type'\n        AND VALUE :: STRING = '/cosmos.gov.v1beta1.MsgVote'\n    UNION ALL\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        _path,\n        b.value :proposal_id :: NUMBER AS proposal_id,\n        b.value :voter :: STRING AS voter,\n        CASE\n            WHEN o.value :option :: STRING = 'VOTE_OPTION_YES' THEN 1\n            WHEN o.value :option :: STRING = 'VOTE_OPTION_ABSTAIN' THEN 2\n            WHEN o.value :option :: STRING = 'VOTE_OPTION_NO' THEN 3\n            WHEN o.value :option :: STRING = 'VOTE_OPTION_NO_WITH_VETO' THEN 4\n            ELSE o.value :option\n        END AS vote_option,\n        o.value :weight :: FLOAT AS vote_weight,\n        _inserted_timestamp,\n        concat_ws(\n            '-',\n            tx_id,\n            proposal_id,\n            voter,\n            vote_option,\n            _path\n        ) AS _unique_key\n    FROM\n        weighted_votes,\n        LATERAL FLATTEN (\n            input => messages\n        ) b,\n        LATERAL FLATTEN (\n            input => b.value :options\n        ) o\n)\nSELECT\n    block_id,\n    block_timestamp,\n    m.tx_id,\n    tx_succeeded,\n    _path,\n    proposal_id,\n    voter,\n    vote_option,\n    vote_weight,\n    memo,\n    _inserted_timestamp,\n    _unique_key\nFROM\n    pre_final p\n    LEFT OUTER JOIN memo_text m\n    ON p.tx_id = m.tx_id\n", "doc_id": "f3018f84-a543-459d-985c-8b6e60be6d78", "embedding": null, "doc_hash": "5af017de7b1e895d10934d0395f4cf75d4e2ef9bd22fdeda88f44403aa38d521", "extra_info": {"file_path": "models/silver/silver__governance_votes.sql", "file_name": "silver__governance_votes.sql"}, "node_info": {"start": 1814, "end": 3477, "_node_type": "1"}, "relationships": {"1": "08cded504e79aa8af55a6a4e366ebc46e9a334ae", "2": "94a712d0-25cd-40ee-b9d7-a237f5cc63e9"}}, "__type__": "1"}, "1070a038-267e-4cbc-981b-1b7cd31f25d2": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__governance_votes\n    description: Records of all votes on proposals. \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - PROPOSAL_ID\n            - VOTER\n            - VOTE_OPTION\n            - _PATH\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: VOTER\n        description: \"{{ doc('voter') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: PROPOSAL_ID\n        description: \"{{ doc('proposal_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n             ", "doc_id": "1070a038-267e-4cbc-981b-1b7cd31f25d2", "embedding": null, "doc_hash": "b9ac36070210eee14ef4f822de874388628c5fad726f9b9db3768e1168e7bc21", "extra_info": {"file_path": "models/silver/silver__governance_votes.yml", "file_name": "silver__governance_votes.yml"}, "node_info": {"start": 0, "end": 1728, "_node_type": "1"}, "relationships": {"1": "f6a7945848250731cee6805eaa0f7faa3675402e", "3": "781ab3b0-2518-44c2-8f85-b67998aca368"}}, "__type__": "1"}, "781ab3b0-2518-44c2-8f85-b67998aca368": {"__data__": {"text": "             column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: VOTE_OPTION\n        description: \"{{ doc('vote_option') }}\"\n        tests: \n          - not_null\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null: \n              store_failures: False\n      - name: _PATH\n        description: Internal use for unique key. Path recursive lateral flatten pulls info from. \n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: VOTE_WEIGHT\n        description: The percentage of one's delegation put towards a voting option. 1 = 100%, etc. \n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: MEMO\n        description: \"{{ doc('memo') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR", "doc_id": "781ab3b0-2518-44c2-8f85-b67998aca368", "embedding": null, "doc_hash": "ec5d2908e2adc1a7c82a1347f998c2a86a89ad57e6099503c7d12581c01f55e0", "extra_info": {"file_path": "models/silver/silver__governance_votes.yml", "file_name": "silver__governance_votes.yml"}, "node_info": {"start": 1716, "end": 2921, "_node_type": "1"}, "relationships": {"1": "f6a7945848250731cee6805eaa0f7faa3675402e", "2": "1070a038-267e-4cbc-981b-1b7cd31f25d2"}}, "__type__": "1"}, "c10cf5d7-a451-4b37-9e8c-a5737be0ac77": {"__data__": {"text": "{{ config(\n  materialized = 'incremental',\n  unique_key = \"address\",\n  incremental_strategy = 'delete+insert',\n  cluster_by = ['block_timestamp::date']\n) }}\n\nWITH max_bn AS (\n\n  SELECT\n    address,\n    MAX(block_timestamp) AS block_timestamp\n  FROM\n    {{ ref('silver__liquid_balances') }}\n  GROUP BY\n    address\n)\nSELECT\n  b.address,\n  b.balance,\n  b.balance_type,\n  b.block_id,\n  b.block_timestamp,\n  b.decimal,\n  b.currency,\n  b._inserted_timestamp\nFROM\n  {{ ref('silver__liquid_balances') }}\n  b\n  JOIN max_bn m\n  ON b.address = m.address\n  AND b.block_timestamp = m.block_timestamp\n", "doc_id": "c10cf5d7-a451-4b37-9e8c-a5737be0ac77", "embedding": null, "doc_hash": "ee500179dda89be86d828e0d13bad1141a54902e52f25f93afaf6dd5069dd781", "extra_info": {"file_path": "models/silver/silver__latest_liquid_balances.sql", "file_name": "silver__latest_liquid_balances.sql"}, "node_info": {"start": 0, "end": 587, "_node_type": "1"}, "relationships": {"1": "e962f74299c9b2183c1e04e61c3b1bae9f5e551e"}}, "__type__": "1"}, "6624b6f4-97c6-4ca9-b8a0-f3557dfddb65": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__latest_liquid_balances\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - BLOCK_TIMESTAMP\n            - BLOCK_ID\n            - ADDRESS\n            - CURRENCY\n            - BALANCE_TYPE\n          where: BLOCK_TIMESTAMP::DATE > CURRENT_DATE - 30 AND BALANCE > 0\n    columns:\n      - name: BLOCK_TIMESTAMP\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: ADDRESS\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: CURRENCY\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: BALANCE_TYPE\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: BALANCE\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: BLOCK_ID\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n             ", "doc_id": "6624b6f4-97c6-4ca9-b8a0-f3557dfddb65", "embedding": null, "doc_hash": "14b9d16575a74c158cd50ca696ae51f9ae847c43985aa005d8ab6438c00387bf", "extra_info": {"file_path": "models/silver/silver__latest_liquid_balances.yml", "file_name": "silver__latest_liquid_balances.yml"}, "node_info": {"start": 0, "end": 1665, "_node_type": "1"}, "relationships": {"1": "e7a764354636f8230396f98d84111e9bd63a6ab3", "3": "6d8bd484-22f7-4803-9703-eab800558428"}}, "__type__": "1"}, "6d8bd484-22f7-4803-9703-eab800558428": {"__data__": {"text": "             column_type_list:\n                - NUMBER\n                - FLOAT\n\n          ", "doc_id": "6d8bd484-22f7-4803-9703-eab800558428", "embedding": null, "doc_hash": "55204dbecc7f255f02c012cf1f27f37cac13c17f26b9def98a3a4e3592eafd8c", "extra_info": {"file_path": "models/silver/silver__latest_liquid_balances.yml", "file_name": "silver__latest_liquid_balances.yml"}, "node_info": {"start": 1653, "end": 1744, "_node_type": "1"}, "relationships": {"1": "e7a764354636f8230396f98d84111e9bd63a6ab3", "2": "6624b6f4-97c6-4ca9-b8a0-f3557dfddb65"}}, "__type__": "1"}, "2db9714f-05c7-4bee-92be-20c69c26e4b0": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"CONCAT_WS('-', block_id, address, currency)\",\n    incremental_strategy = 'delete+insert',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH base AS (\n\n    SELECT\n        bal.block_id,\n        bl.block_timestamp,\n        bal.address,\n        b.value :denom :: STRING AS currency,\n        b.value :amount :: INT AS balance,\n        TO_TIMESTAMP_NTZ(\n            SUBSTR(SPLIT_PART(metadata$filename, '/', 4), 1, 10) :: NUMBER,\n            0\n        ) AS _inserted_timestamp\n    FROM\n        {{ source(\n            'bronze_streamline',\n            'balances_api'\n        ) }}\n        bal\n        LEFT OUTER JOIN {{ ref('silver__blocks') }}\n        bl\n        ON bal.block_id = bl.block_id\n        LEFT OUTER JOIN TABLE(FLATTEN (input => balances, outer => TRUE)) b\n\n{% if is_incremental() %}\nWHERE\n    block_timestamp :: DATE >= (\n        SELECT\n            DATEADD(\n                'day',\n                -1,\n                MAX(\n                    block_timestamp :: DATE\n                )\n            )\n        FROM\n            {{ this }}\n    )\n    OR b.value :denom :: STRING IN (\n        SELECT\n            currency\n        FROM\n            {{ this }}\n        GROUP BY\n            currency\n        HAVING\n            MAX(COALESCE(DECIMAL, -1)) <> MIN(COALESCE(DECIMAL, -1))\n    )\n{% endif %}\n\nqualify(ROW_NUMBER() over(PARTITION BY bal.block_id, bal.address, currency\nORDER BY\n    _inserted_timestamp DESC)) = 1\n),\ntbl AS (\n\n{% if is_incremental() %}\nSELECT\n    address, balance, block_id, block_timestamp, currency, _inserted_timestamp\nFROM\n    base\nUNION\nSELECT\n    address, balance, block_id, block_timestamp, currency, _inserted_timestamp\nFROM\n    silver.latest_liquid_balances\nWHERE\n    address IN (\nSELECT\n    DISTINCT address\nFROM\n    base)\n{% else %}\nSELECT\n    address, balance, block_id, block_timestamp, currency, _inserted_timestamp\nFROM\n    base\n{% endif %}),\nall_currency AS (\n    SELECT\n    ", "doc_id": "2db9714f-05c7-4bee-92be-20c69c26e4b0", "embedding": null, "doc_hash": "a6777d7362de221753d5bb5998e49a97c0c19cc64ab6d61d9812b213281aa367", "extra_info": {"file_path": "models/silver/silver__liquid_balances.sql", "file_name": "silver__liquid_balances.sql"}, "node_info": {"start": 0, "end": 1976, "_node_type": "1"}, "relationships": {"1": "daf58b90f4c89f44124dd7277c55e01a396b5502", "3": "3ff2aaf5-d872-461e-afe2-298c34020279"}}, "__type__": "1"}, "3ff2aaf5-d872-461e-afe2-298c34020279": {"__data__": {"text": "endif %}),\nall_currency AS (\n    SELECT\n        DISTINCT address,\n        currency\n    FROM\n        tbl\n),\nall_bts AS (\n    SELECT\n        DISTINCT address,\n        block_timestamp,\n        block_id,\n        _inserted_timestamp\n    FROM\n        tbl\n),\ntmp AS (\n    SELECT\n        ab.address,\n        COALESCE(\n            bal.balance,\n            0\n        ) AS balance,\n        ab.block_id,\n        ab.block_timestamp,\n        ac.currency,\n        ab._inserted_timestamp\n    FROM\n        all_bts ab\n        JOIN all_currency ac\n        ON ab.address = ac.address\n        LEFT JOIN tbl bal\n        ON ab.address = bal.address\n        AND ab.block_timestamp = bal.block_timestamp\n        AND ac.currency = bal.currency qualify(ROW_NUMBER() over(PARTITION BY ab.address, ab.block_id, ac.currency\n    ORDER BY\n        ab._inserted_timestamp DESC)) = 1\n),\ndense_tmp AS (\n    SELECT\n        *,\n        DENSE_RANK() over(\n            PARTITION BY address,\n            currency\n            ORDER BY\n                block_id ASC\n        ) AS rn\n    FROM\n        tmp\n),\njoined AS (\n    SELECT\n        t.address AS t_address,\n        t.balance AS t_balance,\n        t.block_id AS t_block_id,\n        t.block_timestamp AS t_block_timestamp,\n        t.currency AS t_currency,\n        t._inserted_timestamp AS t_inserted_timestamp,\n        t2.address AS t2_address,\n        t2.balance AS t2_balance,\n        t2.block_id AS t2_block_id,\n        t2.block_timestamp AS t2_block_timestamp,\n        t2.currency AS t2_currency,\n        t2._inserted_timestamp AS t2_inserted_timestamp,\n        LAST_VALUE(\n            t2.block_timestamp ignore nulls\n        ) over (\n            PARTITION BY COALESCE(\n                t.address,\n                t2.address\n            ),\n            t.rn\n            ORDER BY\n               ", "doc_id": "3ff2aaf5-d872-461e-afe2-298c34020279", "embedding": null, "doc_hash": "a926b850699bd839a65b0bf04dfd2f8db941b90456b10d74015d23efd8b25019", "extra_info": {"file_path": "models/silver/silver__liquid_balances.sql", "file_name": "silver__liquid_balances.sql"}, "node_info": {"start": 1944, "end": 3748, "_node_type": "1"}, "relationships": {"1": "daf58b90f4c89f44124dd7277c55e01a396b5502", "2": "2db9714f-05c7-4bee-92be-20c69c26e4b0", "3": "d8377040-b65a-410d-8396-f5294402ec66"}}, "__type__": "1"}, "d8377040-b65a-410d-8396-f5294402ec66": {"__data__": {"text": " ORDER BY\n                t2.block_timestamp\n        ) AS block_timestamp,\n        LAST_VALUE(\n            t2.block_id ignore nulls\n        ) over (\n            PARTITION BY COALESCE(\n                t.address,\n                t2.address\n            ),\n            t.rn\n            ORDER BY\n                t2.block_timestamp\n        ) AS block_id,\n        t.rn AS t_rn,\n        t2.rn AS t2_rn,\n        MAX(\n            t2.rn\n        ) over(PARTITION BY COALESCE(t.address, t2.address), COALESCE(t.currency, t2.currency)) AS max_t2_rn\n    FROM\n        dense_tmp t full\n        OUTER JOIN dense_tmp t2\n        ON t.address = t2.address\n        AND t.currency = t2.currency\n        AND t.rn = t2.rn - 1\n)\nSELECT\n    COALESCE(\n        t2_address,\n        t_address\n    ) AS address,\n    COALESCE(\n        t2_balance,\n        0\n    ) AS balance,\n    'liquid' AS balance_type,\n    COALESCE(\n        t2_currency,\n        t_currency\n    ) AS currency,\n    COALESCE(\n        t2_block_id,\n        block_id\n    ) AS block_id,\n    COALESCE(\n        t2_block_timestamp,\n        block_timestamp\n    ) AS block_timestamp,\n    COALESCE(\n        t2_inserted_timestamp,\n        t_inserted_timestamp\n    ) AS _inserted_timestamp,\n    CASE\n        WHEN currency LIKE 'gamm/pool/%' THEN 18\n        ELSE b.decimal\n    END AS DECIMAL\nFROM\n    joined A\n    LEFT OUTER JOIN {{ ref('silver__asset_metadata') }}\n    b\n    ON COALESCE(\n        t2_currency,\n        t_currency\n    ) = b.address\nWHERE\n    COALESCE(\n        t_rn,\n        0\n    ) <> max_t2_rn\n    AND COALESCE(\n        t2_currency,\n        t_currency\n    ) IS NOT NULL\n", "doc_id": "d8377040-b65a-410d-8396-f5294402ec66", "embedding": null, "doc_hash": "ca4c9af9a910bbf179d118e22a536500512dd08fb2787cf0642aa14c47d2b1b1", "extra_info": {"file_path": "models/silver/silver__liquid_balances.sql", "file_name": "silver__liquid_balances.sql"}, "node_info": {"start": 3756, "end": 5362, "_node_type": "1"}, "relationships": {"1": "daf58b90f4c89f44124dd7277c55e01a396b5502", "2": "3ff2aaf5-d872-461e-afe2-298c34020279"}}, "__type__": "1"}, "5753295b-0a37-42ce-ba01-10cae15851e9": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__liquid_balances\n    description: A table containing all the liquid balance changes of wallets on the Osmosis chain. \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - BLOCK_ID\n            - ADDRESS\n            - CURRENCY\n    columns:\n      - name: BLOCK_ID \n        description: \"{{ doc('block_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: ADDRESS\n        description: \"{{ doc('address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: BALANCE \n        description: The amount of the currency the wallet held at the given time\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: DECIMAL \n        description: \"{{ doc('decimal') }}\"\n      - name:", "doc_id": "5753295b-0a37-42ce-ba01-10cae15851e9", "embedding": null, "doc_hash": "8655da07f398819577b648167042337bc7712a85313f0ab432c54b80a5ab84a8", "extra_info": {"file_path": "models/silver/silver__liquid_balances.yml", "file_name": "silver__liquid_balances.yml"}, "node_info": {"start": 0, "end": 1834, "_node_type": "1"}, "relationships": {"1": "1539d3d50a2aff9030d0128aa77713b289b09271", "3": "be59fe67-0f63-4a9e-a947-dc2d392a0a8e"}}, "__type__": "1"}, "be59fe67-0f63-4a9e-a947-dc2d392a0a8e": {"__data__": {"text": "description: \"{{ doc('decimal') }}\"\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('ingested_at') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      ", "doc_id": "be59fe67-0f63-4a9e-a947-dc2d392a0a8e", "embedding": null, "doc_hash": "111c966b97440811ac722da608928ef7192b754064ac1233d59e8fb60ca4bad3", "extra_info": {"file_path": "models/silver/silver__liquid_balances.yml", "file_name": "silver__liquid_balances.yml"}, "node_info": {"start": 1785, "end": 2080, "_node_type": "1"}, "relationships": {"1": "1539d3d50a2aff9030d0128aa77713b289b09271", "2": "5753295b-0a37-42ce-ba01-10cae15851e9"}}, "__type__": "1"}, "bd265fbf-b990-41dd-84ad-8af3b38d6095": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH\n\n{% if is_incremental() %}\nmax_date AS (\n\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n),\n{% endif %}\n\nin_play AS (\n    SELECT\n        DISTINCT tx_ID,\n        msg_group,\n        msg_sub_group\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        msg_type IN(\n            'pool_exited',\n            'pool_joined'\n        ) {# AND tx_id = '46F3F666580428167DEC0DB97CB5144ACB71E5651FEFF05EE1DB9C250CFDD756'\n        AND block_timestamp :: DATE = '2023-03-22' #}\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nmsg_atts AS (\n    SELECT\n        DISTINCT A.tx_id,\n        CASE\n            WHEN attribute_key IN (\n                'tokens_in',\n                'tokens_out',\n                'amount',\n                'sender',\n                'pool_id'\n            ) THEN msg_index\n        END msg_index,\n        A.msg_group,\n        COALESCE(\n            A.msg_sub_group,\n            -1\n        ) AS msg_sub_group,\n        msg_type,\n        attribute_key,\n        attribute_value,\n        CASE\n            WHEN msg_type IN(\n                'pool_exited',\n                'pool_joined'\n            )\n            AND attribute_key <> 'pool_id' THEN 'non lp tokens'\n            WHEN msg_type = 'transfer'\n            AND attribute_key = 'amount'\n            AND attribute_value LIKE '%gamm%pool%'\n            AND attribute_value NOT LIKE '%,%' THEN 'lp tokens'\n    ", "doc_id": "bd265fbf-b990-41dd-84ad-8af3b38d6095", "embedding": null, "doc_hash": "cfef7a22ff0e02a87706e50fcccefd4be3c29a53794ad7560c4a95904659f714", "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions.sql", "file_name": "silver__liquidity_provider_actions.sql"}, "node_info": {"start": 0, "end": 1724, "_node_type": "1"}, "relationships": {"1": "22d16666efecb48f6410118259edaff7d58b9aad", "3": "218c87e9-4b70-430b-8648-907fe3b54551"}}, "__type__": "1"}, "218c87e9-4b70-430b-8648-907fe3b54551": {"__data__": {"text": "NOT LIKE '%,%' THEN 'lp tokens'\n            WHEN attribute_key = 'pool_id' THEN 'pool'\n            WHEN attribute_key = 'acc_seq' THEN 'lper'\n            WHEN attribute_key = 'sender' THEN 'msg sender'\n            WHEN attribute_key = 'action' THEN 'action'\n        END what_is_this,\n        block_timestamp,\n        SUM(\n            CASE\n                WHEN msg_type = 'transfer'\n                AND attribute_key = 'amount'\n                AND attribute_value LIKE '%gamm%pool%'\n                AND attribute_value NOT LIKE '%,%' THEN 1\n                ELSE 0\n            END\n        ) over(\n            PARTITION BY A.tx_id,\n            A.msg_group\n        ) lp_count\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n        JOIN in_play b\n        ON A.tx_id = b.tx_ID\n    WHERE\n        (\n            (\n                msg_type IN (\n                    'pool_exited',\n                    'pool_joined'\n                )\n            )\n            AND (\n                attribute_key IN (\n                    'tokens_in',\n                    'tokens_out',\n                    'pool_id'\n                )\n            )\n            OR attribute_key = 'acc_seq'\n            OR (\n                msg_type = 'transfer'\n                AND attribute_key = 'amount'\n                AND attribute_value LIKE '%gamm%pool%'\n                AND attribute_value NOT LIKE '%,%'\n            )\n            OR (\n                msg_type = 'message'\n                AND attribute_key IN (\n                    'sender',\n                    'action'\n              ", "doc_id": "218c87e9-4b70-430b-8648-907fe3b54551", "embedding": null, "doc_hash": "2edb1546273b5bf58037b769ddf60515636c6fa9cef0a18f972d4d6a666b9aa4", "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions.sql", "file_name": "silver__liquidity_provider_actions.sql"}, "node_info": {"start": 1698, "end": 3251, "_node_type": "1"}, "relationships": {"1": "22d16666efecb48f6410118259edaff7d58b9aad", "2": "bd265fbf-b990-41dd-84ad-8af3b38d6095", "3": "31c7d6b5-2593-4c9c-bdc6-aae4603fb197"}}, "__type__": "1"}, "31c7d6b5-2593-4c9c-bdc6-aae4603fb197": {"__data__": {"text": "  'action'\n                )\n            )\n        ) {# AND A.tx_id = '46F3F666580428167DEC0DB97CB5144ACB71E5651FEFF05EE1DB9C250CFDD756'\n        AND A.block_timestamp :: DATE = '2023-03-22' #}\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\naction AS (\n    SELECT\n        DISTINCT tx_id,\n        attribute_value action\n    FROM\n        msg_atts\n    WHERE\n        what_is_this = 'action' qualify(ROW_NUMBER() over(PARTITION BY tx_id\n    ORDER BY\n        msg_index) = 1)\n),\nlper AS (\n    SELECT\n        DISTINCT tx_id,\n        SPLIT_PART(\n            attribute_value,\n            '/',\n            0\n        ) AS liquidity_provider_address\n    FROM\n        msg_atts\n    WHERE\n        what_is_this = 'lper'\n),\ntokens AS (\n    SELECT\n        tx_id,\n        msg_index,\n        msg_group,\n        msg_sub_group,\n        what_is_this,\n        SPLIT_PART(\n            TRIM(\n                REGEXP_REPLACE(\n                    t.value,\n                    '[^[:digit:]]',\n                    ' '\n                )\n            ),\n            ' ',\n            0\n        ) :: INTEGER AS amount,\n        RIGHT(t.value, LENGTH(t.value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(t.value, '[^[:digit:]]', ' ')), ' ', 0))) :: STRING AS currency,\n        block_timestamp,\n        lp_count\n    FROM\n        msg_atts,\n        LATERAL SPLIT_TO_TABLE (\n            attribute_value,\n            ','\n        ) t\n    WHERE\n        what_is_this IN (\n            'lp tokens',\n            'non lp tokens'\n        ) qualify(ROW_NUMBER()", "doc_id": "31c7d6b5-2593-4c9c-bdc6-aae4603fb197", "embedding": null, "doc_hash": "e3896717f557201d549b0ec9101c36f8448093ccf7b006b32e802a8ba25c210e", "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions.sql", "file_name": "silver__liquidity_provider_actions.sql"}, "node_info": {"start": 3270, "end": 4891, "_node_type": "1"}, "relationships": {"1": "22d16666efecb48f6410118259edaff7d58b9aad", "2": "218c87e9-4b70-430b-8648-907fe3b54551", "3": "a5b72a70-460e-4ebb-926d-572d5af2eab5"}}, "__type__": "1"}, "a5b72a70-460e-4ebb-926d-572d5af2eab5": {"__data__": {"text": "       ) qualify(ROW_NUMBER() over(PARTITION BY tx_id, msg_group, msg_sub_group, currency\n    ORDER BY\n        amount DESC) = 1)\n),\nsndr AS (\n    SELECT\n        tx_id,\n        msg_index,\n        attribute_value\n    FROM\n        msg_atts\n    WHERE\n        attribute_key = 'sender'\n),\ntokens_2 AS (\n    SELECT\n        A.tx_id,\n        A.msg_index,\n        A.msg_group,\n        A.msg_sub_group,\n        A.what_is_this,\n        A.amount,\n        A.currency,\n        A.block_timestamp\n    FROM\n        tokens A\n        LEFT JOIN lper b\n        ON A.tx_id = b.tx_id\n        LEFT JOIN (\n            SELECT\n                DISTINCT tx_id,\n                attribute_value\n            FROM\n                sndr\n        ) C\n        ON A.tx_Id = C.tx_ID\n        AND b.liquidity_provider_address = C.attribute_value -- AND A.msg_index = C.msg_index + 1\n    WHERE\n        what_is_this = 'non lp tokens'\n        OR (\n            what_is_this = 'lp tokens'\n            AND (\n                C.tx_ID IS NOT NULL\n                OR lp_count = 1\n            )\n        )\n),\ndecimals AS (\n    SELECT\n        tx_id,\n        msg_index,\n        msg_group,\n        msg_sub_group,\n        what_is_this,\n        amount,\n        currency,\n        CASE\n            WHEN currency LIKE '%pool%' THEN 18\n            ELSE DECIMAL\n        END AS DECIMAL,\n        block_timestamp\n    FROM\n        tokens_2 t\n        LEFT OUTER JOIN {{ ref('silver__asset_metadata') }}\n        ON currency = address\n),\npools AS (\n    SELECT\n        tx_id,\n        msg_group,\n        msg_sub_group,\n        REPLACE(SPLIT_PART(currency, 'gamm', 2), '/pool/') :: INT pool_id\n    FROM\n        tokens_2\n    WHERE\n       ", "doc_id": "a5b72a70-460e-4ebb-926d-572d5af2eab5", "embedding": null, "doc_hash": "6fe343dee36065aa81f427d4049e2b3c9e131a538ab9f1f50414ac8609987463", "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions.sql", "file_name": "silver__liquidity_provider_actions.sql"}, "node_info": {"start": 4880, "end": 6542, "_node_type": "1"}, "relationships": {"1": "22d16666efecb48f6410118259edaff7d58b9aad", "2": "31c7d6b5-2593-4c9c-bdc6-aae4603fb197", "3": "34a518c6-a9fb-4f68-8a0c-8059d56ff657"}}, "__type__": "1"}, "34a518c6-a9fb-4f68-8a0c-8059d56ff657": {"__data__": {"text": "  tokens_2\n    WHERE\n        what_is_this = 'lp tokens'\n),\ntxn AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        _inserted_timestamp\n    FROM\n        {{ ref('silver__transactions') }}\n),\nact AS (\n    SELECT\n        DISTINCT tx_id,\n        msg_group,\n        msg_sub_group,\n        msg_type AS action\n    FROM\n        msg_atts\n    WHERE\n        attribute_key IN(\n            'tokens_in',\n            'tokens_out'\n        )\n)\nSELECT\n    tx.block_id,\n    tx.block_timestamp,\n    d.tx_id,\n    tx_succeeded,\n    d.msg_index,\n    l.liquidity_provider_address,\n    CASE\n        WHEN act.action = 'pool_joined'\n        AND what_is_this = 'lp tokens' THEN 'lp_tokens_minted'\n        WHEN act.action = 'pool_exited'\n        AND what_is_this = 'lp tokens' THEN 'lp_tokens_burned'\n        WHEN act.action = 'pool_joined'\n        AND what_is_this = 'non lp tokens' THEN 'pool_joined'\n        WHEN act.action = 'pool_exited'\n        AND what_is_this = 'non lp tokens' THEN 'pool_exited'\n    END action,\n    pool_id,\n    amount,\n    currency,\n    DECIMAL,\n    _inserted_timestamp,\n    concat_ws(\n        '-',\n        d.tx_id,\n        d.msg_index,\n        d.currency\n    ) AS _unique_key\nFROM\n    decimals d\n    JOIN act\n    ON d.tx_id = act.tx_id\n    AND d.msg_group = act.msg_group\n    AND d.msg_sub_group = act.msg_sub_group\n    JOIN pools p\n    ON d.tx_id = p.tx_id\n    AND d.msg_group = p.msg_group\n    AND d.msg_sub_group = p.msg_sub_group\n    JOIN lper l\n    ON d.tx_id = l.tx_id\n    JOIN txn tx\n    ON d.tx_id = tx.tx_id\n    AND d.block_timestamp = tx.block_timestamp\n    JOIN action ax\n    ON d.tx_id = ax.tx_id\nWHERE\n    ax.action NOT IN (\n        'unpool_whitelisted_pool',\n        '/osmosis.superfluid.MsgUnPoolWhitelistedPool'\n    )\n", "doc_id": "34a518c6-a9fb-4f68-8a0c-8059d56ff657", "embedding": null, "doc_hash": "588a06647ac6cfeb4f2a018235f660379f92b64fa8488334a06c53871a49692b", "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions.sql", "file_name": "silver__liquidity_provider_actions.sql"}, "node_info": {"start": 6535, "end": 8319, "_node_type": "1"}, "relationships": {"1": "22d16666efecb48f6410118259edaff7d58b9aad", "2": "a5b72a70-460e-4ebb-926d-572d5af2eab5"}}, "__type__": "1"}, "3fd1f363-b3d1-4e2c-8fb2-551eacf992cf": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__liquidity_provider_actions\n    description: Includes all actions entering and exiting liquidity pools  \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_INDEX\n            - CURRENCY\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: LIQUIDITY_PROVIDER_ADDRESS\n        description: \"{{ doc('liquidity_provider_address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: ACTION\n        description: \"{{ doc('action') }}\"\n        tests: \n          - not_null\n   ", "doc_id": "3fd1f363-b3d1-4e2c-8fb2-551eacf992cf", "embedding": null, "doc_hash": "83c4ba1a1832bd737ba480c9a4a251e7a767b09a3eaae2f7ecadb32ae3ddc51d", "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions.yml", "file_name": "silver__liquidity_provider_actions.yml"}, "node_info": {"start": 0, "end": 1777, "_node_type": "1"}, "relationships": {"1": "6cf8d33f445f43c1bb5fb460453326c57b0f10f4", "3": "1608fdf7-23fd-4cbf-8564-ee2c4b037627"}}, "__type__": "1"}, "1608fdf7-23fd-4cbf-8564-ee2c4b037627": {"__data__": {"text": "tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: POOL_ID\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ", "doc_id": "1608fdf7-23fd-4cbf-8564-ee2c4b037627", "embedding": null, "doc_hash": "dd9f3a8ae00db7d60522d74baed3252b0908ead80ba9883c8f853b86f5da9562", "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions.yml", "file_name": "silver__liquidity_provider_actions.yml"}, "node_info": {"start": 1745, "end": 3015, "_node_type": "1"}, "relationships": {"1": "6cf8d33f445f43c1bb5fb460453326c57b0f10f4", "2": "3fd1f363-b3d1-4e2c-8fb2-551eacf992cf"}}, "__type__": "1"}, "4d0a9b19-7f20-40a3-91e7-43941928c83b": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH\n\n{% if is_incremental() %}\nmax_date AS (\n\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n),\n{% endif %}\n\nin_play AS (\n    SELECT\n        DISTINCT tx_id,\n        msg_group,\n        msg_sub_group\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        msg_type = 'message'\n        AND attribute_key = 'action'\n        AND attribute_value IN (\n            'unpool_whitelisted_pool',\n            '/osmosis.superfluid.MsgUnPoolWhitelistedPool'\n        ) {# AND tx_id = 'BA95C22E651C479B5699A3676504F820464E12F641C34BB67C436F18271A0262'\n        AND block_timestamp :: DATE = '2022-05-23' #}\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nmsg_atts_raw AS (\n    SELECT\n        DISTINCT A.tx_id,\n        CASE\n            WHEN attribute_key IN (\n                'tokens_in',\n                'tokens_out',\n                'amount',\n                'sender'\n            ) THEN msg_index\n        END msg_index,\n        A.msg_group,\n        COALESCE(\n            A.msg_sub_group,\n            -1\n        ) AS msg_sub_group,\n        msg_type,\n        attribute_key,\n        attribute_value,\n        CASE\n            WHEN attribute_key = 'module' THEN 'module'\n            WHEN msg_type IN(\n                'pool_exited',\n                'pool_joined'\n            )\n            AND attribute_key <> 'pool_id' THEN 'non lp tokens'\n            WHEN msg_type = 'burn' THEN 'lp tokens'\n         ", "doc_id": "4d0a9b19-7f20-40a3-91e7-43941928c83b", "embedding": null, "doc_hash": "ad4d248705f5499a97024cc4bd88cf8549a760d68dc89f4143837d7fdb00e56b", "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions_unpool.sql", "file_name": "silver__liquidity_provider_actions_unpool.sql"}, "node_info": {"start": 0, "end": 1742, "_node_type": "1"}, "relationships": {"1": "a49ff19056394cccc6edd6468a843577c975df85", "3": "ed74b761-a34b-445a-b9a1-efb8a9f62722"}}, "__type__": "1"}, "ed74b761-a34b-445a-b9a1-efb8a9f62722": {"__data__": {"text": "THEN 'lp tokens'\n            WHEN attribute_key = 'pool_id' THEN 'pool'\n            WHEN attribute_key = 'acc_seq' THEN 'lper'\n            WHEN attribute_key = 'sender' THEN 'msg sender'\n        END what_is_this,\n        block_timestamp,\n        CASE\n            WHEN what_is_this = 'lp tokens' THEN TRUE\n            ELSE FALSE\n        END AS is_module\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n        JOIN in_play b\n        ON A.tx_id = b.tx_ID\n    WHERE\n        (\n            (\n                msg_type IN (\n                    'pool_exited',\n                    'pool_joined',\n                    'burn'\n                )\n            )\n            AND (\n                attribute_key IN (\n                    'tokens_in',\n                    'tokens_out',\n                    'pool_id'\n                )\n            )\n            OR attribute_key = 'acc_seq'\n            OR (\n                msg_type = 'burn'\n                AND attribute_key = 'amount'\n            )\n            OR (\n                msg_type = 'message'\n                AND attribute_key = 'sender'\n            )\n        ) {# AND A.tx_id = 'BA95C22E651C479B5699A3676504F820464E12F641C34BB67C436F18271A0262'\n        AND A.block_timestamp :: DATE = '2022-05-23' #}\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nmsg_atts AS (\n    SELECT\n        tx_id,\n        msg_index,\n        NULLIF(\n            (conditional_true_event(is_module) over (PARTITION BY tx_id\n           ", "doc_id": "ed74b761-a34b-445a-b9a1-efb8a9f62722", "embedding": null, "doc_hash": "083faec436a0589e9ec266b79c38875c527c4637031940354941ade5522af748", "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions_unpool.sql", "file_name": "silver__liquidity_provider_actions_unpool.sql"}, "node_info": {"start": 1728, "end": 3300, "_node_type": "1"}, "relationships": {"1": "a49ff19056394cccc6edd6468a843577c975df85", "2": "4d0a9b19-7f20-40a3-91e7-43941928c83b", "3": "cc025ace-cb40-4a77-81a8-82751076a6cd"}}, "__type__": "1"}, "cc025ace-cb40-4a77-81a8-82751076a6cd": {"__data__": {"text": "over (PARTITION BY tx_id\n            ORDER BY\n                msg_index) -1),\n                -1\n        ) AS msg_group,\n        msg_sub_group,\n        what_is_this,\n        msg_type,\n        attribute_key,\n        attribute_value,\n        block_timestamp,\n        is_module\n    FROM\n        msg_atts_raw\n),\nlper AS (\n    SELECT\n        DISTINCT tx_id,\n        SPLIT_PART(\n            attribute_value,\n            '/',\n            0\n        ) AS liquidity_provider_address\n    FROM\n        msg_atts\n    WHERE\n        what_is_this = 'lper'\n),\ntokens AS (\n    SELECT\n        tx_id,\n        msg_index,\n        msg_group,\n        msg_sub_group,\n        what_is_this,\n        SPLIT_PART(\n            TRIM(\n                REGEXP_REPLACE(\n                    t.value,\n                    '[^[:digit:]]',\n                    ' '\n                )\n            ),\n            ' ',\n            0\n        ) :: INTEGER AS amount,\n        RIGHT(t.value, LENGTH(t.value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(t.value, '[^[:digit:]]', ' ')), ' ', 0))) :: STRING AS currency,\n        block_timestamp\n    FROM\n        msg_atts,\n        LATERAL SPLIT_TO_TABLE (\n            attribute_value,\n            ','\n        ) t\n    WHERE\n        what_is_this IN (\n            'lp tokens',\n            'non lp tokens'\n        ) qualify(ROW_NUMBER() over(PARTITION BY tx_id, msg_group, msg_sub_group, currency\n    ORDER BY\n        amount DESC) = 1)\n),\nsndr AS (\n    SELECT\n        tx_id,\n        msg_index,\n        attribute_value\n    FROM\n        msg_atts\n    WHERE\n        attribute_key = 'sender'\n),\ntokens_2 AS (\n    SELECT\n   ", "doc_id": "cc025ace-cb40-4a77-81a8-82751076a6cd", "embedding": null, "doc_hash": "9fc374bc5ab527174c0371e22fb81ecf20b27077434050c46374fcac5bcb5119", "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions_unpool.sql", "file_name": "silver__liquidity_provider_actions_unpool.sql"}, "node_info": {"start": 3294, "end": 4898, "_node_type": "1"}, "relationships": {"1": "a49ff19056394cccc6edd6468a843577c975df85", "2": "ed74b761-a34b-445a-b9a1-efb8a9f62722", "3": "d3f8dbff-163a-4bb6-9eae-4859880ec8e9"}}, "__type__": "1"}, "d3f8dbff-163a-4bb6-9eae-4859880ec8e9": {"__data__": {"text": "AS (\n    SELECT\n        A.tx_id,\n        A.msg_index,\n        A.msg_group,\n        A.msg_sub_group,\n        A.what_is_this,\n        A.amount,\n        A.currency,\n        A.block_timestamp\n    FROM\n        tokens A\n        LEFT JOIN lper b\n        ON A.tx_id = b.tx_id\n        LEFT JOIN (\n            SELECT\n                DISTINCT tx_id,\n                attribute_value\n            FROM\n                sndr\n        ) C\n        ON A.tx_Id = C.tx_ID\n        AND b.liquidity_provider_address = C.attribute_value -- AND A.msg_index = C.msg_index + 1\n    WHERE\n        what_is_this = 'non lp tokens'\n        OR (\n            what_is_this = 'lp tokens'\n            AND (\n                C.tx_ID IS NOT NULL\n            )\n        )\n),\ndecimals AS (\n    SELECT\n        tx_id,\n        msg_index,\n        msg_group,\n        msg_sub_group,\n        what_is_this,\n        amount,\n        currency,\n        CASE\n            WHEN currency LIKE '%pool%' THEN 18\n            ELSE DECIMAL\n        END AS DECIMAL,\n        block_timestamp\n    FROM\n        tokens_2 t\n        LEFT OUTER JOIN {{ ref('silver__asset_metadata') }}\n        ON currency = address\n),\npools AS (\n    SELECT\n        tx_id,\n        msg_group,\n        msg_sub_group,\n        REPLACE(SPLIT_PART(currency, 'gamm', 2), '/pool/') :: INT pool_id\n    FROM\n        tokens_2\n    WHERE\n        what_is_this = 'lp tokens'\n),\ntxn AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        _inserted_timestamp\n    FROM\n        {{ ref('silver__transactions') }}\n\n{% if is_incremental() %}\nWHERE\n    _inserted_timestamp >= (\n        SELECT\n            MAX(\n     ", "doc_id": "d3f8dbff-163a-4bb6-9eae-4859880ec8e9", "embedding": null, "doc_hash": "d6e91eb7d1216b26eb72916a7fa466ae5e7fc4bd45362922d28f1208c0d0b641", "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions_unpool.sql", "file_name": "silver__liquidity_provider_actions_unpool.sql"}, "node_info": {"start": 4910, "end": 6557, "_node_type": "1"}, "relationships": {"1": "a49ff19056394cccc6edd6468a843577c975df85", "2": "cc025ace-cb40-4a77-81a8-82751076a6cd", "3": "05ca7f5a-9547-4c3b-ba02-bf5462d8d2e8"}}, "__type__": "1"}, "05ca7f5a-9547-4c3b-ba02-bf5462d8d2e8": {"__data__": {"text": "           MAX(\n                _inserted_timestamp\n            )\n        FROM\n            max_date\n    )\n{% endif %}\n),\nact AS (\n    SELECT\n        tx_id,\n        msg_group,\n        msg_sub_group,\n        msg_type AS action\n    FROM\n        msg_atts\n    WHERE\n        attribute_key IN(\n            'tokens_in',\n            'tokens_out'\n        )\n)\nSELECT\n    tx.block_id,\n    tx.block_timestamp,\n    d.tx_id,\n    tx_succeeded,\n    d.msg_index,\n    l.liquidity_provider_address,\n    CASE\n        WHEN act.action = 'pool_joined'\n        AND what_is_this = 'lp tokens' THEN 'lp_tokens_minted'\n        WHEN act.action = 'pool_exited'\n        AND what_is_this = 'lp tokens' THEN 'lp_tokens_burned'\n        WHEN act.action = 'pool_joined'\n        AND what_is_this = 'non lp tokens' THEN 'pool_joined'\n        WHEN act.action = 'pool_exited'\n        AND what_is_this = 'non lp tokens' THEN 'pool_exited'\n    END action,\n    pool_id,\n    amount,\n    currency,\n    DECIMAL,\n    _inserted_timestamp,\n    concat_ws(\n        '-',\n        d.tx_id,\n        d.msg_index,\n        d.currency\n    ) AS _unique_key\nFROM\n    decimals d\n    JOIN act\n    ON d.tx_id = act.tx_id\n    AND d.msg_group = act.msg_group\n    AND d.msg_sub_group = act.msg_sub_group\n    JOIN pools p\n    ON d.tx_id = p.tx_id\n    AND d.msg_group = p.msg_group\n    AND d.msg_sub_group = p.msg_sub_group\n    JOIN lper l\n    ON d.tx_id = l.tx_id\n    JOIN txn tx\n    ON d.tx_id = tx.tx_id\n    AND d.block_timestamp = tx.block_timestamp\n", "doc_id": "05ca7f5a-9547-4c3b-ba02-bf5462d8d2e8", "embedding": null, "doc_hash": "3e6cfac07edee4dd647e36abdba5cccfbf4028a35699a84885f35679c2b05887", "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions_unpool.sql", "file_name": "silver__liquidity_provider_actions_unpool.sql"}, "node_info": {"start": 6547, "end": 8032, "_node_type": "1"}, "relationships": {"1": "a49ff19056394cccc6edd6468a843577c975df85", "2": "d3f8dbff-163a-4bb6-9eae-4859880ec8e9"}}, "__type__": "1"}, "a4a66cef-2f9c-4e8f-b9ab-04657c8c8eb5": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__liquidity_provider_actions_unpool\n    description: Includes all actions entering and exiting liquidity pools  \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_INDEX\n            - CURRENCY\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: LIQUIDITY_PROVIDER_ADDRESS\n        description: \"{{ doc('liquidity_provider_address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: ACTION\n        description: \"{{ doc('action') }}\"\n        tests: \n        ", "doc_id": "a4a66cef-2f9c-4e8f-b9ab-04657c8c8eb5", "embedding": null, "doc_hash": "5538818ea5cf92e8fc31bfa9bdf93a5801fdc8ac63765efdc3844ace8c9417f9", "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions_unpool.yml", "file_name": "silver__liquidity_provider_actions_unpool.yml"}, "node_info": {"start": 0, "end": 1768, "_node_type": "1"}, "relationships": {"1": "3672e45951c269b2bd6dd95807bfe3bce85bba28", "3": "710d7a5d-f84e-4081-adea-d805ff64780e"}}, "__type__": "1"}, "710d7a5d-f84e-4081-adea-d805ff64780e": {"__data__": {"text": "       tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: POOL_ID\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ", "doc_id": "710d7a5d-f84e-4081-adea-d805ff64780e", "embedding": null, "doc_hash": "cb2ab50c9955b4f8eb7a404c56eb6d7a5c1ec0a44cedb8df2818f5c9f9fe58bc", "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions_unpool.yml", "file_name": "silver__liquidity_provider_actions_unpool.yml"}, "node_info": {"start": 1745, "end": 3022, "_node_type": "1"}, "relationships": {"1": "3672e45951c269b2bd6dd95807bfe3bce85bba28", "2": "a4a66cef-2f9c-4e8f-b9ab-04657c8c8eb5"}}, "__type__": "1"}, "edc1d4bf-117f-4980-a605-852ee607be0f": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE','_inserted_timestamp::DATE']\n) }}\n\nWITH\n\n{% if is_incremental() %}\nmax_date AS (\n\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n),\n{% endif %}\n\nbase_msg_atts AS (\n    SELECT\n        DISTINCT A.block_id,\n        A.block_timestamp,\n        A.tx_id,\n        TRUE AS tx_succeeded,\n        A.msg_group,\n        CASE\n            WHEN A.msg_type = 'message' THEN A.msg_type\n            ELSE 'not'\n        END msg_type,\n        A.attribute_key,\n        A.attribute_value,\n        COALESCE(\n            b.lock_id :: INT,\n            C.lock_id :: INT\n        ) AS lock_id,\n        A._inserted_timestamp\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n        LEFT JOIN {{ ref('silver__locked_liquidity_transactions') }}\n        b\n        ON A.tx_id = b.tx_id\n        AND A.msg_group = b.msg_group\n        AND (\n            b.id_count = 1\n            OR (\n                b.id_count > 1\n                AND A.msg_index = b.msg_index\n            )\n        )\n        LEFT JOIN {{ ref('silver__superfluid_actions') }} C\n        ON A.tx_id = C.tx_id\n        AND A.msg_group = C.msg_group\n    WHERE\n        COALESCE(\n            b.tx_id,\n            C.tx_id\n        ) IS NOT NULL\n        AND (\n            (\n                A.msg_type = 'message'\n                AND A.attribute_key = 'action'\n            )\n            OR A.msg_type IN (\n                'add_tokens_to_lock',\n                'lock_tokens',\n                'superfluid_delegate',\n               ", "doc_id": "edc1d4bf-117f-4980-a605-852ee607be0f", "embedding": null, "doc_hash": "6799e4090a34fcd418cf09db7117df24b87b1f853bf162e2f76e5fc400c280b7", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions.sql", "file_name": "silver__locked_liquidity_actions.sql"}, "node_info": {"start": 0, "end": 1676, "_node_type": "1"}, "relationships": {"1": "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe", "3": "da85ce69-19b1-4a70-9afe-04139870362b"}}, "__type__": "1"}, "da85ce69-19b1-4a70-9afe-04139870362b": {"__data__": {"text": "               'superfluid_increase_delegation',\n                'superfluid_unbond_lock',\n                'superfluid_undelegate',\n                'unbond',\n                'unlock',\n                'unlock_tokens',\n                'unpool_pool_id'\n            )\n            AND attribute_key IN (\n                'amount',\n                'owner',\n                'burner',\n                'duration',\n                'unlock_time',\n                'sender',\n                'denom',\n                'new_lock_ids'\n            )\n        ) -- weird transactions that break THE logic\n        AND A.tx_id NOT IN (\n            '523CBB1403A90A2A45A90ADFFC17F72100B99C286BD66DEDF22DD7F8A825127D',\n            'B26B72516A670B4FFD31F4F7853E65F7463F7A46BDE61800DC17A41F55AB87A3',\n            '34A6CEF2A87D6DB15DA1D7238D3A3BEABF8B4A1B460082B3C1F6C65DE5329CAC',\n            '504A0BD295DA63E28D55BC7C46575C6C49D9C2612D0AF118BA2A33A089A25A6D',\n            'B312127A7914D26444DA2C1104122F9CB7D3B50940F079544775C7EA4EE4981D',\n            '413991DF25FF3A217BA42D84D811CABC4A580F12FA9A8BC204E45F22529185CB'\n        )\n\n{% if is_incremental() %}\nAND A._inserted_timestamp >= (\n    SELECT\n        _inserted_timestamp\n    FROM\n        max_date\n)\n{% endif %}\n),\ntx_msg_flat AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        msg_group,\n        _inserted_timestamp,\n        LISTAGG(\n            DISTINCT msg_type,\n            '-'\n        ) within GROUP (\n            ORDER BY\n             ", "doc_id": "da85ce69-19b1-4a70-9afe-04139870362b", "embedding": null, "doc_hash": "d988aed8c7424b029bb8d9a78281ffacaad982577c50ac63eb0691b2c4ea12f4", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions.sql", "file_name": "silver__locked_liquidity_actions.sql"}, "node_info": {"start": 1677, "end": 3198, "_node_type": "1"}, "relationships": {"1": "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe", "2": "edc1d4bf-117f-4980-a605-852ee607be0f", "3": "aa1d6d87-f87c-4397-89c6-1b292b4dfbcd"}}, "__type__": "1"}, "aa1d6d87-f87c-4397-89c6-1b292b4dfbcd": {"__data__": {"text": "   ORDER BY\n                msg_type\n        ) AS msg_type,\n        lock_id,\n        OBJECT_AGG(\n            attribute_key :: STRING,\n            attribute_value :: variant\n        ) AS j\n    FROM\n        base_msg_atts\n    WHERE\n        msg_type <> 'message'\n    GROUP BY\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        msg_group,\n        lock_id,\n        _inserted_timestamp\n),\nmsg_based AS (\n    SELECT\n        A.block_id,\n        A.block_timestamp,\n        A.tx_id,\n        A.tx_succeeded,\n        A.msg_group,\n        A.msg_type,\n        A.lock_id,\n        b.attribute_value AS action,\n        NULL AS hybrid_action,\n        COALESCE(\n            j :\"amount\",\n            j :\"denom\"\n        ) :: STRING AS amount,\n        COALESCE(\n            j :\"owner\",\n            j :\"burner\",\n            j :\"sender\"\n        ) :: STRING AS locker,\n        j :\"duration\" :: STRING AS DURATION,\n        NULLIF(\n            j :\"unlock_time\" :: STRING,\n            '0001-01-01 00:00:00 +0000 UTC'\n        ) AS unlock_time,\n        j :\"new_lock_ids\" :: STRING AS new_lock_ids,\n        A._INSERTED_TIMESTAMP\n    FROM\n        tx_msg_flat A\n        LEFT JOIN base_msg_atts b\n        ON A.tx_id = b.tx_id\n        AND A.msg_group = b.msg_group\n        AND COALESCE(\n            A.lock_id,\n            -1\n        ) = COALESCE(\n            b.lock_id,\n            -1\n        )\n        AND b.msg_type = 'message'\n),\ncombo_with_super_undel AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        msg_group,\n        msg_type,\n        lock_id,\n       ", "doc_id": "aa1d6d87-f87c-4397-89c6-1b292b4dfbcd", "embedding": null, "doc_hash": "131c043c096ad68935d579612e819b63d061de010d56fef1e2949ba1cffea064", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions.sql", "file_name": "silver__locked_liquidity_actions.sql"}, "node_info": {"start": 3191, "end": 4805, "_node_type": "1"}, "relationships": {"1": "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe", "2": "da85ce69-19b1-4a70-9afe-04139870362b", "3": "308a86e4-4311-4283-964f-0f56f1b59aa8"}}, "__type__": "1"}, "308a86e4-4311-4283-964f-0f56f1b59aa8": {"__data__": {"text": "       lock_id,\n        action,\n        hybrid_action,\n        amount :: STRING AS amount,\n        locker,\n        DURATION,\n        unlock_time,\n        new_lock_ids,\n        _INSERTED_TIMESTAMP\n    FROM\n        msg_based\n    UNION ALL\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        msg_group,\n        msg_type,\n        lock_id,\n        action,\n        hybrid_action,\n        amount :: STRING AS amount,\n        locker,\n        DURATION,\n        unlock_time,\n        new_lock_ids,\n        _INSERTED_TIMESTAMP\n    FROM\n        {{ ref('silver__locked_liquidity_actions_begin_unlock') }}\n    UNION ALL\n    SELECT\n        A.block_id,\n        A.block_timestamp,\n        A.tx_id,\n        A.tx_succeeded,\n        A.msg_group,\n        A.msg_type,\n        A.lock_id,\n        'unlock' AS action,\n        'unlock' AS hybrid_action,\n        NULL :: STRING AS amount,\n        delegator_address AS locker,\n        NULL :: STRING AS DURATION,\n        NULL :: STRING AS unlock_time,\n        NULL :: STRING AS new_lock_ids,\n        A._INSERTED_TIMESTAMP\n    FROM\n        {{ ref('silver__superfluid_actions') }} A\n        LEFT JOIN (\n            SELECT\n                DISTINCT tx_id,\n                lock_id\n            FROM\n                {{ ref('silver__locked_liquidity_actions_begin_unlock') }}\n        ) b\n        ON A.tx_id = b.tx_id\n        AND A.lock_id = b.lock_id\n    WHERE\n        msg_type = '/osmosis.superfluid.MsgSuperfluidUndelegate'\n        AND b.tx_id IS NULL\n),\ntx_body AS (\n    SELECT\n        tx_id,\n        tx_succeeded,\n        msg_type,\n        msg_group,\n        delegator_address,\n        amount,\n        validator_address,\n        lock_id,\n       ", "doc_id": "308a86e4-4311-4283-964f-0f56f1b59aa8", "embedding": null, "doc_hash": "56732fc4f4acd406245eccf89177770e92c2e766f591ac4301c5475ab2650630", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions.sql", "file_name": "silver__locked_liquidity_actions.sql"}, "node_info": {"start": 4805, "end": 6514, "_node_type": "1"}, "relationships": {"1": "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe", "2": "aa1d6d87-f87c-4397-89c6-1b292b4dfbcd", "3": "316d6b4f-c66d-480d-a138-d674c12cd5bf"}}, "__type__": "1"}, "316d6b4f-c66d-480d-a138-d674c12cd5bf": {"__data__": {"text": "       lock_id,\n        pool_id\n    FROM\n        {{ ref('silver__superfluid_actions') }} A\n\n{% if is_incremental() %}\nWHERE\n    _inserted_timestamp >= (\n        SELECT\n            _inserted_timestamp\n        FROM\n            max_date\n    )\n{% endif %}\n),\nall_super_pools AS (\n    SELECT\n        lock_id,\n        MIN(block_id) block_id\n    FROM\n        {{ ref('silver__superfluid_actions') }}\n    GROUP BY\n        lock_id\n),\nfin AS (\n    SELECT\n        A.block_id,\n        A.block_timestamp,\n        A.tx_id,\n        A.tx_succeeded,\n        A.msg_group,\n        COALESCE(NULLIF(b.msg_type, 'not'), A.msg_type) msg_type,\n        COALESCE(\n            A.action,\n            A.msg_type\n        ) AS msg_action,\n        A.hybrid_action AS msg_action_description,\n        A.locker AS locker_address,\n        A.lock_id,\n        CASE\n            WHEN A.amount LIKE 'gamm%' THEN NULL\n            WHEN A.amount LIKE '%uosmo' THEN REPLACE(\n                A.amount,\n                'uosmo'\n            )\n            ELSE SPLIT_PART(\n                TRIM(\n                    REGEXP_REPLACE(\n                        A.amount,\n                        '[^[:digit:]]',\n                        ' '\n                    )\n                ),\n                ' ',\n                0\n            )\n        END :: INT AS amount,\n        CASE\n            WHEN A.amount LIKE 'gamm%' THEN A.amount\n            WHEN A.amount LIKE '%uosmo' THEN 'uosmo'\n            ELSE RIGHT(A.amount, LENGTH(A.amount) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(A.amount, '[^[:digit:]]', ' ')), ' ', 0)))\n        END AS currency,\n  ", "doc_id": "316d6b4f-c66d-480d-a138-d674c12cd5bf", "embedding": null, "doc_hash": "233da2c4b72a85a2ab6934300e6d4a94196a8e038e30a1beb48a34d020efecda", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions.sql", "file_name": "silver__locked_liquidity_actions.sql"}, "node_info": {"start": 6515, "end": 8100, "_node_type": "1"}, "relationships": {"1": "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe", "2": "308a86e4-4311-4283-964f-0f56f1b59aa8", "3": "54e3b84c-4b34-471d-ba03-83b81cffcdff"}}, "__type__": "1"}, "54e3b84c-4b34-471d-ba03-83b81cffcdff": {"__data__": {"text": "' ', 0)))\n        END AS currency,\n        CASE\n            WHEN A.amount LIKE '%uosmo' THEN 6\n            ELSE 18\n        END AS DECIMAL,\n        COALESCE(\n            b.pool_id,\n            CASE\n                WHEN A.amount LIKE '%pool%' THEN RIGHT(A.amount, len(A.amount) - POSITION('pool', A.amount) -4)\n            END :: INT\n        ) AS pool_id,\n        A.duration AS lock_duration,\n        A.unlock_time AS unlock_time,\n        CASE\n            WHEN (\n                b.tx_id IS NOT NULL\n                OR C.lock_id IS NOT NULL\n            )\n            AND A.block_id >= C.block_id THEN TRUE\n            WHEN COALESCE(\n                A.action,\n                A.msg_type\n            ) ILIKE '%superfluid%' THEN TRUE\n            ELSE FALSE\n        END is_superfluid,\n        A.new_lock_ids AS unpool_new_lock_ids,\n        concat_ws(\n            '-',\n            A.tx_id,\n            A.msg_group,\n            COALESCE(\n                A.lock_id,\n                -1\n            ),\n            A.locker\n        ) AS _unique_key,\n        A._INSERTED_TIMESTAMP\n    FROM\n        combo_with_super_undel A\n        LEFT JOIN tx_body b\n        ON A.tx_id = b.tx_id\n        AND A.msg_group = b.msg_group\n        LEFT JOIN all_super_pools C\n        ON A.lock_id = C.lock_id\n)\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    msg_group,\n    msg_type,\n    msg_action,\n    CASE\n        WHEN msg_action_description IS NOT NULL THEN msg_action_description\n        WHEN msg_action = '/osmosis.lockup.MsgExtendLockup' THEN 'extend lockup'\n        WHEN msg_type = '/osmosis.superfluid.MsgUnPoolWhitelistedPool'\n        OR msg_action =", "doc_id": "54e3b84c-4b34-471d-ba03-83b81cffcdff", "embedding": null, "doc_hash": "8931af407b9a3697957a3a1a3cf30c9fe5da299f2e77674c4df8fc95ec2c78ac", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions.sql", "file_name": "silver__locked_liquidity_actions.sql"}, "node_info": {"start": 8087, "end": 9738, "_node_type": "1"}, "relationships": {"1": "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe", "2": "316d6b4f-c66d-480d-a138-d674c12cd5bf", "3": "26f17a9c-9f78-4121-9c3e-8b678881e2d1"}}, "__type__": "1"}, "26f17a9c-9f78-4121-9c3e-8b678881e2d1": {"__data__": {"text": "       OR msg_action = 'unpool_whitelisted_pool' THEN 'unpool'\n        WHEN lock_duration IS NULL\n        AND unlock_time IS NULL THEN 'add to position'\n        WHEN lock_duration IS NOT NULL\n        AND unlock_time IS NULL THEN 'initial lock'\n        WHEN msg_action = 'unlock_period_lock' THEN 'unlock-undelegate'\n    END AS msg_action_description,\n    locker_address,\n    lock_id,\n    amount,\n    currency,\n    DECIMAL,\n    pool_id,\n    lock_duration,\n    unlock_time,\n    is_superfluid,\n    unpool_new_lock_ids,\n    _unique_key,\n    _INSERTED_TIMESTAMP\nFROM\n    fin\n", "doc_id": "26f17a9c-9f78-4121-9c3e-8b678881e2d1", "embedding": null, "doc_hash": "4318b83dade4b9444f2bd50d06e2fb749b753b5b112b29996648907e2f84bbd5", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions.sql", "file_name": "silver__locked_liquidity_actions.sql"}, "node_info": {"start": 9739, "end": 10309, "_node_type": "1"}, "relationships": {"1": "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe", "2": "54e3b84c-4b34-471d-ba03-83b81cffcdff"}}, "__type__": "1"}, "1eb09a0d-9a2f-47f2-a9d5-302cede099fe": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__locked_liquidity_actions\n    description: Records of all LP token locking transactions that have occurred on Osmosis, dating back to the genesis block. These actions include lock, unlock, unpool, and all superfluid actions.\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_GROUP\n            - LOCK_ID\n            - LOCKER_ADDRESS\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 2\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: MSG_TYPE\n   ", "doc_id": "1eb09a0d-9a2f-47f2-a9d5-302cede099fe", "embedding": null, "doc_hash": "b4fceec8b13f8ca1c930696dccaf6c037078d26a446e29adaaf5f57e012df344", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions.yml", "file_name": "silver__locked_liquidity_actions.yml"}, "node_info": {"start": 0, "end": 1825, "_node_type": "1"}, "relationships": {"1": "6999ddb20d8eb26ee5e7d97400ca8087881db3aa", "3": "f3172549-7bad-401b-83ff-0f05ca606fdd"}}, "__type__": "1"}, "f3172549-7bad-401b-83ff-0f05ca606fdd": {"__data__": {"text": "FLOAT\n      - name: MSG_TYPE\n        description: \"{{ doc('msg_type') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: MSG_ACTION\n        description: \"{{ doc('action') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: MSG_ACTION_DESCRIPTION\n        description: \"{{ doc('msg_action_description') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: LOCKER_ADDRESS\n        description: \"{{ doc('locker_address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: LOCK_ID\n        description: \"{{ doc('lock_id') }}\"\n        tests:\n          - not_null:\n              where: MSG_ACTION_DESCRIPTION <> 'unpool'\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n               ", "doc_id": "f3172549-7bad-401b-83ff-0f05ca606fdd", "embedding": null, "doc_hash": "0a629ce3d9e470a31a6cddb618f1fdf5ae454b3f73b838d4b28937a306bc364a", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions.yml", "file_name": "silver__locked_liquidity_actions.yml"}, "node_info": {"start": 1805, "end": 3523, "_node_type": "1"}, "relationships": {"1": "6999ddb20d8eb26ee5e7d97400ca8087881db3aa", "2": "1eb09a0d-9a2f-47f2-a9d5-302cede099fe", "3": "e2a69a0d-4ad8-43da-b83c-6222b2ce48c9"}}, "__type__": "1"}, "e2a69a0d-4ad8-43da-b83c-6222b2ce48c9": {"__data__": {"text": " - NUMBER\n                - FLOAT\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: POOL_ID\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: LOCK_DURATION\n        description: \"{{ doc('lock_duration') }}\" \n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR   \n      - name: UNLOCK_TIME\n        description: \"{{ doc('unlock_time') }}\"  \n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR  \n      - name: IS_SUPERFLUID\n        description: \"{{ doc('is_superfluid') }}\"  \n        tests: \n          - not_null\n      - name: UNPOOL_NEW_LOCK_IDS\n        description: \"{{ doc('unpool_new_lock_ids') }}\" \n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR \n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "e2a69a0d-4ad8-43da-b83c-6222b2ce48c9", "embedding": null, "doc_hash": "55a1f32a47251fdbd7925f92c06bfb79a050ecfbc49100fc00287bfc1739bfa9", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions.yml", "file_name": "silver__locked_liquidity_actions.yml"}, "node_info": {"start": 3519, "end": 5158, "_node_type": "1"}, "relationships": {"1": "6999ddb20d8eb26ee5e7d97400ca8087881db3aa", "2": "f3172549-7bad-401b-83ff-0f05ca606fdd"}}, "__type__": "1"}, "54e3bbb3-a2f7-4728-b483-e2396ac2d8da": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE','_inserted_timestamp::DATE']\n) }}\n\nWITH\n\n{% if is_incremental() %}\nmax_date AS (\n\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n),\n{% endif %}\n\nbase_msg_atts AS (\n    SELECT\n        DISTINCT A.block_id,\n        A.block_timestamp,\n        A.tx_id,\n        TRUE AS tx_succeeded,\n        A.msg_group,\n        CASE\n            WHEN A.msg_type = 'begin_unlock' THEN A.msg_index\n        END AS msg_index,\n        A.msg_type,\n        A.attribute_key,\n        A.attribute_value,\n        NULL AS lock_id,\n        A._inserted_timestamp\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n        JOIN (\n            SELECT\n                DISTINCT tx_id,\n                msg_group\n            FROM\n                {{ ref('silver__locked_liquidity_transactions') }}\n            UNION\n            SELECT\n                DISTINCT tx_id,\n                msg_group\n            FROM\n                {{ ref('silver__superfluid_actions') }}\n        ) b\n        ON A.tx_id = b.tx_id\n        AND A.msg_group = b.msg_group {# AND b.tx_grp_rn > 1 #}\n    WHERE\n        (\n            (\n                A.msg_type = 'message'\n                AND A.attribute_key = 'action'\n            )\n            OR A.msg_type IN (\n                'begin_unlock',\n                'begin_unlock_all',\n                'unbond',\n                'unlock',\n                'unlock_tokens'\n            )\n            AND attribute_key IN (\n                'amount',\n   ", "doc_id": "54e3bbb3-a2f7-4728-b483-e2396ac2d8da", "embedding": null, "doc_hash": "840819eb29d73a98faf5d3c3af089d30141e05855bc43b2ea2eee83c821c404c", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_begin_unlock.sql", "file_name": "silver__locked_liquidity_actions_begin_unlock.sql"}, "node_info": {"start": 0, "end": 1648, "_node_type": "1"}, "relationships": {"1": "8f7ef9f0f3c7d236fd3fde3ffcdf1493912c651a", "3": "8aa640a8-6807-4de6-a871-86e5147469a6"}}, "__type__": "1"}, "8aa640a8-6807-4de6-a871-86e5147469a6": {"__data__": {"text": "             'amount',\n                'owner',\n                'burner',\n                'duration',\n                'unlock_time',\n                'sender',\n                'denom',\n                'period_lock_id',\n                'lock_id'\n            )\n        ) --weird transactions that break the logic\n        AND A.tx_id NOT IN (\n            '523CBB1403A90A2A45A90ADFFC17F72100B99C286BD66DEDF22DD7F8A825127D',\n            'B26B72516A670B4FFD31F4F7853E65F7463F7A46BDE61800DC17A41F55AB87A3',\n            '34A6CEF2A87D6DB15DA1D7238D3A3BEABF8B4A1B460082B3C1F6C65DE5329CAC',\n            '504A0BD295DA63E28D55BC7C46575C6C49D9C2612D0AF118BA2A33A089A25A6D',\n            'B312127A7914D26444DA2C1104122F9CB7D3B50940F079544775C7EA4EE4981D',\n            '413991DF25FF3A217BA42D84D811CABC4A580F12FA9A8BC204E45F22529185CB',\n            '359F13D57A9B37DD6AC423A877FE66C9EB585679A0346037DC1B8DEC3B1F2B6D',\n            '9A0FF4CC948097D2DE21A34F22C2CB2DAE2E354C31FF6899F378E9DB79CA765F'\n        )\n\n{% if is_incremental() %}\nAND A._inserted_timestamp >= (\n    SELECT\n        _inserted_timestamp\n    FROM\n        max_date\n)\n{% endif %}\n),\ntx_msg_flat AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        msg_group,\n        msg_index,\n        lock_id,\n        _inserted_timestamp,\n        LISTAGG(\n            DISTINCT msg_type,\n            '-'\n        ) within GROUP (\n            ORDER BY\n                msg_type\n        ) AS msg_type,\n        {# lock_id, #}\n    ", "doc_id": "8aa640a8-6807-4de6-a871-86e5147469a6", "embedding": null, "doc_hash": "a16b2bc4ee68e77ec2211ea5d2199eb739c703bd89f0da15ce6220b97f09f689", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_begin_unlock.sql", "file_name": "silver__locked_liquidity_actions_begin_unlock.sql"}, "node_info": {"start": 1639, "end": 3144, "_node_type": "1"}, "relationships": {"1": "8f7ef9f0f3c7d236fd3fde3ffcdf1493912c651a", "2": "54e3bbb3-a2f7-4728-b483-e2396ac2d8da", "3": "1cbb002a-aad8-4a4e-809a-487750a09011"}}, "__type__": "1"}, "1cbb002a-aad8-4a4e-809a-487750a09011": {"__data__": {"text": "       {# lock_id, #}\n        OBJECT_AGG(\n            msg_type :: STRING || '--' || attribute_key :: STRING,\n            attribute_value :: variant\n        ) AS j\n    FROM\n        base_msg_atts\n    WHERE\n        msg_type <> 'message'\n    GROUP BY\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        msg_group,\n        msg_index,\n        lock_id,\n        _inserted_timestamp\n),\nFINAL AS (\n    SELECT\n        A.block_id,\n        A.block_timestamp,\n        A.tx_id,\n        A.tx_succeeded,\n        A.msg_group,\n        A.msg_type,\n        COALESCE(\n            j :\"begin_unlock--period_lock_id\",\n            j :\"begin_unlock_all--period_lock_id\"\n        ) :: INT AS lock_id,\n        b.attribute_value AS action,\n        CASE\n            WHEN b.attribute_value = '/osmosis.lockup.MsgExtendLockup' THEN 'extend lockup'\n            WHEN A.msg_type = 'unpool_pool_id' THEN 'unpool'\n            WHEN j :\"lock_tokens--duration\" IS NOT NULL THEN 'initial lock'\n            WHEN j :: STRING ILIKE '%unlock%'\n            OR j :: STRING ILIKE '%undelegate%'\n            OR j :: STRING ILIKE '%unbond%'\n            OR action ILIKE '%undelegate%' THEN 'unlock-undelegate'\n            WHEN j :: STRING LIKE '%add%'\n            OR j :: STRING LIKE '%increase%' THEN 'add to position'\n            WHEN j :: STRING ILIKE '%delegate%' THEN 'super upgrade'\n        END hybrid_action,\n        COALESCE(\n            j :\"add_tokens_to_lock--amount\",\n            j :\"lock_tokens--amount\",\n            j :\"superfluid_increase_delegation--amount\",\n            j :\"burn--amount\",\n            j :\"unpool_pool_id--denom\"\n        ) :: STRING AS amount,\n        COALESCE(\n            j :\"add_tokens_to_lock--owner\",\n            j :\"lock_tokens--owner\",\n", "doc_id": "1cbb002a-aad8-4a4e-809a-487750a09011", "embedding": null, "doc_hash": "4ad55f727c5dc4cea1fa476d70aef361ce71562ad4da6570c876326407997f56", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_begin_unlock.sql", "file_name": "silver__locked_liquidity_actions_begin_unlock.sql"}, "node_info": {"start": 3142, "end": 4899, "_node_type": "1"}, "relationships": {"1": "8f7ef9f0f3c7d236fd3fde3ffcdf1493912c651a", "2": "8aa640a8-6807-4de6-a871-86e5147469a6", "3": "b87c8bb0-701d-4d01-9a37-d352c224aabc"}}, "__type__": "1"}, "b87c8bb0-701d-4d01-9a37-d352c224aabc": {"__data__": {"text": "         j :\"lock_tokens--owner\",\n            j :\"begin_unlock--owner\",\n            j :\"unlock--owner\",\n            j :\"burn--burner\",\n            j :\"unpool_pool_id--sender\"\n        ) :: STRING AS locker,\n        COALESCE(\n            j :\"lock_tokens--duration\",\n            j :\"begin_unlock--duration\",\n            j :\"unlock--duration\"\n        ) :: STRING AS DURATION,\n        NULLIF(\n            COALESCE(\n                j :\"lock_tokens--unlock_time\",\n                j :\"begin_unlock--unlock_time\",\n                j :\"unlock--unlock_time\"\n            ) :: STRING,\n            '0001-01-01 00:00:00 +0000 UTC'\n        ) AS unlock_time,\n        j :\"unpool_pool_id--new_lock_ids\" :: STRING AS new_lock_ids,\n        A._INSERTED_TIMESTAMP\n    FROM\n        tx_msg_flat A\n        JOIN base_msg_atts b\n        ON A.tx_id = b.tx_id\n        AND A.msg_group = b.msg_group\n        AND COALESCE(\n            A.lock_id,\n            -1\n        ) = COALESCE(\n            b.lock_id,\n            -1\n        )\n        AND b.msg_type = 'message'\n    WHERE\n        A.msg_type = 'begin_unlock'\n)\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    msg_group,\n    msg_type,\n    lock_id,\n    action,\n    hybrid_action,\n    amount :: NUMBER AS amount,\n    locker,\n    DURATION,\n    unlock_time,\n    new_lock_ids,\n    concat_ws(\n        '-',\n        tx_id,\n        msg_group,\n        COALESCE(\n            lock_id,\n            -1\n        ),\n        locker\n    ) AS _unique_key,\n    _INSERTED_TIMESTAMP\nFROM\n    FINAL\n", "doc_id": "b87c8bb0-701d-4d01-9a37-d352c224aabc", "embedding": null, "doc_hash": "c4d317c31f5b9895ad18fff4fc739872d7383213aa9178b870ce63ab3e173f8a", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_begin_unlock.sql", "file_name": "silver__locked_liquidity_actions_begin_unlock.sql"}, "node_info": {"start": 4878, "end": 6398, "_node_type": "1"}, "relationships": {"1": "8f7ef9f0f3c7d236fd3fde3ffcdf1493912c651a", "2": "1cbb002a-aad8-4a4e-809a-487750a09011"}}, "__type__": "1"}, "ae44dc33-8745-48ba-a9d1-891a089ff3da": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__locked_liquidity_actions_begin_unlock\n    description: Records of all LP token locking transactions that have occurred on Osmosis, dating back to the genesis block. These actions include lock, unlock, unpool, and all superfluid actions.\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_GROUP\n            - LOCK_ID\n            - LOCKER\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 2\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n     ", "doc_id": "ae44dc33-8745-48ba-a9d1-891a089ff3da", "embedding": null, "doc_hash": "7d47d4bf9b5358c162cb29019957b361cc0e89c3c4ef9917b47a7e6bee0d9ef5", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_begin_unlock.yml", "file_name": "silver__locked_liquidity_actions_begin_unlock.yml"}, "node_info": {"start": 0, "end": 1809, "_node_type": "1"}, "relationships": {"1": "180ad52f2da3ec42345fff91fc5600cccd0bea30", "3": "5ab1785d-eb85-4eda-a634-c27701f32933"}}, "__type__": "1"}, "5ab1785d-eb85-4eda-a634-c27701f32933": {"__data__": {"text": "          - FLOAT\n      - name: MSG_TYPE\n        description: \"{{ doc('msg_type') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: LOCKER\n        description: \"{{ doc('locker_address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: LOCK_ID\n        description: \"{{ doc('lock_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: POOL_ID\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: LOCK_DURATION\n        description: \"{{ doc('lock_duration') }}\"  \n        tests: \n          -", "doc_id": "5ab1785d-eb85-4eda-a634-c27701f32933", "embedding": null, "doc_hash": "86a28a1affb46cde3a88639218421ee34643339ad2cbe7bd116c395e3edaada6", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_begin_unlock.yml", "file_name": "silver__locked_liquidity_actions_begin_unlock.yml"}, "node_info": {"start": 1803, "end": 3490, "_node_type": "1"}, "relationships": {"1": "180ad52f2da3ec42345fff91fc5600cccd0bea30", "2": "ae44dc33-8745-48ba-a9d1-891a089ff3da", "3": "4cb6643c-e750-4d6f-9f45-8aa5258a5476"}}, "__type__": "1"}, "4cb6643c-e750-4d6f-9f45-8aa5258a5476": {"__data__": {"text": "       tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n                column_type_list:\n                  - STRING\n                  - VARCHAR  \n      - name: UNLOCK_TIME\n        description: \"{{ doc('unlock_time') }}\"   \n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "4cb6643c-e750-4d6f-9f45-8aa5258a5476", "embedding": null, "doc_hash": "d40c0d5cf4389ad32eb525f144e68d03e5ff590852f836e01386342d59555ccd", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_begin_unlock.yml", "file_name": "silver__locked_liquidity_actions_begin_unlock.yml"}, "node_info": {"start": 3471, "end": 4152, "_node_type": "1"}, "relationships": {"1": "180ad52f2da3ec42345fff91fc5600cccd0bea30", "2": "5ab1785d-eb85-4eda-a634-c27701f32933"}}, "__type__": "1"}, "8dcc3b0a-b64d-4841-984d-2b53db438140": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE','_inserted_timestamp::DATE']\n) }}\n\nWITH\n\n{% if is_incremental() %}\nmax_date AS (\n\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n),\n{% endif %}\n\nbase_msg_atts AS (\n    SELECT\n        DISTINCT A.block_id,\n        A.block_timestamp,\n        A.tx_id,\n        TRUE AS tx_succeeded,\n        A.msg_group,\n        A.msg_index,\n        A.msg_type,\n        A.attribute_key,\n        A.attribute_value,\n        A._inserted_timestamp\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n        JOIN (\n            SELECT\n                DISTINCT tx_id,\n                msg_group\n            FROM\n                {{ ref('silver__locked_liquidity_transactions') }}\n            UNION\n            SELECT\n                DISTINCT tx_id,\n                msg_group\n            FROM\n                {{ ref('silver__superfluid_actions') }}\n        ) b\n        ON A.tx_id = b.tx_id\n        AND COALESCE(\n            A.msg_group,\n            0\n        ) = b.msg_group {# AND b.tx_grp_rn > 1 #}\n    WHERE\n        (\n            A.msg_type IN (\n                'superfluid_delegate',\n                'lock_tokens',\n                'add_tokens_to_lock'\n            )\n            OR (\n                A.msg_type = 'tx'\n                AND A.attribute_key = 'acc_seq'\n            )\n        )\n\n{% if is_incremental() %}\nAND A._inserted_timestamp >= (\n    SELECT\n        _inserted_timestamp\n    FROM\n        max_date\n)\n{% endif %}\n),\ntx_msg_flat AS (\n    SELECT\n    ", "doc_id": "8dcc3b0a-b64d-4841-984d-2b53db438140", "embedding": null, "doc_hash": "0357855429805fb33d7bf21d03e79739d6ac0e074a1f6cb32245dc85749f6bf8", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_convert.sql", "file_name": "silver__locked_liquidity_actions_convert.sql"}, "node_info": {"start": 0, "end": 1659, "_node_type": "1"}, "relationships": {"1": "2a8b4c15dfdb2bdc9ac61e7d7de5cc3c12faa120", "3": "dbee2876-fb43-4199-aa57-d0546e4e5fe3"}}, "__type__": "1"}, "dbee2876-fb43-4199-aa57-d0546e4e5fe3": {"__data__": {"text": "AS (\n    SELECT\n        A.block_id,\n        A.block_timestamp,\n        A.tx_id,\n        A.tx_succeeded,\n        A.msg_group,\n        {# A.msg_index,\n        A.msg_type,\n        #}\n        A._inserted_timestamp,\n        OBJECT_AGG(\n            A.attribute_key :: STRING,\n            A.attribute_value :: variant\n        ) AS j\n    FROM\n        base_msg_atts A\n        JOIN (\n            SELECT\n                DISTINCT tx_id,\n                msg_group\n            FROM\n                base_msg_atts\n            WHERE\n                msg_type = 'superfluid_delegate'\n            EXCEPT\n            SELECT\n                tx_id,\n                msg_group\n            FROM\n                base_msg_atts\n            WHERE\n                msg_type IN (\n                    'lock_tokens',\n                    'add_tokens_to_lock'\n                )\n        ) b\n        ON A.tx_id = b.tx_id\n        AND A.msg_group = b.msg_group\n    GROUP BY\n        A.block_id,\n        A.block_timestamp,\n        A.tx_id,\n        A.tx_succeeded,\n        A.msg_group,\n        {# A.msg_index,\n        A.msg_type,\n        #}\n        A._inserted_timestamp\n),\nlper AS (\n    SELECT\n        tx_id,\n        SPLIT_PART(\n            attribute_value,\n            '/',\n            0\n        ) AS locker_address\n    FROM\n        base_msg_atts\n    WHERE\n        msg_type = 'tx' qualify ROW_NUMBER() over (\n            PARTITION BY tx_id\n            ORDER BY\n                msg_index DESC\n        ) = 1\n),\nFINAL AS (\n    SELECT\n", "doc_id": "dbee2876-fb43-4199-aa57-d0546e4e5fe3", "embedding": null, "doc_hash": "44dbe8c7aea01b69568a13336498e7df0cf4ef17511ed89013e27e2604f46c73", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_convert.sql", "file_name": "silver__locked_liquidity_actions_convert.sql"}, "node_info": {"start": 1649, "end": 3138, "_node_type": "1"}, "relationships": {"1": "2a8b4c15dfdb2bdc9ac61e7d7de5cc3c12faa120", "2": "8dcc3b0a-b64d-4841-984d-2b53db438140", "3": "a2905fc3-672f-40a5-bc6d-c1bda3b7dbde"}}, "__type__": "1"}, "a2905fc3-672f-40a5-bc6d-c1bda3b7dbde": {"__data__": {"text": "    ) = 1\n),\nFINAL AS (\n    SELECT\n        A.block_id,\n        A.block_timestamp,\n        A.tx_id,\n        A.tx_succeeded,\n        A.msg_group,\n        {# A.msg_type, #}\n        j :lock_id :: INT AS lock_id,\n        j :validator :: STRING AS validator,\n        A._INSERTED_TIMESTAMP\n    FROM\n        tx_msg_flat A\n),\nlock_amount AS (\n    SELECT\n        A.lock_id,\n        A.currency,\n        A.decimal,\n        SUM(\n            A.amount\n        ) AS amount\n    FROM\n        {{ ref('silver__locked_liquidity_actions') }} A\n        JOIN FINAL b\n        ON A.lock_id = b.lock_id\n    WHERE\n        A.block_timestamp <= b.block_timestamp\n    GROUP BY\n        A.lock_id,\n        A.currency,\n        A.decimal\n)\nSELECT\n    block_id,\n    block_timestamp,\n    A.tx_id,\n    tx_succeeded,\n    msg_group,\n    'superfluid_delegate' AS msg_type,\n    'convert' AS msg_action,\n    'convert' AS msg_action_description,\n    b.locker_address,\n    A.lock_id,\n    la.amount,\n    la.currency,\n    la.decimal,\n    validator AS validator_address,\n    TRUE AS is_superfluid,\n    concat_ws(\n        '-',\n        A.tx_id,\n        msg_group,\n        COALESCE(\n            A.lock_id,\n            -1\n        )\n    ) AS _unique_key,\n    _INSERTED_TIMESTAMP\nFROM\n    FINAL A\n    JOIN lper b\n    ON A.tx_id = b.tx_id\n    LEFT JOIN lock_amount la\n    ON A.lock_id = la.lock_id\n", "doc_id": "a2905fc3-672f-40a5-bc6d-c1bda3b7dbde", "embedding": null, "doc_hash": "9ba7e1215dce1570d3c7f97d4abd4a8293e7d425296cfc209514dfddae6683a0", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_convert.sql", "file_name": "silver__locked_liquidity_actions_convert.sql"}, "node_info": {"start": 3114, "end": 4457, "_node_type": "1"}, "relationships": {"1": "2a8b4c15dfdb2bdc9ac61e7d7de5cc3c12faa120", "2": "dbee2876-fb43-4199-aa57-d0546e4e5fe3"}}, "__type__": "1"}, "edaae358-034d-4353-9d6d-9af1bfc5b7e5": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__locked_liquidity_actions_convert\n    description: Records of all conversion of lp tokens to locked lp tokens transactions that have occurred on Osmosis, dating back to the genesis block\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_GROUP\n            - LOCK_ID\n            - LOCKER_ADDRESS\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 2\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: MSG_TYPE\n   ", "doc_id": "edaae358-034d-4353-9d6d-9af1bfc5b7e5", "embedding": null, "doc_hash": "bfdbab7375c1525b98f65aeed7264d52c127f95b3f5c04cba80d31129f48e63f", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_convert.yml", "file_name": "silver__locked_liquidity_actions_convert.yml"}, "node_info": {"start": 0, "end": 1787, "_node_type": "1"}, "relationships": {"1": "6559548f00cf53c2278b3fe6a75ffd2ee2993a47", "3": "fea5312a-3e50-4d69-bd4e-7e9a22c51575"}}, "__type__": "1"}, "fea5312a-3e50-4d69-bd4e-7e9a22c51575": {"__data__": {"text": "FLOAT\n      - name: MSG_TYPE\n        description: \"{{ doc('msg_type') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: LOCKER_ADDRESS\n        description: \"{{ doc('locker_address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: LOCK_ID\n        description: \"{{ doc('lock_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: VALIDATOR_ADDRESS\n        description: \"{{ doc('validator_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex:", "doc_id": "fea5312a-3e50-4d69-bd4e-7e9a22c51575", "embedding": null, "doc_hash": "a498a66ba38a9c62136f429dedf5ddef2cd05896d1fb02d85d047a48067bc4a3", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_convert.yml", "file_name": "silver__locked_liquidity_actions_convert.yml"}, "node_info": {"start": 1767, "end": 3451, "_node_type": "1"}, "relationships": {"1": "6559548f00cf53c2278b3fe6a75ffd2ee2993a47", "2": "edaae358-034d-4353-9d6d-9af1bfc5b7e5", "3": "9e5a009c-4901-4dda-b2ed-39faacd796d5"}}, "__type__": "1"}, "9e5a009c-4901-4dda-b2ed-39faacd796d5": {"__data__": {"text": "             regex: osmovaloper1[0-9a-z]{38,38}\n      - name: IS_SUPERFLUID\n        description: \"{{ doc('is_superfluid') }}\"  \n        tests: \n          - not_null\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "9e5a009c-4901-4dda-b2ed-39faacd796d5", "embedding": null, "doc_hash": "214bc80afdd2f3aeae24798516c64ffed9a42402c537e9db0f44cfb6cd605d3a", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_convert.yml", "file_name": "silver__locked_liquidity_actions_convert.yml"}, "node_info": {"start": 3453, "end": 3877, "_node_type": "1"}, "relationships": {"1": "6559548f00cf53c2278b3fe6a75ffd2ee2993a47", "2": "fea5312a-3e50-4d69-bd4e-7e9a22c51575"}}, "__type__": "1"}, "fdfc0b54-ba9c-4293-9ef8-0abc7716425e": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH all_staked AS (\n\n    SELECT\n        block_id,\n        block_timestamp,\n        locker_address AS address,\n        SUM(amount) amount,\n        currency,\n        DECIMAL,\n        lock_id,\n        _inserted_timestamp\n    FROM\n        {{ ref('silver__locked_liquidity_actions') }}\n        s\n    WHERE\n        msg_action_description IN (\n            'initial lock',\n            'add to position'\n        )\n        AND amount > 0\n\n{% if is_incremental() %}\nAND block_timestamp :: DATE >=(\n    SELECT\n        DATEADD('day', -2, MAX(block_timestamp))\n    FROM\n        {{ this }})\n    {% endif %}\n    GROUP BY\n        block_id,\n        block_timestamp,\n        locker_address,\n        currency,\n        DECIMAL,\n        lock_id,\n        _inserted_timestamp\n),\nundel_base AS (\n    SELECT\n        DISTINCT block_id,\n        block_timestamp,\n        locker_address AS address,\n        currency,\n        DECIMAL,\n        lock_id,\n        msg_action_description,\n        tx_id,\n        _inserted_timestamp\n    FROM\n        {{ ref('silver__locked_liquidity_actions') }}\n    WHERE\n        msg_action_description IN (\n            'unlock',\n            'unlock-undelegate'\n        )\n        AND (\n            unlock_time IS NOT NULL\n            OR msg_action = '/osmosis.superfluid.MsgSuperfluidUndelegate'\n            OR msg_type = '/osmosis.superfluid.MsgSuperfluidUndelegate'\n        )\n        AND tx_id <> '1A2A80A7112995EA1A22D6EDBFB26AE7B863852A9E7F59779247F8928DA218D6'\n\n{% if is_incremental() %}\nAND block_timestamp :: DATE >=(\n    SELECT\n        DATEADD('day', -2, MAX(block_timestamp))\n    FROM\n        {{ this }})\n    {% endif %}\n),\nunpool_base AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        locker_address AS address,\n    ", "doc_id": "fdfc0b54-ba9c-4293-9ef8-0abc7716425e", "embedding": null, "doc_hash": "388145983626f858cf3b24f82a974f41898fcb72c402056bf6beb0b9a8ff9c0f", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_balances.sql", "file_name": "silver__locked_liquidity_balances.sql"}, "node_info": {"start": 0, "end": 1904, "_node_type": "1"}, "relationships": {"1": "c3e4d8a3db57f4a201d5b1908eed39490d927979", "3": "49e7657c-a984-42fc-8acb-3b0848e0f6d4"}}, "__type__": "1"}, "49e7657c-a984-42fc-8acb-3b0848e0f6d4": {"__data__": {"text": "       locker_address AS address,\n        currency,\n        DECIMAL,\n        msg_action_description,\n        tx_id,\n        COALESCE(LAG(block_id) over (\n    ORDER BY\n        block_id), 1) AS lower_bound_unpool,\n        _inserted_timestamp\n    FROM\n        {{ ref('silver__locked_liquidity_actions') }}\n    WHERE\n        msg_action_description = 'unpool'\n\n{% if is_incremental() %}\nAND block_timestamp :: DATE >=(\n    SELECT\n        DATEADD('day', -2, MAX(block_timestamp))\n    FROM\n        {{ this }})\n    {% endif %}\n),\nunpool_lock_val AS (\n    SELECT\n        A.lock_id,\n        A.locker_address AS address,\n        A.currency,\n        A.decimal,\n        b.block_id,\n        b.tx_id,\n        b.block_timestamp,\n        b._inserted_timestamp,\n        SUM(\n            CASE\n                WHEN A.msg_action_description IN (\n                    'initial lock',\n                    'add to position'\n                ) THEN 1\n                ELSE -1\n            END * amount\n        ) AS unpool_amount\n    FROM\n        {{ ref('silver__locked_liquidity_actions') }} A\n        JOIN unpool_base b\n        ON A.locker_address = b.address\n        AND A.currency = b.currency\n        AND A.block_id < b.block_id\n        AND A.block_id > lower_bound_unpool\n        LEFT JOIN undel_base C\n        ON A.locker_address = C.address\n        AND A.lock_id = C.lock_id\n    WHERE\n        A.lock_id IS NOT NULL\n        AND C.tx_id IS NULL\n    GROUP BY\n        A.lock_id,\n        A.locker_address,\n        A.currency,\n        A.decimal,\n        b.block_id,\n        b.tx_id,\n        b.block_timestamp,\n        b._inserted_timestamp\n),\nundel_bal AS (\n    SELECT\n        A.lock_id,\n        A.currency,\n        A.decimal,\n        SUM(COALESCE(amount, 0)) amount\n    FROM\n        {{ ref('silver__locked_liquidity_actions')", "doc_id": "49e7657c-a984-42fc-8acb-3b0848e0f6d4", "embedding": null, "doc_hash": "3053241003ede87e4921095d4abb673d753ae551ff59b1ed1fba33bd172d824c", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_balances.sql", "file_name": "silver__locked_liquidity_balances.sql"}, "node_info": {"start": 1880, "end": 3678, "_node_type": "1"}, "relationships": {"1": "c3e4d8a3db57f4a201d5b1908eed39490d927979", "2": "fdfc0b54-ba9c-4293-9ef8-0abc7716425e", "3": "6e506e27-c14a-4407-a025-6f9c1ed8e113"}}, "__type__": "1"}, "6e506e27-c14a-4407-a025-6f9c1ed8e113": {"__data__": {"text": "       {{ ref('silver__locked_liquidity_actions') }} A\n        JOIN undel_base b\n        ON A.lock_id = b.lock_id\n    WHERE\n        A.amount > 0\n        AND A.msg_action_description IN (\n            'initial lock',\n            'add to position'\n        )\n    GROUP BY\n        A.lock_id,\n        A.currency,\n        A.decimal\n),\ncombine AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        address,\n        lock_id,\n        amount,\n        currency,\n        DECIMAL,\n        _inserted_timestamp\n    FROM\n        all_staked\n    UNION ALL\n    SELECT\n        A.block_id,\n        block_timestamp,\n        address,\n        b.lock_id,\n        -1 * amount,\n        b.currency,\n        b.decimal,\n        _inserted_timestamp\n    FROM\n        undel_base A\n        JOIN undel_bal b\n        ON A.lock_id = b.lock_id\n    UNION ALL\n    SELECT\n        block_id,\n        block_timestamp,\n        address,\n        lock_id,\n        -1 * unpool_amount,\n        currency,\n        DECIMAL,\n        _inserted_timestamp\n    FROM\n        unpool_lock_val A\n)\nSELECT\n    block_id,\n    block_timestamp,\n    'locked liquidity' AS balance_type,\n    address,\n    lock_id,\n    currency,\n    DECIMAL,\n    SUM(amount) over(\n        PARTITION BY address,\n        currency,\n        lock_id\n        ORDER BY\n            block_timestamp ASC rows unbounded preceding\n    ) AS balance,\n    concat_ws(\n        '-',\n        block_id,\n        address,\n        lock_id,\n        currency\n    ) AS _unique_key,\n    _inserted_timestamp\nFROM\n    combine\n", "doc_id": "6e506e27-c14a-4407-a025-6f9c1ed8e113", "embedding": null, "doc_hash": "3f377f9588cde2dc0943c32e147e8a33cecf146afd8352a526b3563a72153b7a", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_balances.sql", "file_name": "silver__locked_liquidity_balances.sql"}, "node_info": {"start": 3654, "end": 5175, "_node_type": "1"}, "relationships": {"1": "c3e4d8a3db57f4a201d5b1908eed39490d927979", "2": "49e7657c-a984-42fc-8acb-3b0848e0f6d4"}}, "__type__": "1"}, "24b7a03c-4cc9-432b-bc88-84eec1f1b6df": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__locked_liquidity_balances\n    description: A table of each locked liquidity balance change for wallets on the Osmosis chain. \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - ADDRESS\n            - BLOCK_ID\n            - LOCK_ID\n            - CURRENCY\n      - compare_model_subset:\n          name: silver__locked_liquidity_balances_business_logic_test\n          compare_model: ref('testing__locked_liquidity_balances')\n          compare_columns: \n            - block_id\n            - balance_type\n            - address\n            - lock_id\n            - currency\n            - balance\n          model_condition: \"where block_timestamp::date = '2022-07-20' \n                and block_ID IN  (5230815,5242128,5239892,5238935,5230342,5233986,5234464,5230342,5228474,5229227)\"\n    columns:\n      - name: BLOCK_ID \n        description: \"{{ doc('block_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: ADDRESS\n        description: \"{{ doc('address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: LOCK_ID\n        description: \"{{ doc('lock_id') }}\"\n        tests: \n     ", "doc_id": "24b7a03c-4cc9-432b-bc88-84eec1f1b6df", "embedding": null, "doc_hash": "d39aa6814b039ab9f5789c89819518917cb7167587c68e86b02d513ab7ce38e0", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_balances.yml", "file_name": "silver__locked_liquidity_balances.yml"}, "node_info": {"start": 0, "end": 1843, "_node_type": "1"}, "relationships": {"1": "99e582f5e4bb25201eb787c4c25f3595b79a99c4", "3": "12ac23c4-3322-4877-a843-c77329d06717"}}, "__type__": "1"}, "12ac23c4-3322-4877-a843-c77329d06717": {"__data__": {"text": "}}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: BALANCE \n        description: The amount of the currency the wallet held at the given time\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: DECIMAL \n        description: \"{{ doc('decimal') }}\"\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('ingested_at') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      ", "doc_id": "12ac23c4-3322-4877-a843-c77329d06717", "embedding": null, "doc_hash": "48987813e7d2013d8cd2bd822ef2b435e6ba864229c36066a50282d65702f7f9", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_balances.yml", "file_name": "silver__locked_liquidity_balances.yml"}, "node_info": {"start": 1818, "end": 2887, "_node_type": "1"}, "relationships": {"1": "99e582f5e4bb25201eb787c4c25f3595b79a99c4", "2": "24b7a03c-4cc9-432b-bc88-84eec1f1b6df"}}, "__type__": "1"}, "309964db-a4a6-4ad8-93cb-6e1167c08b8c": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['_inserted_timestamp::DATE']\n) }}\n\nWITH count_ids AS (\n\n    SELECT\n        tx_id,\n        msg_group,\n        COALESCE(\n            msg_sub_group,\n            -1\n        ) AS msg_sub_group,\n        COUNT(\n            DISTINCT attribute_value\n        ) AS id_count\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n    WHERE\n        attribute_key IN (\n            'period_lock_id',\n            'lock_id'\n        )\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        {{ this }}\n)\n{% endif %}\nGROUP BY\n    tx_id,\n    msg_group,\n    COALESCE(\n        msg_sub_group,\n        -1\n    )\n),\nbase AS (\n    SELECT\n        A.tx_id,\n        A.msg_group,\n        A.msg_sub_group,\n        CASE\n            WHEN id_count > 1 THEN msg_index\n        END msg_index_gp,\n        id_count,\n        _inserted_timestamp,\n        OBJECT_AGG(\n            CASE\n                WHEN attribute_key = 'action' THEN attribute_key || (\n                    SELECT\n                        UUID_STRING()\n                )\n                ELSE attribute_key\n            END :: STRING,\n            attribute_value :: variant\n        ) AS j,\n        COALESCE(\n            j :lock_id,\n            j :period_lock_id\n        ) :: INT AS lock_id\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n        JOIN count_ids b\n        ON A.tx_id = b.tx_id\n        AND A.msg_group = b.msg_group\n        AND COALESCE(\n            A.msg_sub_group,\n            -1\n        ) = b.msg_sub_group\n    WHERE\n ", "doc_id": "309964db-a4a6-4ad8-93cb-6e1167c08b8c", "embedding": null, "doc_hash": "50cdaa4843e6c993cdfb1e842e88c5b04f658f8e81a89fe885ea88f150cccb0b", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_transactions.sql", "file_name": "silver__locked_liquidity_transactions.sql"}, "node_info": {"start": 0, "end": 1678, "_node_type": "1"}, "relationships": {"1": "e5145607a664c4fbcd798937af25f06af67bbd07", "3": "c7fd056d-c400-4d03-87c4-f790bb142f2b"}}, "__type__": "1"}, "c7fd056d-c400-4d03-87c4-f790bb142f2b": {"__data__": {"text": "    ) = b.msg_sub_group\n    WHERE\n        attribute_key IN (\n            'period_lock_id',\n            'lock_id',\n            'action'\n        )\n        AND msg_type <> 'superfluid_undelegate'\n        AND A.tx_id NOT IN (\n            '523CBB1403A90A2A45A90ADFFC17F72100B99C286BD66DEDF22DD7F8A825127D',\n            'B26B72516A670B4FFD31F4F7853E65F7463F7A46BDE61800DC17A41F55AB87A3',\n            '34A6CEF2A87D6DB15DA1D7238D3A3BEABF8B4A1B460082B3C1F6C65DE5329CAC',\n            '504A0BD295DA63E28D55BC7C46575C6C49D9C2612D0AF118BA2A33A089A25A6D',\n            'B312127A7914D26444DA2C1104122F9CB7D3B50940F079544775C7EA4EE4981D',\n            '413991DF25FF3A217BA42D84D811CABC4A580F12FA9A8BC204E45F22529185CB'\n        )\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        {{ this }}\n)\n{% endif %}\nGROUP BY\n    A.tx_id,\n    A.msg_group,\n    A.msg_sub_group,\n    msg_index_gp,\n    id_count,\n    _inserted_timestamp\n)\nSELECT\n    tx_id,\n    msg_group,\n    msg_index_gp AS msg_index,\n    lock_id,\n    id_count,\n    _inserted_timestamp,\n    concat_ws(\n        '-',\n        tx_id,\n        msg_group,\n        lock_id\n    ) AS _unique_key\nFROM\n    base\nWHERE\n    (\n        j :: STRING LIKE '%action%'\n        OR id_count > 1\n    )\n    AND lock_id IS NOT NULL qualify(ROW_NUMBER() over(PARTITION BY tx_id, COALESCE(msg_group, -1), lock_id\nORDER BY\n    msg_index_gp DESC) = 1)\n", "doc_id": "c7fd056d-c400-4d03-87c4-f790bb142f2b", "embedding": null, "doc_hash": "3ee69cb0fea00f01e1bdec89bc7303951fa57d83a53004ef85490dec4eaa79bf", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_transactions.sql", "file_name": "silver__locked_liquidity_transactions.sql"}, "node_info": {"start": 1643, "end": 3087, "_node_type": "1"}, "relationships": {"1": "e5145607a664c4fbcd798937af25f06af67bbd07", "2": "309964db-a4a6-4ad8-93cb-6e1167c08b8c"}}, "__type__": "1"}, "1ea711c6-086e-4127-91f3-a3b2b661a6c5": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__locked_liquidity_transactions\n    description: helper table for locked LPs\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - _UNIQUE_KEY\n    columns:\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: LOCK_ID\n        description: \"{{ doc('lock_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT", "doc_id": "1ea711c6-086e-4127-91f3-a3b2b661a6c5", "embedding": null, "doc_hash": "fb31992b29493b63a412de7c16e30b6c759d2f58b02720676eb2cddea911409b", "extra_info": {"file_path": "models/silver/silver__locked_liquidity_transactions.yml", "file_name": "silver__locked_liquidity_transactions.yml"}, "node_info": {"start": 0, "end": 1008, "_node_type": "1"}, "relationships": {"1": "e5be40b9e630c1c422992678103cd452639d999e"}}, "__type__": "1"}, "b426c2f9-b8db-4e99-b506-fde8ac0b9f4b": {"__data__": {"text": "{{ config(\n  materialized = 'incremental',\n  unique_key = \"_unique_key\",\n  incremental_strategy = 'merge',\n  cluster_by = ['block_timestamp::DATE','_inserted_timestamp::DATE'],\n  post_hook = \"ALTER TABLE {{ this }} ADD SEARCH OPTIMIZATION\"\n) }}\n\nSELECT\n  block_id,\n  block_timestamp,\n  tx_id,\n  tx_succeeded,\n  msg_group,\n  msg_sub_group,\n  msg_index,\n  msg_type,\n  b.index AS attribute_index,\n  TRY_BASE64_DECODE_STRING(\n    b.value :key :: STRING\n  ) AS attribute_key,\n  TRY_BASE64_DECODE_STRING(\n    b.value :value :: STRING\n  ) AS attribute_value,\n  _inserted_timestamp,\n  concat_ws(\n    '-',\n    tx_id,\n    msg_index,\n    attribute_index\n  ) AS _unique_key\nFROM\n  {{ ref('silver__msgs') }} A,\n  LATERAL FLATTEN(\n    input => A.msg,\n    path => 'attributes'\n  ) b\n\n{% if is_incremental() %}\nWHERE\n  _inserted_timestamp >= (\n    SELECT\n      MAX(\n        _inserted_timestamp\n      )\n    FROM\n      {{ this }}\n  )\n{% endif %}\n", "doc_id": "b426c2f9-b8db-4e99-b506-fde8ac0b9f4b", "embedding": null, "doc_hash": "b3244d61b50c63e50e27f2726945f77f1eaa320f9dbe385b56a6176cb1ca0796", "extra_info": {"file_path": "models/silver/silver__msg_attributes.sql", "file_name": "silver__msg_attributes.sql"}, "node_info": {"start": 0, "end": 928, "_node_type": "1"}, "relationships": {"1": "75146769cd0bbfe85f507692e23930cb590b5ade"}}, "__type__": "1"}, "8fbf1a80-e0bc-4493-baa4-486bdc2437b2": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__msg_attributes\n    description: Records of all message attributes associated to messages that have occurred on Osmosis, dating back to the genesis block. \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_INDEX\n            - ATTRIBUTE_INDEX\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 1\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: MSG_GROUP\n        description: \"{{ doc('silver_msg_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: MSG_SUB_GROUP\n        description: \"{{ doc('msg_sub_group') }}\"\n        tests: \n          -", "doc_id": "8fbf1a80-e0bc-4493-baa4-486bdc2437b2", "embedding": null, "doc_hash": "d21d9543cf2df9591ea601d41e3f73371d0adf540bbe24b22c82eb91ac28e61b", "extra_info": {"file_path": "models/silver/silver__msg_attributes.yml", "file_name": "silver__msg_attributes.yml"}, "node_info": {"start": 0, "end": 1800, "_node_type": "1"}, "relationships": {"1": "6bf410fd47bf11af378ee8c632dafdf4ccbb6048", "3": "b7dc3c4c-539c-4139-b3ad-517595b44b9f"}}, "__type__": "1"}, "b7dc3c4c-539c-4139-b3ad-517595b44b9f": {"__data__": {"text": "       tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: MSG_INDEX\n        description: \"{{ doc('msg_index') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: MSG_TYPE\n        description: \"{{ doc('msg_type') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: ATTRIBUTE_KEY\n        description: \"They key from the key-value pair from the message attribute\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: ATTRIBUTE_VALUE\n        description: \"They value from the key-value pair from the message attribute\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      \n", "doc_id": "b7dc3c4c-539c-4139-b3ad-517595b44b9f", "embedding": null, "doc_hash": "ea71925e00ef73c092877b5c9a332100c0a9ef26812f08030870cfc77a186b3c", "extra_info": {"file_path": "models/silver/silver__msg_attributes.yml", "file_name": "silver__msg_attributes.yml"}, "node_info": {"start": 1774, "end": 3313, "_node_type": "1"}, "relationships": {"1": "6bf410fd47bf11af378ee8c632dafdf4ccbb6048", "2": "8fbf1a80-e0bc-4493-baa4-486bdc2437b2"}}, "__type__": "1"}, "ea3b8ec4-7925-4a0d-8deb-8e69f2c0e09e": {"__data__": {"text": "{{ config(\n  materialized = 'incremental',\n  unique_key = \"_unique_key\",\n  incremental_strategy = 'merge',\n  cluster_by = ['block_timestamp::DATE','_inserted_timestamp::DATE'],\n  post_hook = \"ALTER TABLE {{ this }} ADD SEARCH OPTIMIZATION\"\n) }}\n\nWITH b AS (\n\n  SELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    INDEX AS msg_index,\n    VALUE :type :: STRING AS msg_type,\n    VALUE AS msg,\n    IFF(\n      TRY_BASE64_DECODE_STRING(\n        msg :attributes [0] :key :: STRING\n      ) = 'action',\n      TRUE,\n      FALSE\n    ) AS is_action,\n    IFF(\n      TRY_BASE64_DECODE_STRING(\n        msg :attributes [0] :key :: STRING\n      ) = 'module',\n      TRUE,\n      FALSE\n    ) AS is_module,\n    TRY_BASE64_DECODE_STRING(\n      msg :attributes [0] :key :: STRING\n    ) attribute_key,\n    TRY_BASE64_DECODE_STRING(\n      msg :attributes [0] :value :: STRING\n    ) attribute_value,\n    _inserted_timestamp\n  FROM\n    {{ ref('silver__transactions') }} A,\n    LATERAL FLATTEN(\n      input => A.msgs\n    )\n\n{% if is_incremental() %}\nWHERE\n  _inserted_timestamp >= (\n    SELECT\n      MAX(\n        _inserted_timestamp\n      )\n    FROM\n      {{ this }}\n  )\n{% endif %}\n),\nprefinal AS (\n  SELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    NULLIF(\n      (conditional_true_event(is_action) over (PARTITION BY tx_id\n      ORDER BY\n        msg_index) -1),\n        -1\n    ) AS msg_group,\n    msg_index,\n    msg_type,\n    LAST_VALUE(\n      msg_type\n    ) over(\n      PARTITION BY tx_id\n      ORDER BY\n        msg_index\n    ) AS last_msg_type,\n    msg,\n    is_module,\n    attribute_key,\n    attribute_value,\n    _inserted_timestamp\n  FROM\n    b\n),\nexec_actions AS (\n  SELECT\n    DISTINCT tx_id,\n    msg_group\n  FROM\n    prefinal\n  WHERE\n    msg_type = 'message'\n    AND attribute_key = 'action'\n    AND (LOWER(attribute_value) LIKE '%exec%'\n    OR attribute_value IN ('/ibc.core.channel.v1.MsgRecvPacket', '/ibc.applications.transfer.v1.MsgTransfer'))\n),\ngrp AS (\n  SELECT\n    A.tx_id,\n    A.msg_index,\n    is_module,\n    RANK() over(\n    ", "doc_id": "ea3b8ec4-7925-4a0d-8deb-8e69f2c0e09e", "embedding": null, "doc_hash": "3732e965bc82c06dfdfb1dddb854252d18b621cbd130dd4e802293bead9100b4", "extra_info": {"file_path": "models/silver/silver__msgs.sql", "file_name": "silver__msgs.sql"}, "node_info": {"start": 0, "end": 2065, "_node_type": "1"}, "relationships": {"1": "55ac3421090689d6ed03a34d1fa4efc29d9d0a90", "3": "c044a701-9820-45ec-84e0-d552d3040a79"}}, "__type__": "1"}, "c044a701-9820-45ec-84e0-d552d3040a79": {"__data__": {"text": "  is_module,\n    RANK() over(\n      PARTITION BY A.tx_id,\n      A.msg_group\n      ORDER BY\n        A.msg_index\n    ) -1 msg_sub_group\n  FROM\n    prefinal A\n    JOIN exec_actions b\n    ON A.tx_id = b.tx_id\n    AND A.msg_group = b.msg_group\n  WHERE\n    A.is_module = TRUE\n    AND A.msg_type = 'message'\n)\nSELECT\n  block_id,\n  block_timestamp,\n  A.tx_id,\n  tx_succeeded,\n  msg_group,\n  COALESCE(\n    CASE\n      WHEN msg_group IS NULL THEN NULL\n      ELSE LAST_VALUE(\n        b.msg_sub_group ignore nulls\n      ) over(\n        PARTITION BY A.tx_id,\n        msg_group\n        ORDER BY\n          A.msg_index DESC rows unbounded preceding\n      )\n    END,\n    CASE\n      WHEN msg_group IS NOT NULL\n      AND last_msg_type <> 'tx' THEN 0\n    END\n  ) AS msg_sub_group,\n  A.msg_index,\n  msg_type,\n  msg,\n  _inserted_timestamp,\n  concat_ws(\n    '-',\n    A.tx_id,\n    A.msg_index\n  ) AS _unique_key\nFROM\n  prefinal A\n  LEFT JOIN grp b\n  ON A.tx_id = b.tx_id\n  AND A.msg_index = b.msg_index\n", "doc_id": "c044a701-9820-45ec-84e0-d552d3040a79", "embedding": null, "doc_hash": "eca2a0ffd23eed12c47bcf1d730643f01baa69c28c244ed9e754662d916a2fdd", "extra_info": {"file_path": "models/silver/silver__msgs.sql", "file_name": "silver__msgs.sql"}, "node_info": {"start": 2031, "end": 3009, "_node_type": "1"}, "relationships": {"1": "55ac3421090689d6ed03a34d1fa4efc29d9d0a90", "2": "ea3b8ec4-7925-4a0d-8deb-8e69f2c0e09e"}}, "__type__": "1"}, "958ac0c7-e995-4b5a-a2f0-5f5068c385b7": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__msgs\n    description: Records of all messages associated to transactions that have occurred on Osmosis, dating back to the genesis block. \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_INDEX\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 1\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: MSG_GROUP\n        description: \"{{ doc('silver_msg_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT\n      - name: MSG_SUB_GROUP\n        description: \"{{ doc('msg_sub_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT\n      - name: MSG_INDEX\n        description: \"{{ doc('msg_index') }}\"\n   ", "doc_id": "958ac0c7-e995-4b5a-a2f0-5f5068c385b7", "embedding": null, "doc_hash": "7bd037d0d90d2957e29334934951e38b532dbb296779b2d699259bf8d4e30982", "extra_info": {"file_path": "models/silver/silver__msgs.yml", "file_name": "silver__msgs.yml"}, "node_info": {"start": 0, "end": 1822, "_node_type": "1"}, "relationships": {"1": "023e32ed39a29832db7c59384713dffb542dd514", "3": "20bf78ed-1d04-4667-9d7c-4b42fc5b9fd0"}}, "__type__": "1"}, "20bf78ed-1d04-4667-9d7c-4b42fc5b9fd0": {"__data__": {"text": "    description: \"{{ doc('msg_index') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: MSG_TYPE\n        description: \"{{ doc('msg_type') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: MSG\n        description: \"The underlying json from the message or event within the transactions\"\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "20bf78ed-1d04-4667-9d7c-4b42fc5b9fd0", "embedding": null, "doc_hash": "be69021c55d3b3fdf3cb5bbda04cb3c6fd5154a3a23b26340fc51118bf0983ee", "extra_info": {"file_path": "models/silver/silver__msgs.yml", "file_name": "silver__msgs.yml"}, "node_info": {"start": 1777, "end": 2641, "_node_type": "1"}, "relationships": {"1": "023e32ed39a29832db7c59384713dffb542dd514", "2": "958ac0c7-e995-4b5a-a2f0-5f5068c385b7"}}, "__type__": "1"}, "5fb32cd4-2e3d-498a-a209-2349d49db46d": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = [\"pool_id\",\"block_id\"],\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp']\n) }}\n\nSELECT\n    A.block_id,\n    C.block_timestamp,\n    b.value :\"@type\" :: STRING AS pool_type,\n    b.value :address :: STRING AS pool_address,\n    b.value :future_pool_governor :: STRING AS future_pool_governor,\n    b.value :id :: INT AS pool_id,\n    COALESCE(\n        b.value :pool_assets [0] :token :amount,\n        b.value :poolAssets [0] :token :amount,\n        b.value :pool_liquidity [0] :amount\n    ) :: bigint AS token_0_amount,\n    COALESCE(\n        b.value :pool_assets [0] :token :denom,\n        b.value :poolAssets [0] :token :denom,\n        b.value :pool_liquidity [0] :denom\n    ) :: STRING AS token_0_denom,\n    COALESCE(\n        b.value :pool_assets [0] :weight,\n        b.value :poolAssets [0] :weight\n    ) :: bigint AS token_0_weight,\n    COALESCE(\n        b.value :pool_assets [1] :token :amount,\n        b.value :poolAssets [1] :token :amount,\n        b.value :pool_liquidity [1] :amount\n    ) :: bigint AS token_1_amount,\n    COALESCE(\n        b.value :pool_assets [1] :token :denom,\n        b.value :poolAssets [1] :token :denom,\n        b.value :pool_liquidity [1] :denom\n    ) :: STRING AS token_1_denom,\n    COALESCE(\n        b.value :pool_assets [1] :weight,\n        b.value :poolAssets [1] :weight\n    ) :: bigint AS token_1_weight,\n    COALESCE(\n        b.value :pool_assets [2] :token :amount,\n        b.value :poolAssets [2] :token :amount,\n        b.value :pool_liquidity [2] :amount\n    ) :: bigint AS token_2_amount,\n    COALESCE(\n        b.value :pool_assets [2] :token :denom,\n        b.value :poolAssets [2] :token :denom,\n        b.value :pool_liquidity [2] :denom\n    ) :: STRING AS token_2_denom,\n    COALESCE(\n        b.value :pool_assets [2] :weight,\n        b.value :poolAssets [2] :weight\n    ) :: bigint AS token_2_weight,\n    COALESCE(\n        b.value :pool_assets [3] :token :amount,\n        b.value :poolAssets [3] :token :amount,\n        b.value :pool_liquidity [3]", "doc_id": "5fb32cd4-2e3d-498a-a209-2349d49db46d", "embedding": null, "doc_hash": "5c704992ebd6f3b77d9bcd53556236bc7c4ebe8460773a3af59244fe83b003c2", "extra_info": {"file_path": "models/silver/silver__pool_balances.sql", "file_name": "silver__pool_balances.sql"}, "node_info": {"start": 0, "end": 2075, "_node_type": "1"}, "relationships": {"1": "8f6be040beb4aa62c1a856cc6d6fa6140ba85e9d", "3": "12f655da-e440-4b61-9cf8-c112556321c2"}}, "__type__": "1"}, "12f655da-e440-4b61-9cf8-c112556321c2": {"__data__": {"text": "       b.value :pool_liquidity [3] :amount\n    ) :: bigint AS token_3_amount,\n    COALESCE(\n        b.value :pool_assets [3] :token :denom,\n        b.value :poolAssets [3] :token :denom,\n        b.value :pool_liquidity [3] :denom\n    ) :: STRING AS token_3_denom,\n    COALESCE(\n        b.value :pool_assets [3] :weight,\n        b.value :poolAssets [3] :weight\n    ) :: bigint AS token_3_weight,\n    COALESCE(\n        b.value :pool_params :exit_fee,\n        b.value :poolParams :exitFee\n    ) :: FLOAT AS exit_fee,\n    COALESCE(\n        b.value :pool_params :smooth_weight_change_params,\n        b.value :poolParams :smoothWeightChangeParams\n    ) :: STRING AS smooth_weight_change_params,\n    COALESCE(\n        b.value :pool_params :swap_fee,\n        b.value :poolParams :swapFee\n    ) :: FLOAT AS swap_fee,\n    COALESCE(\n        b.value :total_shares :amount,\n        b.value :totalShares :amount\n    ) :: bigint AS total_shares_amount,\n    COALESCE(\n        b.value :total_shares :denom,\n        b.value :totalShares :denom\n    ) :: STRING AS total_shares_denom,\n    COALESCE(\n        b.value :total_weight,\n        b.value :totalWeight\n    ) :: bigint AS total_weight,\n    b.value :scaling_factor_controller :: STRING AS scaling_factor_controller,\n    b.value :scaling_factors AS scaling_factors,\n    _INSERTED_DATE AS _inserted_timestamp\nFROM\n    {{ source(\n        'bronze_streamline',\n        'pool_balances_api'\n    ) }} A\n    JOIN LATERAL FLATTEN(\n        A.pools\n    ) b\n    JOIN {{ ref('silver__blocks') }} C\n    ON A.block_id = C.block_id\n\n{% if is_incremental() %}\nWHERE\n    _INSERTED_DATE >= (\n        SELECT\n            MAX(\n                _inserted_timestamp\n            )\n        FROM\n            {{ this }}\n    )\n{% endif %}\n", "doc_id": "12f655da-e440-4b61-9cf8-c112556321c2", "embedding": null, "doc_hash": "0a6595220cd1028ba1c76657044edd2005d50f8c99dadbc3b6296684f082802c", "extra_info": {"file_path": "models/silver/silver__pool_balances.sql", "file_name": "silver__pool_balances.sql"}, "node_info": {"start": 2041, "end": 3784, "_node_type": "1"}, "relationships": {"1": "8f6be040beb4aa62c1a856cc6d6fa6140ba85e9d", "2": "5fb32cd4-2e3d-498a-a209-2349d49db46d"}}, "__type__": "1"}, "5f94ee7a-6f2c-49d5-8cae-de1da2e2822c": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__pool_balances\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - BLOCK_ID\n            - POOL_ID\n    columns:\n      - name: BLOCK_ID\n        tests:\n          - not_null\n      - name: BLOCK_TIMESTAMP\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 1\n      - name: POOL_TYPE\n        tests:\n          - not_null\n      - name: POOL_ADDRESS\n        tests:\n          - not_null\n      - name: FUTURE_POOL_GOVERNOR\n      - name: POOL_ID\n        tests:\n          - not_null\n      - name: TOKEN_0_AMOUNT\n        tests:\n          - not_null\n      - name: TOKEN_0_DENOM\n        tests:\n          - not_null\n      - name: TOKEN_0_WEIGHT\n      - name: TOKEN_1_AMOUNT\n        tests:\n          - not_null\n      - name: TOKEN_1_DENOM\n        tests:\n          - not_null\n      - name: TOKEN_1_WEIGHT\n      - name: TOKEN_2_AMOUNT\n      - name: TOKEN_2_DENOM\n      - name: TOKEN_2_WEIGHT\n      - name: TOKEN_3_AMOUNT\n      - name: TOKEN_3_DENOM\n      - name: TOKEN_3_WEIGHT\n      - name: EXIT_FEE\n        tests:\n          - not_null\n      - name: SMOOTH_WEIGHT_CHANGE_PARAMS\n      - name: SWAP_FEE\n        tests:\n          - not_null\n      - name: TOTAL_SHARES_AMOUNT\n        tests:\n          - not_null\n      - name: TOTAL_SHARES_DENOM\n        tests:\n          - not_null\n      - name: TOTAL_WEIGHT\n      - name: SCALING_FACTOR_CONTROLLER\n      - name: SCALING_FACTORS", "doc_id": "5f94ee7a-6f2c-49d5-8cae-de1da2e2822c", "embedding": null, "doc_hash": "2261d1cf8e53ee27b74a9ed11f02d80549a96e9c27945094949a76ebfc4411b5", "extra_info": {"file_path": "models/silver/silver__pool_balances.yml", "file_name": "silver__pool_balances.yml"}, "node_info": {"start": 0, "end": 1549, "_node_type": "1"}, "relationships": {"1": "8a53f83feb681521de57f5e18a32622a4c9e5794"}}, "__type__": "1"}, "e2f5a4ec-d117-498c-bd0b-472c99134fc8": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = [\"block_date\",\"pool_id\",\"currency\"],\n    incremental_strategy = 'merge',\n    cluster_by = ['block_date']\n) }}\n\nWITH last_block_of_day AS (\n\n    SELECT\n        block_timestamp :: DATE AS block_date,\n        MAX(block_id) AS block_id\n    FROM\n        {{ ref('silver__blocks') }}\n    WHERE\n        block_id >= 2300000\n    GROUP BY\n        block_date\n),\npool_token_prices_usd AS (\n    SELECT\n        block_timestamp,\n        block_id,\n        token_address,\n        price_usd\n    FROM\n        {{ ref('silver__pool_token_prices_usd') }}\n\n{% if is_incremental() %}\nWHERE\n    block_timestamp :: DATE >= (\n        SELECT\n            MAX(\n                block_date\n            )\n        FROM\n            {{ this }}\n    ) - INTERVAL '7 days'\n{% endif %}\n),\nfees AS (\n    SELECT\n        block_timestamp :: DATE block_date,\n        swap_fee,\n        exit_fee,\n        pool_id\n    FROM\n        {{ ref('silver__pool_balances') }}\n\n{% if is_incremental() %}\nWHERE\n    block_timestamp :: DATE >= (\n        SELECT\n            MAX(\n                block_date\n            )\n        FROM\n            {{ this }}\n    ) - INTERVAL '7 days'\n{% endif %}\n\nqualify(ROW_NUMBER() over(PARTITION BY pool_id, block_timestamp :: DATE\nORDER BY\n    block_id) = 1)\n),\npre_agg AS (\n    SELECT\n        A.pool_id,\n        b.block_date,\n        b.block_id,\n        A.from_currency AS currency,\n        COALESCE(\n            from_amount / pow(\n                10,\n                CASE\n                    WHEN from_currency LIKE 'gamm/pool/%' THEN 18\n                    ELSE am.decimal\n                END\n            ),\n            from_amount\n        ) * COALESCE(\n            fees.swap_fee,\n            0\n        ) AS fees,\n        fees * price_usd", "doc_id": "e2f5a4ec-d117-498c-bd0b-472c99134fc8", "embedding": null, "doc_hash": "dca7c90754dd74d410340ae265e95cb0fdeb2a208f8f8f35bc167cbe65e7ae75", "extra_info": {"file_path": "models/silver/silver__pool_fee_summary_day.sql", "file_name": "silver__pool_fee_summary_day.sql"}, "node_info": {"start": 0, "end": 1775, "_node_type": "1"}, "relationships": {"1": "ae9fc253fbe51513e7dd250ce709446876c1ebf0", "3": "1a613b18-bb73-4ca1-b570-685fc3b276c7"}}, "__type__": "1"}, "1a613b18-bb73-4ca1-b570-685fc3b276c7": {"__data__": {"text": ") AS fees,\n        fees * price_usd AS fees_usd,\n        'swap' AS fee_type,\n        A._inserted_timestamp\n    FROM\n        {{ ref('silver__token_swapped') }} A\n        LEFT JOIN fees\n        ON A.pool_id = fees.pool_id\n        AND A.block_timestamp :: DATE = fees.block_date\n        JOIN last_block_of_day b\n        ON A.block_timestamp :: DATE = b.block_date\n        LEFT JOIN {{ ref('silver__asset_metadata') }}\n        am\n        ON A.from_currency = am.address\n        LEFT JOIN pool_token_prices_usd prices\n        ON A.from_currency = prices.token_address\n        AND A.block_id_hour = prices.block_id\n    WHERE\n        A.block_id >= 2300000\n\n{% if is_incremental() %}\nAND b.block_date >= (\n    SELECT\n        MAX(\n            block_date\n        )\n    FROM\n        {{ this }}\n) - INTERVAL '7 days'\n{% endif %}\nUNION ALL\nSELECT\n    A.pool_id,\n    b.block_date,\n    b.block_id,\n    A.currency,\n    amount / pow(\n        10,\n        18\n    ) * COALESCE(\n        fees.exit_fee,\n        0\n    ) AS fees,\n    NULL AS fees_usd,\n    'exit' AS fee_type,\n    A._inserted_timestamp\nFROM\n    {{ ref('silver__liquidity_provider_actions') }} A\n    JOIN fees\n    ON A.pool_id = fees.pool_id\n    AND A.block_timestamp :: DATE = fees.block_date\n    JOIN last_block_of_day b\n    ON A.block_timestamp :: DATE = b.block_date\nWHERE\n    A.action = 'lp_tokens_burned'\n    AND COALESCE(\n        fees.exit_fee,\n        0\n    ) <> 0\n    AND A.block_id >= 2300000\n\n{% if is_incremental() %}\nAND b.block_date >= (\n    SELECT\n        MAX(\n            block_date\n        )\n    FROM\n        {{ this }}\n) - INTERVAL '7 days'\n{% endif %}\n)\nSELECT\n    pool_id,\n    block_date,\n    block_id,\n    currency,\n    SUM(fees) AS fees,\n    SUM(fees_usd) AS fees_usd,\n    fee_type,\n    MAX(_inserted_timestamp) AS _inserted_timestamp\nFROM\n    pre_agg A\nGROUP BY\n    pool_id,\n    block_date,\n    block_id,\n    currency,\n   ", "doc_id": "1a613b18-bb73-4ca1-b570-685fc3b276c7", "embedding": null, "doc_hash": "0aa028902df3e5676842e6ccf99c4f751a852485f382fc02d75f8181fd013321", "extra_info": {"file_path": "models/silver/silver__pool_fee_summary_day.sql", "file_name": "silver__pool_fee_summary_day.sql"}, "node_info": {"start": 1753, "end": 3639, "_node_type": "1"}, "relationships": {"1": "ae9fc253fbe51513e7dd250ce709446876c1ebf0", "2": "e2f5a4ec-d117-498c-bd0b-472c99134fc8", "3": "7c5b3d7f-3e0b-4803-af3f-e3c2ffc4b20f"}}, "__type__": "1"}, "7c5b3d7f-3e0b-4803-af3f-e3c2ffc4b20f": {"__data__": {"text": "   block_id,\n    currency,\n    fee_type\n", "doc_id": "7c5b3d7f-3e0b-4803-af3f-e3c2ffc4b20f", "embedding": null, "doc_hash": "df78a17d0c4d2b7d7acb4eb25e3f13731e9bc57dc193087b16333988c729d673", "extra_info": {"file_path": "models/silver/silver__pool_fee_summary_day.sql", "file_name": "silver__pool_fee_summary_day.sql"}, "node_info": {"start": 3632, "end": 3672, "_node_type": "1"}, "relationships": {"1": "ae9fc253fbe51513e7dd250ce709446876c1ebf0", "2": "1a613b18-bb73-4ca1-b570-685fc3b276c7"}}, "__type__": "1"}, "68e50d0c-9cad-4f11-a6fa-d9658bcb4399": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__pool_fee_summary_day\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - BLOCK_DATE\n            - POOL_ID\n            - CURRENCY\n    columns:\n      - name: BLOCK_ID\n        tests:\n          - not_null\n      - name: BLOCK_DATE\n        tests:\n          - not_null\n      - name: POOL_ID\n        tests:\n          - not_null\n      - name: CURRENCY\n        tests:\n          - not_null\n      - name: FEES\n        tests:\n          - not_null\n      - name: FEES_USD\n      - name: FEE_TYPE\n        tests:\n          - not_null\n      - name: _INSERTED_TIMESTAMP\n        tests:\n          - not_null\n\n", "doc_id": "68e50d0c-9cad-4f11-a6fa-d9658bcb4399", "embedding": null, "doc_hash": "9626b79ab34dea9477f66236380cd0de8af23944a5bba708c788f70e34148d47", "extra_info": {"file_path": "models/silver/silver__pool_fee_summary_day.yml", "file_name": "silver__pool_fee_summary_day.yml"}, "node_info": {"start": 0, "end": 680, "_node_type": "1"}, "relationships": {"1": "6491e4a6f8dd499e2ca221136062da883b0ec8c3"}}, "__type__": "1"}, "ead8f21c-fa24-4c5c-b747-6bcd6b4d732e": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n) }}\n\nWITH\n\n{% if is_incremental() %}\nmax_date AS (\n\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n),\n{% endif %}\n\npool_creation_txs AS (\n    SELECT\n        DISTINCT tx_id\n    FROM\n        {{ ref('silver__msgs') }}\n    WHERE\n        msg_type = 'pool_created'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nb AS (\n    SELECT\n        ma.tx_id,\n        msg_type,\n        msg_index,\n        attribute_index,\n        attribute_key,\n        attribute_value,\n        _inserted_timestamp\n    FROM\n        {{ ref('silver__msg_attributes') }}\n        ma\n        INNER JOIN pool_creation_txs t\n        ON t.tx_id = ma.tx_id\n    WHERE\n        (\n            attribute_key IN (\n                'module',\n                'pool_id'\n            )\n            OR (\n                msg_type = 'transfer'\n                AND attribute_key = 'amount'\n                AND attribute_value IS NOT NULL\n                AND ARRAY_SIZE(SPLIT(attribute_value, ',')) :: NUMBER > 1\n            )\n        )\n        AND attribute_value <> 'poolmanager'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nC AS (\n    SELECT\n        tx_id,\n        _inserted_timestamp,\n        OBJECT_AGG(\n            attribute_key,\n            attribute_value :: variant\n        ) AS obj\n    FROM\n        (\n            SELECT\n                DISTINCT tx_id,\n                attribute_key,\n           ", "doc_id": "ead8f21c-fa24-4c5c-b747-6bcd6b4d732e", "embedding": null, "doc_hash": "14a8264c0beace30fe582bab820a9ad9f93dc63c851de650858a39c74f4070ec", "extra_info": {"file_path": "models/silver/silver__pool_metadata.sql", "file_name": "silver__pool_metadata.sql"}, "node_info": {"start": 0, "end": 1762, "_node_type": "1"}, "relationships": {"1": "8cbb27e66e7624c2757f0b36f7464a36eb8c0824", "3": "a1f56649-324d-40df-be37-ed71f9f375bb"}}, "__type__": "1"}, "a1f56649-324d-40df-be37-ed71f9f375bb": {"__data__": {"text": "    attribute_key,\n                attribute_value,\n                _inserted_timestamp\n            FROM\n                b\n        )\n    GROUP BY\n        tx_id,\n        _inserted_timestamp\n),\nd AS (\n    SELECT\n        tx_id,\n        obj :module :: STRING AS module,\n        obj :pool_id :: NUMBER AS pool_id,\n        'asset_address' AS object_key,\n        LTRIM(\n            A.value,\n            '0123456789'\n        ) AS asset_address,\n        _inserted_timestamp\n    FROM\n        C,\n        TABLE(FLATTEN(SPLIT(obj :amount, ','))) A\n),\ne AS (\n    SELECT\n        tx_id,\n        module,\n        pool_id,\n        asset_address,\n        OBJECT_AGG(\n            object_key,\n            asset_address :: variant\n        ) AS asset_obj,\n        _inserted_timestamp\n    FROM\n        d\n    GROUP BY\n        tx_id,\n        module,\n        pool_id,\n        asset_address,\n        _inserted_timestamp\n)\nSELECT\n    module,\n    pool_id,\n    ARRAY_AGG(asset_obj) AS assets,\n    concat_ws(\n        '-',\n        module,\n        pool_id\n    ) AS _unique_key,\n    _inserted_timestamp\nFROM\n    e\nGROUP BY\n    module,\n    pool_id,\n    _inserted_timestamp\n", "doc_id": "a1f56649-324d-40df-be37-ed71f9f375bb", "embedding": null, "doc_hash": "5b98e8d78419f9c3e6cc22aeea451098ede85a496adbd0c4e8d3dc18cbbdb523", "extra_info": {"file_path": "models/silver/silver__pool_metadata.sql", "file_name": "silver__pool_metadata.sql"}, "node_info": {"start": 1732, "end": 2868, "_node_type": "1"}, "relationships": {"1": "8cbb27e66e7624c2757f0b36f7464a36eb8c0824", "2": "ead8f21c-fa24-4c5c-b747-6bcd6b4d732e"}}, "__type__": "1"}, "bf3fb169-353b-43f5-99d6-2de4d7008657": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__pool_metadata\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - MODULE\n            - POOL_ID\n    columns:\n      - name: MODULE\n        description: \"{{ doc('pool_module') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: POOL_ID\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: ASSETS\n        description: \"{{ doc('pool_assets') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - OBJECT\n                - ARRAY", "doc_id": "bf3fb169-353b-43f5-99d6-2de4d7008657", "embedding": null, "doc_hash": "7942d2da1ef6b66c2a94fc77ff2b11f4d17303edc3a007c2bcf8e0a7b61f520c", "extra_info": {"file_path": "models/silver/silver__pool_metadata.yml", "file_name": "silver__pool_metadata.yml"}, "node_info": {"start": 0, "end": 968, "_node_type": "1"}, "relationships": {"1": "a3c4e255903c742d97cdba70ba353058aa86a86f"}}, "__type__": "1"}, "a6a33ae0-68e4-44fd-9026-8da6034e26bc": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = [\"pool_id\",\"block_hour\"],\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp']\n) }}\n\nWITH pool_token_prices AS (\n\n    SELECT\n        block_timestamp,\n        block_id,\n        token_address,\n        pool_id,\n        price\n    FROM\n        {{ ref('silver__pool_token_prices') }}\n\n{% if is_incremental() %}\nWHERE\n    block_timestamp >= (\n        SELECT\n            MAX(\n                block_timestamp\n            )\n        FROM\n            {{ this }}\n    ) - INTERVAL '7 days'\n{% endif %}\n),\npool_token_prices_usd AS (\n    SELECT\n        block_timestamp,\n        block_id,\n        token_address,\n        price_usd\n    FROM\n        {{ ref('silver__pool_token_prices_usd') }}\n\n{% if is_incremental() %}\nWHERE\n    block_timestamp >= (\n        SELECT\n            MAX(\n                block_timestamp\n            )\n        FROM\n            {{ this }}\n    ) - INTERVAL '7 days'\n{% endif %}\n),\ntwap AS (\n    SELECT\n        block_date,\n        token_address,\n        pool_id,\n        AVG(price) price\n    FROM\n        (\n            SELECT\n                block_timestamp :: DATE block_date,\n                token_address,\n                pool_id,\n                MIN(price) price\n            FROM\n                pool_token_prices\n            GROUP BY\n                block_date,\n                token_address,\n                pool_id\n            UNION ALL\n            SELECT\n                block_timestamp :: DATE block_date,\n                token_address,\n                pool_id,\n                MAX(price) price_usd\n            FROM\n                pool_token_prices\n            GROUP BY\n                block_date,\n   ", "doc_id": "a6a33ae0-68e4-44fd-9026-8da6034e26bc", "embedding": null, "doc_hash": "a22ab9ad63137a51a8ce32043983f2b4c4bb09c2642484b307d31c6d86299dc6", "extra_info": {"file_path": "models/silver/silver__pool_summary_hour.sql", "file_name": "silver__pool_summary_hour.sql"}, "node_info": {"start": 0, "end": 1697, "_node_type": "1"}, "relationships": {"1": "1edff04a6189f3fb9ef30288e593bab64f1b1205", "3": "a3801d42-00d0-4265-a1c3-280fed071fee"}}, "__type__": "1"}, "a3801d42-00d0-4265-a1c3-280fed071fee": {"__data__": {"text": "            block_date,\n                token_address,\n                pool_id\n            UNION ALL\n            SELECT\n                block_timestamp :: DATE,\n                token_address,\n                pool_id,\n                price\n            FROM\n                pool_token_prices qualify (ROW_NUMBER() over(PARTITION BY block_timestamp :: DATE, token_address\n            ORDER BY\n                block_id) = 1)\n            UNION ALL\n            SELECT\n                block_timestamp :: DATE,\n                token_address,\n                pool_id,\n                price\n            FROM\n                pool_token_prices qualify (ROW_NUMBER() over(PARTITION BY block_timestamp :: DATE, token_address\n            ORDER BY\n                block_id DESC) = 1)\n        )\n    GROUP BY\n        block_date,\n        token_address,\n        pool_id\n),\ntwap_usd AS (\n    SELECT\n        block_date,\n        token_address,\n        AVG(price_usd) price_usd\n    FROM\n        (\n            SELECT\n                block_timestamp :: DATE block_date,\n                token_address,\n                MIN(price_usd) price_usd\n            FROM\n                pool_token_prices_usd\n            GROUP BY\n                block_date,\n                token_address\n            UNION ALL\n            SELECT\n                block_timestamp :: DATE block_date,\n                token_address,\n                MAX(price_usd) price_usd\n            FROM\n                pool_token_prices_usd\n            GROUP BY\n                block_date,\n                token_address\n            UNION ALL\n     ", "doc_id": "a3801d42-00d0-4265-a1c3-280fed071fee", "embedding": null, "doc_hash": "f947bc2bdde2e8299768738e1e6bf6cd626850c0da4149b518989b37c628244c", "extra_info": {"file_path": "models/silver/silver__pool_summary_hour.sql", "file_name": "silver__pool_summary_hour.sql"}, "node_info": {"start": 1686, "end": 3262, "_node_type": "1"}, "relationships": {"1": "1edff04a6189f3fb9ef30288e593bab64f1b1205", "2": "a6a33ae0-68e4-44fd-9026-8da6034e26bc", "3": "83c6586a-3fcf-42d0-85cd-d7f1c70c9551"}}, "__type__": "1"}, "83c6586a-3fcf-42d0-85cd-d7f1c70c9551": {"__data__": {"text": "           UNION ALL\n            SELECT\n                block_timestamp :: DATE,\n                token_address,\n                price_usd\n            FROM\n                pool_token_prices_usd qualify (ROW_NUMBER() over(PARTITION BY block_timestamp :: DATE, token_address\n            ORDER BY\n                block_id) = 1)\n            UNION ALL\n            SELECT\n                block_timestamp :: DATE,\n                token_address,\n                price_usd\n            FROM\n                pool_token_prices_usd qualify (ROW_NUMBER() over(PARTITION BY block_timestamp :: DATE, token_address\n            ORDER BY\n                block_id DESC) = 1)\n        )\n    GROUP BY\n        block_date,\n        token_address\n),\nvolume AS (\n    SELECT\n        block_id_hour,\n        pool_id,\n        SUM(amount) amount\n    FROM\n        (\n            SELECT\n                block_id_hour,\n                pool_id,\n                to_amount / pow(\n                    10,\n                    6\n                ) amount\n            FROM\n                {{ ref('silver__token_swapped') }}\n            WHERE\n                to_currency = 'uosmo'\n\n{% if is_incremental() %}\nAND block_timestamp >= (\n    SELECT\n        MAX(\n            block_timestamp\n        )\n    FROM\n        {{ this }}\n) - INTERVAL '7 days'\n{% endif %}\nUNION ALL\nSELECT\n    block_id_hour,\n    pool_id,\n    from_amount / pow(\n        10,\n        6\n    ) AS amount\nFROM\n    {{ ref('silver__token_swapped') }}\nWHERE\n    from_currency = 'uosmo'\n\n{% if is_incremental() %}\nAND block_timestamp >= (\n    SELECT\n        MAX(\n            block_timestamp\n        )\n    FROM\n        {{ this }}\n) - INTERVAL '7 days'\n{% endif", "doc_id": "83c6586a-3fcf-42d0-85cd-d7f1c70c9551", "embedding": null, "doc_hash": "649ccef01254c3d4fe0950e9d1b704dded49424ddc66ca2ebedfe4a16b3e16d4", "extra_info": {"file_path": "models/silver/silver__pool_summary_hour.sql", "file_name": "silver__pool_summary_hour.sql"}, "node_info": {"start": 3266, "end": 4936, "_node_type": "1"}, "relationships": {"1": "1edff04a6189f3fb9ef30288e593bab64f1b1205", "2": "a3801d42-00d0-4265-a1c3-280fed071fee", "3": "653212f5-ace5-4fd6-a071-88cd46b08aef"}}, "__type__": "1"}, "653212f5-ace5-4fd6-a071-88cd46b08aef": {"__data__": {"text": "    {{ this }}\n) - INTERVAL '7 days'\n{% endif %}\n)\nGROUP BY\n    block_id_hour,\n    pool_id\n),\nadjust AS (\n    SELECT\n        A.block_id,\n        A.block_timestamp,\n        A.pool_id,\n        token_0_denom,\n        COALESCE(\n            token_0_amount / pow(\n                10,\n                CASE\n                    WHEN token_0_denom LIKE 'gamm/pool/%' THEN 18\n                    ELSE t0.decimal\n                END\n            ),\n            token_0_amount\n        ) AS token_0_amount,\n        token_1_denom,\n        COALESCE(\n            token_1_amount / pow(\n                10,\n                CASE\n                    WHEN token_1_denom LIKE 'gamm/pool/%' THEN 18\n                    ELSE t1.decimal\n                END\n            ),\n            token_1_amount\n        ) AS token_1_amount,\n        token_2_denom,\n        COALESCE(\n            token_2_amount / pow(\n                10,\n                CASE\n                    WHEN token_2_amount LIKE 'gamm/pool/%' THEN 18\n                    ELSE t2.decimal\n                END\n            ),\n            token_2_amount\n        ) AS token_2_amount,\n        token_3_denom,\n        COALESCE(\n            token_3_amount / pow(\n                10,\n                CASE\n                    WHEN token_3_amount LIKE 'gamm/pool/%' THEN 18\n                    ELSE t3.decimal\n                END\n            ),\n            token_3_amount\n        ) AS token_3_amount,\n        _inserted_timestamp\n    FROM\n        {{", "doc_id": "653212f5-ace5-4fd6-a071-88cd46b08aef", "embedding": null, "doc_hash": "17ea5a1a31ca5e4b1ef686aa3dd8b2b656f2303bae6d9dc40cf939e40dfe455f", "extra_info": {"file_path": "models/silver/silver__pool_summary_hour.sql", "file_name": "silver__pool_summary_hour.sql"}, "node_info": {"start": 4912, "end": 6380, "_node_type": "1"}, "relationships": {"1": "1edff04a6189f3fb9ef30288e593bab64f1b1205", "2": "83c6586a-3fcf-42d0-85cd-d7f1c70c9551", "3": "758f01ed-ba5b-4600-9885-d63d15175dbe"}}, "__type__": "1"}, "758f01ed-ba5b-4600-9885-d63d15175dbe": {"__data__": {"text": "   FROM\n        {{ ref('silver__pool_balances') }} A\n        LEFT JOIN {{ ref('silver__asset_metadata') }}\n        t0\n        ON A.token_0_denom = t0.address\n        LEFT JOIN {{ ref('silver__asset_metadata') }}\n        t1\n        ON A.token_1_denom = t1.address\n        LEFT JOIN {{ ref('silver__asset_metadata') }}\n        t2\n        ON A.token_2_denom = t2.address\n        LEFT JOIN {{ ref('silver__asset_metadata') }}\n        t3\n        ON A.token_3_denom = t3.address\n\n{% if is_incremental() %}\nWHERE\n    A.block_timestamp >= (\n        SELECT\n            MAX(\n                block_timestamp\n            )\n        FROM\n            {{ this }}\n    ) - INTERVAL '7 days'\n{% endif %}\n\nqualify(ROW_NUMBER() over(PARTITION BY DATE_TRUNC('hour', block_timestamp), pool_id\nORDER BY\n    block_id DESC) = 1)\n)\nSELECT\n    A.block_id,\n    A.block_timestamp,\n    DATE_TRUNC(\n        'hour',\n        A.block_timestamp\n    ) block_hour,\n    A.pool_id,\n    token_0_denom,\n    token_0_amount,\n    token_1_denom,\n    token_1_amount,\n    b.price,\n    C.price_usd,\n    twap.price AS twap,\n    twap_usd.price_usd AS twap_usd,\n    CASE\n        WHEN token_1_denom = 'uosmo' THEN token_1_amount * 2\n    END AS liquidity,\n    CASE\n        WHEN token_1_denom = 'uosmo' THEN token_1_amount * 2 * op.price_usd\n    END AS liquidity_usd,\n    v.amount AS volume,\n    v.amount * op.price_usd AS volume_usd,\n    token_2_denom,\n    token_2_amount,\n    token_3_denom,\n    token_3_amount,\n    A._inserted_timestamp\nFROM\n    adjust A\n    LEFT JOIN pool_token_prices b\n    ON A.block_id = b.block_id\n    AND A.pool_id = b.pool_id\n    AND A.token_0_denom = b.token_address\n    AND token_2_denom IS NULL\n    LEFT JOIN pool_token_prices_usd C\n    ON A.block_id = C.block_id\n    AND A.token_0_denom = C.token_address\n    JOIN pool_token_prices_usd op\n    ON A.block_id = op.block_id\n    AND op.token_address = 'uosmo'\n    LEFT JOIN twap\n    ON", "doc_id": "758f01ed-ba5b-4600-9885-d63d15175dbe", "embedding": null, "doc_hash": "df21a2b146ce57f325ecd8d6cb216bcde231cfd3374eb7754a76100a6c5a84b4", "extra_info": {"file_path": "models/silver/silver__pool_summary_hour.sql", "file_name": "silver__pool_summary_hour.sql"}, "node_info": {"start": 6408, "end": 8314, "_node_type": "1"}, "relationships": {"1": "1edff04a6189f3fb9ef30288e593bab64f1b1205", "2": "653212f5-ace5-4fd6-a071-88cd46b08aef", "3": "6691fce2-8aca-45bf-9801-e0f077480014"}}, "__type__": "1"}, "6691fce2-8aca-45bf-9801-e0f077480014": {"__data__": {"text": "'uosmo'\n    LEFT JOIN twap\n    ON A.token_0_denom = twap.token_address\n    AND A.block_timestamp :: DATE = twap.block_date\n    AND A.pool_id = twap.pool_id\n    LEFT JOIN twap_usd\n    ON A.token_0_denom = twap_usd.token_address\n    AND A.block_timestamp :: DATE = twap_usd.block_date\n    LEFT JOIN volume v\n    ON A.block_id = v.block_id_hour\n    AND A.pool_id = v.pool_id\n", "doc_id": "6691fce2-8aca-45bf-9801-e0f077480014", "embedding": null, "doc_hash": "974e95b063c0cab401da19855ff594b0619a83a59e8a347a553c63f81054a30b", "extra_info": {"file_path": "models/silver/silver__pool_summary_hour.sql", "file_name": "silver__pool_summary_hour.sql"}, "node_info": {"start": 8288, "end": 8660, "_node_type": "1"}, "relationships": {"1": "1edff04a6189f3fb9ef30288e593bab64f1b1205", "2": "758f01ed-ba5b-4600-9885-d63d15175dbe"}}, "__type__": "1"}, "8c191632-d8b0-4d9e-a943-120e6cf899b5": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__pool_summary_hour\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - POOL_ID\n            - BLOCK_HOUR\n    columns:\n      - name: BLOCK_ID\n        tests:\n          - not_null\n      - name: BLOCK_TIMESTAMP\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 1\n      - name: POOL_ID\n        tests:\n          - not_null\n      - name: TOKEN_0_DENOM\n        tests:\n          - not_null\n      - name: TOKEN_0_AMOUNT\n        tests:\n          - not_null\n      - name: TOKEN_1_DENOM\n        tests:\n          - not_null\n      - name: TOKEN_1_AMOUNT\n        tests:\n          - not_null\n      - name: PRICE\n      - name: PRICE_USD\n      - name: TWAP\n      - name: TWAP_USD    \n      - name: LIQUIDITY\n      - name: LIQUIDITY_USD   \n      - name: VOLUME\n      - name: VOLUME_USD   \n      - name: TOKEN_2_DENOM\n      - name: TOKEN_2_AMOUNT\n      - name: TOKEN_3_DENOM\n      - name: TOKEN_3_AMOUNT\n      - name: _INSERTED_TIMESTAMP\n        tests:\n          - not_null", "doc_id": "8c191632-d8b0-4d9e-a943-120e6cf899b5", "embedding": null, "doc_hash": "f8cafd9c308e01c713bb2111a176aa97eb9ab0227f9977c223334904b46804eb", "extra_info": {"file_path": "models/silver/silver__pool_summary_hour.yml", "file_name": "silver__pool_summary_hour.yml"}, "node_info": {"start": 0, "end": 1149, "_node_type": "1"}, "relationships": {"1": "2c64e5d05c028555a16ea464e75e60aa2cfd2ae5"}}, "__type__": "1"}, "568130d8-abe9-45af-bd4a-67b6e6136904": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    incremental_strategy = 'delete+insert',\n    cluster_by = ['block_timestamp'],\n) }}\n\nWITH all_staked AS (\n\n    SELECT\n        block_id,\n        block_timestamp,\n        delegator_address AS address,\n        amount,\n        currency,\n        CASE\n            WHEN currency LIKE 'gamm/pool/%' THEN 18\n            ELSE A.decimal\n        END AS DECIMAL,\n        _inserted_timestamp\n    FROM\n        {{ ref('silver__staking') }}\n        s\n        LEFT OUTER JOIN {{ ref('silver__asset_metadata') }} A\n        ON s.currency = A.address\n    WHERE\n        action = 'delegate'\n\n{% if is_incremental() %}\nAND block_timestamp :: DATE >=(\n    SELECT\n        DATEADD('day', -2, MAX(block_timestamp))\n    FROM\n        {{ this }})\n    {% endif %}\n    UNION ALL\n    SELECT\n        block_id,\n        block_timestamp,\n        delegator_address AS address,- amount,\n        currency,\n        CASE\n            WHEN currency LIKE 'gamm/pool/%' THEN 18\n            ELSE A.decimal\n        END AS DECIMAL,\n        _inserted_timestamp\n    FROM\n        {{ ref('silver__staking') }}\n        s\n        LEFT OUTER JOIN {{ ref('silver__asset_metadata') }} A\n        ON s.currency = A.address\n    WHERE\n        action = 'undelegate'\n\n{% if is_incremental() %}\nAND block_timestamp :: DATE >=(\n    SELECT\n        DATEADD('day', -2, MAX(block_timestamp))\n    FROM\n        {{ this }})\n    {% endif %}\n)\nSELECT\n    block_id,\n    block_timestamp,\n    'staked' AS balance_type,\n    address,\n    currency,\n    DECIMAL,\n    SUM(amount) over(\n        PARTITION BY address,\n        currency\n        ORDER BY\n            block_timestamp ASC rows unbounded preceding\n    ) AS balance,\n    _inserted_timestamp\nFROM\n    all_staked\n", "doc_id": "568130d8-abe9-45af-bd4a-67b6e6136904", "embedding": null, "doc_hash": "5ffd685c7eadbfcf5cd31087f58bd8a752b7a7138449ad4b6847b683ebc0b01c", "extra_info": {"file_path": "models/silver/silver__staked_balances.sql", "file_name": "silver__staked_balances.sql"}, "node_info": {"start": 0, "end": 1733, "_node_type": "1"}, "relationships": {"1": "6b2e7a5ac172c373054b45a6c590eaed97bec3c5"}}, "__type__": "1"}, "399fce46-c0ce-4791-8f02-fd4e71bb249a": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__staked_balances\n    description: A table of each staked balance change for wallets on the Osmosis chain. \n    columns:\n      - name: BLOCK_ID \n        description: \"{{ doc('block_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: ADDRESS\n        description: \"{{ doc('address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: BALANCE \n        description: The amount of the currency the wallet held at the given time\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: DECIMAL \n        description: \"{{ doc('decimal') }}\"\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('ingested_at') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n      ", "doc_id": "399fce46-c0ce-4791-8f02-fd4e71bb249a", "embedding": null, "doc_hash": "83c7812c5101118b08ea0e9e6fbe868b2ae7f3b26aeeeaa6d0cc23c94658c930", "extra_info": {"file_path": "models/silver/silver__staked_balances.yml", "file_name": "silver__staked_balances.yml"}, "node_info": {"start": 0, "end": 1843, "_node_type": "1"}, "relationships": {"1": "f11d6e689d5997e8cf97c44042ff6f29a2fefe20", "3": "84730f98-f307-4325-ad6b-d718e388f649"}}, "__type__": "1"}, "84730f98-f307-4325-ad6b-d718e388f649": {"__data__": {"text": "             column_type_list:\n                - TIMESTAMP_NTZ\n      ", "doc_id": "84730f98-f307-4325-ad6b-d718e388f649", "embedding": null, "doc_hash": "a30368284bfaa4d9cb903c26a91c9e0965bbef33cf90e4bd7d3ddaa59d08001d", "extra_info": {"file_path": "models/silver/silver__staked_balances.yml", "file_name": "silver__staked_balances.yml"}, "node_info": {"start": 1838, "end": 1907, "_node_type": "1"}, "relationships": {"1": "f11d6e689d5997e8cf97c44042ff6f29a2fefe20", "2": "399fce46-c0ce-4791-8f02-fd4e71bb249a"}}, "__type__": "1"}, "73faea67-36e5-41e7-8258-26ee47ca42c6": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE']\n) }}\n\nWITH\n\n{% if is_incremental() %}\nmax_date AS (\n\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n),\n{% endif %}\n\nbase AS (\n    SELECT\n        A.tx_id,\n        A.msg_type,\n        A.msg_index,\n        msg_group,\n        msg_sub_group\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n    WHERE\n        msg_type IN (\n            'delegate',\n            'redelegate',\n            'unbond',\n            'create_validator'\n        )\n        AND attribute_value NOT IN (\n            'superfluid_delegate',\n            'superfluid_undelegate',\n            'superfluid_unbond_underlying_lock'\n        )\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nmsg_attr AS (\n    SELECT\n        A.tx_id,\n        A.attribute_key,\n        A.attribute_value,\n        A.msg_index,\n        A.msg_type,\n        A.msg_group,\n        A.msg_sub_group,\n        block_id,\n        block_timestamp,\n        tx_succeeded,\n        _inserted_timestamp\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n        JOIN (\n            SELECT\n                DISTINCT tx_id,\n                msg_index\n            FROM\n                base\n            UNION ALL\n            SELECT\n                DISTINCT tx_id,\n                msg_index + 1 msg_index\n            FROM\n                base\n        ) b\n        ON A.tx_id = b.tx_id\n        AND A.msg_index = b.msg_index\n    WHERE\n       ", "doc_id": "73faea67-36e5-41e7-8258-26ee47ca42c6", "embedding": null, "doc_hash": "15f43280e13faea240d62d938af6aee6581c5b48580405026f35cd7437a53c2f", "extra_info": {"file_path": "models/silver/silver__staking.sql", "file_name": "silver__staking.sql"}, "node_info": {"start": 0, "end": 1697, "_node_type": "1"}, "relationships": {"1": "7990f6b219c8736ba354fc1c565ad2637749ff91", "3": "a6af2e3a-69dd-45cd-9685-8a0c1ee28798"}}, "__type__": "1"}, "a6af2e3a-69dd-45cd-9685-8a0c1ee28798": {"__data__": {"text": "= b.msg_index\n    WHERE\n        A.msg_type IN (\n            'delegate',\n            'message',\n            'redelegate',\n            'unbond',\n            'create_validator'\n        )\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\ntx_address AS (\n    SELECT\n        A.tx_id,\n        SPLIT_PART(\n            attribute_value,\n            '/',\n            0\n        ) AS tx_caller_address\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n        JOIN (\n            SELECT\n                DISTINCT tx_id\n            FROM\n                base\n        ) b\n        ON A.tx_id = b.tx_id\n    WHERE\n        attribute_key = 'acc_seq'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n\nqualify(ROW_NUMBER() over(PARTITION BY A.tx_id\nORDER BY\n    msg_index)) = 1\n),\nvalid AS (\n    SELECT\n        tx_id,\n        msg_group,\n        msg_sub_group,\n        msg_index,\n        OBJECT_AGG(\n            attribute_key :: STRING,\n            attribute_value :: variant\n        ) AS j,\n        COALESCE(\n            j :validator :: STRING,\n            j :destination_validator :: STRING\n        ) AS validator_address,\n        j :source_validator :: STRING AS redelegate_source_validator_address\n    FROM\n        msg_attr\n    WHERE\n        attribute_key LIKE '%validator'\n    GROUP BY\n        tx_id,\n        msg_group,\n        msg_sub_group,\n        msg_index\n),\nsendr AS (\n    SELECT\n        tx_id,\n        msg_group,\n        msg_sub_group,\n        msg_index,\n        OBJECT_AGG(\n            attribute_key ::", "doc_id": "a6af2e3a-69dd-45cd-9685-8a0c1ee28798", "embedding": null, "doc_hash": "004ed434ad2bb83149369876a67bb19bd8d8a493e056c46b829657d7596b7ea2", "extra_info": {"file_path": "models/silver/silver__staking.sql", "file_name": "silver__staking.sql"}, "node_info": {"start": 1679, "end": 3401, "_node_type": "1"}, "relationships": {"1": "7990f6b219c8736ba354fc1c565ad2637749ff91", "2": "73faea67-36e5-41e7-8258-26ee47ca42c6", "3": "be3d22a3-e5ab-4da0-bd4a-e4a9ca11552f"}}, "__type__": "1"}, "be3d22a3-e5ab-4da0-bd4a-e4a9ca11552f": {"__data__": {"text": "           attribute_key :: STRING,\n            attribute_value :: variant\n        ) AS j,\n        j :sender :: STRING AS sender\n    FROM\n        msg_attr A\n    WHERE\n        attribute_key = 'sender'\n    GROUP BY\n        tx_id,\n        msg_group,\n        msg_sub_group,\n        msg_index\n),\namount AS (\n    SELECT\n        tx_id,\n        msg_group,\n        msg_sub_group,\n        msg_index,\n        OBJECT_AGG(\n            attribute_key :: STRING,\n            attribute_value :: variant\n        ) AS j,\n        j :amount :: STRING AS amount\n    FROM\n        msg_attr\n    WHERE\n        attribute_key = 'amount'\n    GROUP BY\n        tx_id,\n        msg_group,\n        msg_sub_group,\n        msg_index\n),\nctime AS (\n    SELECT\n        tx_id,\n        msg_group,\n        msg_sub_group,\n        msg_index,\n        OBJECT_AGG(\n            attribute_key :: STRING,\n            attribute_value :: variant\n        ) AS j,\n        j :completion_time :: STRING AS completion_time\n    FROM\n        msg_attr\n    WHERE\n        attribute_key = 'completion_time'\n    GROUP BY\n        tx_id,\n        msg_group,\n        msg_sub_group,\n        msg_index\n),\nprefinal AS (\n    SELECT\n        A.tx_id,\n        A.msg_group,\n        A.msg_sub_group,\n        b.sender AS delegator_address,\n        d.amount,\n        A.msg_type AS action,\n        C.validator_address,\n        C.redelegate_source_validator_address,\n        e.completion_time\n    FROM\n        (\n            SELECT\n                DISTINCT tx_id,\n                msg_group,\n                msg_sub_group,\n                msg_index,\n                REPLACE(\n                    REPLACE(\n                        msg_type,\n                       ", "doc_id": "be3d22a3-e5ab-4da0-bd4a-e4a9ca11552f", "embedding": null, "doc_hash": "dc199af07f004c4e1d2dc3f41d5d58c55effe2056da56ca5f6d1e80d91bb57ce", "extra_info": {"file_path": "models/silver/silver__staking.sql", "file_name": "silver__staking.sql"}, "node_info": {"start": 3406, "end": 5084, "_node_type": "1"}, "relationships": {"1": "7990f6b219c8736ba354fc1c565ad2637749ff91", "2": "a6af2e3a-69dd-45cd-9685-8a0c1ee28798", "3": "4d5c72b7-7040-4e3b-b463-7c3b864c955e"}}, "__type__": "1"}, "4d5c72b7-7040-4e3b-b463-7c3b864c955e": {"__data__": {"text": "                    'unbond',\n                        'undelegate'\n                    ),\n                    'create_validator',\n                    'delegate'\n                ) msg_type\n            FROM\n                base\n        ) A\n        JOIN sendr b\n        ON A.tx_id = b.tx_id\n        AND A.msg_group = b.msg_group\n        AND A.msg_index + 1 = b.msg_index\n        JOIN valid C\n        ON A.tx_id = C.tx_id\n        AND A.msg_group = C.msg_group\n        AND A.msg_index = C.msg_index\n        JOIN amount d\n        ON A.tx_id = d.tx_id\n        AND A.msg_group = d.msg_group\n        AND A.msg_index = d.msg_index\n        LEFT JOIN ctime e\n        ON A.tx_id = e.tx_id\n        AND A.msg_group = e.msg_group\n        AND A.msg_index = e.msg_index\n),\nadd_dec AS (\n    SELECT\n        b.block_id,\n        b.block_timestamp,\n        A.tx_id,\n        b.tx_succeeded,\n        C.tx_caller_address,\n        A.action,\n        A.msg_group,\n        A.msg_sub_group,\n        A.delegator_address,\n        SUM(\n            CASE\n                WHEN A.split_amount LIKE '%uosmo' THEN REPLACE(\n                    A.split_amount,\n                    'uosmo'\n                )\n                WHEN A.split_amount LIKE '%uion' THEN REPLACE(\n                    A.split_amount,\n                    'uion'\n                )\n                WHEN A.split_amount LIKE '%pool%' THEN LEFT(A.split_amount, CHARINDEX('g', A.split_amount) -1)\n                WHEN A.split_amount LIKE '%ibc%' THEN LEFT(A.split_amount, CHARINDEX('i', A.split_amount) -1)\n                ELSE A.split_amount\n ", "doc_id": "4d5c72b7-7040-4e3b-b463-7c3b864c955e", "embedding": null, "doc_hash": "6b8dde8474f43489fc3ba867235505fb7664f9718bf8981b4d4c490bd30ffbd5", "extra_info": {"file_path": "models/silver/silver__staking.sql", "file_name": "silver__staking.sql"}, "node_info": {"start": 5100, "end": 6667, "_node_type": "1"}, "relationships": {"1": "7990f6b219c8736ba354fc1c565ad2637749ff91", "2": "be3d22a3-e5ab-4da0-bd4a-e4a9ca11552f", "3": "fae31607-7fe0-473b-9c3d-f0be21ca5e8a"}}, "__type__": "1"}, "fae31607-7fe0-473b-9c3d-f0be21ca5e8a": {"__data__": {"text": "           ELSE A.split_amount\n            END :: INT\n        ) AS amount,\n        CASE\n            WHEN A.split_amount LIKE '%uosmo' THEN 'uosmo'\n            WHEN A.split_amount LIKE '%uion' THEN 'uion'\n            WHEN A.split_amount LIKE '%pool%' THEN SUBSTRING(A.split_amount, CHARINDEX('g', A.split_amount), 99)\n            WHEN A.split_amount LIKE '%ibc%' THEN SUBSTRING(A.split_amount, CHARINDEX('i', A.split_amount), 99)\n            ELSE 'uosmo'\n        END AS currency,\n        A.validator_address,\n        A.redelegate_source_validator_address,\n        A.completion_time :: datetime completion_time,\n        b._inserted_timestamp\n    FROM\n        (\n            SELECT\n                p.tx_id,\n                p.action,\n                p.msg_group,\n                p.msg_sub_group,\n                p.delegator_address,\n                p.validator_address,\n                p.redelegate_source_validator_address,\n                p.completion_time,\n                am.value AS split_amount\n            FROM\n                prefinal p,\n                LATERAL SPLIT_TO_TABLE(\n                    p.amount,\n                    ','\n                ) am\n        ) A\n        JOIN (\n            SELECT\n                DISTINCT tx_id,\n                block_id,\n                block_timestamp,\n                tx_succeeded,\n                _inserted_timestamp\n            FROM\n                msg_attr\n        ) b\n        ON A.tx_id = b.tx_id\n        JOIN tx_address C\n        ON A.tx_id = C.tx_id\n    GROUP BY\n        b.block_id,\n        b.block_timestamp,\n        A.tx_id,\n       ", "doc_id": "fae31607-7fe0-473b-9c3d-f0be21ca5e8a", "embedding": null, "doc_hash": "193e1545dd29b7d68b27baeda9aa7900d67501aee9340df2fed80dd459e1ee10", "extra_info": {"file_path": "models/silver/silver__staking.sql", "file_name": "silver__staking.sql"}, "node_info": {"start": 6649, "end": 8230, "_node_type": "1"}, "relationships": {"1": "7990f6b219c8736ba354fc1c565ad2637749ff91", "2": "4d5c72b7-7040-4e3b-b463-7c3b864c955e", "3": "28f04b57-d122-4ddb-854c-c5fea7f0d1f7"}}, "__type__": "1"}, "28f04b57-d122-4ddb-854c-c5fea7f0d1f7": {"__data__": {"text": "      A.tx_id,\n        b.tx_succeeded,\n        C.tx_caller_address,\n        A.action,\n        A.msg_group,\n        A.msg_sub_group,\n        A.delegator_address,\n        currency,\n        A.validator_address,\n        A.redelegate_source_validator_address,\n        completion_time,\n        b._inserted_timestamp\n)\nSELECT\n    block_id,\n    A.block_timestamp,\n    A.tx_id,\n    A.tx_succeeded,\n    A.tx_caller_address,\n    A.action,\n    A.msg_group,\n    A.msg_sub_group,\n    A.delegator_address,\n    A.amount,\n    A.currency,\n    A.validator_address,\n    A.redelegate_source_validator_address,\n    A.completion_time,\n    CASE\n        WHEN A.currency LIKE 'gamm/pool/%' THEN 18\n        ELSE amd.decimal\n    END AS DECIMAL,\n    A._inserted_timestamp,\n    concat_ws(\n        '-',\n        tx_id,\n        msg_group,\n        COALESCE(\n            msg_sub_group,\n            -1\n        ),\n        action,\n        currency,\n        delegator_address,\n        validator_address\n    ) AS _unique_key\nFROM\n    add_dec A\n    LEFT OUTER JOIN {{ ref('silver__asset_metadata') }}\n    amd\n    ON A.currency = amd.address\n", "doc_id": "28f04b57-d122-4ddb-854c-c5fea7f0d1f7", "embedding": null, "doc_hash": "b1f6b7946575c45c9e82c9784b8af4ceeccb256b3eda92cd9d8319cd47bd1b9c", "extra_info": {"file_path": "models/silver/silver__staking.sql", "file_name": "silver__staking.sql"}, "node_info": {"start": 8227, "end": 9327, "_node_type": "1"}, "relationships": {"1": "7990f6b219c8736ba354fc1c565ad2637749ff91", "2": "fae31607-7fe0-473b-9c3d-f0be21ca5e8a"}}, "__type__": "1"}, "0cd86a3d-6800-4d17-833c-4c3d3160e9a2": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__staking\n    description: Records of all staking related transactions that have occurred on Osmosis, dating back to the genesis block. These actions include delegate, undelegate, and redelegate.\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_GROUP\n            - MSG_SUB_GROUP\n            - ACTION\n            - CURRENCY\n            - DELEGATOR_ADDRESS\n            - VALIDATOR_ADDRESS\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 1\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: TX_CALLER_ADDRESS\n        description: \"{{ doc('tx_caller_address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n          ", "doc_id": "0cd86a3d-6800-4d17-833c-4c3d3160e9a2", "embedding": null, "doc_hash": "e42c73a5335bb043e563d694f58380d8f05698ac6d54ee620d155821f7782476", "extra_info": {"file_path": "models/silver/silver__staking.yml", "file_name": "silver__staking.yml"}, "node_info": {"start": 0, "end": 1831, "_node_type": "1"}, "relationships": {"1": "bc86df408f308e87e1ed25f73e16c4ce7733d7ce", "3": "bdda39ed-ff04-4ccd-af7e-94e43efe39a0"}}, "__type__": "1"}, "bdda39ed-ff04-4ccd-af7e-94e43efe39a0": {"__data__": {"text": "   column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: ACTION\n        description: \"{{ doc('action') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING    \n                - VARCHAR  \n      - name: MSG_GROUP\n        description: \"{{ doc('silver_msg_group') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: MSG_SUB_GROUP\n        description: \"{{ doc('msg_sub_group') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: DELEGATOR_ADDRESS\n        description: \"{{ doc('delegator_address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests:\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - not_null\n          -", "doc_id": "bdda39ed-ff04-4ccd-af7e-94e43efe39a0", "embedding": null, "doc_hash": "137a2923a08b936de2b0ce9ac14ea3fcea24e90b7514e656c0bbf27ce7f319b6", "extra_info": {"file_path": "models/silver/silver__staking.yml", "file_name": "silver__staking.yml"}, "node_info": {"start": 1814, "end": 3500, "_node_type": "1"}, "relationships": {"1": "bc86df408f308e87e1ed25f73e16c4ce7733d7ce", "2": "0cd86a3d-6800-4d17-833c-4c3d3160e9a2", "3": "ad20579b-ad4c-470a-a553-beeee73e4e06"}}, "__type__": "1"}, "ad20579b-ad4c-470a-a553-beeee73e4e06": {"__data__": {"text": "     - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: VALIDATOR_ADDRESS\n        description: \"{{ doc('validator_address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmovaloper1[0-9a-z]{38,38}\n      - name: REDELEGATE_SOURCE_VALIDATOR_ADDRESS\n        description: \"{{ doc('redelegate_source_validator_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmovaloper1[0-9a-z]{38,38}\n      - name: COMPLETION_TIME\n        description: \"{{ doc('completion_time') }}\"\n        tests:\n        - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ  \n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "ad20579b-ad4c-470a-a553-beeee73e4e06", "embedding": null, "doc_hash": "d40252f46190ad569813e19360eb8381da17f64edb688c810e0b7c81514c5918", "extra_info": {"file_path": "models/silver/silver__staking.yml", "file_name": "silver__staking.yml"}, "node_info": {"start": 3491, "end": 5013, "_node_type": "1"}, "relationships": {"1": "bc86df408f308e87e1ed25f73e16c4ce7733d7ce", "2": "bdda39ed-ff04-4ccd-af7e-94e43efe39a0"}}, "__type__": "1"}, "cdc316d1-f0c8-4104-ba7a-9dfdc30f6992": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH\n\n{% if is_incremental() %}\nmax_date AS (\n\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n),\n{% endif %}\n\nmsg_attributes_cte AS (\n    SELECT\n        tx_id,\n        msg_type,\n        msg_group,\n        msg_index,\n        attribute_key,\n        attribute_value\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n    WHERE\n        msg_type IN (\n            'withdraw_rewards',\n            'claim',\n            'transfer',\n            'message',\n            'tx',\n            'delegate',\n            'redelegate',\n            'unbond'\n        )\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nreward_base AS (\n    SELECT\n        A.tx_id,\n        A.msg_type,\n        A.msg_index,\n        msg_group\n    FROM\n        msg_attributes_cte A\n    WHERE\n        msg_type = 'withdraw_rewards'\n),\nmsg_attr_rewards AS (\n    SELECT\n        A.tx_id,\n        A.msg_group,\n        A.msg_index,\n        A.msg_type,\n        A.attribute_key,\n        A.attribute_value,\n        b.group_id\n    FROM\n        msg_attributes_cte A\n        JOIN (\n            SELECT\n                DISTINCT tx_id,\n                msg_index,\n                msg_index group_id\n            FROM\n                reward_base\n            UNION ALL\n            SELECT\n                DISTINCT tx_id,\n                msg_index + 1 msg_index,\n                msg_index group_id\n   ", "doc_id": "cdc316d1-f0c8-4104-ba7a-9dfdc30f6992", "embedding": null, "doc_hash": "23fb7364dcafa2da44e72636ee7f588b7f43dc4939db17ffc72208edebb38ce8", "extra_info": {"file_path": "models/silver/silver__staking_rewards.sql", "file_name": "silver__staking_rewards.sql"}, "node_info": {"start": 0, "end": 1683, "_node_type": "1"}, "relationships": {"1": "cf495018c3923b314fe53b809b329991bce28a11", "3": "10a13adc-5775-436a-b2fb-c8e2d686f9fa"}}, "__type__": "1"}, "10a13adc-5775-436a-b2fb-c8e2d686f9fa": {"__data__": {"text": "          msg_index group_id\n            FROM\n                reward_base\n        ) b\n        ON A.tx_ID = b.tx_ID\n        AND A.msg_index = b.msg_index\n),\nreward_combo AS (\n    SELECT\n        tx_id,\n        msg_group,\n        group_id,\n        OBJECT_AGG(\n            attribute_key :: STRING,\n            attribute_value :: variant\n        ) AS j,\n        j :validator :: STRING AS validator_address,\n        j :amount :: STRING AS amount,\n        j :sender :: STRING AS delegator_address\n    FROM\n        msg_attr_rewards\n    WHERE\n        attribute_key IN (\n            'sender',\n            'amount',\n            'validator'\n        )\n    GROUP BY\n        tx_id,\n        msg_group,\n        group_id\n),\nclaim_base AS (\n    SELECT\n        A.tx_id,\n        A.msg_type,\n        A.msg_index,\n        msg_group\n    FROM\n        msg_attributes_cte A\n        INNER JOIN (\n            SELECT\n                DISTINCT tx_id\n            FROM\n                msg_attributes_cte\n            WHERE\n                msg_type IN (\n                    'delegate',\n                    'redelegate'\n                )\n        ) b\n        ON A.tx_id = b.tx_id\n    WHERE\n        msg_type = 'claim'\n),\nmsg_attr_claim AS (\n    SELECT\n        A.tx_id,\n        A.attribute_key,\n        A.attribute_value,\n        A.msg_index,\n        A.msg_type,\n        A.msg_group,\n        b.group_id\n    FROM\n        msg_attributes_cte A\n        JOIN (\n            SELECT\n                DISTINCT tx_id,\n                msg_index,\n                msg_index group_id\n            FROM\n                claim_base\n     ", "doc_id": "10a13adc-5775-436a-b2fb-c8e2d686f9fa", "embedding": null, "doc_hash": "bd752c6c55b31a089e6c279263ad447cf9a7a394bea1a665f98fc19e6f35a635", "extra_info": {"file_path": "models/silver/silver__staking_rewards.sql", "file_name": "silver__staking_rewards.sql"}, "node_info": {"start": 1666, "end": 3244, "_node_type": "1"}, "relationships": {"1": "cf495018c3923b314fe53b809b329991bce28a11", "2": "cdc316d1-f0c8-4104-ba7a-9dfdc30f6992", "3": "ddfd8b1c-7e92-454a-b76f-19d3f574cfdd"}}, "__type__": "1"}, "ddfd8b1c-7e92-454a-b76f-19d3f574cfdd": {"__data__": {"text": "           claim_base\n            UNION ALL\n            SELECT\n                DISTINCT tx_id,\n                msg_index + 1 msg_index,\n                msg_index group_id\n            FROM\n                claim_base\n            UNION ALL\n            SELECT\n                DISTINCT tx_id,\n                msg_index + 2 msg_index,\n                msg_index group_id\n            FROM\n                claim_base\n        ) b\n        ON A.tx_ID = b.tx_ID\n        AND A.msg_index = b.msg_index\n),\nclaim_combo AS (\n    SELECT\n        tx_id,\n        msg_group,\n        group_id,\n        OBJECT_AGG(\n            CASE\n                WHEN msg_type IN (\n                    'message',\n                    'claim'\n                ) THEN msg_type || '__'\n                ELSE ''\n            END || attribute_key :: STRING,\n            attribute_value :: variant\n        ) AS j,\n        COALESCE(\n            j :validator :: STRING,\n            j :source_validator :: STRING\n        ) AS validator_address,\n        j :claim__amount :: STRING AS amount,\n        j :message__sender :: STRING AS delegator_address\n    FROM\n        msg_attr_claim\n    WHERE\n        msg_type || '__' || attribute_key IN (\n            'message__sender',\n            'claim__amount'\n        )\n        OR attribute_key IN (\n            'validator',\n            'source_validator'\n        )\n    GROUP BY\n        tx_id,\n        msg_group,\n        group_id\n),\ntran_base AS (\n    SELECT\n        DISTINCT tx_id,\n        msg_group,\n        delegator_address\n    FROM\n        {{ ref('silver__staking') }} A\n\n{% if is_incremental() %}\nWHERE\n    _inserted_timestamp >= (\n        SELECT\n         ", "doc_id": "ddfd8b1c-7e92-454a-b76f-19d3f574cfdd", "embedding": null, "doc_hash": "f840dbfe20ba87b3001bd95ec86c178c3dbe0d4a096c73eb84d2bb0a46370618", "extra_info": {"file_path": "models/silver/silver__staking_rewards.sql", "file_name": "silver__staking_rewards.sql"}, "node_info": {"start": 3252, "end": 4898, "_node_type": "1"}, "relationships": {"1": "cf495018c3923b314fe53b809b329991bce28a11", "2": "10a13adc-5775-436a-b2fb-c8e2d686f9fa", "3": "311b47be-9a49-4485-90a7-088f81852141"}}, "__type__": "1"}, "311b47be-9a49-4485-90a7-088f81852141": {"__data__": {"text": "(\n        SELECT\n            MAX(\n                _inserted_timestamp\n            )\n        FROM\n            max_date\n    )\n{% endif %}\n),\ntran_tran AS (\n    SELECT\n        A.tx_id,\n        A.msg_type,\n        A.msg_index,\n        A.msg_group,\n        attribute_key,\n        attribute_value\n    FROM\n        msg_attributes_cte A\n        INNER JOIN tran_base b\n        ON A.tx_id = b.tx_id\n        AND A.msg_group = b.msg_group\n        AND A.attribute_value = b.delegator_address\n        LEFT JOIN (\n            SELECT\n                DISTINCT tx_id\n            FROM\n                msg_attributes_cte\n            WHERE\n                msg_type IN (\n                    'claim',\n                    'withdraw_rewards'\n                )\n        ) C\n        ON A.tx_id = C.tx_id\n    WHERE\n        A.msg_type = 'transfer'\n        AND A.attribute_key = 'recipient'\n        AND C.tx_id IS NULL\n),\nmsg_attr_trans AS (\n    SELECT\n        A.tx_id,\n        A.msg_group,\n        A.msg_index,\n        A.msg_type,\n        A.attribute_key,\n        A.attribute_value,\n        DENSE_RANK() over(\n            PARTITION BY A.tx_id,\n            A.msg_group\n            ORDER BY\n                A.msg_index\n        ) change_index\n    FROM\n        tran_tran b\n        JOIN msg_attributes_cte A\n        ON A.tx_ID = b.tx_ID\n        AND A.msg_group = b.msg_group\n    WHERE\n        A.msg_type IN (\n            'delegate',\n            'redelegate',\n            'unbond'\n        )\n        OR (\n            A.msg_index = b.msg_index\n            AND A.msg_type = 'transfer'\n       ", "doc_id": "311b47be-9a49-4485-90a7-088f81852141", "embedding": null, "doc_hash": "c6ba43f01cac8ea1ce5605d83648b0e0c877bb9416b05a31578a77fcd3e62489", "extra_info": {"file_path": "models/silver/silver__staking_rewards.sql", "file_name": "silver__staking_rewards.sql"}, "node_info": {"start": 4901, "end": 6454, "_node_type": "1"}, "relationships": {"1": "cf495018c3923b314fe53b809b329991bce28a11", "2": "ddfd8b1c-7e92-454a-b76f-19d3f574cfdd", "3": "8a4ed934-413f-425e-98fc-e1b8e98c4297"}}, "__type__": "1"}, "8a4ed934-413f-425e-98fc-e1b8e98c4297": {"__data__": {"text": " AND A.msg_type = 'transfer'\n        )\n),\ntran_combo AS (\n    SELECT\n        A.tx_id,\n        A.msg_group,\n        A.msg_index group_id,\n        COALESCE(\n            b.j :validator :: STRING,\n            b.j :source_validator :: STRING\n        ) AS validator_address,\n        A.j :amount :: STRING AS amount,\n        A.j :recipient :: STRING AS delegator_address\n    FROM\n        (\n            SELECT\n                tx_id,\n                msg_group,\n                msg_index,\n                change_index + 1 group_id,\n                OBJECT_AGG(\n                    attribute_key :: STRING,\n                    attribute_value :: variant\n                ) AS j\n            FROM\n                (\n                    SELECT\n                        DISTINCT tx_id,\n                        msg_group,\n                        msg_index,\n                        change_index,\n                        attribute_key,\n                        attribute_value\n                    FROM\n                        msg_attr_trans\n                    WHERE\n                        msg_type = 'transfer'\n                        AND attribute_key IN (\n                            'amount',\n                            'recipient'\n                        )\n                ) x\n            GROUP BY\n                tx_id,\n                msg_group,\n                msg_index,\n                group_id\n        ) A\n        JOIN (\n           ", "doc_id": "8a4ed934-413f-425e-98fc-e1b8e98c4297", "embedding": null, "doc_hash": "23769711d5b10c0921773629f556d125b2024c92f68d563d038efe69676bec27", "extra_info": {"file_path": "models/silver/silver__staking_rewards.sql", "file_name": "silver__staking_rewards.sql"}, "node_info": {"start": 6439, "end": 7861, "_node_type": "1"}, "relationships": {"1": "cf495018c3923b314fe53b809b329991bce28a11", "2": "311b47be-9a49-4485-90a7-088f81852141", "3": "0efbff4c-f928-4ba1-8e48-ce04e45960d1"}}, "__type__": "1"}, "0efbff4c-f928-4ba1-8e48-ce04e45960d1": {"__data__": {"text": "     JOIN (\n            SELECT\n                tx_id,\n                msg_group,\n                msg_index,\n                change_index group_id,\n                OBJECT_AGG(\n                    attribute_key :: STRING,\n                    attribute_value :: variant\n                ) AS j\n            FROM\n                (\n                    SELECT\n                        DISTINCT tx_id,\n                        msg_group,\n                        msg_index,\n                        change_index,\n                        attribute_key,\n                        attribute_value\n                    FROM\n                        msg_attr_trans\n                    WHERE\n                        msg_type <> 'transfer'\n                        AND attribute_key IN (\n                            'validator',\n                            'source_validator'\n                        )\n                ) x\n            GROUP BY\n                tx_id,\n                msg_group,\n                msg_index,\n                group_id\n        ) b\n        ON A.tx_id = b.tx_id\n        AND A.msg_group = b.msg_group\n        AND A.group_id = b.group_id\n),\ncombo_all AS (\n    SELECT\n        tx_id,\n        msg_group,\n        group_id,\n        validator_address,\n        amount,\n        delegator_address,\n        'claim' AS action\n    FROM\n        tran_combo\n    UNION ALL\n    SELECT\n        tx_id,\n        msg_group,\n       ", "doc_id": "0efbff4c-f928-4ba1-8e48-ce04e45960d1", "embedding": null, "doc_hash": "ca2992bb12271450663482ed7ac03378a9975c9a996edce182175b43d66d24d8", "extra_info": {"file_path": "models/silver/silver__staking_rewards.sql", "file_name": "silver__staking_rewards.sql"}, "node_info": {"start": 7881, "end": 9287, "_node_type": "1"}, "relationships": {"1": "cf495018c3923b314fe53b809b329991bce28a11", "2": "8a4ed934-413f-425e-98fc-e1b8e98c4297", "3": "a129317b-0564-45e7-bbc9-083158b6286b"}}, "__type__": "1"}, "a129317b-0564-45e7-bbc9-083158b6286b": {"__data__": {"text": "       msg_group,\n        group_id,\n        validator_address,\n        amount,\n        delegator_address,\n        'withdraw_rewards' AS action\n    FROM\n        reward_combo\n    UNION ALL\n    SELECT\n        tx_id,\n        msg_group,\n        group_id,\n        validator_address,\n        amount,\n        delegator_address,\n        'claim' AS action\n    FROM\n        claim_combo\n),\ntx_address AS (\n    SELECT\n        A.tx_id,\n        SPLIT_PART(\n            attribute_value,\n            '/',\n            0\n        ) AS tx_caller_address,\n        SPLIT_PART(\n            attribute_value,\n            '/',\n            1\n        ) AS acc_seq_index\n    FROM\n        msg_attributes_cte A\n    WHERE\n        attribute_key = 'acc_seq' qualify(ROW_NUMBER() over (PARTITION BY tx_id\n    ORDER BY\n        acc_seq_index) = 1)\n),\nprefinal AS (\n    SELECT\n        b.block_id,\n        b.block_timestamp,\n        A.tx_id,\n        b.tx_succeeded,\n        C.tx_caller_address,\n        A.action,\n        A.msg_group,\n        A.delegator_address,\n        SUM(\n            CASE\n                WHEN A.split_amount LIKE '%uosmo' THEN REPLACE(\n                    A.split_amount,\n                    'uosmo'\n                )\n                WHEN A.split_amount LIKE '%uion' THEN REPLACE(\n                    A.split_amount,\n                    'uion'\n                )\n                WHEN A.split_amount LIKE '%pool%' THEN LEFT(A.split_amount, CHARINDEX('g', A.split_amount) -1)\n                WHEN A.split_amount LIKE '%ibc%' THEN LEFT(A.split_amount, CHARINDEX('i', A.split_amount) -1)\n                ELSE A.split_amount\n            END :: INT\n       ", "doc_id": "a129317b-0564-45e7-bbc9-083158b6286b", "embedding": null, "doc_hash": "44c533abfd2e355929a211b96fd3cf14355e2ad047e46ca4126a20e79e46f32d", "extra_info": {"file_path": "models/silver/silver__staking_rewards.sql", "file_name": "silver__staking_rewards.sql"}, "node_info": {"start": 9283, "end": 10913, "_node_type": "1"}, "relationships": {"1": "cf495018c3923b314fe53b809b329991bce28a11", "2": "0efbff4c-f928-4ba1-8e48-ce04e45960d1", "3": "a536b0d3-dedd-46fe-ba41-c5e14cd1b5cf"}}, "__type__": "1"}, "a536b0d3-dedd-46fe-ba41-c5e14cd1b5cf": {"__data__": {"text": "         END :: INT\n        ) AS amount,CASE\n            WHEN A.split_amount LIKE '%uosmo' THEN 'uosmo'\n            WHEN A.split_amount LIKE '%uion' THEN 'uion'\n            WHEN A.split_amount LIKE '%pool%' THEN SUBSTRING(A.split_amount, CHARINDEX('g', A.split_amount), 99)\n            WHEN A.split_amount LIKE '%ibc%' THEN SUBSTRING(A.split_amount, CHARINDEX('i', A.split_amount), 99)\n            ELSE 'uosmo'\n        END AS currency,\n        A.validator_address,\n        b._inserted_timestamp\n    FROM\n        (\n            SELECT\n                p.tx_Id,\n                p.action,\n                p.msg_group,\n                p.delegator_address,\n                p.validator_address,\n                am.value AS split_amount\n            FROM\n                combo_all p,\n                LATERAL SPLIT_TO_TABLE(\n                    p.amount,\n                    ','\n                ) am\n        ) A\n        JOIN (\n            SELECT\n                tx_ID,\n                block_id,\n                block_timestamp,\n                tx_succeeded,\n                _inserted_timestamp\n            FROM\n                {{ ref('silver__transactions') }} A\n\n{% if is_incremental() %}\nWHERE\n    _inserted_timestamp >= (\n        SELECT\n            MAX(\n                _inserted_timestamp\n            )\n        FROM\n            max_date\n    )\n{% endif %}\n) b\nON A.tx_Id = b.tx_ID\nJOIN tx_address C\nON A.tx_id = C.tx_id\nGROUP BY\n    b.block_id,\n    b.block_timestamp,\n    A.tx_id,\n    b.tx_succeeded,\n    C.tx_caller_address,\n    A.action,\n    A.msg_group,\n    A.delegator_address,CASE\n        WHEN A.split_amount", "doc_id": "a536b0d3-dedd-46fe-ba41-c5e14cd1b5cf", "embedding": null, "doc_hash": "3293e9423c2fcddb6d068c42854996ba6c6d2ca3200ac33ff7ec06047262797b", "extra_info": {"file_path": "models/silver/silver__staking_rewards.sql", "file_name": "silver__staking_rewards.sql"}, "node_info": {"start": 10916, "end": 12521, "_node_type": "1"}, "relationships": {"1": "cf495018c3923b314fe53b809b329991bce28a11", "2": "a129317b-0564-45e7-bbc9-083158b6286b", "3": "40d27f4e-9dd0-44c9-b7ab-45250fd910de"}}, "__type__": "1"}, "40d27f4e-9dd0-44c9-b7ab-45250fd910de": {"__data__": {"text": "       WHEN A.split_amount LIKE '%uosmo' THEN 'uosmo'\n        WHEN A.split_amount LIKE '%uion' THEN 'uion'\n        WHEN A.split_amount LIKE '%pool%' THEN SUBSTRING(A.split_amount, CHARINDEX('g', A.split_amount), 99)\n        WHEN A.split_amount LIKE '%ibc%' THEN SUBSTRING(A.split_amount, CHARINDEX('i', A.split_amount), 99)\n        ELSE 'uosmo'\n    END,\n    A.validator_address,\n    b._inserted_timestamp\n)\nSELECT\n    block_id,\n    A.block_timestamp,\n    A.tx_id,\n    A.tx_succeeded,\n    A.tx_caller_address,\n    A.action,\n    A.msg_group,\n    A.delegator_address,\n    A.amount,\n    A.currency,\n    A.validator_address,\n    amd.decimal AS DECIMAL,\n    A._inserted_timestamp,\n    concat_ws(\n        '-',\n        A.tx_id,\n        A.msg_group,\n        A.action,\n        A.currency,\n        A.delegator_address,\n        A.validator_address\n    ) AS _unique_key\nFROM\n    prefinal A\n    LEFT OUTER JOIN osmosis_dev.silver.asset_metadata amd\n    ON A.currency = amd.address\n", "doc_id": "40d27f4e-9dd0-44c9-b7ab-45250fd910de", "embedding": null, "doc_hash": "3eff2f45963eb820c3d7921312abac89f63e99d3d2b11f4ff6260b38f57f5535", "extra_info": {"file_path": "models/silver/silver__staking_rewards.sql", "file_name": "silver__staking_rewards.sql"}, "node_info": {"start": 12504, "end": 13471, "_node_type": "1"}, "relationships": {"1": "cf495018c3923b314fe53b809b329991bce28a11", "2": "a536b0d3-dedd-46fe-ba41-c5e14cd1b5cf"}}, "__type__": "1"}, "268d72cc-57f2-4213-86d8-1e413820ee91": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__staking_rewards\n    description: Records of all claimed rewards earned from staking that have occurred on Osmosis, dating back to the genesis block. These actions include claim and withdrawal_rewards.\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_GROUP\n            - ACTION\n            - CURRENCY\n            - DELEGATOR_ADDRESS\n            - VALIDATOR_ADDRESS\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 1\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: TX_CALLER_ADDRESS\n        description: \"{{ doc('tx_caller_address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n   ", "doc_id": "268d72cc-57f2-4213-86d8-1e413820ee91", "embedding": null, "doc_hash": "3d08cbe4af08d6a7411c56654637f9d7fe44905ffd8f93f5f7fa0706c463196b", "extra_info": {"file_path": "models/silver/silver__staking_rewards.yml", "file_name": "silver__staking_rewards.yml"}, "node_info": {"start": 0, "end": 1828, "_node_type": "1"}, "relationships": {"1": "12a3a18476c8ad859d941066b2e40d67a37c53b4", "3": "c37a6f8d-45a5-41bb-bd39-96e38e48d8ca"}}, "__type__": "1"}, "c37a6f8d-45a5-41bb-bd39-96e38e48d8ca": {"__data__": {"text": "             - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: ACTION\n        description: \"{{ doc('action') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING    \n                - VARCHAR  \n      - name: MSG_GROUP\n        description: \"{{ doc('silver_msg_group') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: DELEGATOR_ADDRESS\n        description: \"{{ doc('delegator_address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests:\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: VALIDATOR_ADDRESS\n        description: \"{{ doc('validator_address') }}\"\n        tests: \n          - not_null\n          -", "doc_id": "c37a6f8d-45a5-41bb-bd39-96e38e48d8ca", "embedding": null, "doc_hash": "ba06986e99a0dd317d2ddaa159abb8fc1b52ae57f04ea16c7d969220da8c2229", "extra_info": {"file_path": "models/silver/silver__staking_rewards.yml", "file_name": "silver__staking_rewards.yml"}, "node_info": {"start": 1821, "end": 3514, "_node_type": "1"}, "relationships": {"1": "12a3a18476c8ad859d941066b2e40d67a37c53b4", "2": "268d72cc-57f2-4213-86d8-1e413820ee91", "3": "9ef9d3f4-5018-41ef-bc6c-e9181f43fb1f"}}, "__type__": "1"}, "9ef9d3f4-5018-41ef-bc6c-e9181f43fb1f": {"__data__": {"text": "     - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmovaloper1[0-9a-z]{38,38}\n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "9ef9d3f4-5018-41ef-bc6c-e9181f43fb1f", "embedding": null, "doc_hash": "79450f4dab9a0fa4a7fad93653c4ca4cbf5b46e8797369736acf28722934d7e2", "extra_info": {"file_path": "models/silver/silver__staking_rewards.yml", "file_name": "silver__staking_rewards.yml"}, "node_info": {"start": 3495, "end": 4104, "_node_type": "1"}, "relationships": {"1": "12a3a18476c8ad859d941066b2e40d67a37c53b4", "2": "c37a6f8d-45a5-41bb-bd39-96e38e48d8ca"}}, "__type__": "1"}, "b712667d-6794-4353-8879-a6249ef19ac2": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['_inserted_timestamp::DATE'],\n) }}\n\nSELECT\n    block_id,\n    block_timestamp,\n    A.tx_id,\n    A.tx_succeeded,\n    A.msg_type,\n    A.msg_group,\n    msg :sender :: STRING AS delegator_address,\n    msg :coins [0] :amount :: INT AS amount,\n    msg :coins [0] :denom :: STRING AS currency,\n    msg :val_addr :: STRING AS validator_address,\n    COALESCE(\n        msg :lock_id :: INT,\n        b.lock_id :: INT,\n        msg: id :: INT\n    ) AS lock_id,\n    msg :pool_id :: INT AS pool_id,\n    concat_ws(\n        '-',\n        A.tx_id,\n        A.msg_group\n    ) AS _unique_key,\n    _inserted_timestamp\nFROM\n    {{ ref('silver__tx_body_msgs') }} A\n    LEFT JOIN (\n        SELECT\n            DISTINCT tx_id,\n            msg_group,\n            attribute_value AS lock_id\n        FROM\n            {{ ref('silver__msg_attributes') }} A\n        WHERE\n            msg_type IN (\n                'lock_tokens',\n                'add_tokens_to_lock'\n            )\n            AND attribute_key IN (\n                'period_lock_id',\n                'lock_id'\n            )\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        {{ this }}\n)\n{% endif %}\n) b\nON A.tx_id = b.tx_id\nAND A.msg_group = b.msg_group\nWHERE\n    msg_type IN (\n        '/osmosis.superfluid.MsgLockAndSuperfluidDelegate',\n        '/osmosis.superfluid.MsgSuperfluidUndelegate',\n        '/osmosis.superfluid.MsgSuperfluidDelegate',\n        '/osmosis.superfluid.MsgUnPoolWhitelistedPool'\n    )\n    AND tx_succeeded = TRUE\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        {{ this }}\n)\n{% endif %}\n", "doc_id": "b712667d-6794-4353-8879-a6249ef19ac2", "embedding": null, "doc_hash": "ccf554afbd6cbc9bf93b0d8ac74e05b0ee3389d3103d269b9e4fbb851300c3a2", "extra_info": {"file_path": "models/silver/silver__superfluid_actions.sql", "file_name": "silver__superfluid_actions.sql"}, "node_info": {"start": 0, "end": 1848, "_node_type": "1"}, "relationships": {"1": "e3b8ffce248ffc0217cd918184dc4e8177c1ded5"}}, "__type__": "1"}, "82fec383-afab-46fe-8ae2-f44c7b369a72": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__superfluid_actions\n    description: \"Records of all superfluid related actions\"\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_GROUP\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 2\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: MSG_TYPE\n        description: \"{{ doc('msg_type') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING    \n                - VARCHAR  \n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\"\n        tests: \n          - not_null\n      - name: DELEGATOR_ADDRESS\n        description:", "doc_id": "82fec383-afab-46fe-8ae2-f44c7b369a72", "embedding": null, "doc_hash": "98ad5bc6b096d24e63de15e37bef516ce01c9819f8c0df49db8eeddc3ce585a3", "extra_info": {"file_path": "models/silver/silver__superfluid_actions.yml", "file_name": "silver__superfluid_actions.yml"}, "node_info": {"start": 0, "end": 1769, "_node_type": "1"}, "relationships": {"1": "841023378a35b92f18ff2b2a8e5c01c25d86c704", "3": "e2d28dc3-df1a-4693-b378-b8711f0bd097"}}, "__type__": "1"}, "e2d28dc3-df1a-4693-b378-b8711f0bd097": {"__data__": {"text": "name: DELEGATOR_ADDRESS\n        description: \"{{ doc('delegator_address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests:\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: VALIDATOR_ADDRESS\n        description: \"{{ doc('validator_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmovaloper1[0-9a-z]{38,38}\n      - name: LOCK_ID\n        description: An ID corresponding to the locking step of the transaction. \n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT   \n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "e2d28dc3-df1a-4693-b378-b8711f0bd097", "embedding": null, "doc_hash": "e18fd32c87ee0e3ac5fd008e3cace4dd24780adf700c78fa89fd8a17b24e8583", "extra_info": {"file_path": "models/silver/silver__superfluid_actions.yml", "file_name": "silver__superfluid_actions.yml"}, "node_info": {"start": 1725, "end": 3481, "_node_type": "1"}, "relationships": {"1": "841023378a35b92f18ff2b2a8e5c01c25d86c704", "2": "82fec383-afab-46fe-8ae2-f44c7b369a72"}}, "__type__": "1"}, "7d69bb6f-8daa-4ef6-be14-56f8c83312e6": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH super AS (\n\n    SELECT\n        DISTINCT block_id,\n        delegator_address AS address,\n        lock_id\n    FROM\n        {{ ref('silver__superfluid_staking') }}\n        s\n\n{% if is_incremental() %}\nWHERE\n    block_timestamp :: DATE >=(\n        SELECT\n            DATEADD('day', -2, MAX(block_timestamp))\n        FROM\n            {{ this }})\n        {% endif %}\n    ),\n    lp_balances AS (\n        SELECT\n            A.block_id,\n            A.block_timestamp,\n            A.address,\n            A.balance,\n            A.currency,\n            A.decimal,\n            A.lock_id,\n            _inserted_timestamp\n        FROM\n            {{ ref('silver__locked_liquidity_balances') }} A\n            JOIN super b\n            ON A.block_id = b.block_id\n            AND A.address = b.address\n            AND A.lock_id = b.lock_id\n\n{% if is_incremental() %}\nWHERE\n    block_timestamp :: DATE >=(\n        SELECT\n            DATEADD('day', -2, MAX(block_timestamp))\n        FROM\n            {{ this }})\n        {% endif %}\n    )\nSELECT\n    block_id,\n    block_timestamp,\n    'superfluid staked' AS balance_type,\n    address,\n    lock_id,\n    currency,\n    DECIMAL,\n    balance,\n    concat_ws(\n        '-',\n        block_id,\n        address,\n        lock_id,\n        currency\n    ) AS _unique_key,\n    _inserted_timestamp\nFROM\n    lp_balances\n", "doc_id": "7d69bb6f-8daa-4ef6-be14-56f8c83312e6", "embedding": null, "doc_hash": "c831b24acce9666410a0c18ca7766798999678a0ca79b1abb96d03d6f10a96b3", "extra_info": {"file_path": "models/silver/silver__superfluid_staked_balances.sql", "file_name": "silver__superfluid_staked_balances.sql"}, "node_info": {"start": 0, "end": 1498, "_node_type": "1"}, "relationships": {"1": "ca5f9c438cf41a085e22086a908d2b6df0545a1a"}}, "__type__": "1"}, "958982da-230d-4dd4-904b-f95541c5c894": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__superfluid_staked_balances\n    description: A table of each superfluid staked balance change for wallets on the Osmosis chain. \n    tests:\n      - compare_model_subset:\n          name: silver__superfluid_staked_balances_business_logic_test\n          compare_model: ref('testing__superfluid_staked_balances')\n          compare_columns: \n            - block_id\n            - balance_type\n            - address\n            - lock_id\n            - currency\n            - balance\n          model_condition: \"where block_timestamp::date = '2022-10-18' \n                and block_ID IN  (6503532,6503516,6503500,6503499,6503494,6503478,6503466,6503466,6503459,6503453,\n                      6503420,6503420,6503395,6503391,6503389,6503385,6503379,6503375,6503338)\"\n    columns:\n      - name: BLOCK_ID \n        description: \"{{ doc('block_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: ADDRESS\n        description: \"{{ doc('address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: BALANCE \n        description: The amount of the currency the wallet held at the given time\n        tests: \n          - not_null\n          -", "doc_id": "958982da-230d-4dd4-904b-f95541c5c894", "embedding": null, "doc_hash": "ba9902b8d29b0468084ce73bea153b6bca4b0c199d2fbee381457fe27bcf7a3c", "extra_info": {"file_path": "models/silver/silver__superfluid_staked_balances.yml", "file_name": "silver__superfluid_staked_balances.yml"}, "node_info": {"start": 0, "end": 1841, "_node_type": "1"}, "relationships": {"1": "5e9cb56a9b8e0e66898c159919cb2b899d09bcd8", "3": "a244e969-03d8-4ee1-9df9-9a01960b7719"}}, "__type__": "1"}, "a244e969-03d8-4ee1-9df9-9a01960b7719": {"__data__": {"text": "     - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: DECIMAL \n        description: \"{{ doc('decimal') }}\"\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('ingested_at') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      ", "doc_id": "a244e969-03d8-4ee1-9df9-9a01960b7719", "embedding": null, "doc_hash": "7b6ff08b79412fd76eaedaaa9c9ef5342657d776ede342444d1ea716e1878bc1", "extra_info": {"file_path": "models/silver/silver__superfluid_staked_balances.yml", "file_name": "silver__superfluid_staked_balances.yml"}, "node_info": {"start": 1814, "end": 2571, "_node_type": "1"}, "relationships": {"1": "5e9cb56a9b8e0e66898c159919cb2b899d09bcd8", "2": "958982da-230d-4dd4-904b-f95541c5c894"}}, "__type__": "1"}, "63225a43-ab80-4a26-b81e-97e688ed300e": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE']\n) }}\n\nWITH\n\n{% if is_incremental() %}\nmax_date AS (\n\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n),\n{% endif %}\n\nbase_txn AS (\n    SELECT\n        A.block_id,\n        A.block_timestamp,\n        A.tx_id,\n        A.tx_succeeded,\n        A.msg_group,\n        A.msg_type,\n        A.msg_action_description,\n        A.locker_address,\n        A.lock_id,\n        A.amount,\n        A.currency,\n        A.decimal,\n        A.pool_id,\n        A.lock_duration,\n        A.unlock_time,\n        A.unpool_new_lock_ids,\n        A._unique_key,\n        A._inserted_timestamp\n    FROM\n        {{ ref('silver__locked_liquidity_actions') }} A\n    WHERE\n        is_superfluid = TRUE\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        _inserted_timestamp\n    FROM\n        max_date\n)\n{% endif %}\n),\nvals AS (\n    SELECT\n        lock_id,\n        validator_address\n    FROM\n        {{ ref('silver__superfluid_actions') }} A\n    WHERE\n        validator_address IS NOT NULL\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        _inserted_timestamp\n    FROM\n        max_date\n)\n{% endif %}\n\nqualify(ROW_NUMBER() over(PARTITION BY lock_id\nORDER BY\n    block_id DESC) = 1)\n),\nunpool_lock_val AS (\n    SELECT\n        A.lock_id,\n        A.currency,\n        A.delegator_address,\n        A.validator_address\n    FROM\n        {{ ref('silver__superfluid_actions') }} A\n        JOIN {{ ref('silver__locked_liquidity_actions') }}\n        b\n        ON b.msg_action_description = 'unpool'\n        AND A.delegator_address = b.locker_address\n        AND A.currency = b.currency\n        AND A.block_id < b.block_id\n    WHERE\n        validator_address IS NOT NULL\n\n{% if is_incremental() %}\nAND A._inserted_timestamp >= (\n  ", "doc_id": "63225a43-ab80-4a26-b81e-97e688ed300e", "embedding": null, "doc_hash": "008170a07bc953b8269935d010192d2ac844ba8faa5b6477cfab1575928987b6", "extra_info": {"file_path": "models/silver/silver__superfluid_staking.sql", "file_name": "silver__superfluid_staking.sql"}, "node_info": {"start": 0, "end": 1946, "_node_type": "1"}, "relationships": {"1": "48d8bc88662c0d4251d17fe4e2e392a573be343e", "3": "1c54bcff-dbc4-44c1-9618-f7d22a755a83"}}, "__type__": "1"}, "1c54bcff-dbc4-44c1-9618-f7d22a755a83": {"__data__": {"text": "%}\nAND A._inserted_timestamp >= (\n    SELECT\n        _inserted_timestamp\n    FROM\n        max_date\n)\n{% endif %}\n\nqualify(ROW_NUMBER() over(PARTITION BY A.lock_id\nORDER BY\n    A.block_id DESC) = 1)\n)\nSELECT\n    A.block_id,\n    A.block_timestamp,\n    A.tx_id,\n    A.msg_group,\n    A.tx_succeeded,\n    CASE\n        WHEN msg_action_description = 'initial lock' THEN 'delegate'\n        WHEN msg_action_description = 'add to position' THEN 'delegate'\n        WHEN msg_action_description = 'unlock' THEN 'undelegate'\n        WHEN msg_action_description = 'unpool' THEN 'undelegate'\n        WHEN msg_action_description LIKE '%ulock%'\n        OR msg_action_description LIKE '%undelegate%' THEN 'undelegate'\n    END AS action,\n    A.locker_address AS delegator_address,\n    A.amount,\n    A.currency,\n    A.decimal,\n    COALESCE(\n        b.validator_address,\n        C.validator_address\n    ) AS validator_address,\n    COALESCE(\n        A.lock_id,\n        C.lock_id\n    ) AS lock_id,\n    _inserted_timestamp,\n    concat_ws(\n        '-',\n        A.tx_id,\n        A.msg_group,\n        COALESCE(\n            A.lock_id,\n            -1\n        ),\n        msg_action_description\n    ) AS _unique_key\nFROM\n    base_txn A\n    LEFT JOIN vals b\n    ON A.lock_id = b.lock_id\n    LEFT JOIN unpool_lock_val C\n    ON A.locker_address = C.delegator_address\n    AND A.currency = C.currency\n    AND A.msg_action_description = 'unpool'\n", "doc_id": "1c54bcff-dbc4-44c1-9618-f7d22a755a83", "embedding": null, "doc_hash": "a1a46af6d66905c53868565738c4d400e75baed88342f5162e12508e49fd3d59", "extra_info": {"file_path": "models/silver/silver__superfluid_staking.sql", "file_name": "silver__superfluid_staking.sql"}, "node_info": {"start": 1910, "end": 3318, "_node_type": "1"}, "relationships": {"1": "48d8bc88662c0d4251d17fe4e2e392a573be343e", "2": "63225a43-ab80-4a26-b81e-97e688ed300e"}}, "__type__": "1"}, "9d10228c-1c47-4862-a07b-40b9d6bd8374": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__superfluid_staking\n    description: Records of all staking related transactions that have occurred on Osmosis, dating back to the genesis block. These actions include delegate, undelegate, and redelegate.\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_GROUP\n            - LOCK_ID\n            - ACTION\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 2\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: ACTION\n        description: \"{{ doc('action') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING    \n                - VARCHAR  \n      - name: DELEGATOR_ADDRESS\n        description: \"{{ doc('delegator_address') }}\"\n    ", "doc_id": "9d10228c-1c47-4862-a07b-40b9d6bd8374", "embedding": null, "doc_hash": "1db68727bbd131b8ebfd33ca957d302ca6d5f5a78fefb6d355ef009b38a51099", "extra_info": {"file_path": "models/silver/silver__superfluid_staking.yml", "file_name": "silver__superfluid_staking.yml"}, "node_info": {"start": 0, "end": 1843, "_node_type": "1"}, "relationships": {"1": "c7216e92174294615d4325b5a003e51c4d62529f", "3": "177bad4e-8a58-4ca9-9e41-a02d462832d7"}}, "__type__": "1"}, "177bad4e-8a58-4ca9-9e41-a02d462832d7": {"__data__": {"text": " description: \"{{ doc('delegator_address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests:\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: VALIDATOR_ADDRESS\n        description: \"{{ doc('validator_address') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmovaloper1[0-9a-z]{38,38}\n      - name: LOCK_ID\n        description: \"{{ doc('lock_id') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "177bad4e-8a58-4ca9-9e41-a02d462832d7", "embedding": null, "doc_hash": "1135bda252d591963c9d50c79e90b0f22fc15f69461e32e28bacaadbfbef2c72", "extra_info": {"file_path": "models/silver/silver__superfluid_staking.yml", "file_name": "silver__superfluid_staking.yml"}, "node_info": {"start": 1792, "end": 3478, "_node_type": "1"}, "relationships": {"1": "c7216e92174294615d4325b5a003e51c4d62529f", "2": "9d10228c-1c47-4862-a07b-40b9d6bd8374"}}, "__type__": "1"}, "dc3dac88-d71d-4db1-a44a-3efc3f8f4404": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"CONCAT_WS('-', tx_id, _body_index)\",\n    incremental_strategy = 'delete+insert',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH\n\n{% if is_incremental() %}\nmax_date AS (\n\n    SELECT\n        MAX(\n            _inserted_timestamp\n        ) _inserted_timestamp\n    FROM\n        {{ this }}\n),\n{% endif %}\n\nswaps AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        tx_body,\n        _inserted_timestamp,\n        ROW_NUMBER() over (\n            PARTITION BY tx_id\n            ORDER BY\n                _inserted_timestamp ASC\n        ) - 1 AS rn\n    FROM\n        {{ ref('silver__transactions') }}\n        t,\n        LATERAL FLATTEN (\n            input => tx_body :messages,\n            recursive => TRUE\n        ) b\n    WHERE\n        key = '@type'\n        AND VALUE :: STRING = '/osmosis.gamm.v1beta1.MsgSwapExactAmountIn'\n        AND tx_succeeded = TRUE\n\n{% if is_incremental() %}\nAND t._inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        max_date\n)\n{% endif %}\n),\nmsg_atts AS (\n    SELECT\n        tx_id,\n        msg_group,\n        msg_index,\n        msg_type,\n        attribute_key,\n        attribute_value\n    FROM\n        {{ ref('silver__msg_attributes') }}\n\n{% if is_incremental() %}\nWHERE\n    _inserted_timestamp >= (\n        SELECT\n            MAX(\n                _inserted_timestamp\n            )\n        FROM\n            max_date\n    )\n{% endif %}\n),\npre_final AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        b.value,\n        b.value :sender :: STRING AS trader,\n        COALESCE(\n            b.value :tokenOutMinAmount :: NUMBER,\n            b.value :token_out_min_amount ::", "doc_id": "dc3dac88-d71d-4db1-a44a-3efc3f8f4404", "embedding": null, "doc_hash": "450c2d7176eeb5ad638b3cde6e4654fbb51f7a6fbc36d69cba770a1d29c05651", "extra_info": {"file_path": "models/silver/silver__swaps.sql", "file_name": "silver__swaps.sql"}, "node_info": {"start": 0, "end": 1810, "_node_type": "1"}, "relationships": {"1": "d47dd17a08ec9bacb03abc2221742a74ffa2eab0", "3": "744024c0-006e-449f-bf33-98e572287121"}}, "__type__": "1"}, "744024c0-006e-449f-bf33-98e572287121": {"__data__": {"text": "        b.value :token_out_min_amount :: NUMBER\n        ) AS to_amount,\n        b.value :routes AS routes,\n        _inserted_timestamp,\n        b.index AS _body_index\n    FROM\n        swaps s,\n        TABLE(FLATTEN(tx_body :messages)) b\n    WHERE\n        b.value :routes IS NOT NULL\n        AND b.index = rn\n),\npools AS (\n    SELECT\n        tx_id,\n        _body_index,\n        ARRAY_AGG(\n            COALESCE(\n                r.value :poolId,\n                r.value :pool_id\n            )\n        ) AS pool_ids\n    FROM\n        pre_final p,\n        TABLE(FLATTEN(routes)) r\n    GROUP BY\n        tx_id,\n        _body_index),\n        msg_idx AS (\n            SELECT\n                p.tx_id,\n                msg_group,\n                MIN(\n                    m.msg_index\n                ) AS min_msg_index\n            FROM\n                pre_final p\n                INNER JOIN msg_atts m\n                ON p.tx_id = m.tx_id\n            WHERE\n                (\n                    (\n                        msg_type = 'token_swapped'\n                        AND attribute_key = 'tokens_in'\n                    )\n                    OR (\n                        msg_type = 'transfer'\n                        AND attribute_key = 'amount'\n                    )\n                )\n                AND msg_group IS NOT NULL\n            GROUP BY\n                p.tx_id,\n                msg_group\n        ),\n        from_amt AS (\n            SELECT\n                m.tx_id,\n ", "doc_id": "744024c0-006e-449f-bf33-98e572287121", "embedding": null, "doc_hash": "05d28318e02a0070b45f4358713fe98dac884980e2e943fb0e4e52e532b3a12d", "extra_info": {"file_path": "models/silver/silver__swaps.sql", "file_name": "silver__swaps.sql"}, "node_info": {"start": 1781, "end": 3249, "_node_type": "1"}, "relationships": {"1": "d47dd17a08ec9bacb03abc2221742a74ffa2eab0", "2": "dc3dac88-d71d-4db1-a44a-3efc3f8f4404", "3": "05b9c81c-16de-4360-a9f2-928ff883b45f"}}, "__type__": "1"}, "05b9c81c-16de-4360-a9f2-928ff883b45f": {"__data__": {"text": "            m.tx_id,\n                p.msg_index,\n                m.msg_group,\n                RIGHT(attribute_value, LENGTH(attribute_value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(attribute_value, '[^[:digit:]]', ' ')), ' ', 0))) AS from_currency,\n                SPLIT_PART(\n                    TRIM(\n                        REGEXP_REPLACE(\n                            attribute_value,\n                            '[^[:digit:]]',\n                            ' '\n                        )\n                    ),\n                    ' ',\n                    0\n                ) AS from_amount\n            FROM\n                msg_atts p\n                INNER JOIN msg_idx m\n                ON p.tx_id = m.tx_id\n                AND p.msg_group = m.msg_group\n                AND p.msg_index = min_msg_index\n            WHERE\n                (\n                    (\n                        msg_type = 'token_swapped'\n                        AND attribute_key = 'tokens_in'\n                    )\n                    OR (\n                        msg_type = 'transfer'\n                        AND attribute_key = 'amount'\n                    )\n                )\n        ) {# ,\n        fee_rec AS (\n            SELECT\n                p.tx_id,\n                m.sender,\n                m.recipient\n            FROM\n                pre_final p\n                INNER JOIN (\n          ", "doc_id": "05b9c81c-16de-4360-a9f2-928ff883b45f", "embedding": null, "doc_hash": "d9ed16dce8c295a3d20254de8ef333ecb98ef61cdc4f867613d86a55577278b1", "extra_info": {"file_path": "models/silver/silver__swaps.sql", "file_name": "silver__swaps.sql"}, "node_info": {"start": 3271, "end": 4646, "_node_type": "1"}, "relationships": {"1": "d47dd17a08ec9bacb03abc2221742a74ffa2eab0", "2": "744024c0-006e-449f-bf33-98e572287121", "3": "613ab669-7265-411e-a817-0af805180706"}}, "__type__": "1"}, "613ab669-7265-411e-a817-0af805180706": {"__data__": {"text": "    INNER JOIN (\n                    SELECT\n                        tx_id,\n                        OBJECT_AGG(\n                            attribute_key :: STRING,\n                            attribute_value :: variant\n                        ) AS j,\n                        j :sender :: STRING AS sender,\n                        j :recipient :: STRING AS recipient\n                    FROM\n                        msg_atts\n                    WHERE\n                        msg_type = 'transfer'\n                        AND attribute_key IN (\n                            'recipient',\n                            'sender'\n                        )\n                        AND msg_group IS NULL\n                    GROUP BY\n                        tx_id\n                ) m\n                ON p.tx_id = m.tx_id\n                AND p.trader = sender\n        ),\n        ex_protorev AS (\n            SELECT\n                A.tx_id,\n                msg_index\n            FROM\n                msg_atts A\n                JOIN fee_rec b\n                ON A.tx_id = b.tx_id\n                AND A.attribute_value = b.recipient\n            WHERE\n                msg_type = 'transfer'\n                AND attribute_key = 'recipient'\n        ) #},\n        rel_to_transfers AS (\n            SELECT\n                A.tx_id,\n                A.msg_index\n            FROM\n                msg_atts A\n    ", "doc_id": "613ab669-7265-411e-a817-0af805180706", "embedding": null, "doc_hash": "ea8a7f8568e5666b0eb38a07b0bd4495c1109936d9900236d62ab547dfc9d8fb", "extra_info": {"file_path": "models/silver/silver__swaps.sql", "file_name": "silver__swaps.sql"}, "node_info": {"start": 4645, "end": 6030, "_node_type": "1"}, "relationships": {"1": "d47dd17a08ec9bacb03abc2221742a74ffa2eab0", "2": "05b9c81c-16de-4360-a9f2-928ff883b45f", "3": "a0ffcebb-18c6-449c-9830-13650df90817"}}, "__type__": "1"}, "a0ffcebb-18c6-449c-9830-13650df90817": {"__data__": {"text": "           msg_atts A\n                JOIN pre_final b\n                ON A.tx_id = b.tx_id\n                AND A.attribute_value = b.trader\n            WHERE\n                msg_type = 'transfer'\n                AND attribute_key = 'recipient'\n        ),\n        max_idx2 AS (\n            SELECT\n                p.tx_id,\n                msg_group,\n                MAX(\n                    m.msg_index\n                ) AS max_msg_index\n            FROM\n                pre_final p\n                INNER JOIN msg_atts m\n                ON p.tx_id = m.tx_id\n                JOIN rel_to_transfers ex\n                ON m.tx_id = ex.tx_id\n                AND m.msg_index = ex.msg_index\n            WHERE\n                (\n                    {# (\n                    msg_type = 'token_swapped'\n                    AND attribute_key = 'tokens_out'\n                )\n                OR #}(\n                msg_type = 'transfer'\n                AND attribute_key = 'amount'\n        )\n)\nAND msg_group IS NOT NULL {# AND ex.tx_id IS NULL #}\nGROUP BY\n    p.tx_id,\n    msg_group\n),\nto_amt AS (\n    SELECT\n        mm.tx_id,\n        p.msg_index,\n        mm.msg_group,\n        RIGHT(attribute_value, LENGTH(attribute_value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(attribute_value, '[^[:digit:]]', ' ')), ' ', 0))) AS to_currency,\n        SPLIT_PART(\n            TRIM(\n                REGEXP_REPLACE(\n                    attribute_value,\n                    '[^[:digit:]]',\n                    ' '\n                )\n           ", "doc_id": "a0ffcebb-18c6-449c-9830-13650df90817", "embedding": null, "doc_hash": "21549a905d7fb84efda8ca17fc2b1152a59d17b2258720ab157c7f13ec619dfb", "extra_info": {"file_path": "models/silver/silver__swaps.sql", "file_name": "silver__swaps.sql"}, "node_info": {"start": 6032, "end": 7545, "_node_type": "1"}, "relationships": {"1": "d47dd17a08ec9bacb03abc2221742a74ffa2eab0", "2": "613ab669-7265-411e-a817-0af805180706", "3": "1dca59c3-a2a4-4941-a0f0-a7b7e088183e"}}, "__type__": "1"}, "1dca59c3-a2a4-4941-a0f0-a7b7e088183e": {"__data__": {"text": "       )\n            ),\n            ' ',\n            0\n        ) AS to_amount\n    FROM\n        msg_atts p\n        INNER JOIN max_idx2 mm\n        ON p.tx_id = mm.tx_id\n        AND p.msg_group = mm.msg_group\n        AND p.msg_index = max_msg_index\n    WHERE\n        (\n            (\n                msg_type = 'token_swapped'\n                AND attribute_key = 'tokens_out'\n            )\n            OR (\n                msg_type = 'transfer'\n                AND attribute_key = 'amount'\n            )\n        )\n),\npre_final2 AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        p.tx_id,\n        tx_succeeded,\n        trader,\n        f.from_amount,\n        f.from_currency,\n        CASE\n            WHEN f.from_currency LIKE 'gamm/pool/%' THEN 18\n            ELSE l.decimal\n        END AS from_decimal,\n        tt.to_amount,\n        tt.to_currency,\n        CASE\n            WHEN tt.to_currency LIKE 'gamm/pool/%' THEN 18\n            ELSE A.decimal\n        END AS TO_DECIMAL,\n        pool_ids,\n        _inserted_timestamp,\n        p._body_index\n    FROM\n        pre_final p\n        LEFT OUTER JOIN pools pp\n        ON p.tx_id = pp.tx_id\n        AND p._body_index = pp._body_index\n        LEFT OUTER JOIN from_amt f\n        ON p.tx_id = f.tx_id\n        AND p._body_index = f.msg_group\n        LEFT OUTER JOIN to_amt tt\n        ON p.tx_id = tt.tx_id\n        AND p._body_index = tt.msg_group\n        LEFT OUTER JOIN {{ ref('silver__asset_metadata') }} A\n        ON tt.to_currency = A.address\n        LEFT OUTER JOIN {{ ref('silver__asset_metadata') }}\n        l\n        ON f.from_currency = l.address\n)\nSELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    trader,\n", "doc_id": "1dca59c3-a2a4-4941-a0f0-a7b7e088183e", "embedding": null, "doc_hash": "57c7db919d1b38b75b79f912950b81d42ae436865a504c2caf54919a99d6540f", "extra_info": {"file_path": "models/silver/silver__swaps.sql", "file_name": "silver__swaps.sql"}, "node_info": {"start": 7554, "end": 9248, "_node_type": "1"}, "relationships": {"1": "d47dd17a08ec9bacb03abc2221742a74ffa2eab0", "2": "a0ffcebb-18c6-449c-9830-13650df90817", "3": "e7fa0cfb-9e0d-4b2b-b1e1-1bc0d70d8d0c"}}, "__type__": "1"}, "e7fa0cfb-9e0d-4b2b-b1e1-1bc0d70d8d0c": {"__data__": {"text": "   tx_succeeded,\n    trader,\n    from_amount :: NUMBER AS from_amount,\n    from_currency,\n    from_decimal,\n    to_amount :: NUMBER AS to_amount,\n    to_currency,\n    TO_DECIMAL,\n    pool_ids,\n    _inserted_timestamp,\n    _body_index\nFROM\n    pre_final2\n", "doc_id": "e7fa0cfb-9e0d-4b2b-b1e1-1bc0d70d8d0c", "embedding": null, "doc_hash": "5eba9ce95d89c2fd4697ba13b82a02b3c7042f11862ce9f3369417d95fc06efb", "extra_info": {"file_path": "models/silver/silver__swaps.sql", "file_name": "silver__swaps.sql"}, "node_info": {"start": 9221, "end": 9475, "_node_type": "1"}, "relationships": {"1": "d47dd17a08ec9bacb03abc2221742a74ffa2eab0", "2": "1dca59c3-a2a4-4941-a0f0-a7b7e088183e"}}, "__type__": "1"}, "ae5b810c-374b-4e8a-8401-a6e7059e6eed": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__swaps\n    description: Records of all transactions that have occurred on Osmosis, dating back to the genesis block. \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - _BODY_INDEX\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 1\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: TRADER\n        description: \"{{ doc('trader') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: FROM_AMOUNT\n     ", "doc_id": "ae5b810c-374b-4e8a-8401-a6e7059e6eed", "embedding": null, "doc_hash": "13cde5c1e5056d12b7d0d42df8efb6d57f6361a53f02d9262747e4297101eeaa", "extra_info": {"file_path": "models/silver/silver__swaps.yml", "file_name": "silver__swaps.yml"}, "node_info": {"start": 0, "end": 1778, "_node_type": "1"}, "relationships": {"1": "670bb4ffa78ce830eab4537488114925a8414caa", "3": "3f0d4574-c426-487e-9e80-f8e47e48f95c"}}, "__type__": "1"}, "3f0d4574-c426-487e-9e80-f8e47e48f95c": {"__data__": {"text": "     - name: FROM_AMOUNT\n        description: \"{{ doc('from_amount') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT \n      - name: FROM_CURRENCY\n        description: \"{{ doc('from_currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: FROM_DECIMAL\n        description: \"{{ doc('from_decimal') }}\"\n      - name: TO_AMOUNT\n        description: \"{{ doc('to_amount') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT \n      - name: TO_CURRENCY\n        description: \"{{ doc('to_currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TO_DECIMAL\n        description: \"{{ doc('to_decimal') }}\"\n      - name: POOL_IDS\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - ARRAY\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "3f0d4574-c426-487e-9e80-f8e47e48f95c", "embedding": null, "doc_hash": "15aa73f583e65cac8b2c60be7f4205f9b66e47b6ab0624f648cf2b246224b8d4", "extra_info": {"file_path": "models/silver/silver__swaps.yml", "file_name": "silver__swaps.yml"}, "node_info": {"start": 1748, "end": 3446, "_node_type": "1"}, "relationships": {"1": "670bb4ffa78ce830eab4537488114925a8414caa", "2": "ae5b810c-374b-4e8a-8401-a6e7059e6eed"}}, "__type__": "1"}, "94cbae46-db87-492e-b62c-5588f9c4e905": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = [\"currency\",\"block_date\"],\n    incremental_strategy = 'merge',\n    cluster_by = ['block_date']\n) }}\n\nWITH last_block_of_day AS (\n\n    SELECT\n        block_timestamp :: DATE AS block_date,\n        MAX(block_id) AS block_id\n    FROM\n        {{ ref('silver__blocks') }}\n    WHERE\n        block_id >= 2300000\n    GROUP BY\n        block_date\n)\nSELECT\n    blc.block_id,\n    blc.block_date,\n    token_0_denom AS currency,\n    NULL AS market_Cap,\n    AVG(\n        twap\n    ) price,\n    AVG(twap_USD) price_usd,\n    MAX(liquidity) liquidity,\n    MAX(liquidity_usd) liquidity_usd,\n    SUM(volume) volume,\n    SUM(volume_usd) volume_usd,\n    MAX(_inserted_timestamp) AS _inserted_timestamp\nFROM\n    last_block_of_day blc\n    JOIN {{ ref('silver__pool_summary_hour') }} A\n    ON blc.block_date = A.block_timestamp :: DATE\n\n{% if is_incremental() %}\nWHERE\n    block_date >= (\n        SELECT\n            MAX(\n                block_date\n            )\n        FROM\n            {{ this }}\n    ) - INTERVAL '7 days'\n{% endif %}\nGROUP BY\n    blc.block_id,\n    blc.block_Date,\n    token_0_denom\n", "doc_id": "94cbae46-db87-492e-b62c-5588f9c4e905", "embedding": null, "doc_hash": "7f5a44392d4a6ecf8c49f47900d8a06a84d9535fc9c72e10842045de238e2ba7", "extra_info": {"file_path": "models/silver/silver__token_summary_day.sql", "file_name": "silver__token_summary_day.sql"}, "node_info": {"start": 0, "end": 1137, "_node_type": "1"}, "relationships": {"1": "fb3c0a397534b5ec9ac0e5031dff6f1070126dce"}}, "__type__": "1"}, "83e2ab3d-0b5a-4e28-bec2-9c7e20ccee55": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__token_summary_day\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - BLOCK_ID\n            - CURRENCY\n    columns:\n      - name: BLOCK_ID\n        tests:\n          - not_null\n      - name: BLOCK_DATE\n        tests:\n          - not_null\n      - name: CURRENCY\n        tests:\n          - not_null\n      - name: PRICE\n      - name: PRICE_USD\n      - name: LIQUIDITY\n      - name: LIQUIDITY_USD   \n      - name: VOLUME\n      - name: VOLUME_USD   \n      - name: TOKEN_3_AMOUNT\n      - name: _INSERTED_TIMESTAMP\n        tests:\n          - not_null", "doc_id": "83e2ab3d-0b5a-4e28-bec2-9c7e20ccee55", "embedding": null, "doc_hash": "a9d854e7d1c4840630242b3735c6eb485fb8f4c05909e7630f01d971e7db188a", "extra_info": {"file_path": "models/silver/silver__token_summary_day.yml", "file_name": "silver__token_summary_day.yml"}, "node_info": {"start": 0, "end": 633, "_node_type": "1"}, "relationships": {"1": "f4ec0c5331090c62666eea03fcc90424707fac89"}}, "__type__": "1"}, "6a316e71-b6f6-4dcc-be46-84f5bd978160": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = [\"tx_id\",\"msg_index\"],\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE'],\n) }}\n\nWITH bhour AS (\n\n    SELECT\n        DATE_TRUNC(\n            'hour',\n            block_timestamp\n        ) AS block_hour,\n        MAX(block_id) AS block_id_hour\n    FROM\n        {{ ref('silver__blocks') }}\n    WHERE\n        block_id >= 2300000 {# AND block_timestamp :: DATE <= CURRENT_DATE - 1 #}\n    GROUP BY\n        block_hour\n),\ntoken_swapped AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        msg_index,\n        tx_succeeded,\n        _inserted_timestamp,\n        OBJECT_AGG(\n            attribute_key :: STRING,\n            attribute_value :: variant\n        ) AS j,\n        j :sender :: STRING AS trader,\n        j :pool_id :: STRING AS pool_id,\n        j :tokens_in :: STRING AS tokens_in,\n        j :tokens_out :: STRING AS tokens_out\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        msg_type = 'token_swapped'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        {{ this }}\n)\n{% endif %}\nGROUP BY\n    block_id,\n    block_timestamp,\n    tx_id,\n    msg_index,\n    tx_succeeded,\n    _inserted_timestamp\n)\nSELECT\n    block_id,\n    block_id_hour,\n    block_timestamp,\n    tx_id,\n    msg_index,\n    tx_succeeded,\n    trader,\n    pool_id,\n    RIGHT(tokens_in, LENGTH(tokens_in) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(tokens_in, '[^[:digit:]]', ' ')), ' ', 0))) AS from_currency,\n    SPLIT_PART(\n        TRIM(\n            REGEXP_REPLACE(\n                tokens_in,\n                '[^[:digit:]]',\n                ' '\n            )\n        ),\n        ' ',\n        0\n    ) :: FLOAT AS from_amount,\n   ", "doc_id": "6a316e71-b6f6-4dcc-be46-84f5bd978160", "embedding": null, "doc_hash": "2d0367ced1c3824debc397be96f08cf2a3cb84cfd0d1414d45f54a4872834dbf", "extra_info": {"file_path": "models/silver/silver__token_swapped.sql", "file_name": "silver__token_swapped.sql"}, "node_info": {"start": 0, "end": 1810, "_node_type": "1"}, "relationships": {"1": "6cff944ddb431c5df8bfc5f82151f3b3d28245d5", "3": "2c352522-ea53-43cd-9ac3-2c83290e14cb"}}, "__type__": "1"}, "2c352522-ea53-43cd-9ac3-2c83290e14cb": {"__data__": {"text": " 0\n    ) :: FLOAT AS from_amount,\n    RIGHT(tokens_out, LENGTH(tokens_out) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(tokens_out, '[^[:digit:]]', ' ')), ' ', 0))) AS to_currency,\n    SPLIT_PART(\n        TRIM(\n            REGEXP_REPLACE(\n                tokens_out,\n                '[^[:digit:]]',\n                ' '\n            )\n        ),\n        ' ',\n        0\n    ) :: FLOAT AS to_amount,\n    _inserted_timestamp\nFROM\n    token_swapped A\n    JOIN bhour b\n    ON DATE_TRUNC(\n        'hour',\n        A.block_timestamp\n    ) = b.block_hour\n", "doc_id": "2c352522-ea53-43cd-9ac3-2c83290e14cb", "embedding": null, "doc_hash": "f3304770792ab259db2063025f52fbe9d850fdab14af2a17e82fdfa5196b30b5", "extra_info": {"file_path": "models/silver/silver__token_swapped.sql", "file_name": "silver__token_swapped.sql"}, "node_info": {"start": 1773, "end": 2312, "_node_type": "1"}, "relationships": {"1": "6cff944ddb431c5df8bfc5f82151f3b3d28245d5", "2": "6a316e71-b6f6-4dcc-be46-84f5bd978160"}}, "__type__": "1"}, "8b617041-69ca-4e62-b4b5-35c2fc6204de": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__token_swapped\n    description: Records of token_swapped events\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_INDEX\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 1\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: TRADER\n        description: \"{{ doc('trader') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo1[0-9a-z]{38,38}\n      - name: POOL_ID\n        description: \"{{", "doc_id": "8b617041-69ca-4e62-b4b5-35c2fc6204de", "embedding": null, "doc_hash": "8354476c1a9ec427c8b5d3f011d486cf17d93ce768171aaa368e9e12791fff55", "extra_info": {"file_path": "models/silver/silver__token_swapped.yml", "file_name": "silver__token_swapped.yml"}, "node_info": {"start": 0, "end": 1737, "_node_type": "1"}, "relationships": {"1": "3f76cf31b9c61617e8bf72feafc551e8e5b9375c", "3": "6563b7a0-11fa-4014-a9b8-4b94d03a8574"}}, "__type__": "1"}, "6563b7a0-11fa-4014-a9b8-4b94d03a8574": {"__data__": {"text": " - name: POOL_ID\n        description: \"{{ doc('pool_id') }}\"\n        tests: \n          - not_null\n      - name: FROM_CURRENCY\n        description: \"{{ doc('from_currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: FROM_AMOUNT\n        description: \"{{ doc('from_amount') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT \n      - name: TO_CURRENCY\n        description: \"{{ doc('to_currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TO_AMOUNT\n        description: \"{{ doc('to_amount') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT \n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "6563b7a0-11fa-4014-a9b8-4b94d03a8574", "embedding": null, "doc_hash": "7bea5b1388318c9c24c2351976eebe1e8505e63818137f56b9446baca102dc52", "extra_info": {"file_path": "models/silver/silver__token_swapped.yml", "file_name": "silver__token_swapped.yml"}, "node_info": {"start": 1696, "end": 3115, "_node_type": "1"}, "relationships": {"1": "3f76cf31b9c61617e8bf72feafc551e8e5b9375c", "2": "8b617041-69ca-4e62-b4b5-35c2fc6204de"}}, "__type__": "1"}, "02188bf4-cb7f-4cbf-be60-1631b8bc92f2": {"__data__": {"text": "{{ config(\n  materialized = 'incremental',\n  unique_key = \"tx_id\",\n  incremental_strategy = 'merge',\n  cluster_by = ['block_timestamp::DATE','_inserted_timestamp::DATE'],\n) }}\n\nSELECT\n  block_id,\n  block_timestamp,\n  tx :tx_result :codespace :: STRING AS codespace,\n  tx :tx_result :gasUsed :: INT AS gas_used,\n  tx :tx_result :gasWanted :: INT AS gas_wanted,\n  tx_id,\n  CASE\n    WHEN tx :tx_result :code :: INT = 0 THEN TRUE\n    ELSE FALSE\n  END AS tx_succeeded,\n  tx :tx_result :code :: INT tx_code,\n  tx :tx_result :events AS msgs,\n  tx :auth_info AS auth_info,\n  tx :body AS tx_body,\n  _inserted_timestamp\nFROM\n  {{ ref('bronze__transactions') }}\nWHERE\n  block_id = tx :height :: INT\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n  SELECT\n    MAX(\n      _inserted_timestamp\n    )\n  FROM\n    {{ this }}\n)\n{% endif %}\n\nqualify(ROW_NUMBER() over(PARTITION BY tx_id\nORDER BY\n  _inserted_timestamp DESC)) = 1\n", "doc_id": "02188bf4-cb7f-4cbf-be60-1631b8bc92f2", "embedding": null, "doc_hash": "0a7fb38f2a8f5166899a037ac65a6b24dd00e2445b6bc0098432042925ca177e", "extra_info": {"file_path": "models/silver/silver__transactions.sql", "file_name": "silver__transactions.sql"}, "node_info": {"start": 0, "end": 918, "_node_type": "1"}, "relationships": {"1": "01b422dcfa458f449eced403b14fa2684b165902"}}, "__type__": "1"}, "843fda7f-5785-4422-a8df-4cb3ac522a43": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__transactions\n    description: Records of all transactions that have occurred on Osmosis, dating back to the genesis block. \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 1\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: CODESPACE\n        description: \"{{ doc('codespace') }}\"\n        tests: \n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: GAS_USED\n        description: \"{{ doc('gas_used') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: GAS_WANTED\n        description: \"{{ doc('gas_wanted') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          -", "doc_id": "843fda7f-5785-4422-a8df-4cb3ac522a43", "embedding": null, "doc_hash": "30e3ce02c526abba212bb1d038ef85ba8bfe6d667fe58df983112c45609c5dc9", "extra_info": {"file_path": "models/silver/silver__transactions.yml", "file_name": "silver__transactions.yml"}, "node_info": {"start": 0, "end": 1799, "_node_type": "1"}, "relationships": {"1": "218a84150c94facf9cd66235521de0a2a631e210", "3": "d3a54cc4-398d-402f-af80-a4ca3928333f"}}, "__type__": "1"}, "d3a54cc4-398d-402f-af80-a4ca3928333f": {"__data__": {"text": "     - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: TX_CODE\n        description: \"{{ doc('tx_code') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: MSGS\n        description: \"The underlying json from the messages or events within the transactions\"\n        tests: \n          - not_null\n      - name: AUTH_INFO\n        description:  \"{{ doc('auth_info') }}\"\n      - name: TX_BODY\n        description:  \"{{ doc('tx_body') }}\"\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "d3a54cc4-398d-402f-af80-a4ca3928333f", "embedding": null, "doc_hash": "bfd6ac8fc6306c1cf5f49d0220de5b390c27098a5c054d854400c0a0cc5ec626", "extra_info": {"file_path": "models/silver/silver__transactions.yml", "file_name": "silver__transactions.yml"}, "node_info": {"start": 1772, "end": 2940, "_node_type": "1"}, "relationships": {"1": "218a84150c94facf9cd66235521de0a2a631e210", "2": "843fda7f-5785-4422-a8df-4cb3ac522a43"}}, "__type__": "1"}, "53edab88-f23a-43c5-aa2a-98223f8a893e": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = \"_unique_key\",\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE']\n) }}\n\nWITH base_atts AS (\n\n    SELECT\n        block_id,\n        block_timestamp,\n        tx_id,\n        tx_succeeded,\n        msg_group,\n        msg_sub_group,\n        msg_index,\n        msg_type,\n        attribute_key,\n        attribute_value,\n        _inserted_timestamp\n    FROM\n        {{ ref('silver__msg_attributes') }}\n    WHERE\n        (\n            attribute_key IN (\n                'acc_seq',\n                'amount'\n            )\n            OR msg_type IN (\n                'coin_spent',\n                'transfer',\n                'message',\n                'claim',\n                'ibc_transfer',\n                'write_acknowledgement'\n            )\n        )\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        {{ this }}\n) - INTERVAL '48 HOURS'\n{% endif %}\n),\nsender AS (\n    SELECT\n        tx_id,\n        msg_index,\n        SPLIT_PART(\n            attribute_value,\n            '/',\n            0\n        ) AS sender\n    FROM\n        base_atts\n    WHERE\n        attribute_key = 'acc_seq' qualify(ROW_NUMBER() over(PARTITION BY tx_id\n    ORDER BY\n        msg_index)) = 1\n),\nmessage_index_ibc AS (\n    SELECT\n        att.tx_id,\n        msg_group,\n        msg_sub_group,\n        MAX(\n            att.msg_index\n        ) AS max_index\n    FROM\n        base_atts att\n        INNER JOIN sender s\n        ON att.tx_id = s.tx_id\n    WHERE\n        (\n            msg_type = 'coin_spent'\n            OR msg_type = 'transfer'\n        )\n       ", "doc_id": "53edab88-f23a-43c5-aa2a-98223f8a893e", "embedding": null, "doc_hash": "adbab8c2e1ab6640e925ef80319347b177ffe427b2b1b9acceffc6aab4689554", "extra_info": {"file_path": "models/silver/silver__transfers.sql", "file_name": "silver__transfers.sql"}, "node_info": {"start": 0, "end": 1693, "_node_type": "1"}, "relationships": {"1": "5ed2043a4b6f51480cb63704de79fb1cabb9637d", "3": "dfa16c86-b9a4-4c67-b725-2d1c7319be73"}}, "__type__": "1"}, "dfa16c86-b9a4-4c67-b725-2d1c7319be73": {"__data__": {"text": "       )\n        AND attribute_key = 'amount'\n        AND att.msg_index > s.msg_index\n        AND msg_group IS NOT NULL\n    GROUP BY\n        att.tx_id,\n        msg_group,\n        msg_sub_group\n),\ncoin_sent_ibc AS (\n    SELECT\n        A.tx_id,\n        A.msg_group,\n        A.msg_sub_group,\n        COALESCE(\n            SPLIT_PART(\n                TRIM(\n                    REGEXP_REPLACE(\n                        attribute_value,\n                        '[^[:digit:]]',\n                        ' '\n                    )\n                ),\n                ' ',\n                0\n            ),\n            TRY_PARSE_JSON(attribute_value) :amount\n        ) AS amount,\n        COALESCE(\n            RIGHT(attribute_value, LENGTH(attribute_value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(attribute_value, '[^[:digit:]]', ' ')), ' ', 0))),\n            TRY_PARSE_JSON(attribute_value) [1] :denom\n        ) AS currency,\n        l.decimal AS DECIMAL\n    FROM\n        base_atts A\n        LEFT OUTER JOIN message_index_ibc m\n        ON A.tx_id = m.tx_id\n        AND A.msg_group = m.msg_group\n        AND A.msg_sub_group = m.msg_sub_group\n        LEFT OUTER JOIN {{ ref('silver__asset_metadata') }}\n        l\n        ON RIGHT(attribute_value, LENGTH(attribute_value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(attribute_value, '[^[:digit:]]', ' ')), ' ', 0))) = l.address\n    WHERE\n        A.msg_index = m.max_index\n        AND A.attribute_key = 'amount'\n),\nreceiver_ibc AS (\n    SELECT\n        tx_id,\n        msg_group,\n        msg_sub_group,\n        COALESCE(\n            attribute_value,\n            TRY_PARSE_JSON(attribute_value) :receiver\n        ) AS receiver,\n        MAX(msg_index) AS msg_index\n    FROM\n        base_atts\n   ", "doc_id": "dfa16c86-b9a4-4c67-b725-2d1c7319be73", "embedding": null, "doc_hash": "8acc491cd6645a9681fd38a3623e3e7c973870c002df278d2a905fa2e1cda283", "extra_info": {"file_path": "models/silver/silver__transfers.sql", "file_name": "silver__transfers.sql"}, "node_info": {"start": 1692, "end": 3411, "_node_type": "1"}, "relationships": {"1": "5ed2043a4b6f51480cb63704de79fb1cabb9637d", "2": "53edab88-f23a-43c5-aa2a-98223f8a893e", "3": "316a9b85-0bcc-4231-85af-b613b3764b5a"}}, "__type__": "1"}, "316a9b85-0bcc-4231-85af-b613b3764b5a": {"__data__": {"text": "   FROM\n        base_atts\n    WHERE\n        msg_type = 'ibc_transfer'\n        AND attribute_key = 'receiver'\n    GROUP BY\n        tx_id,\n        receiver,\n        msg_group,\n        msg_sub_group\n),\nosmo_tx_ids AS (\n    SELECT\n        DISTINCT tx_id\n    FROM\n        base_atts\n    WHERE\n        (\n            msg_type = 'message'\n            AND attribute_key = 'module'\n            AND attribute_value = 'bank'\n        )\n        OR msg_type = 'claim'\n),\nmessage_indexes_osmo AS (\n    SELECT\n        v.tx_id,\n        attribute_key,\n        m.msg_index\n    FROM\n        osmo_tx_ids v\n        LEFT OUTER JOIN base_atts m\n        ON v.tx_id = m.tx_id\n        INNER JOIN sender s\n        ON v.tx_id = s.tx_id\n    WHERE\n        msg_type = 'transfer'\n        AND attribute_key = 'amount'\n        AND m.msg_index > s.msg_index\n),\nosmo_receiver AS (\n    SELECT\n        o.tx_id,\n        m.msg_group,\n        m.msg_index,\n        attribute_value AS receiver\n    FROM\n        osmo_tx_ids o\n        LEFT OUTER JOIN base_atts m\n        ON o.tx_id = m.tx_id\n        LEFT OUTER JOIN message_indexes_osmo idx\n        ON idx.tx_id = m.tx_id\n    WHERE\n        m.msg_type = 'transfer'\n        AND m.attribute_key = 'recipient'\n        AND idx.msg_index = m.msg_index\n),\nosmo_amount AS (\n    SELECT\n        o.tx_id,\n        m.msg_index,\n        SPLIT_PART(\n            TRIM(\n                REGEXP_REPLACE(\n                    attribute_value,\n                    '[^[:digit:]]',\n                    ' '\n                )\n            ),\n            ' ',\n            0\n        ) AS amount,\n        RIGHT(attribute_value, LENGTH(attribute_value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(attribute_value, '[^[:digit:]]', '", "doc_id": "316a9b85-0bcc-4231-85af-b613b3764b5a", "embedding": null, "doc_hash": "d6de7b67be02d1d495be89b27c1093e8da59196b98cc3b2322d679e89f5be022", "extra_info": {"file_path": "models/silver/silver__transfers.sql", "file_name": "silver__transfers.sql"}, "node_info": {"start": 3399, "end": 5097, "_node_type": "1"}, "relationships": {"1": "5ed2043a4b6f51480cb63704de79fb1cabb9637d", "2": "dfa16c86-b9a4-4c67-b725-2d1c7319be73", "3": "b6f3af2e-c751-4dbe-b20d-48e8e58d6c04"}}, "__type__": "1"}, "b6f3af2e-c751-4dbe-b20d-48e8e58d6c04": {"__data__": {"text": "'[^[:digit:]]', ' ')), ' ', 0))) AS currency,\n        l.decimal AS DECIMAL\n    FROM\n        osmo_tx_ids o\n        LEFT OUTER JOIN base_atts m\n        ON o.tx_id = m.tx_id\n        LEFT OUTER JOIN message_indexes_osmo idx\n        ON idx.tx_id = m.tx_id\n        LEFT OUTER JOIN {{ ref('silver__asset_metadata') }}\n        l\n        ON RIGHT(attribute_value, LENGTH(attribute_value) - LENGTH(SPLIT_PART(TRIM(REGEXP_REPLACE(attribute_value, '[^[:digit:]]', ' ')), ' ', 0))) = l.address\n    WHERE\n        m.msg_type = 'transfer'\n        AND m.attribute_key = 'amount'\n        AND idx.msg_index = m.msg_index\n),\nfin AS (\n    SELECT\n        block_id,\n        block_timestamp,\n        r.tx_id,\n        t.tx_succeeded,\n        'IBC_TRANSFER_OUT' AS transfer_type,\n        r.msg_index,\n        sender,\n        COALESCE(\n            c_old.amount,\n            C.amount\n        ) AS amount,\n        COALESCE(\n            c_old.currency,\n            C.currency\n        ) AS currency,\n        COALESCE(\n            c_old.decimal,\n            C.decimal\n        ) AS DECIMAL,\n        receiver,\n        _inserted_timestamp,\n        concat_ws(\n            '-',\n            r.tx_id,\n            r.msg_index,\n            COALESCE(\n                c_old.currency,\n                C.currency\n            )\n        ) AS _unique_key\n    FROM\n        receiver_ibc r\n        LEFT OUTER JOIN coin_sent_ibc C\n        ON r.tx_id = C.tx_id\n        AND r.msg_group = C.msg_group\n        AND r.msg_sub_group = C.msg_sub_group + 1\n        LEFT OUTER JOIN coin_sent_ibc c_old\n        ON r.tx_id = c_old.tx_id\n        AND r.msg_group = c_old.msg_group\n        AND r.msg_sub_group = c_old.msg_sub_group\n        LEFT OUTER JOIN sender s\n        ON", "doc_id": "b6f3af2e-c751-4dbe-b20d-48e8e58d6c04", "embedding": null, "doc_hash": "10f8f48ec0cc6770402973e2773472065f25ee07d7188835758e8f5a288fbcfa", "extra_info": {"file_path": "models/silver/silver__transfers.sql", "file_name": "silver__transfers.sql"}, "node_info": {"start": 5097, "end": 6805, "_node_type": "1"}, "relationships": {"1": "5ed2043a4b6f51480cb63704de79fb1cabb9637d", "2": "316a9b85-0bcc-4231-85af-b613b3764b5a", "3": "a5b2e6f3-db62-4fa5-a29b-141484305aa7"}}, "__type__": "1"}, "a5b2e6f3-db62-4fa5-a29b-141484305aa7": {"__data__": {"text": "  LEFT OUTER JOIN sender s\n        ON r.tx_id = s.tx_id\n        JOIN (\n            SELECT\n                DISTINCT block_id,\n                block_timestamp,\n                tx_succeeded,\n                tx_id,\n                _inserted_timestamp\n            FROM\n                base_atts\n        ) t\n        ON r.tx_id = t.tx_id\n    WHERE\n        (\n            COALESCE(\n                c_old.amount,\n                C.amount\n            ) IS NOT NULL\n            OR COALESCE(\n                c_old.currency,\n                C.currency\n            ) IS NOT NULL\n        )\n    UNION ALL\n    SELECT\n        block_id,\n        block_timestamp,\n        r.tx_id,\n        t.tx_succeeded,\n        'OSMOSIS' AS transfer_type,\n        r.msg_index,\n        sender,\n        amount,\n        currency,\n        DECIMAL,\n        receiver,\n        _inserted_timestamp,\n        concat_ws(\n            '-',\n            r.tx_id,\n            r.msg_index,\n            currency\n        ) AS _unique_key\n    FROM\n        osmo_receiver r\n        LEFT OUTER JOIN osmo_amount C\n        ON r.tx_id = C.tx_id\n        AND r.msg_index = C.msg_index\n        LEFT OUTER JOIN sender s\n        ON r.tx_id = s.tx_id\n        JOIN (\n            SELECT\n                DISTINCT block_id,\n                block_timestamp,\n                tx_succeeded,\n                tx_id,\n                _inserted_timestamp\n            FROM\n                base_atts\n        ) t\n        ON r.tx_id = t.tx_id\n    WHERE\n        (\n       ", "doc_id": "a5b2e6f3-db62-4fa5-a29b-141484305aa7", "embedding": null, "doc_hash": "1812cb21ffe9fe3beba1773da94913b717255edfa87a941dbc24ff8bae7172e0", "extra_info": {"file_path": "models/silver/silver__transfers.sql", "file_name": "silver__transfers.sql"}, "node_info": {"start": 6799, "end": 8283, "_node_type": "1"}, "relationships": {"1": "5ed2043a4b6f51480cb63704de79fb1cabb9637d", "2": "b6f3af2e-c751-4dbe-b20d-48e8e58d6c04", "3": "2dcbe754-7673-48c4-b9c8-e77d88c3ab17"}}, "__type__": "1"}, "2dcbe754-7673-48c4-b9c8-e77d88c3ab17": {"__data__": {"text": "  WHERE\n        (\n            amount IS NOT NULL\n            OR currency IS NOT NULL\n        )\n    UNION ALL\n    SELECT\n        m.block_id,\n        m.block_timestamp,\n        s.tx_id,\n        m.tx_succeeded,\n        'IBC_TRANSFER_IN' AS transfer_type,\n        m.msg_index,\n        TRY_PARSE_JSON(attribute_value) :sender :: STRING AS sender,\n        C.amount :: NUMBER AS amount,\n        C.currency,\n        A.decimal,\n        TRY_PARSE_JSON(attribute_value) :receiver :: STRING AS receiver,\n        m._inserted_timestamp,\n        concat_ws(\n            '-',\n            s.tx_id,\n            m.msg_index,\n            currency\n        ) AS _unique_key\n    FROM\n        sender s\n        JOIN base_atts m\n        ON s.tx_id = m.tx_id\n        LEFT OUTER JOIN {{ ref('silver__asset_metadata') }} A\n        ON TRY_PARSE_JSON(attribute_value) :denom :: STRING = COALESCE(\n            raw_metadata [0] :aliases [0] :: STRING,\n            raw_metadata [0] :denom :: STRING\n        )\n        JOIN (\n            SELECT\n                DISTINCT block_id,\n                block_timestamp,\n                tx_succeeded,\n                tx_id,\n                _inserted_timestamp\n            FROM\n                base_atts\n        ) t\n        ON s.tx_id = t.tx_id\n        INNER JOIN coin_sent_ibc C\n        ON s.tx_id = C.tx_id\n        AND m.msg_group = C.msg_group {# AND m.msg_sub_group = C.msg_sub_group #}\n    WHERE\n        TRY_PARSE_JSON(attribute_value) :sender :: STRING IS NOT NULL\n        AND m.msg_type = 'write_acknowledgement'\n        AND m.attribute_key = 'packet_data'\n        AND (\n            amount IS NOT NULL\n            OR currency IS NOT NULL\n        )\n),\nlinks AS (\n    SELECT\n        tx_id,\n        deposit_address,\n        destination_address,\n ", "doc_id": "2dcbe754-7673-48c4-b9c8-e77d88c3ab17", "embedding": null, "doc_hash": "df2961a5b0ca7f60569a5875da69bc9c13db56b11b6fd6d2927304e00dcade36", "extra_info": {"file_path": "models/silver/silver__transfers.sql", "file_name": "silver__transfers.sql"}, "node_info": {"start": 8299, "end": 10053, "_node_type": "1"}, "relationships": {"1": "5ed2043a4b6f51480cb63704de79fb1cabb9637d", "2": "a5b2e6f3-db62-4fa5-a29b-141484305aa7", "3": "6a3f2cee-29b7-41ca-90ef-6277cbc662da"}}, "__type__": "1"}, "6a3f2cee-29b7-41ca-90ef-6277cbc662da": {"__data__": {"text": "deposit_address,\n        destination_address,\n        destination_chain,\n        module\n    FROM\n        {{ source(\n            'axelar_silver',\n            'link_events'\n        ) }}\n\n{% if is_incremental() %}\nWHERE\n    _inserted_timestamp >= (\n        SELECT\n            MAX(\n                _inserted_timestamp\n            )\n        FROM\n            {{ this }}\n    ) - INTERVAL '72 HOURS'\n{% endif %}\n),\naxl_tran AS (\n    SELECT\n        tx_id,\n        block_timestamp,\n        amount,\n        A.currency,\n        foreign_address,\n        sender,\n        foreign_chain,\n        receiver,\n        b.address\n    FROM\n        {{ source(\n            'axelar_silver',\n            'transfers'\n        ) }} A\n        LEFT JOIN {{ ref('silver__asset_metadata') }}\n        b\n        ON A.currency = b.alias\n    WHERE\n        foreign_address IS NOT NULL\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        {{ this }}\n) - INTERVAL '72 HOURS'\n{% endif %}\n)\nSELECT\n    A.block_id,\n    A.block_timestamp,\n    A.tx_id,\n    A.tx_succeeded,\n    A.transfer_type,\n    A.msg_index,\n    A.sender,\n    A.amount,\n    A.currency,\n    A.decimal,\n    A.receiver,\n    COALESCE(\n        b.destination_address,\n        C.sender\n    ) AS foreign_address,\n    COALESCE(\n        b.destination_chain,\n        C.foreign_chain\n    ) AS foreign_chain,\n    A._inserted_timestamp,\n    A._unique_key\nFROM\n    fin A\n    LEFT JOIN links b\n    ON A.receiver = b.deposit_address\n    LEFT JOIN axl_tran C\n    ON A.receiver = C.foreign_address\n    AND A.currency = COALESCE(\n        C.address,\n        C.currency\n    )\n    AND ABS(\n        DATEDIFF(\n            MINUTE,\n            A.block_timestamp,\n            C.block_timestamp\n        )\n  ", "doc_id": "6a3f2cee-29b7-41ca-90ef-6277cbc662da", "embedding": null, "doc_hash": "b1061b95fa75a920567b92f43b8386f7990ac6d9e92fc85f26c843970109b9dc", "extra_info": {"file_path": "models/silver/silver__transfers.sql", "file_name": "silver__transfers.sql"}, "node_info": {"start": 10024, "end": 11811, "_node_type": "1"}, "relationships": {"1": "5ed2043a4b6f51480cb63704de79fb1cabb9637d", "2": "2dcbe754-7673-48c4-b9c8-e77d88c3ab17", "3": "a217655e-bb28-4194-9b11-9cab21e80bdb"}}, "__type__": "1"}, "a217655e-bb28-4194-9b11-9cab21e80bdb": {"__data__": {"text": "  C.block_timestamp\n        )\n    ) < 15\n    AND A.transfer_type = 'IBC_TRANSFER_IN'\n    AND A.block_timestamp >= C.block_timestamp\n    AND A.amount <= C.amount qualify(ROW_NUMBER() over(PARTITION BY A.tx_id, A.msg_index\nORDER BY\n    ABS(A.amount - COALESCE(C.amount, 0))) = 1)\n", "doc_id": "a217655e-bb28-4194-9b11-9cab21e80bdb", "embedding": null, "doc_hash": "ad29c39156b6ec5af9f82190886110da771fae7cd21b23d54bfc0718a626e286", "extra_info": {"file_path": "models/silver/silver__transfers.sql", "file_name": "silver__transfers.sql"}, "node_info": {"start": 11817, "end": 12095, "_node_type": "1"}, "relationships": {"1": "5ed2043a4b6f51480cb63704de79fb1cabb9637d", "2": "6a3f2cee-29b7-41ca-90ef-6277cbc662da"}}, "__type__": "1"}, "c718d2e7-cddf-4bb8-85bc-50f5614a5ad9": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__transfers\n    description: Records of all transfers on Osmosis, including IBC transfers as on- and off-ramps to Osmosis and wallet to wallet transfers\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_INDEX\n            - CURRENCY\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 1\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: TRANSFER_TYPE\n        description: \"{{ doc('transfer_type') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: SENDER\n        description: \"{{ doc('sender') }}\"\n        tests: \n        ", "doc_id": "c718d2e7-cddf-4bb8-85bc-50f5614a5ad9", "embedding": null, "doc_hash": "1d1b7dc7991addb77d62f76b6e219630114b48320c14488ab697445d2c4b33cb", "extra_info": {"file_path": "models/silver/silver__transfers.yml", "file_name": "silver__transfers.yml"}, "node_info": {"start": 0, "end": 1796, "_node_type": "1"}, "relationships": {"1": "392335ad98d7cccc885f7f45f27c4826cca2c705", "3": "81af03f8-e144-4637-ad19-e09c080b3ad4"}}, "__type__": "1"}, "81af03f8-e144-4637-ad19-e09c080b3ad4": {"__data__": {"text": "       tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT \n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: DECIMAL\n        description: \"{{ doc('decimal') }}\"\n      - name: RECEIVER\n        description: \"{{ doc('receiver') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: FOREIGN_ADDRESS\n        description: \"{{ doc('foreign_address') }}\"\n      - name: FOREIGN_CHAIN\n        description: \"{{ doc('foreign_chain') }}\"\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ", "doc_id": "81af03f8-e144-4637-ad19-e09c080b3ad4", "embedding": null, "doc_hash": "5ad7ff8bf75cc8050723506069943aaffa49caf1ece901fe2f6060bf73b0052a", "extra_info": {"file_path": "models/silver/silver__transfers.yml", "file_name": "silver__transfers.yml"}, "node_info": {"start": 1773, "end": 3219, "_node_type": "1"}, "relationships": {"1": "392335ad98d7cccc885f7f45f27c4826cca2c705", "2": "c718d2e7-cddf-4bb8-85bc-50f5614a5ad9"}}, "__type__": "1"}, "ca0c3725-6fb1-4871-922a-a1d134b7c5e3": {"__data__": {"text": "{{ config(\n  materialized = 'incremental',\n  unique_key = \"_unique_key\",\n  incremental_strategy = 'merge',\n  cluster_by = ['_inserted_timestamp::DATE']\n) }}\n\nWITH b AS (\n\n  SELECT\n    block_id,\n    block_timestamp,\n    tx_id,\n    tx_succeeded,\n    INDEX AS msg_group,\n    VALUE :\"@type\" :: STRING AS msg_type,\n    VALUE AS msg,\n    _inserted_timestamp\n  FROM\n    {{ ref('silver__transactions') }} A,\n    LATERAL FLATTEN(\n      input => A.tx_body :messages\n    )\n\n{% if is_incremental() %}\nWHERE\n  _inserted_timestamp >= (\n    SELECT\n      MAX(\n        _inserted_timestamp\n      )\n    FROM\n      {{ this }}\n  )\n{% endif %}\n)\nSELECT\n  block_id,\n  block_timestamp,\n  tx_id,\n  tx_succeeded,\n  msg_group,\n  msg_type,\n  msg,\n  concat_ws(\n    '-',\n    tx_id,\n    msg_group\n  ) AS _unique_key,\n  _inserted_timestamp\nFROM\n  b\n", "doc_id": "ca0c3725-6fb1-4871-922a-a1d134b7c5e3", "embedding": null, "doc_hash": "8f1612bdbae7ca1fa645a57631d4a043978fdf6620f631ea443427a0850b499c", "extra_info": {"file_path": "models/silver/silver__tx_body_msgs.sql", "file_name": "silver__tx_body_msgs.sql"}, "node_info": {"start": 0, "end": 817, "_node_type": "1"}, "relationships": {"1": "b1c032053e04b7312e49f60639ed7a2f6b6ded0b"}}, "__type__": "1"}, "908dd528-6112-464a-baf8-1cd58d687991": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__tx_body_msgs\n    description: Records of all messages associated to transactions that have occurred on Osmosis, dating back to the genesis block. \n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_GROUP\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 1\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: MSG_TYPE\n        description: \"{{ doc('msg_type') }}\"\n        tests: \n          - not_null\n       ", "doc_id": "908dd528-6112-464a-baf8-1cd58d687991", "embedding": null, "doc_hash": "7f605dfcf05f49248c558179959cb50b4063cfa5a9b6782570ba0d493336cc9f", "extra_info": {"file_path": "models/silver/silver__tx_body_msgs.yml", "file_name": "silver__tx_body_msgs.yml"}, "node_info": {"start": 0, "end": 1789, "_node_type": "1"}, "relationships": {"1": "6a55dfb00de3b6929546cf3793750e90e5f09796", "3": "752d2aef-8845-4f97-9b69-8f0e638fb5a8"}}, "__type__": "1"}, "752d2aef-8845-4f97-9b69-8f0e638fb5a8": {"__data__": {"text": "        - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: MSG\n        description: \"The underlying json from the message or event within the transactions\"\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "752d2aef-8845-4f97-9b69-8f0e638fb5a8", "embedding": null, "doc_hash": "6c808fcff08259e2c035cb6aae0d2abbd2793704badfb0c262a36430e405ab93", "extra_info": {"file_path": "models/silver/silver__tx_body_msgs.yml", "file_name": "silver__tx_body_msgs.yml"}, "node_info": {"start": 1763, "end": 2305, "_node_type": "1"}, "relationships": {"1": "6a55dfb00de3b6929546cf3793750e90e5f09796", "2": "908dd528-6112-464a-baf8-1cd58d687991"}}, "__type__": "1"}, "70856120-303d-4b4b-83ab-7269c4f82c8c": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = [\"tx_id\",\"msg_group\",\"msg_sub_group\"],\n    incremental_strategy = 'merge',\n    cluster_by = ['block_timestamp::DATE']\n) }}\n\nWITH txs AS (\n\n    SELECT\n        DISTINCT A.tx_id,\n        A.msg_group,\n        msg_sub_group\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n    WHERE\n        msg_type = 'withdraw_commission'\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        {{ this }}\n)\n{% endif %}\n),\nmsg_attributes_base AS (\n    SELECT\n        A.tx_id,\n        A.block_id,\n        A.block_timestamp,\n        A.tx_succeeded,\n        A.msg_type,\n        A.msg_group,\n        A.msg_sub_group,\n        A.msg_index,\n        A.attribute_key,\n        A.attribute_value,\n        A._inserted_timestamp\n    FROM\n        {{ ref('silver__msg_attributes') }} A\n        JOIN txs b\n        ON A.tx_id = b.tx_id\n    WHERE\n        (\n            A.msg_group = b.msg_group\n            AND A.msg_sub_group = b.msg_sub_group\n            OR (\n                A.msg_group IS NULL\n                AND msg_type || attribute_key = 'txacc_seq'\n            )\n        )\n        AND msg_type || attribute_key IN (\n            'withdraw_commissionamount',\n            'transferrecipient',\n            'transferamount',\n            'messagesender',\n            'txacc_seq'\n        )\n        AND NOT (\n            msg_type || attribute_key = 'messagesender'\n            AND len(attribute_value) = 43\n        )\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(\n            _inserted_timestamp\n        )\n    FROM\n        {{ this }}\n)\n{% endif %}\n),\ncombo AS (\n    SELECT\n        tx_id,\n        msg_group,\n        msg_sub_group,\n      ", "doc_id": "70856120-303d-4b4b-83ab-7269c4f82c8c", "embedding": null, "doc_hash": "bbe779dc8155098044f0456cbfa39e2a957315e3001051d3d87481adb6a9964a", "extra_info": {"file_path": "models/silver/silver__validator_commission.sql", "file_name": "silver__validator_commission.sql"}, "node_info": {"start": 0, "end": 1783, "_node_type": "1"}, "relationships": {"1": "b7526e5c7342e1ca6e15d1798972fa00b44a426c", "3": "e803dc4f-bc31-4a7a-97f8-90adc5c8ffbe"}}, "__type__": "1"}, "e803dc4f-bc31-4a7a-97f8-90adc5c8ffbe": {"__data__": {"text": "       msg_sub_group,\n        OBJECT_AGG(\n            attribute_key :: STRING,\n            attribute_value :: variant\n        ) AS j,\n        j :sender :: STRING AS validator_address_operator,\n        j :amount :: STRING AS amount\n    FROM\n        msg_attributes_base\n    WHERE\n        msg_type IN (\n            'withdraw_commission',\n            'message'\n        )\n    GROUP BY\n        tx_id,\n        msg_group,\n        msg_sub_group\n),\nrecipient_msg_index AS (\n    SELECT\n        A.tx_id,\n        A.msg_group,\n        A.msg_sub_group,\n        A.msg_index\n    FROM\n        msg_attributes_base A\n        JOIN combo b\n        ON A.tx_id = b.tx_id\n        AND A.msg_group = b.msg_group\n        AND A.msg_sub_group = b.msg_sub_group\n    WHERE\n        A.msg_type = 'transfer'\n        AND A.attribute_value = b.amount\n),\nrecipient AS (\n    SELECT\n        A.tx_id,\n        A.msg_group,\n        A.msg_sub_group,\n        A.attribute_value AS validator_address_reward\n    FROM\n        msg_attributes_base A\n        JOIN recipient_msg_index b\n        ON A.tx_id = b.tx_id\n        AND A.msg_index = b.msg_index\n    WHERE\n        A.attribute_key = 'recipient'\n),\ntx_address AS (\n    SELECT\n        A.tx_id,\n        SPLIT_PART(\n            attribute_value,\n            '/',\n            0\n        ) AS tx_caller_address,\n        SPLIT_PART(\n            attribute_value,\n            '/',\n            1\n        ) AS acc_seq_index\n    FROM\n        msg_attributes_base A\n    WHERE\n        attribute_key = 'acc_seq' qualify(ROW_NUMBER() over (PARTITION BY tx_id\n    ORDER BY\n        acc_seq_index) = 1)\n),\nblock_tx_inserted AS (\n    SELECT\n        DISTINCT A.tx_id,\n        A.block_id,\n        A.block_timestamp,\n        A.tx_succeeded,\n        A._inserted_timestamp\n    FROM\n   ", "doc_id": "e803dc4f-bc31-4a7a-97f8-90adc5c8ffbe", "embedding": null, "doc_hash": "a71ad692bb688a43cd4c74d801bdf080d63d71469cea03bed6143d1c026a664b", "extra_info": {"file_path": "models/silver/silver__validator_commission.sql", "file_name": "silver__validator_commission.sql"}, "node_info": {"start": 1769, "end": 3530, "_node_type": "1"}, "relationships": {"1": "b7526e5c7342e1ca6e15d1798972fa00b44a426c", "2": "70856120-303d-4b4b-83ab-7269c4f82c8c", "3": "0621ff87-e480-4202-8e67-ddf4af6e1134"}}, "__type__": "1"}, "0621ff87-e480-4202-8e67-ddf4af6e1134": {"__data__": {"text": "   A._inserted_timestamp\n    FROM\n        msg_attributes_base A\n)\nSELECT\n    b.block_id,\n    b.block_timestamp,\n    A.tx_id,\n    b.tx_succeeded,\n    C.tx_caller_address,\n    A.msg_group,\n    A.msg_sub_group,\n    CASE\n        WHEN am.value LIKE '%uosmo' THEN REPLACE(\n            am.value,\n            'uosmo'\n        )\n        WHEN am.value LIKE '%uion' THEN REPLACE(\n            am.value,\n            'uion'\n        )\n        WHEN am.value LIKE '%ibc%' THEN LEFT(am.value, CHARINDEX('i', am.value) -1)\n    END :: INT AS amount,\n    CASE\n        WHEN am.value LIKE '%uosmo' THEN 'uosmo'\n        WHEN am.value LIKE '%uion' THEN 'uion'\n        WHEN am.value LIKE '%ibc%' THEN SUBSTRING(am.value, CHARINDEX('i', am.value), 99)\n        ELSE 'uosmo'\n    END AS currency,\n    A.validator_address_operator,\n    d.validator_address_reward,\n    b._inserted_timestamp\nFROM\n    combo A\n    JOIN LATERAL SPLIT_TO_TABLE(\n        A.amount,\n        ','\n    ) am\n    JOIN block_tx_inserted b\n    ON A.tx_id = b.tx_id\n    JOIN tx_address C\n    ON A.tx_id = C.tx_id\n    JOIN recipient d\n    ON A.tx_id = d.tx_id\n    AND A.msg_group = d.msg_group\n    AND A.msg_sub_group = d.msg_sub_group\n", "doc_id": "0621ff87-e480-4202-8e67-ddf4af6e1134", "embedding": null, "doc_hash": "651eb733daf35818233868a8ec5f403bdd0448e027dac00e2b6af4f858adae49", "extra_info": {"file_path": "models/silver/silver__validator_commission.sql", "file_name": "silver__validator_commission.sql"}, "node_info": {"start": 3508, "end": 4678, "_node_type": "1"}, "relationships": {"1": "b7526e5c7342e1ca6e15d1798972fa00b44a426c", "2": "e803dc4f-bc31-4a7a-97f8-90adc5c8ffbe"}}, "__type__": "1"}, "02169094-94b7-4427-bcb6-e46d7cd95860": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__validator_commission\n    description: Records of all validator commission claims\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - TX_ID\n            - MSG_GROUP\n            - MSG_SUB_GROUP\n            - CURRENCY\n    columns:\n      - name: BLOCK_ID\n        description: \"{{ doc('block_id') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: BLOCK_TIMESTAMP\n        description: \"{{ doc('block_timestamp') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_row_values_to_have_recent_data:\n              datepart: day\n              interval: 1\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n      - name: TX_ID\n        description: \"{{ doc('tx_id') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: TX_SUCCEEDED\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: TX_CALLER_ADDRESS\n        description: \"{{ doc('tx_caller_address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n            ", "doc_id": "02169094-94b7-4427-bcb6-e46d7cd95860", "embedding": null, "doc_hash": "9b0e4eb270028fa4e9715678d2aa44b2f1a3a01ca66f21c37bb3dd6aa335d604", "extra_info": {"file_path": "models/silver/silver__validator_commission.yml", "file_name": "silver__validator_commission.yml"}, "node_info": {"start": 0, "end": 1752, "_node_type": "1"}, "relationships": {"1": "65bcc09e9e8f95ae59563202c64ce30b97973643", "3": "dcb3b9eb-94a2-4236-b1d0-41a2867f49d5"}}, "__type__": "1"}, "dcb3b9eb-94a2-4236-b1d0-41a2867f49d5": {"__data__": {"text": "             regex: osmo[0-9a-z]{39,39}\n      - name: MSG_GROUP\n        description: \"{{ doc('msg_group') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: AMOUNT\n        description: \"{{ doc('amount') }}\"\n        tests:\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER    \n                - FLOAT  \n      - name: CURRENCY\n        description: \"{{ doc('currency') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: VALIDATOR_ADDRESS_OPERATOR\n        description: \"{{ doc('validator_address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmovaloper[0-9a-z]{39,39}\n      - name: VALIDATOR_ADDRESS_REWARD\n        description: \"{{ doc('validator_address_reward') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_match_regex:\n              regex: osmo[0-9a-z]{39,39}\n      - name: _INSERTED_TIMESTAMP\n        description: \"{{ doc('inserted_timestamp') }}\"\n        tests:\n          - not_null\n        ", "doc_id": "dcb3b9eb-94a2-4236-b1d0-41a2867f49d5", "embedding": null, "doc_hash": "18d534d1da7a919d8e2a2b8066a9874800625bdf93785fdd64c27b0f2e666262", "extra_info": {"file_path": "models/silver/silver__validator_commission.yml", "file_name": "silver__validator_commission.yml"}, "node_info": {"start": 1753, "end": 3474, "_node_type": "1"}, "relationships": {"1": "65bcc09e9e8f95ae59563202c64ce30b97973643", "2": "02169094-94b7-4427-bcb6-e46d7cd95860", "3": "2dd01795-2f13-4865-9a5f-e5b890cfd0ce"}}, "__type__": "1"}, "2dd01795-2f13-4865-9a5f-e5b890cfd0ce": {"__data__": {"text": "       - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - TIMESTAMP_NTZ\n", "doc_id": "2dd01795-2f13-4865-9a5f-e5b890cfd0ce", "embedding": null, "doc_hash": "4c9dbcfa36cf59bd65cfa6f03e8074d2b758ef6f07f71bd4c7305ee86e0a5b0e", "extra_info": {"file_path": "models/silver/silver__validator_commission.yml", "file_name": "silver__validator_commission.yml"}, "node_info": {"start": 3448, "end": 3600, "_node_type": "1"}, "relationships": {"1": "65bcc09e9e8f95ae59563202c64ce30b97973643", "2": "dcb3b9eb-94a2-4236-b1d0-41a2867f49d5"}}, "__type__": "1"}, "19430ad6-30f9-46df-878f-41fca43e8c0c": {"__data__": {"text": "{{ config(\n    materialized = 'incremental',\n    unique_key = 'proposal_id',\n    incremental_strategy = 'delete+insert'\n) }}\n\nWITH base AS (\n\n    SELECT\n        proposal_id,\n        resp,\n        _inserted_timestamp\n    FROM\n        {{ ref('bronze_api__validator_memos') }} A\n\n{% if is_incremental() %}\nWHERE\n    _inserted_timestamp >= (\n        SELECT\n            MAX(\n                _inserted_timestamp\n            )\n        FROM\n            {{ this }}\n    )\n{% endif %}\n)\nSELECT\n    proposal_id,\n    i.value :validator_address :: STRING AS validator_address,\n    i.value :memo :: STRING AS memo,\n    i.value :vote :: STRING AS vote,\n    i.value :voting_power :: FLOAT AS voting_power,\n    i.value :version :: INT AS version,\n    i.value :created_at :: datetime AS created_at,\n    i.value :updated_at :: datetime AS updated_at,\n    _inserted_timestamp\nFROM\n    base,\n    LATERAL FLATTEN(\n        input => resp :data\n    ) i\n", "doc_id": "19430ad6-30f9-46df-878f-41fca43e8c0c", "embedding": null, "doc_hash": "592cd2d121f887844a20ca1fb86bc7eb910855e80ce6e9bb5c069874ebe2fa7f", "extra_info": {"file_path": "models/silver/silver__validator_memos.sql", "file_name": "silver__validator_memos.sql"}, "node_info": {"start": 0, "end": 927, "_node_type": "1"}, "relationships": {"1": "ebf805912e099357eb1bbd21e260e81e6f7803bc"}}, "__type__": "1"}, "2f3d1abe-04db-415f-99ce-afd0b8f4a13e": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__validator_memos\n    tests: \n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - PROPOSAL_ID\n            - VALIDATOR_ADDRESS\n    columns:\n      - name: PROPOSAL_ID\n        tests:\n          - not_null\n      - name: VALIDATOR_ADDRESS\n        tests:\n          - not_null\n      - name: MEMO\n      - name: VOTE\n        tests:\n          - not_null\n      - name: VOTING_POWER\n      - name: VERSION\n        tests:\n          - not_null         \n      - name: CREATED_AT\n        tests:\n          - not_null\n      - name: UPDATED_AT\n        tests:\n          - not_null", "doc_id": "2f3d1abe-04db-415f-99ce-afd0b8f4a13e", "embedding": null, "doc_hash": "a59f87b0be0e6da6453a02ea08dd215e1f5c0554829e51cdb408a726e221d28e", "extra_info": {"file_path": "models/silver/silver__validator_memos.yml", "file_name": "silver__validator_memos.yml"}, "node_info": {"start": 0, "end": 638, "_node_type": "1"}, "relationships": {"1": "84cf76450fe88c644e4ad1523e075de6e349b53c"}}, "__type__": "1"}, "4b665a26-61f5-40a2-b9d3-9767296237b5": {"__data__": {"text": "{{ config(\n  materialized = 'table'\n) }}\n\nSELECT\n  VALUE: operator_address :: STRING AS address,\n  'osmosis' AS blockchain,\n  'flipside' AS creator,\n  'operator' AS label_type,\n  'validator' AS label_subtype,\n  VALUE: moniker :: STRING AS label,\n  VALUE: identity :: STRING AS project_name,\n  VALUE :account_address :: STRING AS account_address,\n  VALUE :delegator_shares :: NUMBER AS delegator_shares,\n  VALUE :jailed :: BOOLEAN AS jailed,\n  VALUE :max_change_rate :: NUMBER AS max_change_rate,\n  VALUE :max_rate :: NUMBER AS max_rate,\n  VALUE :min_self_delegation :: NUMBER AS min_self_delegation,\n  VALUE :rank :: NUMBER AS RANK,\n  VALUE :uptime :missed_blocks :: NUMBER AS missed_blocks,\n  VALUE AS raw_metadata, \n  concat_ws(\n        '-',\n        address, \n        creator, \n        blockchain\n    ) AS _unique_key, \n  VALUE :update_time :: TIMESTAMP AS _inserted_timestamp\nFROM\n  {{ source(\n    'bronze_streamline',\n    'validator_metadata_api'\n  ) }}\n\n  qualify(ROW_NUMBER() over(PARTITION BY blockchain, creator, address\nORDER BY\n  _inserted_timestamp DESC)) = 1\n", "doc_id": "4b665a26-61f5-40a2-b9d3-9767296237b5", "embedding": null, "doc_hash": "9c1a1f3531496dbc5391b34fa3c709904dabe3e3769e544ab682f9f54056109a", "extra_info": {"file_path": "models/silver/silver__validator_metadata.sql", "file_name": "silver__validator_metadata.sql"}, "node_info": {"start": 0, "end": 1071, "_node_type": "1"}, "relationships": {"1": "d674fa59b61343b1f6e8b2c0c42cbbc53b3760c0"}}, "__type__": "1"}, "caa7e459-5275-4b06-9373-4af532ebf556": {"__data__": {"text": "version: 2\nmodels:\n  - name: silver__validator_metadata\n    tests:\n      - dbt_utils.unique_combination_of_columns:\n          combination_of_columns:\n            - _UNIQUE_KEY\n    columns:\n      - name: ADDRESS\n        description: \"{{ doc('address') }}\"\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: BLOCKCHAIN\n        description: \"{{ doc('blockchain') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_be_in_set:\n              value_set: ['osmosis']\n      - name: CREATOR\n        description: \"{{ doc('creator') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: LABEL_TYPE\n        description: \"{{ doc('label_type') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_be_in_set:\n              value_set: ['operator']\n      - name: LABEL_SUBTYPE\n        description: \"{{ doc('label_subtype') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n          - dbt_expectations.expect_column_values_to_be_in_set:\n        ", "doc_id": "caa7e459-5275-4b06-9373-4af532ebf556", "embedding": null, "doc_hash": "d5f8a8587abc0a66de53d1216bd43160e77a79b94181ca1f351520c9d1478779", "extra_info": {"file_path": "models/silver/silver__validator_metadata.yml", "file_name": "silver__validator_metadata.yml"}, "node_info": {"start": 0, "end": 1764, "_node_type": "1"}, "relationships": {"1": "6eeccf7020b8bebb94acfdc39863b2dfcd7c8b67", "3": "29d6b0fe-a952-47d6-a70b-e403597ca93c"}}, "__type__": "1"}, "29d6b0fe-a952-47d6-a70b-e403597ca93c": {"__data__": {"text": "             value_set: ['validator']\n      - name: LABEL \n        description: \"{{ doc('label') }}\" \n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: PROJECT_NAME\n        description: \"{{ doc('project_name') }}\"\n        tests:\n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: ACCOUNT_ADDRESS\n        description: The osmosis address of the user / entity that operates the validator. \n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n      - name: DELEGATOR_SHARES\n        description: The number of tokens staked to the validator. \n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: JAILED\n        description: FALSE when a validator is not jailed, TRUE when a validator is jailed\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - BOOLEAN\n      - name: MAX_CHANGE_RATE\n        description: The maximum rate at which a validator can change their commission per day. \n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: MAX_RATE\n        description: The maximum commission rate that the validator can charge\n        tests: \n       ", "doc_id": "29d6b0fe-a952-47d6-a70b-e403597ca93c", "embedding": null, "doc_hash": "c2fa510586d5fd273ec0e0e7f13e25f1729737a438f068a9d4379081546677fb", "extra_info": {"file_path": "models/silver/silver__validator_metadata.yml", "file_name": "silver__validator_metadata.yml"}, "node_info": {"start": 1765, "end": 3638, "_node_type": "1"}, "relationships": {"1": "6eeccf7020b8bebb94acfdc39863b2dfcd7c8b67", "2": "caa7e459-5275-4b06-9373-4af532ebf556", "3": "c68b33fa-5f87-41d2-a639-5c2fe8c9092e"}}, "__type__": "1"}, "c68b33fa-5f87-41d2-a639-5c2fe8c9092e": {"__data__": {"text": "can charge\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: MIN_SELF_DELEGATION\n        description: The minimum number of OSMO tokens that the operator must be staking with their own validator\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: RANK\n        description: The rank of the validator in the validator set. Rank is determined by the number of OSMO tokens staked to the validator\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: MISSED_BLOCKS\n        description: The number of blocks the validator has been down for during it's lifetime. \n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - NUMBER\n                - FLOAT\n      - name: RAW_METADATA\n        description: \"{{ doc('raw_metadata') }}\"\n        tests: \n          - not_null\n      - name: _UNIQUE_KEY\n        description: The unique key of the table\n        tests: \n          - not_null\n          - dbt_expectations.expect_column_values_to_be_in_type_list:\n              column_type_list:\n                - STRING\n                - VARCHAR\n", "doc_id": "c68b33fa-5f87-41d2-a639-5c2fe8c9092e", "embedding": null, "doc_hash": "4b8cc38f50819a1d7f1eb9c6579d6f3cfe0c18d96e709acf10a07cb1b4e77884", "extra_info": {"file_path": "models/silver/silver__validator_metadata.yml", "file_name": "silver__validator_metadata.yml"}, "node_info": {"start": 3604, "end": 5178, "_node_type": "1"}, "relationships": {"1": "6eeccf7020b8bebb94acfdc39863b2dfcd7c8b67", "2": "29d6b0fe-a952-47d6-a70b-e403597ca93c"}}, "__type__": "1"}, "d4dc1c9b-731b-438c-ac3a-0990fd5ea0bb": {"__data__": {"text": "version: 2\n\nsources:\n  - name: prod\n    database: chainwalkers\n    schema: prod\n    tables:\n      - name: osmosis_blocks\n      - name: osmosis_txs \n  - name: shared\n    database: flipside_prod_db\n    schema: silver\n    tables:\n      - name: prices_v2\n  - name: bronze_api\n    schema: bronze_api\n    tables: \n      - name: blockchain\n  - name: bronze_streamline\n    database: streamline\n    schema: osmosis\n    tables:\n      - name: validator_metadata_api\n      - name: asset_metadata_api\n      - name: balances_api\n      - name: pool_balances_api\n  - name: crosschain_silver\n    database: \"{{ 'crosschain' if target.database == 'OSMOSIS' else 'crosschain_dev' }}\"\n    schema: silver\n    tables:\n      - name: asset_metadata_coin_market_cap\n      - name: asset_metadata_coin_gecko\n      - name: hourly_prices_coin_market_cap\n      - name: hourly_prices_coin_gecko\n  - name: crosschain\n    database: \"{{ 'crosschain' if target.database == 'OSMOSIS' else 'crosschain_dev' }}\"\n    schema: core\n    tables:\n      - name: address_labels\n      - name: address_tags\n      - name: dim_dates\n      - name: dim_date_hours\n  - name: axelar_silver\n    database: \"{{ 'axelar' if target.database == 'OSMOSIS' else 'axelar_dev' }}\"\n    schema: silver\n    tables:\n      - name: link_events\n      - name: transfers\n", "doc_id": "d4dc1c9b-731b-438c-ac3a-0990fd5ea0bb", "embedding": null, "doc_hash": "676521950518c739160a398917a066d52025c6af70eb0b55d66fe8a38cf7d085", "extra_info": {"file_path": "models/sources.yml", "file_name": "sources.yml"}, "node_info": {"start": 0, "end": 1297, "_node_type": "1"}, "relationships": {"1": "0e92971a1c24f7e81c639249a5499ada925ba03d"}}, "__type__": "1"}, "c8d39dd2-b918-41ef-b38a-646d5bd3efa9": {"__data__": {"text": "packages:\n  - package: dbt-labs/dbt_utils\n    version: 1.0.0\n  - package: calogica/dbt_expectations\n    version: [\">=0.4.0\", \"<0.9.0\"]\n  - package: dbt-labs/dbt_external_tables\n    version: 0.8.0\n  - git: https://github.com/FlipsideCrypto/fsc-utils.git\n    revision: \"v1.3.0\"", "doc_id": "c8d39dd2-b918-41ef-b38a-646d5bd3efa9", "embedding": null, "doc_hash": "bb4ed1aa39cf15f62c018d4dd0421952ce0ae8ace1cda628a8f67c67651d34b9", "extra_info": {"file_path": "packages.yml", "file_name": "packages.yml"}, "node_info": {"start": 0, "end": 275, "_node_type": "1"}, "relationships": {"1": "62c8c0b0485d3a46bbd171ed8debf0d0d7ab4d26"}}, "__type__": "1"}, "45fa5b7a-75c1-4ab2-8735-45322758d514": {"__data__": {"text": "osmosis:\n  target: dev\n  outputs:\n    dev:\n      type: snowflake\n      account: \"{{ env_var('ACCOUNT') }}\"\n      user: \"{{ env_var('USER') }}\"\n      password: \"{{ env_var('PASSWORD') }}\"\n      role: \"{{ env_var('ROLE') }}\"\n      schema: \"{{ env_var('SCHEMA') }}\"\n      region: \"{{ env_var('REGION') }}\"\n      database: \"{{ env_var('DATABASE') }}\"\n      warehouse: \"{{ env_var('WAREHOUSE') }}\"\n      threads: 8\n      client_session_keep_alive: False\n    prod:\n      type: snowflake\n      account: \"{{ env_var('ACCOUNT') }}\"\n      user: \"{{ env_var('USER') }}\"\n      password: \"{{ env_var('PASSWORD') }}\"\n      role: \"{{ env_var('ROLE') }}\"\n      schema: \"{{ env_var('SCHEMA') }}\"\n      region: \"{{ env_var('REGION') }}\"\n      database: \"{{ env_var('DATABASE') }}\"\n      warehouse: \"{{ env_var('WAREHOUSE') }}\"\n      threads: 8\n      client_session_keep_alive: False\n  config:\n    send_anonymous_usage_stats: False", "doc_id": "45fa5b7a-75c1-4ab2-8735-45322758d514", "embedding": null, "doc_hash": "39842563ea07d2c687ed8829431baea28a26a2d8a4cef98766469a8d576610c7", "extra_info": {"file_path": "profiles.yml", "file_name": "profiles.yml"}, "node_info": {"start": 0, "end": 912, "_node_type": "1"}, "relationships": {"1": "a2530f2cd25e1a893b2e645af738fb3872fafe65"}}, "__type__": "1"}}, "docstore/ref_doc_info": {"e7f63fa6f050dc095adaa719f3792b2faaed3d25": {"doc_ids": ["1de01b7d-b0e6-470f-a8f7-111c770c67da"], "extra_info": {"file_path": ".gitignore", "file_name": ".gitignore"}}, "3fa642b53b49b91eba6c77cbfdec5bc123c12000": {"doc_ids": ["1378ae9a-1ffe-44a8-af81-433bd3000c7a"], "extra_info": {"file_path": "LICENSE", "file_name": "LICENSE"}}, "5ec9918441fa2e6396702e48418567825cd559da": {"doc_ids": ["e1606499-953f-4a5d-9982-6fd4d7d36baf"], "extra_info": {"file_path": "README.md", "file_name": "README.md"}}, "1e04f880edfe9b5940366a63b2343d414e56b139": {"doc_ids": ["6e5975e9-3e2b-44bb-a2f1-029b40e96849"], "extra_info": {"file_path": "dbt_project.yml", "file_name": "dbt_project.yml"}}, "7df7a9982e2375296669892471311416b6af61de": {"doc_ids": ["850492e1-6f34-4811-b7cc-948ddaf7e491"], "extra_info": {"file_path": "models/bronze/bronze__asset_metadata_api.sql", "file_name": "bronze__asset_metadata_api.sql"}}, "ccc378509495b4e3421062fa2e472bd1623d1d25": {"doc_ids": ["15e150ae-dd14-471d-bda3-0af6a9e23c24"], "extra_info": {"file_path": "models/bronze/bronze__balances_api.sql", "file_name": "bronze__balances_api.sql"}}, "9ace3fc92367687a26b680d61659929f2ff8ae01": {"doc_ids": ["c12e2d7a-6c92-4630-b17f-9a74eac3425b"], "extra_info": {"file_path": "models/bronze/bronze__blocks.sql", "file_name": "bronze__blocks.sql"}}, "4bb7996d0648e76f59df4267cb157821d1464797": {"doc_ids": ["d59e23fa-5c3c-4606-9fb0-3401b92f5550"], "extra_info": {"file_path": "models/bronze/bronze__pool_balances_api.sql", "file_name": "bronze__pool_balances_api.sql"}}, "fa9a013a0138f9c34c0fd58a3ee2e27e98dbef1c": {"doc_ids": ["bdb65248-6ba4-444a-86f2-741df4faf90e"], "extra_info": {"file_path": "models/bronze/bronze__transactions.sql", "file_name": "bronze__transactions.sql"}}, "db508da309e65d5c543710329e858a69add618e5": {"doc_ids": ["445e7d86-eeb3-4bbc-8150-e646522b6c6b"], "extra_info": {"file_path": "models/bronze/bronze_api/bronze_api__validator_memos.sql", "file_name": "bronze_api__validator_memos.sql"}}, "3809b9efcab3b6022fd361192616e12fbf84ca8e": {"doc_ids": ["af2f5d0a-0e71-42b7-812a-78cc4312c5ec", "e3e2dfbe-3aca-4aa8-8616-9edf7eacf021"], "extra_info": {"file_path": "models/descriptions/__overview__.md", "file_name": "__overview__.md"}}, "1d33f3e215517ff3c30bd45c62cc4f67d18655c9": {"doc_ids": ["f96d8f49-94f4-401d-a9a8-f46dcf3d9ae6"], "extra_info": {"file_path": "models/descriptions/action.md", "file_name": "action.md"}}, "36215fe63e07fe2d1a32f489c4f08e6eafbcf692": {"doc_ids": ["e75825da-d6a2-4988-b615-acc1cd9fe76c"], "extra_info": {"file_path": "models/descriptions/address.md", "file_name": "address.md"}}, "1c7f7a0c0dca48387396c6205f8206ad1476dcb0": {"doc_ids": ["9f162f06-5ff2-459c-a654-31afc0f40aa2"], "extra_info": {"file_path": "models/descriptions/amount.md", "file_name": "amount.md"}}, "b6f363da862e13ca6516708724dbcf3da954a869": {"doc_ids": ["5f7a03f5-df1f-4c3f-81a0-0da667d64777"], "extra_info": {"file_path": "models/descriptions/amount_sent.md", "file_name": "amount_sent.md"}}, "fe16bbb782dd422cb32fb98838c4eeb2f22835c8": {"doc_ids": ["db13e7bf-47d1-436b-8a2f-0bc58ebf63a3"], "extra_info": {"file_path": "models/descriptions/auth_info.md", "file_name": "auth_info.md"}}, "95c8389417804ba33ca8fe431158590b9d87576f": {"doc_ids": ["d6c6a6c4-e2c8-441a-b7ba-e1fec3b09e6c"], "extra_info": {"file_path": "models/descriptions/block_id.md", "file_name": "block_id.md"}}, "907f6a36c5633585d6259122ece37c2147c9e288": {"doc_ids": ["9c83cbbc-9bb5-49f8-b674-c77f0ca827e6"], "extra_info": {"file_path": "models/descriptions/block_timestamp.md", "file_name": "block_timestamp.md"}}, "7851d73c3b521493c29ba4a3a9a0f70534cfa9f7": {"doc_ids": ["a77e0c3a-78a1-405d-8c9a-9ece1c337834"], "extra_info": {"file_path": "models/descriptions/blockchain.md", "file_name": "blockchain.md"}}, "28221b011fd18f88994bd605ee8abbd56df72ae2": {"doc_ids": ["7da1b50d-6655-4d4e-bab9-2a86c7ac0009"], "extra_info": {"file_path": "models/descriptions/chain_id.md", "file_name": "chain_id.md"}}, "7537e19b807bb9abee61cc86ca7555d09265798f": {"doc_ids": ["9a49cf18-2797-474a-9f34-bd8975123680"], "extra_info": {"file_path": "models/descriptions/codespace.md", "file_name": "codespace.md"}}, "83699d08e8a5c15005212b0fb867d8345ed71c5e": {"doc_ids": ["ffb3978f-1970-4c11-917a-0237f234cc77"], "extra_info": {"file_path": "models/descriptions/completion_time.md", "file_name": "completion_time.md"}}, "ff72c36d4d91ad932f6a6413b6cee495e672e8db": {"doc_ids": ["e9d91aa3-35ce-473e-81c5-aeb5d1da8102"], "extra_info": {"file_path": "models/descriptions/creator.md", "file_name": "creator.md"}}, "93f03273f4d54b25daf20d455bae5af2868994a1": {"doc_ids": ["8d1a6647-f602-49d6-b365-a8a1f1e66d8b"], "extra_info": {"file_path": "models/descriptions/currency.md", "file_name": "currency.md"}}, "eb9c154b68cf3399b90adc458e64e4b4b652a983": {"doc_ids": ["4b809129-b740-411f-8c43-d71b70f42a84"], "extra_info": {"file_path": "models/descriptions/decimal.md", "file_name": "decimal.md"}}, "2f8196e4a9959ad8c745f34c457ee58655531d12": {"doc_ids": ["e3abe1fe-bcaf-46dc-bf20-67225fd0a7f9"], "extra_info": {"file_path": "models/descriptions/delegator_address.md", "file_name": "delegator_address.md"}}, "343e244c93b79aa7265a9f00f521a0d680cbc865": {"doc_ids": ["7a7965e5-e02e-42fc-9800-61788304336a"], "extra_info": {"file_path": "models/descriptions/depositor.md", "file_name": "depositor.md"}}, "8247bd4181804ae997ab20c8394c18c71cd8c9ba": {"doc_ids": ["6bf68f8b-1a7e-4e50-930b-e7f1922f2b0c"], "extra_info": {"file_path": "models/descriptions/fee.md", "file_name": "fee.md"}}, "810d20dab0e18239fd2c5ff7f242620097fd68f7": {"doc_ids": ["3cbbd207-ec18-4ed6-bedb-d625a9181780"], "extra_info": {"file_path": "models/descriptions/foreign_address.md", "file_name": "foreign_address.md"}}, "e029c3ea2b2045326982e60e5b415353e793d224": {"doc_ids": ["a2d89f40-c123-4c19-a688-9633683acf3d"], "extra_info": {"file_path": "models/descriptions/foreign_chain.md", "file_name": "foreign_chain.md"}}, "9f6f49179d46cd83b6c8779dbd07e81403d767f6": {"doc_ids": ["49cdf900-6c11-4b4e-9057-c644c3f2ac27"], "extra_info": {"file_path": "models/descriptions/from_amount.md", "file_name": "from_amount.md"}}, "7c003a5d2a703c2f02eadc3db93e3693aa8c1275": {"doc_ids": ["608ab711-8949-4170-9f2f-c0f5952740aa"], "extra_info": {"file_path": "models/descriptions/from_currency.md", "file_name": "from_currency.md"}}, "f81fc378f51ade673da06bc79c54d51edd5b7577": {"doc_ids": ["90bb161f-18d8-485d-b4b3-4106e41b1a4e"], "extra_info": {"file_path": "models/descriptions/from_decimal.md", "file_name": "from_decimal.md"}}, "ae688aeec49233059b8f3416d74804691e5260dc": {"doc_ids": ["bf35080e-fd47-4df8-ac2a-828c7bb924f8"], "extra_info": {"file_path": "models/descriptions/gas_used.md", "file_name": "gas_used.md"}}, "937d08af0717658b08da8be3a4044fb670e6015b": {"doc_ids": ["ed02568c-dfd4-443c-8b67-7f019efc4388"], "extra_info": {"file_path": "models/descriptions/gas_wanted.md", "file_name": "gas_wanted.md"}}, "70fb7e5c2a9297da2d53eeaedf1f553212fd333d": {"doc_ids": ["d77d0176-c368-47c1-8cc9-cc42455fad53"], "extra_info": {"file_path": "models/descriptions/ingested_at.md", "file_name": "ingested_at.md"}}, "a5c0ccecd174dc7ef0108f323a66d7e13c3c1c9f": {"doc_ids": ["1483eec0-d0ba-45c1-b7b5-30c29ffa41b4"], "extra_info": {"file_path": "models/descriptions/inserted_timestamp.md", "file_name": "inserted_timestamp.md"}}, "82e4942aab0685a94b6e249892f04ef1d780faf9": {"doc_ids": ["651e7c06-1c15-4931-9047-f16ba49408ab"], "extra_info": {"file_path": "models/descriptions/is_superfluid.md", "file_name": "is_superfluid.md"}}, "51af3dc77e81e032ff57b71a872b28985bd4b4e2": {"doc_ids": ["ef9336b5-ba2f-4224-b8a5-e9be387d53bf"], "extra_info": {"file_path": "models/descriptions/label.md", "file_name": "label.md"}}, "113de57513707b1795888ec3d11a7d4b05c731d8": {"doc_ids": ["103774d5-57d1-4236-98df-7b81b9e143c0"], "extra_info": {"file_path": "models/descriptions/label_subtype.md", "file_name": "label_subtype.md"}}, "c81472b598869651a087cc4f3abe0a90f63b902b": {"doc_ids": ["6eb204de-2b71-42de-9e6a-b3cfe14b58f8"], "extra_info": {"file_path": "models/descriptions/label_type.md", "file_name": "label_type.md"}}, "42947c1d8e94c65ace667ed3d584ae8ab8cf0586": {"doc_ids": ["7a6970b7-6014-4e53-8c81-e668e72acdff"], "extra_info": {"file_path": "models/descriptions/liquidity_provider_address.md", "file_name": "liquidity_provider_address.md"}}, "cca51c2bbe1ce3398a55d12ee03244c7745fafea": {"doc_ids": ["28c53d6a-d900-4c7d-831d-3f86dc3fbdd6"], "extra_info": {"file_path": "models/descriptions/lock_duration.md", "file_name": "lock_duration.md"}}, "64fabbe7956bade82218af470eb55bb24ea3ad53": {"doc_ids": ["eb1fa032-e2d9-4355-a3c8-70ead60d311c"], "extra_info": {"file_path": "models/descriptions/lock_id.md", "file_name": "lock_id.md"}}, "b1c6c0ea27381ed28684039bc0427915b85acc05": {"doc_ids": ["8ef6ead6-5863-4b5b-a06f-2c663c7b07aa"], "extra_info": {"file_path": "models/descriptions/locker_address.md", "file_name": "locker_address.md"}}, "f371689d965d57ef92c073835e0a7bf3a186e1e8": {"doc_ids": ["627f3cf8-614d-404b-94a9-26752e5bb3ec"], "extra_info": {"file_path": "models/descriptions/memo.md", "file_name": "memo.md"}}, "4a310e191fa95fb7c7bcd461c95cecb5fc66c805": {"doc_ids": ["b8a3829a-0059-411a-a506-8887c55850b2"], "extra_info": {"file_path": "models/descriptions/msg_action.md", "file_name": "msg_action.md"}}, "42f5269c3f8c0ced5fc7242bf5fb15224387cba2": {"doc_ids": ["96e5d505-d1b1-404c-8af1-1e06b3d32036"], "extra_info": {"file_path": "models/descriptions/msg_action_description.md", "file_name": "msg_action_description.md"}}, "ef4c5c1675f609e25d0e078696d6c468fb2141cb": {"doc_ids": ["d0e7294d-5d25-4fc7-876d-c12ba17c62a7"], "extra_info": {"file_path": "models/descriptions/msg_group.md", "file_name": "msg_group.md"}}, "8af906527bd50e3af4905a8851b952ed787062e7": {"doc_ids": ["b88b7cd9-64f8-4033-8dd4-f31042c57ab6"], "extra_info": {"file_path": "models/descriptions/msg_index.md", "file_name": "msg_index.md"}}, "8b5a36cf3cd554e7a20f1fcf1f3e03409e2157dc": {"doc_ids": ["6ea13be4-1bbf-4b9c-acf2-3ec061afd6d9"], "extra_info": {"file_path": "models/descriptions/msg_sub_group.md", "file_name": "msg_sub_group.md"}}, "e16302b6f135fdfd0b305c666725a24e3c510d86": {"doc_ids": ["0f30f417-95d7-403c-98e4-17053a938170"], "extra_info": {"file_path": "models/descriptions/msg_type.md", "file_name": "msg_type.md"}}, "c185e179b980fa797f928fce6e34a2776e89aaa7": {"doc_ids": ["d45aafdc-3e53-4f24-acf3-2f14d134513d"], "extra_info": {"file_path": "models/descriptions/pool_assets.md", "file_name": "pool_assets.md"}}, "8aa92e3f2ba495a4187941fe042a69de51bd6cb4": {"doc_ids": ["d92c30d2-e3e7-4e39-bed1-035318ab3fea"], "extra_info": {"file_path": "models/descriptions/pool_id.md", "file_name": "pool_id.md"}}, "ae8713be4d0038a6be89dfc10e0008de06730cc7": {"doc_ids": ["18701f07-69fd-41d7-b4dc-e7c662203aa1"], "extra_info": {"file_path": "models/descriptions/pool_module.md", "file_name": "pool_module.md"}}, "a8a553d961602a782977c6750c98ccf9903282ee": {"doc_ids": ["5c525a48-1c5f-4ab7-b154-0e6f51877dd1"], "extra_info": {"file_path": "models/descriptions/project_name.md", "file_name": "project_name.md"}}, "5c37c5641eff49c5a4a191dace7378a06cabce28": {"doc_ids": ["c08b5aa8-deff-4218-bbcc-ef637cb16d8e"], "extra_info": {"file_path": "models/descriptions/proposal_description.md", "file_name": "proposal_description.md"}}, "5c355c2b197a6d6f1d228045d7cf5fd22c4f94a1": {"doc_ids": ["1127e67c-c994-4217-a5c9-2aec827a45c1"], "extra_info": {"file_path": "models/descriptions/proposal_id.md", "file_name": "proposal_id.md"}}, "7c04919922114a91ab3b3676a54e14d39674405a": {"doc_ids": ["49301054-5819-48e5-b4ea-84a95447559d"], "extra_info": {"file_path": "models/descriptions/proposal_title.md", "file_name": "proposal_title.md"}}, "73001471479ef3510b12fecf6ca4e881effb7b54": {"doc_ids": ["33b159aa-f46a-4527-83b6-6b0d32c23920"], "extra_info": {"file_path": "models/descriptions/proposal_type.md", "file_name": "proposal_type.md"}}, "8cf193dd47e680c4ef435bf9bd2e6f63eaf6fb8f": {"doc_ids": ["1abe18e3-cc92-4d41-873b-a376406b6b33"], "extra_info": {"file_path": "models/descriptions/proposer.md", "file_name": "proposer.md"}}, "0dcaa940c746a305f42327f399c838e0246cea41": {"doc_ids": ["2d40275b-be14-4ab4-a5cf-ce120df48d28"], "extra_info": {"file_path": "models/descriptions/proposer_address.md", "file_name": "proposer_address.md"}}, "539e992f59af7bc0a044cc0efdd49c5a3b1ff0f1": {"doc_ids": ["36e7ef64-7d1e-4144-8161-1f681e646718"], "extra_info": {"file_path": "models/descriptions/raw_metadata.md", "file_name": "raw_metadata.md"}}, "e82f2dad256034703ec7148802baaeb972866360": {"doc_ids": ["2d0cd355-ed61-4f73-a5ef-1dbf1e2b6be7"], "extra_info": {"file_path": "models/descriptions/receiver.md", "file_name": "receiver.md"}}, "01c046087add1a88593455e826f6a1ca86c9cf91": {"doc_ids": ["7009e39a-f690-4dd8-9f75-98a19f7140a8"], "extra_info": {"file_path": "models/descriptions/redelegate_source_validator_address.md", "file_name": "redelegate_source_validator_address.md"}}, "1b55aab3946d9df9cd4d9bb72d9a9b045ebb8ec8": {"doc_ids": ["699b3087-e6b5-43c9-ab20-3805db6a74ec"], "extra_info": {"file_path": "models/descriptions/sender.md", "file_name": "sender.md"}}, "5ab9567c609fdbedb46eb6b4f74298983b06cffe": {"doc_ids": ["e9939233-79c1-4170-9dc8-6dc625e7a668"], "extra_info": {"file_path": "models/descriptions/silver_msg_group.md", "file_name": "silver_msg_group.md"}}, "42409e3d82bc0aa9593cc6ddde456f5d94f385e6": {"doc_ids": ["24b614f9-7021-42f1-888f-f5c20163a1e6"], "extra_info": {"file_path": "models/descriptions/to_amount.md", "file_name": "to_amount.md"}}, "1b802cedef27f6eaf03b408d1acc79c2a14283a3": {"doc_ids": ["45b13575-12f0-44e9-b987-4a60d89b0001"], "extra_info": {"file_path": "models/descriptions/to_currency.md", "file_name": "to_currency.md"}}, "b176f762788b4b0bf53cef3d9114518c202b13b0": {"doc_ids": ["8af9f491-83c0-4df0-9dad-343c3e418e30"], "extra_info": {"file_path": "models/descriptions/to_decimal.md", "file_name": "to_decimal.md"}}, "2bf99dd80b99e8fa76abc03669a50b448a0a0c0a": {"doc_ids": ["13d66882-7cc3-48d5-9fca-386eb1073533"], "extra_info": {"file_path": "models/descriptions/trader.md", "file_name": "trader.md"}}, "4b8d2f29071e2d5be77d90f7823ebce071c867d9": {"doc_ids": ["eabf9fbb-c456-4453-96ff-6ac1250e0fcb"], "extra_info": {"file_path": "models/descriptions/transfer_type.md", "file_name": "transfer_type.md"}}, "0f4d372827cf00496c7485d14d16e92da27a5782": {"doc_ids": ["f7e762b1-0b46-418c-959d-2463dcd28760"], "extra_info": {"file_path": "models/descriptions/tx_body.md", "file_name": "tx_body.md"}}, "307ba3ad4c1c6f0f684ebd313c5f80725b45e2f3": {"doc_ids": ["74589fa4-5db4-476e-a855-5ad2547cd440"], "extra_info": {"file_path": "models/descriptions/tx_caller_address.md", "file_name": "tx_caller_address.md"}}, "5200c7e70fe11decbc5251cccf8a6abf86bfa274": {"doc_ids": ["d317b21d-60f2-49c3-9f24-719477a3cbce"], "extra_info": {"file_path": "models/descriptions/tx_code.md", "file_name": "tx_code.md"}}, "750dccb77c1965b3372efb287b5e45bb93be83b8": {"doc_ids": ["478a0894-429b-48be-aa5e-ee4a91ae09a8"], "extra_info": {"file_path": "models/descriptions/tx_count.md", "file_name": "tx_count.md"}}, "d9fd624a1146deaeeca8ed61ff7fe773fbbb290c": {"doc_ids": ["cd4a54ea-a44d-4562-a6c5-f18c3e59ac04"], "extra_info": {"file_path": "models/descriptions/tx_from.md", "file_name": "tx_from.md"}}, "9232e9889385402cdae54a1c80c5cf0657dd581f": {"doc_ids": ["3e6fbd4f-87a9-463d-b6f7-89d70020f844"], "extra_info": {"file_path": "models/descriptions/tx_id.md", "file_name": "tx_id.md"}}, "58948fe64d76f9b69901191e9eeb7e7a83a30648": {"doc_ids": ["01a29338-93c1-48d5-be1e-ced7704415aa"], "extra_info": {"file_path": "models/descriptions/tx_status.md", "file_name": "tx_status.md"}}, "6b30779a2aff18ac8ac3ae354e3d8e4fe592eb81": {"doc_ids": ["9a3f8370-92e6-43e9-8244-90dc53eba075"], "extra_info": {"file_path": "models/descriptions/tx_succeeded.md", "file_name": "tx_succeeded.md"}}, "7919373d518f96f05b88c1384644a6e4701152e8": {"doc_ids": ["9a1a5b70-ca9e-4e18-a5b7-060f0e729e71"], "extra_info": {"file_path": "models/descriptions/unlock_time.md", "file_name": "unlock_time.md"}}, "251415c704030d49e5035fc9f53ae9e46c2c8b33": {"doc_ids": ["667c095f-7e4f-4b64-9240-6cbfc0f6a139"], "extra_info": {"file_path": "models/descriptions/unpool_new_lock_ids.md", "file_name": "unpool_new_lock_ids.md"}}, "870aa3bb2632e38080ec529bdcdeb9ee1dd8231e": {"doc_ids": ["648e118f-5d38-4f97-a2e0-ab34b138e999"], "extra_info": {"file_path": "models/descriptions/validator_address.md", "file_name": "validator_address.md"}}, "2f3f6ecadd2046d85b39451ba0d39029b7417043": {"doc_ids": ["3068b082-c7fd-4f20-b7c6-5a7965768b71"], "extra_info": {"file_path": "models/descriptions/validator_address_reward.md", "file_name": "validator_address_reward.md"}}, "45364223fd3bbfce518d9f2fdde6c6b99c577775": {"doc_ids": ["27991522-8846-4023-bd06-cd4ed949b3a5"], "extra_info": {"file_path": "models/descriptions/validator_hash.md", "file_name": "validator_hash.md"}}, "6408db14c910ee6db1191bb07ebf374e7be0e4cd": {"doc_ids": ["8177380f-9427-4c15-a83b-33137da99fe2"], "extra_info": {"file_path": "models/descriptions/vote_option.md", "file_name": "vote_option.md"}}, "e83f47e9a4c95c615184bad6075e11d0ea0c3a0d": {"doc_ids": ["379a3898-9b12-4773-a459-887c8b268f97"], "extra_info": {"file_path": "models/descriptions/vote_weight.md", "file_name": "vote_weight.md"}}, "ff8c0f3e6d034cfce010bf85f50df8046d6abc8a": {"doc_ids": ["0f6204a5-e656-4669-b96d-69325f5f874c"], "extra_info": {"file_path": "models/descriptions/voter.md", "file_name": "voter.md"}}, "021bb6e5529ca1ba7a92434ab6d3eb56106cb7c5": {"doc_ids": ["46a677f3-a383-4fc5-bcaf-a07512efcc1e"], "extra_info": {"file_path": "models/gold/core__dim_labels.sql", "file_name": "core__dim_labels.sql"}}, "711f2c3565c6bf2aa4dd395c677ded7689f2dea9": {"doc_ids": ["e44b6f7d-6f22-40df-ab1b-b778e356719e"], "extra_info": {"file_path": "models/gold/core__dim_labels.yml", "file_name": "core__dim_labels.yml"}}, "8908e4d12eeb8645def40330de27378bf5f82bf2": {"doc_ids": ["651b55a9-e9d0-460b-9e73-7c3b5daffb14"], "extra_info": {"file_path": "models/gold/core__dim_liquidity_pools.sql", "file_name": "core__dim_liquidity_pools.sql"}}, "a5049e5d8c2d54d410faee2ce87823d6dce805a1": {"doc_ids": ["aad0cd97-af7a-4572-a510-ba45c430ebb3"], "extra_info": {"file_path": "models/gold/core__dim_liquidity_pools.yml", "file_name": "core__dim_liquidity_pools.yml"}}, "46f569509ba99418bf063d6918956d23a946a3e8": {"doc_ids": ["dd13033b-5692-4011-9729-2b7dd5876404"], "extra_info": {"file_path": "models/gold/core__dim_prices.sql", "file_name": "core__dim_prices.sql"}}, "6689444f26356d9566e370e1bf60cd9f42e57aa6": {"doc_ids": ["5857f287-f427-42bf-9745-6187cb9e7b5d"], "extra_info": {"file_path": "models/gold/core__dim_prices.yml", "file_name": "core__dim_prices.yml"}}, "1535e5e2755ae967d703440907005c78c19e27b6": {"doc_ids": ["d8eff972-e27b-483d-b010-8cd3a3905c47"], "extra_info": {"file_path": "models/gold/core__dim_tokens.sql", "file_name": "core__dim_tokens.sql"}}, "748c60da6b7a645d0d05399f4da0dda4be8626c0": {"doc_ids": ["719fcec9-4ca0-4efb-b467-656aa84dc769"], "extra_info": {"file_path": "models/gold/core__dim_tokens.yml", "file_name": "core__dim_tokens.yml"}}, "38fd3af44a6b3f6f8f2cf2a6b463b1cb6817454c": {"doc_ids": ["40e5c434-8b12-4b91-acf5-1a102a3c025a"], "extra_info": {"file_path": "models/gold/core__dim_vote_options.sql", "file_name": "core__dim_vote_options.sql"}}, "a2c88a3bc79d601d1073b4315693be9d1ff92aa2": {"doc_ids": ["056a9a00-d103-4423-b065-4f52bca500cc"], "extra_info": {"file_path": "models/gold/core__ez_icns.sql", "file_name": "core__ez_icns.sql"}}, "c125853ff4d42aa057e79cb152485dc86863bf12": {"doc_ids": ["9dae72aa-2138-44ad-b0ef-ff282b3deb3d"], "extra_info": {"file_path": "models/gold/core__ez_icns.yml", "file_name": "core__ez_icns.yml"}}, "3b6701ce100a8b5baa92ecf81c4226308966338f": {"doc_ids": ["e61afc6f-2ae3-43fa-955a-0a94a7f6036b"], "extra_info": {"file_path": "models/gold/core__ez_prices.sql", "file_name": "core__ez_prices.sql"}}, "f45b908cf4eaa8fa79d54f651f7450a22391558b": {"doc_ids": ["d5d16a44-2cb9-4494-9b51-ced375bc9688"], "extra_info": {"file_path": "models/gold/core__ez_prices.yml", "file_name": "core__ez_prices.yml"}}, "0178a9a39595b7bbaade2b6f9601062615cf3b71": {"doc_ids": ["460eac43-0003-47aa-b6ed-5b0cbdc71ffb"], "extra_info": {"file_path": "models/gold/core__fact_airdrop.sql", "file_name": "core__fact_airdrop.sql"}}, "d64220a219bf8cecdfc6ffb25142170a3b74bd78": {"doc_ids": ["878af416-d0d5-4bd4-9b5b-bf28c12390aa"], "extra_info": {"file_path": "models/gold/core__fact_airdrop.yml", "file_name": "core__fact_airdrop.yml"}}, "9a6fc9c5b0b0f8bc4901e4b928de764cfce07b25": {"doc_ids": ["ef5b7ca6-dae8-4594-a2a2-afc2fd29b5f9"], "extra_info": {"file_path": "models/gold/core__fact_blocks.sql", "file_name": "core__fact_blocks.sql"}}, "5b350928c7826814d168583bb3e56d5fd72d5c51": {"doc_ids": ["2f275591-5086-4201-b792-8b68edb37770"], "extra_info": {"file_path": "models/gold/core__fact_blocks.yml", "file_name": "core__fact_blocks.yml"}}, "b0bff941181839c86ad85ecdb6ffde85f6893f60": {"doc_ids": ["becff9d4-0694-4d75-81fa-382d2a5dfcab"], "extra_info": {"file_path": "models/gold/core__fact_daily_balances.sql", "file_name": "core__fact_daily_balances.sql"}}, "0d9dc47a53f3198aee5ef67f8468982add80248a": {"doc_ids": ["c6441cd2-df87-4132-9290-3adbfb2f905a"], "extra_info": {"file_path": "models/gold/core__fact_daily_balances.yml", "file_name": "core__fact_daily_balances.yml"}}, "de0e4f108be36f18f8f9096d15498d12c0c4aa4b": {"doc_ids": ["a7d4e5c9-22ae-4d1c-8a67-4793be8f0f7e"], "extra_info": {"file_path": "models/gold/core__fact_governance_proposal_deposits.sql", "file_name": "core__fact_governance_proposal_deposits.sql"}}, "e8aee922f34cbbcdc2c74099959a6547124abaab": {"doc_ids": ["566dc678-1dd1-4d2f-9983-5f7e1a81170a"], "extra_info": {"file_path": "models/gold/core__fact_governance_proposal_deposits.yml", "file_name": "core__fact_governance_proposal_deposits.yml"}}, "240c23df493fb4466ee2370a1aa677b932c306e6": {"doc_ids": ["d1735f77-ce73-4253-a529-4a4a0bedc0b6"], "extra_info": {"file_path": "models/gold/core__fact_governance_submit_proposal.sql", "file_name": "core__fact_governance_submit_proposal.sql"}}, "4b24a7eedcbaff7d435a648f7eba5f6b21773668": {"doc_ids": ["d08ee0cd-cd74-46bc-8f93-84611a7c140d"], "extra_info": {"file_path": "models/gold/core__fact_governance_submit_proposal.yml", "file_name": "core__fact_governance_submit_proposal.yml"}}, "f7be718aa979d34bac468008eb0119c10a14ba23": {"doc_ids": ["8f25f52c-6279-4e27-b328-d81e62f3828e"], "extra_info": {"file_path": "models/gold/core__fact_governance_validator_votes.sql", "file_name": "core__fact_governance_validator_votes.sql"}}, "9ca569ef6a6571cd80f30a0ecc9d26cc1c27aed4": {"doc_ids": ["fc554c53-236a-4c37-a038-f55b3672356a"], "extra_info": {"file_path": "models/gold/core__fact_governance_validator_votes.yml", "file_name": "core__fact_governance_validator_votes.yml"}}, "e6fe5d894c20f3c9e251f9b32dd2ea1d7adfb351": {"doc_ids": ["5e696d68-dd03-4640-be9d-31a9c6d448e0"], "extra_info": {"file_path": "models/gold/core__fact_governance_votes.sql", "file_name": "core__fact_governance_votes.sql"}}, "af2be1f5d58440ef2b8353e35393464a5fffab9e": {"doc_ids": ["9f5cf8a8-34db-4094-b84d-b40e54dd9d8b"], "extra_info": {"file_path": "models/gold/core__fact_governance_votes.yml", "file_name": "core__fact_governance_votes.yml"}}, "d62c69d1385273e4d9bcab9091b8e467fe048f4c": {"doc_ids": ["565b4ff6-1949-438c-b2e6-decf263c3879"], "extra_info": {"file_path": "models/gold/core__fact_liquidity_provider_actions.sql", "file_name": "core__fact_liquidity_provider_actions.sql"}}, "75c7f7b5814286880af828f1ac2a4f6be3acd5a7": {"doc_ids": ["7c28501d-1870-47f7-91c9-3112f0b47b72"], "extra_info": {"file_path": "models/gold/core__fact_liquidity_provider_actions.yml", "file_name": "core__fact_liquidity_provider_actions.yml"}}, "30190859a62377547b3130ccfcf82294930489c7": {"doc_ids": ["0dfb5bc7-e529-42e6-ba8b-2a2c03144851"], "extra_info": {"file_path": "models/gold/core__fact_locked_liquidity_actions.sql", "file_name": "core__fact_locked_liquidity_actions.sql"}}, "2700e6a9c54458566fc7e39d82550193d68616ee": {"doc_ids": ["fc0f8323-b609-4faa-b3d5-24a2bcd3b115", "ba6c6266-1dbc-41ac-916e-1624197d0b34"], "extra_info": {"file_path": "models/gold/core__fact_locked_liquidity_actions.yml", "file_name": "core__fact_locked_liquidity_actions.yml"}}, "13e77438cbd878f0a90d28a637645aa3e0e7eb52": {"doc_ids": ["3290451c-5592-4bda-ab16-da1403780f39"], "extra_info": {"file_path": "models/gold/core__fact_msg_attributes.sql", "file_name": "core__fact_msg_attributes.sql"}}, "9baadc745a336a7c0634e9732a64a0d73be7c09e": {"doc_ids": ["24fa7475-7589-4071-bf33-7846b8f3f677"], "extra_info": {"file_path": "models/gold/core__fact_msg_attributes.yml", "file_name": "core__fact_msg_attributes.yml"}}, "3908d014cecce4a5f4e5144339a6ca8399fb850e": {"doc_ids": ["b3b3f14d-6ff8-484a-b5f2-f0533f4037f9"], "extra_info": {"file_path": "models/gold/core__fact_msgs.sql", "file_name": "core__fact_msgs.sql"}}, "24cc199ac66cf075f99a4713c62b3eb3e6e54195": {"doc_ids": ["ea103120-3c0a-4a48-9477-f72763707f3f"], "extra_info": {"file_path": "models/gold/core__fact_msgs.yml", "file_name": "core__fact_msgs.yml"}}, "d0d9677c80c97259187a200016a47d821dffe7a7": {"doc_ids": ["358d0118-73df-460f-b9d1-b6c9993e2f54"], "extra_info": {"file_path": "models/gold/core__fact_pool_fee_day.sql", "file_name": "core__fact_pool_fee_day.sql"}}, "fc90e98c75d5c4d498efc3941e5d0e4a9ca66932": {"doc_ids": ["c46f1dfa-3bfe-4948-8d82-30fa68daca02"], "extra_info": {"file_path": "models/gold/core__fact_pool_fee_day.yml", "file_name": "core__fact_pool_fee_day.yml"}}, "71c8ab5db0b99ff477fd78448b4ce904f1fa74f5": {"doc_ids": ["2f007bfc-f71e-4293-880e-6a5db4d6c2dc"], "extra_info": {"file_path": "models/gold/core__fact_pool_hour.sql", "file_name": "core__fact_pool_hour.sql"}}, "453c3c4eb9dcc16b15f94e4178162f78f8e18edb": {"doc_ids": ["bae0a07e-57d9-428e-8f39-da7f0fbda3f0", "b5c5508a-17df-454a-a921-72173b23bfb8"], "extra_info": {"file_path": "models/gold/core__fact_pool_hour.yml", "file_name": "core__fact_pool_hour.yml"}}, "1deb649c827d81751f4433df78e5610c1cd6b04b": {"doc_ids": ["e1dfcbdc-bf05-41a3-8a89-e6f272878c29"], "extra_info": {"file_path": "models/gold/core__fact_staking.sql", "file_name": "core__fact_staking.sql"}}, "050400d781940d18d85fc01ce3a04ea20f1b21d3": {"doc_ids": ["88a6c46b-e7f6-4cad-8234-0f0b4be3a52a"], "extra_info": {"file_path": "models/gold/core__fact_staking.yml", "file_name": "core__fact_staking.yml"}}, "3351ce74f5c858772583b0521ebfcbc340942a43": {"doc_ids": ["40332814-ca92-49d2-897a-8951e006feb4"], "extra_info": {"file_path": "models/gold/core__fact_staking_rewards.sql", "file_name": "core__fact_staking_rewards.sql"}}, "d9f124f0acc944891c0383543f524e0af4c170a9": {"doc_ids": ["e825797b-b0bb-4490-8f4e-65e8985b02b9"], "extra_info": {"file_path": "models/gold/core__fact_staking_rewards.yml", "file_name": "core__fact_staking_rewards.yml"}}, "1654603b384c0623c5ac0a837cd9ce1b1e1b3e42": {"doc_ids": ["36f125a4-e9ea-4731-9f4d-c36d5e6e43e4"], "extra_info": {"file_path": "models/gold/core__fact_superfluid_staking.sql", "file_name": "core__fact_superfluid_staking.sql"}}, "47096e1d78450578ebe358ddb07d88fc59e2ee7f": {"doc_ids": ["9d8a70f1-f80c-4b01-8d8d-dbc779b28ae1"], "extra_info": {"file_path": "models/gold/core__fact_superfluid_staking.yml", "file_name": "core__fact_superfluid_staking.yml"}}, "619c8824737b2ff7df9433fd345a52eba380cf4a": {"doc_ids": ["687f149f-7b29-40e9-890a-e58f2496ff8b"], "extra_info": {"file_path": "models/gold/core__fact_swaps.sql", "file_name": "core__fact_swaps.sql"}}, "244d0cd82c097a4bebaa13454157d531d5ddd287": {"doc_ids": ["08d31965-b6ba-42f6-bb21-04fdfe4527f7"], "extra_info": {"file_path": "models/gold/core__fact_swaps.yml", "file_name": "core__fact_swaps.yml"}}, "8f30e5767b0a9efc2807c674aa5078539d2ffa9a": {"doc_ids": ["4dfbd9c3-eaa2-4be9-8294-5ed7da35b484"], "extra_info": {"file_path": "models/gold/core__fact_token_day.sql", "file_name": "core__fact_token_day.sql"}}, "45131f2ca0355f8b83ec0ce3fa5b2bb39990c609": {"doc_ids": ["e69b8441-d37d-4f7a-9d65-665863982a9e"], "extra_info": {"file_path": "models/gold/core__fact_token_day.yml", "file_name": "core__fact_token_day.yml"}}, "326aaf7061d07f06849e6eba586789b3294e51d7": {"doc_ids": ["c52d8144-1b16-423c-a345-b7155585cd9e"], "extra_info": {"file_path": "models/gold/core__fact_transactions.sql", "file_name": "core__fact_transactions.sql"}}, "aeb0795606e250b938daed24b05df5e703ebfc07": {"doc_ids": ["572be706-cc05-4a0e-bcd2-3d1c8ea2576e"], "extra_info": {"file_path": "models/gold/core__fact_transactions.yml", "file_name": "core__fact_transactions.yml"}}, "3d508b650d643732a6d69d9d8f6f904471081d6f": {"doc_ids": ["37395874-678a-4c00-9593-f0fdc058f9b0"], "extra_info": {"file_path": "models/gold/core__fact_transfers.sql", "file_name": "core__fact_transfers.sql"}}, "693b23e38ee610dfd04fcdf2336ead7a7778d741": {"doc_ids": ["99dfb909-7dcc-45ac-afe7-687b8d77bb9b"], "extra_info": {"file_path": "models/gold/core__fact_transfers.yml", "file_name": "core__fact_transfers.yml"}}, "ba556001e64d6b011b62e8c553bf80fe37c51499": {"doc_ids": ["41f3f7e0-539e-4a53-85c3-05f89457c4e0"], "extra_info": {"file_path": "models/gold/core__fact_validator_commission.sql", "file_name": "core__fact_validator_commission.sql"}}, "148cb0578cf52b42fc6f90a4393f21c8694b9ad4": {"doc_ids": ["264d183f-e5c3-46e9-8452-d824c402781e"], "extra_info": {"file_path": "models/gold/core__fact_validator_commission.yml", "file_name": "core__fact_validator_commission.yml"}}, "05f65dfc81b7e51c8c09f8fc5c39f831299d6a68": {"doc_ids": ["5d9a7fec-2c3d-4da0-a7c3-a6c5f1c9b796"], "extra_info": {"file_path": "models/gold/core__fact_validators.sql", "file_name": "core__fact_validators.sql"}}, "80d75cd1ac9594c5d835edd0d79a1642d13a2599": {"doc_ids": ["e1248606-73be-45c2-a52e-ad283f0984bf", "5ac432cd-b168-444a-bc18-b498bb4fe4d3"], "extra_info": {"file_path": "models/gold/core__fact_validators.yml", "file_name": "core__fact_validators.yml"}}, "9d6070c43f3265e0087d5e55b4266e72c352816b": {"doc_ids": ["4acb4586-85a1-47e2-8adf-1bc48cbbeb48"], "extra_info": {"file_path": "models/gold/mars/mars__ez_liquidity_provider_actions.sql", "file_name": "mars__ez_liquidity_provider_actions.sql"}}, "6b3e86c03f5a0261067a61adc7cf3c75f1a0ce7e": {"doc_ids": ["2dcdec01-208b-472a-b92b-1258909677fc"], "extra_info": {"file_path": "models/gold/mars/mars__ez_liquidity_provider_actions.yml", "file_name": "mars__ez_liquidity_provider_actions.yml"}}, "5c6beba5703cc7b389211a478a64cbcda8ceabf2": {"doc_ids": ["4d774b43-860b-47a1-959c-41d9e031e84d"], "extra_info": {"file_path": "models/gold/mars/mars__ez_pool_fee_day.sql", "file_name": "mars__ez_pool_fee_day.sql"}}, "6fb765f3cd6e3114a32558c0a80177f57628e624": {"doc_ids": ["239ea15d-b0a0-46fa-ace7-c18c8912f18b"], "extra_info": {"file_path": "models/gold/mars/mars__ez_pool_fee_day.yml", "file_name": "mars__ez_pool_fee_day.yml"}}, "6a896eaccad79aec7d025611485d396eea73a21e": {"doc_ids": ["4d938f70-72fd-48e5-b4a6-1f79ef59e8fe"], "extra_info": {"file_path": "models/gold/mars/mars__ez_pool_hour.sql", "file_name": "mars__ez_pool_hour.sql"}}, "5181cd0b483f1c490db96613e0a1ace56b8778a5": {"doc_ids": ["3c6ef6da-9bf2-41a5-9454-81f132c18239", "8d8d77c8-f065-4198-acd3-0789281857d5"], "extra_info": {"file_path": "models/gold/mars/mars__ez_pool_hour.yml", "file_name": "mars__ez_pool_hour.yml"}}, "ff83fead0ffbc4ce2d3f4b6b49b079d8b3821fad": {"doc_ids": ["5bc9ddd7-7f3e-4164-a76f-d1a7c3949614"], "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_actions.sql", "file_name": "mars__ez_redbank_actions.sql"}}, "b2133b0461cf783d09365e776c55dfdc35c903da": {"doc_ids": ["90a2b3a2-d7a0-4f02-a1df-d5eb004ad074", "e0ca31a5-1c29-40d0-be60-109c756859fa"], "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_actions.yml", "file_name": "mars__ez_redbank_actions.yml"}}, "b296bd078ba3fd1110602ab8611e026397cdd6e0": {"doc_ids": ["d9041d0f-9f98-4143-855e-616faa95a403"], "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_balance_changes.sql", "file_name": "mars__ez_redbank_balance_changes.sql"}}, "f0b8cb9c584f353dd6dee279d653c87ec86011c0": {"doc_ids": ["26eb6508-32c7-43fa-b73b-3c0eed56933e", "3de9b0b2-9388-4e0b-b591-c0b24c31d0b4"], "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_balance_changes.yml", "file_name": "mars__ez_redbank_balance_changes.yml"}}, "e88a8ac7e134d22e0e7f0889522f225b367ce504": {"doc_ids": ["f7341639-3a37-4e61-a4a1-3bfe81d04714"], "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_reward_claims.sql", "file_name": "mars__ez_redbank_reward_claims.sql"}}, "eb2667288eac01ad2f76127cac00e090e3506bdb": {"doc_ids": ["826f31f6-eb9c-4fa2-b934-54bb41fd6848"], "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_reward_claims.yml", "file_name": "mars__ez_redbank_reward_claims.yml"}}, "734d95b6ff9211003fb19f1c503a226f394e0986": {"doc_ids": ["2f5e8ced-8692-4121-8716-16dfca0ea091"], "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_reward_distributions.sql", "file_name": "mars__ez_redbank_reward_distributions.sql"}}, "dccbe53be30151846212f49b84ab532c5a1528f1": {"doc_ids": ["a9cc360e-4f28-463c-b6a4-cbae81ccbf32"], "extra_info": {"file_path": "models/gold/mars/mars__ez_redbank_reward_distributions.yml", "file_name": "mars__ez_redbank_reward_distributions.yml"}}, "d1607385afc4ed2ddff08dfd3bdbc533cd3a9323": {"doc_ids": ["a34f27b1-8fd5-422d-9f10-d74b4c2f365d"], "extra_info": {"file_path": "models/gold/mars/mars__ez_swaps.sql", "file_name": "mars__ez_swaps.sql"}}, "048f94707ff90bf6a93134541d96b13d946e9c4c": {"doc_ids": ["8788af37-eec0-4844-ba24-2cfe3cf44cc6"], "extra_info": {"file_path": "models/gold/mars/mars__ez_swaps.yml", "file_name": "mars__ez_swaps.yml"}}, "9bfa9c4c01df697c230b67b81853fd4611998d7d": {"doc_ids": ["99f5de9b-79d4-43d4-8f73-94663b291103"], "extra_info": {"file_path": "models/gold/mars/mars__ez_token_day.sql", "file_name": "mars__ez_token_day.sql"}}, "19d45674f2c8161ca3a17bc630af7785a791d0b6": {"doc_ids": ["8a5961ab-25d9-4857-9ce1-495d365f3981"], "extra_info": {"file_path": "models/gold/mars/mars__ez_token_day.yml", "file_name": "mars__ez_token_day.yml"}}, "256ae99656442f1654cb7d26a79b1e905d75bc85": {"doc_ids": ["7528109e-9562-45c6-8d76-da7f40c93dbe"], "extra_info": {"file_path": "models/silver/crossdb/silver__croschain_icns.sql", "file_name": "silver__croschain_icns.sql"}}, "5945a6670e6b90248ae41ce860c5431c8f180e90": {"doc_ids": ["380b8f76-82ca-48dd-a327-68cdf101e568", "c66aa19d-9b2a-44a5-a60e-b2c311f6d2bc"], "extra_info": {"file_path": "models/silver/mars/silver__red_bank_actions.sql", "file_name": "silver__red_bank_actions.sql"}}, "4b063866c7ec402c2d3450d6e7cce58eec495de6": {"doc_ids": ["7cdee7ce-6047-4ddb-8c1b-a2ae4c04ded8", "0d630c02-ca51-46b9-81c1-c0376f6fa1eb", "791073a2-2a6c-421b-b129-4b0aff034846", "733ac00d-cfcc-410a-9be4-1e958cb1311f", "8fc0ebbb-0703-47d1-b99d-88d4a0df6ad6"], "extra_info": {"file_path": "models/silver/mars/silver__red_bank_actions.yml", "file_name": "silver__red_bank_actions.yml"}}, "d42fce84ec0d751bfa6f12508103eaec04bdcc92": {"doc_ids": ["4bf22346-f551-484f-848b-0bd5cddf587e", "79b7d68b-1985-4d52-98ce-4017e1b7c950", "a863f3bf-f964-414c-9410-f52a192192c9"], "extra_info": {"file_path": "models/silver/mars/silver__red_bank_liquidations.sql", "file_name": "silver__red_bank_liquidations.sql"}}, "dba4749ab0058560c7b1ffc97f394cba73dc35ac": {"doc_ids": ["6fcf45aa-c522-454c-88b7-3e61496a29fe", "c09ad35b-99da-4d38-b24e-b6f5784bf6c0"], "extra_info": {"file_path": "models/silver/prices/silver__pool_token_prices.sql", "file_name": "silver__pool_token_prices.sql"}}, "33070961f1ed43043ba3df4c176cc518996d6ba4": {"doc_ids": ["dd1c9cc9-a13c-46b5-a148-10f8dba29929"], "extra_info": {"file_path": "models/silver/prices/silver__pool_token_prices.yml", "file_name": "silver__pool_token_prices.yml"}}, "a1f71bd038868b95dfa51d8ef1e0cfa12d447dff": {"doc_ids": ["1aad74d6-3830-496e-aeb4-3a38fceac085", "5f4dc9b1-2dd8-4589-b3c6-88a47573ef08", "ed36cf1d-5dbc-4a98-aaf8-96559b27b793", "168567fb-427b-4935-9716-9998df19a41f"], "extra_info": {"file_path": "models/silver/prices/silver__pool_token_prices_usd.sql", "file_name": "silver__pool_token_prices_usd.sql"}}, "ba432edc3d82916a7181a19da522b983e6da8587": {"doc_ids": ["fcb1ccd3-81ec-4b4d-b7b4-b87cbb7aee9d"], "extra_info": {"file_path": "models/silver/prices/silver__pool_token_prices_usd.yml", "file_name": "silver__pool_token_prices_usd.yml"}}, "a27b2a5800f4897fba3c7339620fed1fdd995674": {"doc_ids": ["0f3ee68c-3135-4932-a586-854d12759de6", "86c1d5d1-8db6-4bd6-8538-e298474f1bfd", "06b03e59-9b38-4326-a5ee-ec569acbedfb", "bbe521ac-58b5-4344-b8fc-5eb15b7b5638", "c6b897fa-1b10-4edc-9909-0ef38c08df54", "6b847043-daa1-4f75-9c1e-b5f6410ca95d", "402722a7-b371-4bfe-9161-4e6f6bc3cdac", "55fc185b-be34-46b1-84fd-2780d10a75b4", "3a766122-ff3a-4813-b357-c28670d5962f", "827d0537-7328-4a14-ab74-99ec46041148"], "extra_info": {"file_path": "models/silver/prices/silver__prices_swaps.sql", "file_name": "silver__prices_swaps.sql"}}, "038398c861c6c187545de3f11c323e4d1135d42a": {"doc_ids": ["78a71ec2-9191-490c-9b0a-9aa013bcab2f", "757d2fff-a71a-492c-9221-c0233fd55ef4"], "extra_info": {"file_path": "models/silver/prices/silver__prices_swaps.yml", "file_name": "silver__prices_swaps.yml"}}, "83dbe886a230ace75d3d8cafb06e83af332b0c82": {"doc_ids": ["8a32a25b-2ed5-4c1a-ae70-412ebd898e99", "88767bd7-a8df-499d-9771-885b3564078d", "b1824d9b-fced-4cdd-a776-fd11e49ae870", "a5a6489f-df3e-418b-a5d3-32722c904ffc", "c8e7a7ff-8574-4cb2-9ad7-369be2893fd0", "fab8dbc8-6399-45eb-bc47-09f3b0d813b3"], "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_gecko_hourly.sql", "file_name": "silver__token_prices_coin_gecko_hourly.sql"}}, "7bff700d406f6e260a4fcf921a5ec831c281c38f": {"doc_ids": ["77ef345a-671b-42c5-a1d2-b990a51f6606"], "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_gecko_hourly.yml", "file_name": "silver__token_prices_coin_gecko_hourly.yml"}}, "83682e27844b075aaf184171dfadf1aa7bd48cd0": {"doc_ids": ["1d891540-019c-4d58-9fd1-6f199b0a0d6a", "b14a0f3a-57de-42e1-bf04-5b6c0f5a793c", "3246af6f-bcb0-4b4d-a7c8-77fad7b8121c", "bb72b6f0-aba6-4ffd-bc5d-87eee29076ed", "98b6d156-3d15-4769-9198-dedaee21d996"], "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_market_cap_hourly.sql", "file_name": "silver__token_prices_coin_market_cap_hourly.sql"}}, "a4bf124f0a9965e8924ac10e5589e36a7faa89ea": {"doc_ids": ["4cd74c2d-6c68-48e4-98d9-5d8553201bdb"], "extra_info": {"file_path": "models/silver/prices/silver__token_prices_coin_market_cap_hourly.yml", "file_name": "silver__token_prices_coin_market_cap_hourly.yml"}}, "dc9d9450a2d855402117b3ef6e32c8f889b39c51": {"doc_ids": ["4a400709-33ac-41c3-b895-7d0e71514ed5", "40fb3c5f-beff-4ebb-88e6-7f75eb85943f", "267a7cd0-1726-4a8c-830c-034d9b5f5048"], "extra_info": {"file_path": "models/silver/silver___early_swaps.sql", "file_name": "silver___early_swaps.sql"}}, "68546612462e87086c43f2eb553d1ac75b299c33": {"doc_ids": ["4345155b-7717-4655-836f-e4f051f5f49a", "b4e80a98-24da-4e13-9280-b117f5e9e3d8", "fa2a3ade-b5dd-4800-b439-dcbedebcbbf2"], "extra_info": {"file_path": "models/silver/silver___early_swaps.yml", "file_name": "silver___early_swaps.yml"}}, "c6fb2ba98f9dd88575d58b4435c6cecd27b94dc2": {"doc_ids": ["af54eb8b-058b-4c3c-ac99-ee796f4cef1c", "6408451e-0147-4b33-8593-49854507747f", "2e0cfb82-9a59-4ebb-bcc3-b42ea5f269c3"], "extra_info": {"file_path": "models/silver/silver__airdrops.sql", "file_name": "silver__airdrops.sql"}}, "cd1b2c3ab5ae21b7cfd2c5dccc20393d0a9ee20c": {"doc_ids": ["96eccd88-adb9-40f9-b940-98931495b7f6", "fdcd1668-037a-4a98-832b-d17a2aeaa232"], "extra_info": {"file_path": "models/silver/silver__airdrops.yml", "file_name": "silver__airdrops.yml"}}, "61efce43603a3d91a571c9165903f2110fdd268d": {"doc_ids": ["d609a54a-465a-4be0-885d-4e5dba3e9f85"], "extra_info": {"file_path": "models/silver/silver__all_undecoded_assets.sql", "file_name": "silver__all_undecoded_assets.sql"}}, "7d8b408b8de1473d0c068bb6c47132ae163c617a": {"doc_ids": ["66803637-3231-4aff-b911-3a1755899c2a", "3002d6a0-1b07-42f9-95c3-b3a4effebd3e", "e9ab36f2-6fc1-438b-8030-f8c35ce07edb"], "extra_info": {"file_path": "models/silver/silver__all_unknown_balances.sql", "file_name": "silver__all_unknown_balances.sql"}}, "1dbe8a34573c34a1346faac572002669ec4a6177": {"doc_ids": ["b9764121-d75a-460e-978e-84a668d59cdc"], "extra_info": {"file_path": "models/silver/silver__all_unknown_pool_balances.sql", "file_name": "silver__all_unknown_pool_balances.sql"}}, "87a35971eed46a091941c3bc0d4a116226825d22": {"doc_ids": ["61e000a1-777f-4c25-99a9-0dad615d7263"], "extra_info": {"file_path": "models/silver/silver__asset_metadata.sql", "file_name": "silver__asset_metadata.sql"}}, "ed44129971994c583c2f7ba0e9c58415fa69c84a": {"doc_ids": ["eaaa013a-2b60-4b14-a1f2-f16ea27597af", "7961b408-ca68-4b3c-9c4b-bed79e8dd3ef"], "extra_info": {"file_path": "models/silver/silver__asset_metadata.yml", "file_name": "silver__asset_metadata.yml"}}, "d89fd03fc59a6c617e5a151a56a87b2a0b4349fa": {"doc_ids": ["570c1193-2878-4cf2-96a5-c125dea0d235"], "extra_info": {"file_path": "models/silver/silver__blockchain.sql", "file_name": "silver__blockchain.sql"}}, "f4ada54ef27dc3a2ebd97070e6db411c07eb8447": {"doc_ids": ["1a101376-23bc-4aaa-90ce-18dc29fa6099"], "extra_info": {"file_path": "models/silver/silver__blockchain.yml", "file_name": "silver__blockchain.yml"}}, "f549a70f3f85f2b0d1b00246672926944157ff52": {"doc_ids": ["5236e8bc-7aab-4245-9874-a20b5fb13ebf"], "extra_info": {"file_path": "models/silver/silver__blocks.sql", "file_name": "silver__blocks.sql"}}, "1aaadab948454b086fdd17d38bfea2a75f66b1b0": {"doc_ids": ["14ddd702-e11d-437d-b85a-837bd1968304", "bc03734e-4c2e-4934-8d9a-67e88efdf6c2"], "extra_info": {"file_path": "models/silver/silver__blocks.yml", "file_name": "silver__blocks.yml"}}, "04e0e1a24b522f9ee2ff9245e6eb10fca613e0c9": {"doc_ids": ["4011d12a-2833-4cf5-a13a-13e0b033ce07", "4489bb4e-65d7-4656-98ed-3eb6acea883e", "8b6613b1-ee27-4412-82c6-a20d03e20f5b", "bb42dc4a-e217-4362-8f98-f27a68b38292", "76cea375-1323-4dfc-be40-b3e7477989aa", "3682ee00-3fde-465f-b308-7638fdbff212", "b18acd29-3508-4a82-80d4-13399362c2d0", "f9f39b23-cbef-4947-af16-5a1ccdbe8192", "06415d74-eb55-4b5e-a060-c09c2722fa8e", "0260eea5-4503-4166-880d-db20b0acdde8", "e1ec6c5a-5f9f-4b45-8db9-d99a31c18a72"], "extra_info": {"file_path": "models/silver/silver__daily_balances.sql", "file_name": "silver__daily_balances.sql"}}, "08c08e787361149d5c5006b5e188bef7b51d1501": {"doc_ids": ["448e809c-1421-4fa8-b1ef-26d80e2ea394", "8c02dd98-65a7-4cd7-9e28-0d2e23079e06"], "extra_info": {"file_path": "models/silver/silver__daily_balances.yml", "file_name": "silver__daily_balances.yml"}}, "eccda3802fba6e86c320dd5d1572c3eb006d94d3": {"doc_ids": ["0b5f3a63-2a93-464f-87a0-460318aa14f0", "77691135-227e-41a1-9c44-0860d06ac02c", "36fcce39-ea83-4902-a37e-ba9ca165c888", "e0660a0d-6448-4d5a-a295-87f6f893894f", "da06f037-f1a7-40da-a579-64d35ad08b1d"], "extra_info": {"file_path": "models/silver/silver__early_liquidity_provider_actions.sql", "file_name": "silver__early_liquidity_provider_actions.sql"}}, "3a2a92b3239fa515533506d97ffa2d255116afd5": {"doc_ids": ["1ff5cf51-ae35-420a-9b84-9b9ba70162da", "2748cdf8-b029-4e5d-9a85-3a5b836dd667"], "extra_info": {"file_path": "models/silver/silver__early_liquidity_provider_actions.yml", "file_name": "silver__early_liquidity_provider_actions.yml"}}, "0012dae838fab5aa34020c7c506cd16363ec4c15": {"doc_ids": ["5da9fee3-df4b-480c-a42e-02b6e6659401", "a4e0b372-747c-4100-ae58-b87e4c47d3a9"], "extra_info": {"file_path": "models/silver/silver__governance_proposal_deposits.sql", "file_name": "silver__governance_proposal_deposits.sql"}}, "da816c5363d2092e65647c82ef39562bd0043895": {"doc_ids": ["3c0d9c2e-4430-4c7d-8cff-6f33124b118a", "39ebc3e9-db0c-4d5d-8883-11efe84e9f11"], "extra_info": {"file_path": "models/silver/silver__governance_proposal_deposits.yml", "file_name": "silver__governance_proposal_deposits.yml"}}, "f900319efd26247f8674d0e4a326f64fe44e6f43": {"doc_ids": ["6ba96a99-e86e-49aa-b367-fc5d09616a12", "176cd8a4-1fed-4038-a815-bde6cbb7e157"], "extra_info": {"file_path": "models/silver/silver__governance_submit_proposal.sql", "file_name": "silver__governance_submit_proposal.sql"}}, "f4e28d202b2a911d05af735920eade92c75674ce": {"doc_ids": ["36553473-515a-4c3c-a46c-881741efc82e", "0db60b02-21a4-4b14-8242-5d975f097055"], "extra_info": {"file_path": "models/silver/silver__governance_submit_proposal.yml", "file_name": "silver__governance_submit_proposal.yml"}}, "08cded504e79aa8af55a6a4e366ebc46e9a334ae": {"doc_ids": ["94a712d0-25cd-40ee-b9d7-a237f5cc63e9", "f3018f84-a543-459d-985c-8b6e60be6d78"], "extra_info": {"file_path": "models/silver/silver__governance_votes.sql", "file_name": "silver__governance_votes.sql"}}, "f6a7945848250731cee6805eaa0f7faa3675402e": {"doc_ids": ["1070a038-267e-4cbc-981b-1b7cd31f25d2", "781ab3b0-2518-44c2-8f85-b67998aca368"], "extra_info": {"file_path": "models/silver/silver__governance_votes.yml", "file_name": "silver__governance_votes.yml"}}, "e962f74299c9b2183c1e04e61c3b1bae9f5e551e": {"doc_ids": ["c10cf5d7-a451-4b37-9e8c-a5737be0ac77"], "extra_info": {"file_path": "models/silver/silver__latest_liquid_balances.sql", "file_name": "silver__latest_liquid_balances.sql"}}, "e7a764354636f8230396f98d84111e9bd63a6ab3": {"doc_ids": ["6624b6f4-97c6-4ca9-b8a0-f3557dfddb65", "6d8bd484-22f7-4803-9703-eab800558428"], "extra_info": {"file_path": "models/silver/silver__latest_liquid_balances.yml", "file_name": "silver__latest_liquid_balances.yml"}}, "daf58b90f4c89f44124dd7277c55e01a396b5502": {"doc_ids": ["2db9714f-05c7-4bee-92be-20c69c26e4b0", "3ff2aaf5-d872-461e-afe2-298c34020279", "d8377040-b65a-410d-8396-f5294402ec66"], "extra_info": {"file_path": "models/silver/silver__liquid_balances.sql", "file_name": "silver__liquid_balances.sql"}}, "1539d3d50a2aff9030d0128aa77713b289b09271": {"doc_ids": ["5753295b-0a37-42ce-ba01-10cae15851e9", "be59fe67-0f63-4a9e-a947-dc2d392a0a8e"], "extra_info": {"file_path": "models/silver/silver__liquid_balances.yml", "file_name": "silver__liquid_balances.yml"}}, "22d16666efecb48f6410118259edaff7d58b9aad": {"doc_ids": ["bd265fbf-b990-41dd-84ad-8af3b38d6095", "218c87e9-4b70-430b-8648-907fe3b54551", "31c7d6b5-2593-4c9c-bdc6-aae4603fb197", "a5b72a70-460e-4ebb-926d-572d5af2eab5", "34a518c6-a9fb-4f68-8a0c-8059d56ff657"], "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions.sql", "file_name": "silver__liquidity_provider_actions.sql"}}, "6cf8d33f445f43c1bb5fb460453326c57b0f10f4": {"doc_ids": ["3fd1f363-b3d1-4e2c-8fb2-551eacf992cf", "1608fdf7-23fd-4cbf-8564-ee2c4b037627"], "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions.yml", "file_name": "silver__liquidity_provider_actions.yml"}}, "a49ff19056394cccc6edd6468a843577c975df85": {"doc_ids": ["4d0a9b19-7f20-40a3-91e7-43941928c83b", "ed74b761-a34b-445a-b9a1-efb8a9f62722", "cc025ace-cb40-4a77-81a8-82751076a6cd", "d3f8dbff-163a-4bb6-9eae-4859880ec8e9", "05ca7f5a-9547-4c3b-ba02-bf5462d8d2e8"], "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions_unpool.sql", "file_name": "silver__liquidity_provider_actions_unpool.sql"}}, "3672e45951c269b2bd6dd95807bfe3bce85bba28": {"doc_ids": ["a4a66cef-2f9c-4e8f-b9ab-04657c8c8eb5", "710d7a5d-f84e-4081-adea-d805ff64780e"], "extra_info": {"file_path": "models/silver/silver__liquidity_provider_actions_unpool.yml", "file_name": "silver__liquidity_provider_actions_unpool.yml"}}, "adf7569916bf9bbdaa93d1e8ab218b7b56eda1fe": {"doc_ids": ["edc1d4bf-117f-4980-a605-852ee607be0f", "da85ce69-19b1-4a70-9afe-04139870362b", "aa1d6d87-f87c-4397-89c6-1b292b4dfbcd", "308a86e4-4311-4283-964f-0f56f1b59aa8", "316d6b4f-c66d-480d-a138-d674c12cd5bf", "54e3b84c-4b34-471d-ba03-83b81cffcdff", "26f17a9c-9f78-4121-9c3e-8b678881e2d1"], "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions.sql", "file_name": "silver__locked_liquidity_actions.sql"}}, "6999ddb20d8eb26ee5e7d97400ca8087881db3aa": {"doc_ids": ["1eb09a0d-9a2f-47f2-a9d5-302cede099fe", "f3172549-7bad-401b-83ff-0f05ca606fdd", "e2a69a0d-4ad8-43da-b83c-6222b2ce48c9"], "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions.yml", "file_name": "silver__locked_liquidity_actions.yml"}}, "8f7ef9f0f3c7d236fd3fde3ffcdf1493912c651a": {"doc_ids": ["54e3bbb3-a2f7-4728-b483-e2396ac2d8da", "8aa640a8-6807-4de6-a871-86e5147469a6", "1cbb002a-aad8-4a4e-809a-487750a09011", "b87c8bb0-701d-4d01-9a37-d352c224aabc"], "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_begin_unlock.sql", "file_name": "silver__locked_liquidity_actions_begin_unlock.sql"}}, "180ad52f2da3ec42345fff91fc5600cccd0bea30": {"doc_ids": ["ae44dc33-8745-48ba-a9d1-891a089ff3da", "5ab1785d-eb85-4eda-a634-c27701f32933", "4cb6643c-e750-4d6f-9f45-8aa5258a5476"], "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_begin_unlock.yml", "file_name": "silver__locked_liquidity_actions_begin_unlock.yml"}}, "2a8b4c15dfdb2bdc9ac61e7d7de5cc3c12faa120": {"doc_ids": ["8dcc3b0a-b64d-4841-984d-2b53db438140", "dbee2876-fb43-4199-aa57-d0546e4e5fe3", "a2905fc3-672f-40a5-bc6d-c1bda3b7dbde"], "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_convert.sql", "file_name": "silver__locked_liquidity_actions_convert.sql"}}, "6559548f00cf53c2278b3fe6a75ffd2ee2993a47": {"doc_ids": ["edaae358-034d-4353-9d6d-9af1bfc5b7e5", "fea5312a-3e50-4d69-bd4e-7e9a22c51575", "9e5a009c-4901-4dda-b2ed-39faacd796d5"], "extra_info": {"file_path": "models/silver/silver__locked_liquidity_actions_convert.yml", "file_name": "silver__locked_liquidity_actions_convert.yml"}}, "c3e4d8a3db57f4a201d5b1908eed39490d927979": {"doc_ids": ["fdfc0b54-ba9c-4293-9ef8-0abc7716425e", "49e7657c-a984-42fc-8acb-3b0848e0f6d4", "6e506e27-c14a-4407-a025-6f9c1ed8e113"], "extra_info": {"file_path": "models/silver/silver__locked_liquidity_balances.sql", "file_name": "silver__locked_liquidity_balances.sql"}}, "99e582f5e4bb25201eb787c4c25f3595b79a99c4": {"doc_ids": ["24b7a03c-4cc9-432b-bc88-84eec1f1b6df", "12ac23c4-3322-4877-a843-c77329d06717"], "extra_info": {"file_path": "models/silver/silver__locked_liquidity_balances.yml", "file_name": "silver__locked_liquidity_balances.yml"}}, "e5145607a664c4fbcd798937af25f06af67bbd07": {"doc_ids": ["309964db-a4a6-4ad8-93cb-6e1167c08b8c", "c7fd056d-c400-4d03-87c4-f790bb142f2b"], "extra_info": {"file_path": "models/silver/silver__locked_liquidity_transactions.sql", "file_name": "silver__locked_liquidity_transactions.sql"}}, "e5be40b9e630c1c422992678103cd452639d999e": {"doc_ids": ["1ea711c6-086e-4127-91f3-a3b2b661a6c5"], "extra_info": {"file_path": "models/silver/silver__locked_liquidity_transactions.yml", "file_name": "silver__locked_liquidity_transactions.yml"}}, "75146769cd0bbfe85f507692e23930cb590b5ade": {"doc_ids": ["b426c2f9-b8db-4e99-b506-fde8ac0b9f4b"], "extra_info": {"file_path": "models/silver/silver__msg_attributes.sql", "file_name": "silver__msg_attributes.sql"}}, "6bf410fd47bf11af378ee8c632dafdf4ccbb6048": {"doc_ids": ["8fbf1a80-e0bc-4493-baa4-486bdc2437b2", "b7dc3c4c-539c-4139-b3ad-517595b44b9f"], "extra_info": {"file_path": "models/silver/silver__msg_attributes.yml", "file_name": "silver__msg_attributes.yml"}}, "55ac3421090689d6ed03a34d1fa4efc29d9d0a90": {"doc_ids": ["ea3b8ec4-7925-4a0d-8deb-8e69f2c0e09e", "c044a701-9820-45ec-84e0-d552d3040a79"], "extra_info": {"file_path": "models/silver/silver__msgs.sql", "file_name": "silver__msgs.sql"}}, "023e32ed39a29832db7c59384713dffb542dd514": {"doc_ids": ["958ac0c7-e995-4b5a-a2f0-5f5068c385b7", "20bf78ed-1d04-4667-9d7c-4b42fc5b9fd0"], "extra_info": {"file_path": "models/silver/silver__msgs.yml", "file_name": "silver__msgs.yml"}}, "8f6be040beb4aa62c1a856cc6d6fa6140ba85e9d": {"doc_ids": ["5fb32cd4-2e3d-498a-a209-2349d49db46d", "12f655da-e440-4b61-9cf8-c112556321c2"], "extra_info": {"file_path": "models/silver/silver__pool_balances.sql", "file_name": "silver__pool_balances.sql"}}, "8a53f83feb681521de57f5e18a32622a4c9e5794": {"doc_ids": ["5f94ee7a-6f2c-49d5-8cae-de1da2e2822c"], "extra_info": {"file_path": "models/silver/silver__pool_balances.yml", "file_name": "silver__pool_balances.yml"}}, "ae9fc253fbe51513e7dd250ce709446876c1ebf0": {"doc_ids": ["e2f5a4ec-d117-498c-bd0b-472c99134fc8", "1a613b18-bb73-4ca1-b570-685fc3b276c7", "7c5b3d7f-3e0b-4803-af3f-e3c2ffc4b20f"], "extra_info": {"file_path": "models/silver/silver__pool_fee_summary_day.sql", "file_name": "silver__pool_fee_summary_day.sql"}}, "6491e4a6f8dd499e2ca221136062da883b0ec8c3": {"doc_ids": ["68e50d0c-9cad-4f11-a6fa-d9658bcb4399"], "extra_info": {"file_path": "models/silver/silver__pool_fee_summary_day.yml", "file_name": "silver__pool_fee_summary_day.yml"}}, "8cbb27e66e7624c2757f0b36f7464a36eb8c0824": {"doc_ids": ["ead8f21c-fa24-4c5c-b747-6bcd6b4d732e", "a1f56649-324d-40df-be37-ed71f9f375bb"], "extra_info": {"file_path": "models/silver/silver__pool_metadata.sql", "file_name": "silver__pool_metadata.sql"}}, "a3c4e255903c742d97cdba70ba353058aa86a86f": {"doc_ids": ["bf3fb169-353b-43f5-99d6-2de4d7008657"], "extra_info": {"file_path": "models/silver/silver__pool_metadata.yml", "file_name": "silver__pool_metadata.yml"}}, "1edff04a6189f3fb9ef30288e593bab64f1b1205": {"doc_ids": ["a6a33ae0-68e4-44fd-9026-8da6034e26bc", "a3801d42-00d0-4265-a1c3-280fed071fee", "83c6586a-3fcf-42d0-85cd-d7f1c70c9551", "653212f5-ace5-4fd6-a071-88cd46b08aef", "758f01ed-ba5b-4600-9885-d63d15175dbe", "6691fce2-8aca-45bf-9801-e0f077480014"], "extra_info": {"file_path": "models/silver/silver__pool_summary_hour.sql", "file_name": "silver__pool_summary_hour.sql"}}, "2c64e5d05c028555a16ea464e75e60aa2cfd2ae5": {"doc_ids": ["8c191632-d8b0-4d9e-a943-120e6cf899b5"], "extra_info": {"file_path": "models/silver/silver__pool_summary_hour.yml", "file_name": "silver__pool_summary_hour.yml"}}, "6b2e7a5ac172c373054b45a6c590eaed97bec3c5": {"doc_ids": ["568130d8-abe9-45af-bd4a-67b6e6136904"], "extra_info": {"file_path": "models/silver/silver__staked_balances.sql", "file_name": "silver__staked_balances.sql"}}, "f11d6e689d5997e8cf97c44042ff6f29a2fefe20": {"doc_ids": ["399fce46-c0ce-4791-8f02-fd4e71bb249a", "84730f98-f307-4325-ad6b-d718e388f649"], "extra_info": {"file_path": "models/silver/silver__staked_balances.yml", "file_name": "silver__staked_balances.yml"}}, "7990f6b219c8736ba354fc1c565ad2637749ff91": {"doc_ids": ["73faea67-36e5-41e7-8258-26ee47ca42c6", "a6af2e3a-69dd-45cd-9685-8a0c1ee28798", "be3d22a3-e5ab-4da0-bd4a-e4a9ca11552f", "4d5c72b7-7040-4e3b-b463-7c3b864c955e", "fae31607-7fe0-473b-9c3d-f0be21ca5e8a", "28f04b57-d122-4ddb-854c-c5fea7f0d1f7"], "extra_info": {"file_path": "models/silver/silver__staking.sql", "file_name": "silver__staking.sql"}}, "bc86df408f308e87e1ed25f73e16c4ce7733d7ce": {"doc_ids": ["0cd86a3d-6800-4d17-833c-4c3d3160e9a2", "bdda39ed-ff04-4ccd-af7e-94e43efe39a0", "ad20579b-ad4c-470a-a553-beeee73e4e06"], "extra_info": {"file_path": "models/silver/silver__staking.yml", "file_name": "silver__staking.yml"}}, "cf495018c3923b314fe53b809b329991bce28a11": {"doc_ids": ["cdc316d1-f0c8-4104-ba7a-9dfdc30f6992", "10a13adc-5775-436a-b2fb-c8e2d686f9fa", "ddfd8b1c-7e92-454a-b76f-19d3f574cfdd", "311b47be-9a49-4485-90a7-088f81852141", "8a4ed934-413f-425e-98fc-e1b8e98c4297", "0efbff4c-f928-4ba1-8e48-ce04e45960d1", "a129317b-0564-45e7-bbc9-083158b6286b", "a536b0d3-dedd-46fe-ba41-c5e14cd1b5cf", "40d27f4e-9dd0-44c9-b7ab-45250fd910de"], "extra_info": {"file_path": "models/silver/silver__staking_rewards.sql", "file_name": "silver__staking_rewards.sql"}}, "12a3a18476c8ad859d941066b2e40d67a37c53b4": {"doc_ids": ["268d72cc-57f2-4213-86d8-1e413820ee91", "c37a6f8d-45a5-41bb-bd39-96e38e48d8ca", "9ef9d3f4-5018-41ef-bc6c-e9181f43fb1f"], "extra_info": {"file_path": "models/silver/silver__staking_rewards.yml", "file_name": "silver__staking_rewards.yml"}}, "e3b8ffce248ffc0217cd918184dc4e8177c1ded5": {"doc_ids": ["b712667d-6794-4353-8879-a6249ef19ac2"], "extra_info": {"file_path": "models/silver/silver__superfluid_actions.sql", "file_name": "silver__superfluid_actions.sql"}}, "841023378a35b92f18ff2b2a8e5c01c25d86c704": {"doc_ids": ["82fec383-afab-46fe-8ae2-f44c7b369a72", "e2d28dc3-df1a-4693-b378-b8711f0bd097"], "extra_info": {"file_path": "models/silver/silver__superfluid_actions.yml", "file_name": "silver__superfluid_actions.yml"}}, "ca5f9c438cf41a085e22086a908d2b6df0545a1a": {"doc_ids": ["7d69bb6f-8daa-4ef6-be14-56f8c83312e6"], "extra_info": {"file_path": "models/silver/silver__superfluid_staked_balances.sql", "file_name": "silver__superfluid_staked_balances.sql"}}, "5e9cb56a9b8e0e66898c159919cb2b899d09bcd8": {"doc_ids": ["958982da-230d-4dd4-904b-f95541c5c894", "a244e969-03d8-4ee1-9df9-9a01960b7719"], "extra_info": {"file_path": "models/silver/silver__superfluid_staked_balances.yml", "file_name": "silver__superfluid_staked_balances.yml"}}, "48d8bc88662c0d4251d17fe4e2e392a573be343e": {"doc_ids": ["63225a43-ab80-4a26-b81e-97e688ed300e", "1c54bcff-dbc4-44c1-9618-f7d22a755a83"], "extra_info": {"file_path": "models/silver/silver__superfluid_staking.sql", "file_name": "silver__superfluid_staking.sql"}}, "c7216e92174294615d4325b5a003e51c4d62529f": {"doc_ids": ["9d10228c-1c47-4862-a07b-40b9d6bd8374", "177bad4e-8a58-4ca9-9e41-a02d462832d7"], "extra_info": {"file_path": "models/silver/silver__superfluid_staking.yml", "file_name": "silver__superfluid_staking.yml"}}, "d47dd17a08ec9bacb03abc2221742a74ffa2eab0": {"doc_ids": ["dc3dac88-d71d-4db1-a44a-3efc3f8f4404", "744024c0-006e-449f-bf33-98e572287121", "05b9c81c-16de-4360-a9f2-928ff883b45f", "613ab669-7265-411e-a817-0af805180706", "a0ffcebb-18c6-449c-9830-13650df90817", "1dca59c3-a2a4-4941-a0f0-a7b7e088183e", "e7fa0cfb-9e0d-4b2b-b1e1-1bc0d70d8d0c"], "extra_info": {"file_path": "models/silver/silver__swaps.sql", "file_name": "silver__swaps.sql"}}, "670bb4ffa78ce830eab4537488114925a8414caa": {"doc_ids": ["ae5b810c-374b-4e8a-8401-a6e7059e6eed", "3f0d4574-c426-487e-9e80-f8e47e48f95c"], "extra_info": {"file_path": "models/silver/silver__swaps.yml", "file_name": "silver__swaps.yml"}}, "fb3c0a397534b5ec9ac0e5031dff6f1070126dce": {"doc_ids": ["94cbae46-db87-492e-b62c-5588f9c4e905"], "extra_info": {"file_path": "models/silver/silver__token_summary_day.sql", "file_name": "silver__token_summary_day.sql"}}, "f4ec0c5331090c62666eea03fcc90424707fac89": {"doc_ids": ["83e2ab3d-0b5a-4e28-bec2-9c7e20ccee55"], "extra_info": {"file_path": "models/silver/silver__token_summary_day.yml", "file_name": "silver__token_summary_day.yml"}}, "6cff944ddb431c5df8bfc5f82151f3b3d28245d5": {"doc_ids": ["6a316e71-b6f6-4dcc-be46-84f5bd978160", "2c352522-ea53-43cd-9ac3-2c83290e14cb"], "extra_info": {"file_path": "models/silver/silver__token_swapped.sql", "file_name": "silver__token_swapped.sql"}}, "3f76cf31b9c61617e8bf72feafc551e8e5b9375c": {"doc_ids": ["8b617041-69ca-4e62-b4b5-35c2fc6204de", "6563b7a0-11fa-4014-a9b8-4b94d03a8574"], "extra_info": {"file_path": "models/silver/silver__token_swapped.yml", "file_name": "silver__token_swapped.yml"}}, "01b422dcfa458f449eced403b14fa2684b165902": {"doc_ids": ["02188bf4-cb7f-4cbf-be60-1631b8bc92f2"], "extra_info": {"file_path": "models/silver/silver__transactions.sql", "file_name": "silver__transactions.sql"}}, "218a84150c94facf9cd66235521de0a2a631e210": {"doc_ids": ["843fda7f-5785-4422-a8df-4cb3ac522a43", "d3a54cc4-398d-402f-af80-a4ca3928333f"], "extra_info": {"file_path": "models/silver/silver__transactions.yml", "file_name": "silver__transactions.yml"}}, "5ed2043a4b6f51480cb63704de79fb1cabb9637d": {"doc_ids": ["53edab88-f23a-43c5-aa2a-98223f8a893e", "dfa16c86-b9a4-4c67-b725-2d1c7319be73", "316a9b85-0bcc-4231-85af-b613b3764b5a", "b6f3af2e-c751-4dbe-b20d-48e8e58d6c04", "a5b2e6f3-db62-4fa5-a29b-141484305aa7", "2dcbe754-7673-48c4-b9c8-e77d88c3ab17", "6a3f2cee-29b7-41ca-90ef-6277cbc662da", "a217655e-bb28-4194-9b11-9cab21e80bdb"], "extra_info": {"file_path": "models/silver/silver__transfers.sql", "file_name": "silver__transfers.sql"}}, "392335ad98d7cccc885f7f45f27c4826cca2c705": {"doc_ids": ["c718d2e7-cddf-4bb8-85bc-50f5614a5ad9", "81af03f8-e144-4637-ad19-e09c080b3ad4"], "extra_info": {"file_path": "models/silver/silver__transfers.yml", "file_name": "silver__transfers.yml"}}, "b1c032053e04b7312e49f60639ed7a2f6b6ded0b": {"doc_ids": ["ca0c3725-6fb1-4871-922a-a1d134b7c5e3"], "extra_info": {"file_path": "models/silver/silver__tx_body_msgs.sql", "file_name": "silver__tx_body_msgs.sql"}}, "6a55dfb00de3b6929546cf3793750e90e5f09796": {"doc_ids": ["908dd528-6112-464a-baf8-1cd58d687991", "752d2aef-8845-4f97-9b69-8f0e638fb5a8"], "extra_info": {"file_path": "models/silver/silver__tx_body_msgs.yml", "file_name": "silver__tx_body_msgs.yml"}}, "b7526e5c7342e1ca6e15d1798972fa00b44a426c": {"doc_ids": ["70856120-303d-4b4b-83ab-7269c4f82c8c", "e803dc4f-bc31-4a7a-97f8-90adc5c8ffbe", "0621ff87-e480-4202-8e67-ddf4af6e1134"], "extra_info": {"file_path": "models/silver/silver__validator_commission.sql", "file_name": "silver__validator_commission.sql"}}, "65bcc09e9e8f95ae59563202c64ce30b97973643": {"doc_ids": ["02169094-94b7-4427-bcb6-e46d7cd95860", "dcb3b9eb-94a2-4236-b1d0-41a2867f49d5", "2dd01795-2f13-4865-9a5f-e5b890cfd0ce"], "extra_info": {"file_path": "models/silver/silver__validator_commission.yml", "file_name": "silver__validator_commission.yml"}}, "ebf805912e099357eb1bbd21e260e81e6f7803bc": {"doc_ids": ["19430ad6-30f9-46df-878f-41fca43e8c0c"], "extra_info": {"file_path": "models/silver/silver__validator_memos.sql", "file_name": "silver__validator_memos.sql"}}, "84cf76450fe88c644e4ad1523e075de6e349b53c": {"doc_ids": ["2f3d1abe-04db-415f-99ce-afd0b8f4a13e"], "extra_info": {"file_path": "models/silver/silver__validator_memos.yml", "file_name": "silver__validator_memos.yml"}}, "d674fa59b61343b1f6e8b2c0c42cbbc53b3760c0": {"doc_ids": ["4b665a26-61f5-40a2-b9d3-9767296237b5"], "extra_info": {"file_path": "models/silver/silver__validator_metadata.sql", "file_name": "silver__validator_metadata.sql"}}, "6eeccf7020b8bebb94acfdc39863b2dfcd7c8b67": {"doc_ids": ["caa7e459-5275-4b06-9373-4af532ebf556", "29d6b0fe-a952-47d6-a70b-e403597ca93c", "c68b33fa-5f87-41d2-a639-5c2fe8c9092e"], "extra_info": {"file_path": "models/silver/silver__validator_metadata.yml", "file_name": "silver__validator_metadata.yml"}}, "0e92971a1c24f7e81c639249a5499ada925ba03d": {"doc_ids": ["d4dc1c9b-731b-438c-ac3a-0990fd5ea0bb"], "extra_info": {"file_path": "models/sources.yml", "file_name": "sources.yml"}}, "62c8c0b0485d3a46bbd171ed8debf0d0d7ab4d26": {"doc_ids": ["c8d39dd2-b918-41ef-b38a-646d5bd3efa9"], "extra_info": {"file_path": "packages.yml", "file_name": "packages.yml"}}, "a2530f2cd25e1a893b2e645af738fb3872fafe65": {"doc_ids": ["45fa5b7a-75c1-4ab2-8735-45322758d514"], "extra_info": {"file_path": "profiles.yml", "file_name": "profiles.yml"}}}}