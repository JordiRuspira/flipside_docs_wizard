{"docstore/metadata": {"e69de29bb2d1d6434b8b29ae775ad8c2e48c5391": {"doc_hash": "f45d323304469f60f298d15ae32ae3966955d6280dcf2fc13545f1f1f5f4e72f"}, "5671492aec033f84da2812e86088ee4ed10051d7": {"doc_hash": "3174494fe17cfb51ebd0e3d20ef1080faed2bfec9c97a32ef711652371919c12"}, "0ed70d273ac7dd6a327f2f46a961848fef52b208": {"doc_hash": "0bfe34ea2a19e449e47ab9b8cad93715be28e4c6b3c1d3ccc9719339b3d808cf"}, "9e4404da59413b5bded302820d912ae0b583109c": {"doc_hash": "038b3461cff93d4f5efc1029b6c1e52b99c20d54faa3b7dd307779e0e2821248"}, "69a9207196e9a61a0c028ecda93a717e6deec6ea": {"doc_hash": "640e57b2157089697d2f6c8acebe98562fb1dcfcd6abf82b5b297bc8a8633324"}, "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba": {"doc_hash": "f57bc16719f43047a0e90f7905a9641ef306b0bc45bbb0a849fc016cf15ad76a"}, "1048dc86af97aa4f0ba98cdb25cee8e887231c29": {"doc_hash": "2d2913bb2dae8386f44febd9d3100eaad5a74284f1797170e940d016910fb00b"}, "9b7a00af9b35bb226152ad20c0bf27922b0e2653": {"doc_hash": "b74032f0eb97978c789e064b9bcd9d72cca60636bb6dc10fdd1ceced5c43451e"}, "c5f02be483026691c084a396003ad63ac26a6ad9": {"doc_hash": "d50e4082fde4343cbcfa836d14d607c3ce1e12fe1d47776833d6b57563a43f78"}, "57bffcf6953ce2a179a01ba4d43b0cc92e1e3002": {"doc_hash": "e8ec90d595f8870bcda7f2103cf57cff51138e0373154a19b178c7863cf23603"}, "91a8da9adeafa9b8be4c9f9b0b57b3e2cac5ce34": {"doc_hash": "49592cbd9bafba55dcfbc2f92be502a2721e08199218a76bf52f2777b87d9a6b"}, "b998f7b93229b98d110af86ffa3cf41d8f9a827e": {"doc_hash": "3d38cf36084a5c4b8ccf86d360a3ee8c29a5701e202c827be936cdda6e8526db"}, "9fc9fc4708360a6b514c19bd8aba2266228f78a3": {"doc_hash": "9a9dad9ec708f66b67308974fe87044f2f2c668751255dcb568c4eab0e9078c9"}, "0dbdc2a5a515873e209178e05cf3484a5fed11e2": {"doc_hash": "06c179b3a2d41844106ea6596d2ce0fe196e1ebd5c4c83db098000e12aab8eee"}, "a426339330458ef60eba1eec8501ddc97477e7e2": {"doc_hash": "eb517d0842710791eb96f12e7454bbceab1effc8101327ad537e4fb3200e260b"}, "8e192908fc3eaf333f9b63dd23b2e3df6ab6f8e9": {"doc_hash": "3fb79cdc683fdbb2c3d804d601b63abe20325e951e2263b89b6eb1c18e80a98b"}, "ae7815703ece62e71e528d348220551853bc9bd7": {"doc_hash": "9ac52f1a147c2003aba4a90d757e733e72e3ad48f373536b65de6a6250a3d746"}, "07b5167f18af19d2e106590f03673139d5fa0423": {"doc_hash": "f9d7f29d79f8edc842b6f1ca8085f3f1c8518b600b4863e420b2a7353fa113a4"}, "b164bda9a66ff9e49325a175cdd29093f733d809": {"doc_hash": "bfa68c455669eb12960d4fb51e037ccbbb4537340f733e8dc0e7d88a379cb0f4"}, "be526e5b79a8ae57956c136b596a262a813dc260": {"doc_hash": "0718270c7cc154f2482aa385000716f225fcd280da3e714c75604ea535caafc9"}, "9a7e916d43bf7afa9e09a8520dcfdee4dbbf0bb6": {"doc_hash": "0698ded31bbf490544e7cb2b8c7f3ef4cea6c56d6afc9ff8be973a76747e5136"}, "412cc622609887de5c7b574701db63bd96b03466": {"doc_hash": "de979586be86d97bd6b603326d782e3e8f6a12fc484f2a5f45844b0ec515e896"}, "547138a76a4b1e0a985e96b9aae632dd0177c3ca": {"doc_hash": "297a523e1d33deb6a05696a72f2da3739593d61ce4671834c752529d526a87aa"}, "a4375c718ab916778b56e40eb60f3c95296af965": {"doc_hash": "60770e2c264c301bb39f4210a980e345d987376b3160676be97c08997dc92fb2"}, "028f42036ecd26fcb68e0f57d098aac30f28601b": {"doc_hash": "5b881843c16ae889f37ab081181421ae7b7a653d8366b3b6fef07839d88ccc48"}, "576313c1a0afa6bfab8fc0e3beb56c5c341b90cb": {"doc_hash": "efebcae1c166a8d01e78d490a5323279cfc977fcc159c16aa62c5ea9b0cc42e1"}, "44e003bf77822b76850b12a39919b761173ed899": {"doc_hash": "378f29d9def7ccc992a81bc8fc6d0263079733cb05ce5915f2f653c81318cec1"}, "232cb84e428d7e1578ab630c80f9fb458d98d3b2": {"doc_hash": "f0eb0bbe2e7a635481f80076cf212fbd5fbf693fc2a3ba472c845f97dfa86d55"}, "6662a1019141825ca4130bb6868b1ed7989abf58": {"doc_hash": "390545b737871ec09aecd947bb53f2db0541ee8ad3db68a637ea72cfd24ce1da"}, "84acf0f72688c789cced0fef1472f68b5b2256c4": {"doc_hash": "8cdf0691a76094b80c297ae25a6d95b96cfe9020a58fbee772153ae7e7ecb6d7"}, "40b80c69ba02aa45e159c01363d87cab6f4a5f7a": {"doc_hash": "223447e71f91ce2a307ec4151c38cf9db9e2276a945b83b04a167095e4a2448d"}, "6b5d4322455ac11d2e96fdf25fd22186ff990a42": {"doc_hash": "19015ccfc41d7d6292fd1ee430b59a8e3c1006c77c2e9d2efea37b119b90f166"}, "327b05363a335a0a4daa90e894db3c48177fc544": {"doc_hash": "61b3e1db8b31c3eabb52d25d386f3b98741c0a2243030e3108eff94624a66ea8"}, "b66858711eb5c50841b37ae15e00d7e7ac3857db": {"doc_hash": "735ee732333b980f2bb482f5a59e91c4dbc2b7ebe1039c19d48d7bb32b6e5995"}, "5de73531b22bf0f24cc0f50507addbf41b93dfac": {"doc_hash": "c36e709f3e0cadc2f2aec64a829ad4a28d10f82d71f3676e10c7b72464aa1dad"}, "f669e7cf2b772462b69e60a6dd11796e7fb73906": {"doc_hash": "77428d93af99d7beea5ec6773cc263a0a262bcbf19994d289c40d604f6887a18"}, "4ac5b4fe2583a41853803d7a3a757e4c7457065a": {"doc_hash": "aa47670b428658dc3d3af24d345a3db7508ed9ffabd6993f674f754fa5aa0658"}, "fa213065788801d25a41ccbb6494762ea6b60786": {"doc_hash": "f2a411a739fa8567330f5515b215b03cc46e8881452d3358be19a705db8805fc"}, "e2ca1341c20ea9cb5f854bea7e836b867dbcf5df": {"doc_hash": "6f9227303d484663bc8a289b774410dd87939fb739c570d38264244468659cc7"}, "86ad20318217bfb7e66e1c40738eddad04e75ab6": {"doc_hash": "b45d9f31a2b9e261974162f0fe956eab71c09975133fd1d27406ef751a12aa83"}, "13edba9825e5f0b434d6eb6d10d9a2549f9398a0": {"doc_hash": "4b74261062a5f7fbb65ba066d5dbd403e9ff7b9ee679764362e2d4a1d4ca9a0f"}, "909bd63cbecdc122c31000fcd3507b4a694cd472": {"doc_hash": "edde12b71a802e6ee57d3bb5ec2e926a7d39b0d89f8703f30fda22b0e78b0fb6"}, "bdd297247ca7c547115fe4685765adaf58a951e0": {"doc_hash": "72f9a64d657f0adc7cd44a157bb737a823cdbaaff3345cbcb0bfabb9c3cea8c6"}, "6ea498b6e459e0faaac7f8e693b37454c92586e6": {"doc_hash": "e4e7b3dc0a7fd8982fc0f34e54c68cc005f831301f33c2596c67669af65b0ee2"}, "e429f20687887c64d4e376a37ec4bccf4b0df019": {"doc_hash": "fe8cf1c4aafacfec616c44627169621ea97a84182a35a700b7ff07a90b76c050"}, "dd83ec26522a6ed986440ced4000688c6d2830aa": {"doc_hash": "52ba94cd243b69d483acbeae94bcf1a27a382fb5fa96047b073627b13d7047fa"}, "13c0ddb27ed5c3c0175599a769632ae5a8bd4ec9": {"doc_hash": "8de7ae21ef452bbd2d8b244d7895c8592cef26f6e47f340a95b1d78fb75e7d6e"}, "5db6055c8bd5228db9762934c61003dbd1125b1a": {"doc_hash": "0aef8c43f116949202650213a1e8c45a1c9857962466e90317cf58c4c9f92c70"}, "a39ee3df8e1c7a73eb305a5213b293a9c53bf468": {"doc_hash": "641e7ccfa668c60632fb6a0054b0e23ef6de2f49edcd043de2dd0df61c7e89ca"}, "0d1f5c86014c82126c40bc2aac449407dd1480cb": {"doc_hash": "b8b555f2ac16fea1f40f6dcc0c8d38c8334a7285b0b7ab939f2f5efe7272b961"}, "d3a88cf206b46f53b0e6321c62306b0d818555ca": {"doc_hash": "1df0b76444d29728b2292a7338e082aceb87ffd4a7478237ec1bc7cf86effdbe"}, "29f97cf4f9b01220262d8e219f24b526d09f85bd": {"doc_hash": "53fd318470dfb186a52483673b9b615dcc38ea52ce967b422a184256d415ba11"}, "1d96d9eefe184039b50daf7aeafa77e222b1ec3a": {"doc_hash": "52e7df341407fff27a0296e27c1dc565e2ec56fe87e461ab73e88e1b6d691f69"}, "a71a2036432cf3478d17a508356356160cb0a1e5": {"doc_hash": "2279cc56ae4df2e97fb2c0185f455b84238c38dd472b0de222b13f84477560cb"}, "8e0987329cf58537518bc026a28ffa98d73becf3": {"doc_hash": "d2993186db52dfa412de7c80f9a18aaebaafa23815f90a713d5c6cf23bd6ca05"}, "d06377c27833acafc0095782f7797cc65f9797fb": {"doc_hash": "897375dd9a7b89ffb8317a234d57bf169a38650a2cb65412578933b8b3763d28"}, "13e69dae2f8596b73e57f1a576218d3b37dd6a70": {"doc_hash": "9061129a175058ed058610dd1a2a9f27d01e036d630dee78ab0ce8bbca944461"}, "4ab73fcb20b09856d03bf626e32106ee32077fa5": {"doc_hash": "40d36e5835e763ade60ea3b3dd391dff935361a85ef43232e625ebcebfcd74cf"}, "8518cfd1f76784a901468ff5c2f06835c6139157": {"doc_hash": "302d3dbb78b9049aba54f9c00d99d92e02959cdacbd7b9026eec85df38c5b323"}, "5bc19aea672cc6bfa27b66cf7c30c88caf6bb381": {"doc_hash": "eb1ba815ee1080e1ff78fbd9f253c9d93d4bc05b23d78e897dd4834a80b41bfb"}, "15f8cd140ad774cb2642b47b16c296ac46df7b93": {"doc_hash": "a079c187259a8dde6f01a60e63487b2ea3ca38bcd6112f313d5aff19a655b057"}, "591844078c04a37d3ba3d7f3d88debd74a5805f3": {"doc_hash": "271a2fb2ed9e2a8b721407547d4102b66d75bbc1dc3d9dc67044fe2002159d5d"}, "b9468f4d72616c425e15082ef9ebe2f91148480e": {"doc_hash": "9596de4985c8c711dbb4b1e29a5244b0974a967855c1a751b854a99e12169b81"}, "0a9253dc121628d5972511eb49970e3f10396287": {"doc_hash": "d9150d3fddb4d85323fac194bcffc1e4c6ebaa62aaffa1306b7599d9fac81f01"}, "79a7aa39830e71c7be7f4ca3e2e226c9a8c1fb9f": {"doc_hash": "ef62130b8a99ce927fc6a8072dabcef1f7dbfe52b4be9acbcca9cc6cbe460391"}, "376b2dcdf8a1d40c202f191c801b9a847441e216": {"doc_hash": "262b286147fd2456ad744585d5e97b2b871c2e94374d2c192a2cd0b27c1c781b"}, "324f96d84022e9ecba771c6d7c5ec48dab86f08b": {"doc_hash": "871bf73fd2ac0474b0e86020eb23c61f01c475876fe3d27d0920a20182d5cf55"}, "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853": {"doc_hash": "9798ec6e88002c9974bc2a368afaa231cbbe972775e86a21caec6a22e8ab36ff"}, "005cc71ba7456739c278c9cfac95e4dcfa205bca": {"doc_hash": "8975e81406b6bd023ad4aa0f99a3f92d747405a1301ee047269f99112d1d29b0"}, "446d587e2f2b75067338c233622229db4bf9567f": {"doc_hash": "bbbccdc24fbcdd0c0d3703344c86b89054a1e1378d1d75799c735f8a0e89021e"}, "5ce30e894eda7c8062d3e25699c98c5edecfdcb6": {"doc_hash": "03d1368902220a26cecb19e4f603ada84fc230f84d8400216643a09b59655008"}, "d2a26a5d0953bc9ff20458bee861510b4ccc24b8": {"doc_hash": "8c35ebb6034dc0007fee7baef9bbe2dc24d3e1e93aead09cf328b05cec0508c5"}, "1266a2a5da0b60940fc25f7fef24b29033d87c27": {"doc_hash": "4b56f62868c94e5acac777b7671dbc29a872b25c4898e1344e912b84e6c6fb51"}, "5b7341d7ff661baa4f1128ff3a183c73301bb67c": {"doc_hash": "d337aa258145d65c3db5a68204bb11c5379d2e6c5bba1bc7ad7c22221f32b5aa"}, "e72cf32b5d70fef836a13b62b9c3e45b573ff8c2": {"doc_hash": "2d4493a2673da6cbe919c934f2b1f4420ea6bd708faf238204992b232b5df05d"}, "9c019c16a40827d306dbf598780a0ae12b1ae666": {"doc_hash": "57640e9ddc0952798268eace59edb5447efebdea09b285fbea42000177ffbc6a"}, "9f019c104f22fc94c596b644cee8190c0e29463b": {"doc_hash": "63a256406d4b1366426c2a0bace4ab8efd91c90c0b4fa1cad5690d635228dff9"}, "a53cf3fdf072a51064754e415f84894a4927e334": {"doc_hash": "7ee645a67068fdfdc2ea4729edb6159d10c3337b3d2db543f72ca66380f111b5"}, "44386bbf7e260a70bae158b25f9144aa8615cd0d": {"doc_hash": "d01650e2f8192fb13ff691aba6723c5c69c5d1cb337597303f7bbaaa245e70a4"}, "9ca98193fe2d281925d030ad540cca94df6e0d29": {"doc_hash": "600230ac78e07b3292e050e0ad32aebb6f6348e13a87138d89aff303645a05f7"}, "982fd276bd9e7b9db20d2813160b9e53260604bf": {"doc_hash": "99b1a17d218dfaabfa5b7f7b3d23eb289882f6f942a5568a17bb2a85b24bf36f"}, "20be0b89273b007bb12c397f0a7ff3976fae0378": {"doc_hash": "0b03b05e8298b4c859060f0fb9986072e6151aba54458e6ee7547bd809186e94"}, "c9a1d8aa0857ba1ec03eb203c6a86facd038ff32": {"doc_hash": "14e108c1e27b37c595e31e9b3017d5e56d4d8510982f8a041cf4dde915e83e68"}, "eb9aec2cf1be4db88d7461e976bd55bbb2dc3c13": {"doc_hash": "dd2798e7c0c9b7523d3fab02243489d554ddfeaed14d97bc3fffe137d64bd4ea"}, "5a1a8541e63ec2351d35af239d793c8515fd6f18": {"doc_hash": "75d9a610a66f7cedb6677ba7fe77f10046fbb73844c194d949717a25611ecd86"}, "c5d7a6b8d8f879b7dc32bdc4bbf11bc13d5768f8": {"doc_hash": "b5a245bfde21b0d1f7bde112bcb92918c2a22ab7eb3741a718f43fccb413f0b5"}, "31a1d1d54ce3f810b57221bd364569cb5e5946d8": {"doc_hash": "019acdebf9297501f7e39f344380a8da20d1296994d01abee0fc036f294ba5bf"}, "1483727ba2bd53e2b455a3eba6bba299978843f9": {"doc_hash": "ac539f1351d57852bad1e9586d4330da97bb15631b2c8d67d57d62cf21a82d26"}, "b5544972b74efdf701adc6d8a7e4f76547e8a904": {"doc_hash": "26a80952ca959af4ab65bdf369a0dd892e255c4c902eea48b31df01f3e4d7ab4"}, "677f28359a2fd7c95a49afdd42c1952335245f52": {"doc_hash": "37e4cf7008dd47ca7e94ca3eb2ab69687d99edaac475c0e1af56f4fc45e4a9aa"}, "be4324cda7377c447b675c8ff3cf662068474790": {"doc_hash": "8a1fa65197af4a0673e0161099ee5c2c2978d03bf134729a786327ed0ceac1c5"}, "b662b9e24236821fb28deb121c7aa594dd24a17f": {"doc_hash": "573a74342cec235246c9a4b136d6f732ae81dcea5432b0e6dde31f0c7cc7991c"}, "ff6620c7c48cdcbbc3a38dae9349381f29fb2707": {"doc_hash": "c7f431af81eb0870d6a418891b9ef84f480afafe0ad09ed28468c7741743051c"}, "440e043f3280a01e56f48bf2df9ce8f088163c1c": {"doc_hash": "483ab82c884e6766f3a8d0d893fd3874a590d040596ac805a57f8a28429487f0"}, "8edab9f0301edf7764cc4ce9145977a5f7ad118b": {"doc_hash": "e18fe543ae1a540a340ecb451f0ca6072f42a0315f1682e72e3254ffe5c7ed5e"}, "fe01a8a0f4fb57f38afb9213e68df66a4415a0fd": {"doc_hash": "c43b28a0513d4b89b9d572ba9e259ca2f39082e04d003bdca84eec06a8492216"}, "f027f24c299c94df415c9b0046a69dbda7b512ff": {"doc_hash": "6e2e5097a248ab57bfe3178b7901ce559ea54a47d2d295e2fe70827745ef01bc"}, "62dccc9f85f546c1ea67355de28a95fdd4fc8a77": {"doc_hash": "ce1c0fe6dfc06b056f886677865ded0955a243e916fdc97bbf010dafa58e339d"}, "4d3c6e9f185ef43ba9cdbfb48fa54ec7295746b5": {"doc_hash": "36c4f8b96973fc3f0a70e87969b6b81dae1e42d0a664adb9e3c2ea7fc1ee269a"}, "f406dc10ba4157fa95613d1cf4d93c34f8275438": {"doc_hash": "e1af8662d0413bd73229c21265e8092982d9244c0ed48c116acc1ef65ba3c4af"}, "6ee1313c5949b0a55dd66de4f383cb05662e4488": {"doc_hash": "c465018bc371816a21bb0bd3653edb6c46d11b9ff526096c6e55d37a1e309214"}, "6529d9f84d9b6a9242c8219794abe434c572f18e": {"doc_hash": "4e80bfd84d5ccd69aeb276745474dd2133e4db0a9f1987453cb5b48aa6ad27a4"}, "26292db1ec5b48c49ed995f49aa5f9f1c98432a1": {"doc_hash": "bda8d4f7b26ef7f9d55ab923fe2e1807731de451641f09f76f0b85ae024a379c"}, "fc797cb72efeb0ca1b9a94e09e09149ac87dbc95": {"doc_hash": "cb1f44e3d1692065027a1b09e79221356389b5e0f15f7593c22c8ebf54fb1093"}, "93f820e7b654eef754c17f738c882465b7a53a7b": {"doc_hash": "90839ba98c37431d540390efaff7b3c83dfb5487e3fd26d640341f1d7a89e19c"}, "b6f7547f3b71b9d63ce3be5feb3ac987d110679a": {"doc_hash": "2c7bdb30c78d274978a4a3e2ca31bf17c9ba7802e03a295df98cd87f30784670"}, "fcafa4124add3d8927846deee874f43d3b99bbf7": {"doc_hash": "9803a968a64018e9e29cd075d2fa668166d90500c7ede0fc19e4219e62f8c052"}, "272c6a7a4ec979b65763c3ee27028c3adc2562f0": {"doc_hash": "73d65e96e7c35b71c917b8a1a431228cfc62a9df6106089df7c37e169c99e20d"}, "240bdd40db78063f2558938a25e571d3a99da90d": {"doc_hash": "08f5f587c56509f499c484b5ad46442195423b72f805873ac87bb7f7083969bd"}, "b37137ea7e4959bde2232209d70fe7448a991a5f": {"doc_hash": "eae19fdedd83583dc04d27a3597e5fca2d6fdab6fb799054640b77cf9fb06ec7"}, "02072f7ef401ce69eed24f3276b2af5039bb674f": {"doc_hash": "653721ca9c45f18d2ddf0f9010c64d49f29e339954456ff9e03013494ea1bb80"}, "51af1f2e59fa01781ee3e27f08fb18ccd3a4ae0f": {"doc_hash": "0598e6d0bc03cabf405e5d3d7f61afb0ac1ff85bfc0e7c46ec865e0677ba3e79"}, "f929b88878f6ae30f4034dca5bc7b98128a9b15e": {"doc_hash": "eebd3f4e687b6a5a9b2cc9fb9d2577020efafb49d8233c3f550a9dc780237be3"}, "214aee6bee0ebd551048c59c08897912853e07cd": {"doc_hash": "56a40d9065077f0dfc2596c6a21dfa81a527a71e287b95c3c7f0349fd1b02966"}, "caeceb80adf98350d352cf51992b804891ed57e6": {"doc_hash": "7f076b595f99dd92d056b674510064d73ac2e4879d3af9ea6fa1ff9fbed12f57"}, "ea811ad39f7ea9edd996d9019254b9f23fe0551f": {"doc_hash": "f73731b9991d2c69209a27b4af539c0dd21e08f7044594bea2b4665477b11749"}, "e605adb9186c10332670bef7ad37b5cafcf3999a": {"doc_hash": "fefd1629689d2a65470c69d9b2ca0221bc59dfdf16151792d7d864abcd7501cf"}, "356e28dd737c28096b10d073590f5bc53ce522eb": {"doc_hash": "478bd21ef8262173d4d7fa65c223898bc89bf75cdb91eba1882189c42b6b1483"}, "521cab09631a4b86fc84a1312f3c113ee732f73e": {"doc_hash": "ad9b3e3e43784c75dc0a5852f35d67d6cad80ab0757235931cb6937c25430dbc"}, "be9f2ce086eacebcd83cfb9b27195278a71cdf88": {"doc_hash": "53e6cdd33e3b98313fbf440c2adbae93c5c7db3c8d84503a17b22ca856399b28"}, "7e216e816b54aa2a877e60607f779a1386a1b8f1": {"doc_hash": "25b6c935a0af673659f3d9888c7d9b691d5e1b8f1e4f33628b8b2fda2d040ade"}, "522a1c2198be25e06bfd5f2c057f58e2f3f5f586": {"doc_hash": "ca35db170ed7525976558e8872a084d8ce2cb32ab6301ee9ac62966cf33b59fb"}, "3bd62b5a306ed81a1569600e12faca526f15ac81": {"doc_hash": "a3fab6165ca47e087e80549bfffdd8215528cabe9f7362fd71af13f7674bc048"}, "bce78121bca90a97161b8a7abcf962dfb5a02bb3": {"doc_hash": "b5dd193ed661cfd3cd3ddb2d3dc7bf970766bf31834b00d4f9ee479b636a46c5"}, "eabb6a31dc07b1ba7f472a5d8048698cac9d2d19": {"doc_hash": "00d922e8a9f826b9625a6863d0c4c804439a6f3c6e955c43225760f43d68808f"}, "130d94bc314ebd462ea4a854c703cdff9f7f24fb": {"doc_hash": "cfa10d8166e10fe28251e4b13c9717d309c37346b2e1677e3d4589d0e90eddc5"}, "5bd8fb8130646b27ab0efbad7151a049e0d80988": {"doc_hash": "5a95e0a554d30e7cceaff558733de89c5de04067dc1eb0d013a4605bb0839129"}, "56db32c9ee99c0654f0e5602466cc85308d5fb7b": {"doc_hash": "59b265b5c2612b5f9befb87e00fca98d25fe16c05f49ef8519059f95d4fa22be"}, "4ccdb2fb751c41374dc41d390b4ec5bd2a5fa017": {"doc_hash": "f3d4e405afe050bddbfa97cd2264d723569b73d53b6b581efed009f4bb3d446a"}, "05826bacd4cc0005352cb6595ca0fbc184c2f2da": {"doc_hash": "8c2ae07abb7940e0910544266f1949e50e016bef390f1a05e6618cdd0ae241fc"}, "bc6020ae1bf3c27464490f76b03b2592d0e6ca3e": {"doc_hash": "26806c60550e67073b9f43b382c2f88e8f38a699fc87a5bbd4d3e72a0707773c"}, "080acf44a469907e567882aa932b73e712fe0114": {"doc_hash": "d7d2c1de74be0eee32f7060d50d10716cc9b3fb63b89c1ed672bddb3a30d8862"}, "1627cdd4a4188ad3ea7eca47b8887649b69e6396": {"doc_hash": "11e77c5dbf44f2822585b14511ea6ad6f65873360934940a18e3ea619155aff6"}, "e4d674c827083afe0a5fad750e119c756058d271": {"doc_hash": "f579525a2ce7164edabebe601ae78a5a4dd67582303e12b95ed02f07b8f34cb3"}, "b6fc0c8622a3e75b89681149f9534bb6b0eeaf06": {"doc_hash": "2527ec6e5e7e71777a13eb0bcd2397b71ca51fc2d7ff733c2d9f99ddef6068c9"}, "bc89d4f48c5e8405c7e62a9d0c14c34fc3ede925": {"doc_hash": "f24b3f71fb0a112cc6549f556e4f25000bf6f08ff5fa288f8c3e807d1282d159"}, "d797900f79bf5d1c65c5616588db0ea6f9b960b5": {"doc_hash": "f9e0e83ec4c1e3dc9c6298710977ebbbc88811d003f0ab8abcc15ade132c0971"}, "031c58b44863977ff8e23a98882bb8200700b4b4": {"doc_hash": "91023c72ac5d92c0b96501d843c6ec0bdba7172d4afb116ba58d36b70f186d98"}, "55a42e6f03c8c0f9f4018b40436737db6705633a": {"doc_hash": "842ebeddf6a6abc6edcee93fa72cb2937dd1848b87818c67edf9035246072b8a"}, "396f6eb474a91c6e1c0ebd03863de0f62a65c4ae": {"doc_hash": "3e42e764f87a5800aac11b50290ee1c5bd7a79216580b8a238f2b18e91d230a2"}, "cb4ccd561e62fd866e71b0e72deed51d787658ed": {"doc_hash": "c4e622dde0f1d2c1720ff02b6481390eb24b824e0c9b56acb9532063f90e9988"}, "de2a69b29790cb02bd1a490d6f89db6118452038": {"doc_hash": "7d3415c1a7f71f6b3aca205e2bf9093664f222272ad050987ff56bfee88b42c3"}, "3b1f74c6121363d407dd4205178adff6e6db4cbb": {"doc_hash": "82969a3236e02bc528dbd2ddb6028282f14c61d9a3b329f47acfa71527099d2e"}, "bde9d3369fcedc4817d84351f2de5b09109d620e": {"doc_hash": "10063a4423e21ade3eb8cb88bf47eacf9763ca66b05c803e5af10a3fb36eeb0b"}, "0f95c494374a5beff5ebe400d025f657f84c4217": {"doc_hash": "6395d08d8e2c968f1ec45296d3b5664e4251c6f201b7760466d0f6b141d354d6"}, "89139710f5731cae660d4d8686e4ae183c4c4499": {"doc_hash": "16c9ea4352652ebf2c083189db196f581ddba57205aa7ecb5d630925abf56536"}, "5256b2c14fb851d7aa231dfa78aaf0a88114b6db": {"doc_hash": "5665e3628bf5c849b9a945130929fd39bb7b09660eca6cc7e18210cacc8a7549"}, "6283a34850c2abb31861283d90788e7f1816d648": {"doc_hash": "9aab459b81092afa9a6b92692751ae0b5ace676c92477a76181fa2cb94c8472e"}, "590db04b06e35270a8e3afc2bc07ff781d5f7d7e": {"doc_hash": "1523fa63c1d9fa3eb9ba78c1ba2944e42a0537661c9c501e2149ec1880bff9d5"}, "a2187a3d22d44914760959190b9a31d995506039": {"doc_hash": "a352370cb4935f3d152c7f1da044ee322fea7738e2f942aa0622dcf99529cddc"}, "86a6bc5c47227b1b82fa2e489c5f785d6375f39e": {"doc_hash": "fc9a00fe238891b91316c04f012eb86b95b8eef55b4e90cceac5dd276d9505e6"}, "5f38d6590bbbbd05eaabb113c63f3f45f3e42263": {"doc_hash": "06a638e255d4060767fa841b4f0097bbdb1fe84b3ff45ec84de9a89a634f51cf"}, "809616575fcb6974b0c9a36f0097360cb237dba9": {"doc_hash": "c29b8e2c606b10cd1586b2d6ea6c152391dc1d951b0f55793e87ac5445d47ee4"}, "36420b550190ac49aba964e6a4adb6a04a64a711": {"doc_hash": "8bc67338d81e97c5844ee516b7ef02bdfda41fcad389a5ec3e6cff497e6866a3"}, "a5942b73aa4199416281b74616aa258027f2d725": {"doc_hash": "0ce0e1b381297fa04c84604d36ff8f03507c78263665e1a094c567dfe923aaa6"}, "b64f4ed6edc4f6543cc1f7c422f24f9e53b520fe": {"doc_hash": "95804347c34ae1331dda1519714f04d1fa80f3a1be4378850bffd37ecfa4e0ec"}, "25a4c69537e4ccc17e3f9be88402907181d8ae12": {"doc_hash": "0e5cb638ba04b72905b0bfdef159ad8700540e27552972fdd78d147acb98e5b5"}, "543cf842e50426577d550e7e5f17cd64baebf5a7": {"doc_hash": "50a9f5905261664059fb07f10d38b8ff89b8a326fbfd082ddc9ee7dbd2c5368f"}, "82487b1ddf23730b0c46fb53db0de200f8ba2846": {"doc_hash": "e4dfeb204fa48e45d0310317b0b1978c203f22fa3c37e6555fa6a21a400fb2cd"}, "bd9ab788b42cdad0391db1b48b92ae2bb4d01c48": {"doc_hash": "f080909dd2b34ddf3b22ea31d39d6170a3a882a11978de1b5ee862784c6cb0f7"}, "536bd9e20290a89068e0881aa0108d56d9833b26": {"doc_hash": "42045fbdf87829b4ae44f6c57c0e46422536a6b5d80f5c1fad8699f8782219df"}, "3bbc1c4c759c63ace11e14c48f4fa1d01812665c": {"doc_hash": "6b460f78ffef1f0574d8f13a6c743f929aa6ec50119b33bfd2d269acb26d5a45"}, "ad22cefca0c1bdc1b22e2f6e8d8f1681441f4f0b": {"doc_hash": "469a558a1402e0c88439fe6e413daa20b1486bb9e36e8f707a7c7c229b86c9ad"}, "6be0f7a9122cad5904b2605a5eba0fbfacae47f0": {"doc_hash": "1b53a2613e6bafec064e407146c35adcfd740a03421e602773a0380bcd4d6542"}, "7e5b7ab988e3356825e0befad0993cffea8553f1": {"doc_hash": "7b39849c8e38e5b6180ce5756df4adbe0f7dbd5de4e55f738858f571f0ffc31a"}, "d0b13b6b0275cfa527d7493fdb214f9ab884076e": {"doc_hash": "b944a010e9c333cf30db8beb71ce01f329ab1cb8535d49d4e2b8690175eadb2d"}, "6894124c65a612d25ce19966b2846141c1b3b1ef": {"doc_hash": "da017e20af83997b2684d19be3505785fe0b5e294e389a120af7b6cdc16f495e"}, "c26e5e51e5a26783e38dafb4b10ed897235734f3": {"doc_hash": "d7ec8ba751e3c661158a5ba1adfb570e726ee311639bbb65085c2e7aab600640"}, "98b392d2c86e8861d251944cd120fc4bffede4b9": {"doc_hash": "ee9015d4a4d2655f1ae62858bfc136ca56098a62d58652d335bde5e60a8e835d"}, "8b816f3fd229f95097b4cb8894717540e27dd9d5": {"doc_hash": "2059fee704c524285ec6b821b5ff9e15190bd7bd8451b4f734d781126e3e9a89"}, "afd317930b7349d53bd4c81834986ad5d935f6bc": {"doc_hash": "ce8d0c73d409165b650a5701a09a8dcc62f11c380d8e1411a9e309e091bcd581"}, "7b81d084abad64bf1db634f44fa5c07ccd61854f": {"doc_hash": "7f749423e28393f44a814806ac59a7d8194ba5ee7555a00fc2b6a9e01abc85f5"}, "f66ad15e426159e42cea14ea5b29b6aca90bb826": {"doc_hash": "ad05c9b40427ca14b23b98e1e60a242b959333336bd4ab53260a38589f4c6f2c"}, "bd143e35f4bee6acceb9537890db14e2cd883031": {"doc_hash": "a78d2070d6d5284b406e7447aafd751e70661ddc7d6e604f92d8a612eee9e400"}, "da8a5d313809701f6c04fb8ed2f11ac356750079": {"doc_hash": "fdac670a1fd06a7f1455747b64070765f78ad5574a87f7958c6f61cda002c414"}, "1a3194392f14a78d262ef86d582b912bce1029b2": {"doc_hash": "5d9681b04d3c2f268ffbd36a0222d8a850d2600f75eb753f51f6d6ad82250938"}, "83c29d3789a94bdee119fbb50515bd8280216d33": {"doc_hash": "f9231c1389a5036eac8b0cfc640acba89a02f09133dcd901364a0e63fbd26ec2"}, "ac9f83a08c71388a493ea52cd3da2e8f69e07f44": {"doc_hash": "3145273469c1835bf58566a6247137e28177d0e0fd670a88797b7e3ee5909728"}, "f9d4fac3cb7d48153bf2434c7302feeded0f3fca": {"doc_hash": "5e8b376d4c0fdb120c281ecc3c814f600ec8171be03c3fdbea5369d8c302e6d9"}, "93ef6ed6f6195507fc8e6ec4ced648c13b2381be": {"doc_hash": "ae42915fb84ad963c773621fc458c45963a993adcd8a73e66dae36b91111fc41"}, "4f7282416ccf0c45d59eb887dbe2dc5d47e516e2": {"doc_hash": "16555be9f82740efcb9238489c3b8277abb1f4ebeac3556855ce8b78912f7b88"}, "6dd34e190612f1248325172624f42efe6fc58e43": {"doc_hash": "1395268739b129936cd4811e4e47d925cd8e4d5630e4561f5a90145c61c563d4"}, "4e938e095164241f004d78779b3ca388bea78be3": {"doc_hash": "e48e066233ecf9a98e42cdf8c607f812fc39d6b8e39fd421aaaff8dd55892d65"}, "5f2db22d6ca0ca53228acbc87f47c8d8c2eb3a72": {"doc_hash": "623c3847cd2904aae7d7be8f168bb04f90e14ed2d5457ef2096043ba3e45fae7"}, "c80220107578c2cd57cc57f5153a3165493060ec": {"doc_hash": "c18e9facb944214ab30db4d08554b9a3e83da7a51a013aedecac30bb1aec8fc7"}, "0d0dd09f7e191da34804a14b7d5659b0cb0a744a": {"doc_hash": "a46a1d8a6884f62bf7217a92ce640ba77c0f818fe04657c46c6cd0f727b9dcb0"}, "bd400f7a2d3fcf09f72a99ebe9e46cbe9284f9b2": {"doc_hash": "a9cfd4862d3f2605b81fd253f495e92d81cfb565fe52a99abe3ba526685a81eb"}, "681a314dda1f5bd822330bdbf39a7ee30168aeb0": {"doc_hash": "2fcebdda475ac983277e68e326d1cf7c5ee4b66f9f6d644e0303f9cd0780c4ad"}, "f49a38e5ba8eb389ea104f95e4edd67f99d252b9": {"doc_hash": "b001c7e60cf962b473b2a1a9309040826994e0021d79c31a74ce0021f987ef71"}, "6923c68ede99ecf21e569912f3044177785a9e10": {"doc_hash": "08ada0b9d8e229d0c9cf9846dfa33d25f49d2fd159ae38e5dd3de917ada7dd90"}, "bc503a2d6046f7d35783636805c537ba02fab937": {"doc_hash": "24427dab97eae2bd3aa4d7eebe9bb4498cfc8b0d90ca4cf1e1e81eb4b393e955"}, "8c7abeabee2372c2d7aeca5e46eecb3fcde1612b": {"doc_hash": "32cf4ef11ea78014830f7a95350f2905fd3d9540d0843dcddfe071a9500d3b5a"}, "2c77adc60f01ea850b492196c15079898c150ad3": {"doc_hash": "6d9b013d12add830bcbcdfd1585c9170d8b02246d99e2aae826f1024924ae876"}, "f99db088a10db1a1bd5b7c8b622fd1e48672d546": {"doc_hash": "89e62ad148e06bdd298515c65c98072d177719a2c1287ea58227f2e06c7bf12e"}, "1b1f61d75a6cb1c72429e9a1bf6abb86be75d644": {"doc_hash": "77dbe3bf862970675275ec01fa1192d3f2bd8e2616b4299065ed296df7dda2e3"}, "bf2601e6519a3d04633cc28441ce2d8a7a3b4d14": {"doc_hash": "96afcced3d4be081038fddb3c4aa7c210755456680150f2d4b34fc8b4959ab10"}, "4296e67e8f199c3faef285773a98fa5601d85778": {"doc_hash": "491dab2f70751649ec738f40164fe77bbe2d74f5a384513f8d7dcac37fc4eda1"}, "2b3d54bf1283987a9c0400dfc697cf38452e8a83": {"doc_hash": "5055aa40f9619b4feeac1335986fa4c36cb04642e5ebf23986d106ae0f8691f1"}, "02c411fbb10492d88625c77f7063141fbf1615c8": {"doc_hash": "6480444311122c76030b71757776744f3ae55f7411a16c28daf8799f14739330"}, "545431ed64921223e9769d8b8656631b79a06f20": {"doc_hash": "5654b463e2bb4c5d0e74c54947e0ff0af7fdf04c256a646fc16d7aa4835c9e3e"}, "a90a58573e336368e81b11e5181a1857622b5925": {"doc_hash": "90e377652dd3d27d4342205e2c6c44f4f8493857c2acdcffe8c941bc936c22d1"}, "44056b05fe2d2955cdad998617fd847ab4ca9505": {"doc_hash": "0f49c29a99f16e4f3415e734495ce0e1b300879976d519e1b443cb21fb8fabc4"}, "afa9ffa3c556059f2530adcf5657e0ff2c19f3d4": {"doc_hash": "1b00103e68f79d5e30a8f8193b64d9360e0e7374cdcd2182ca1dbdc4b257634b"}, "992879c4ffa542a7495b0b15303c196ded3ee3df": {"doc_hash": "be9ff741413e5ee8153ede5d03f4962d25e19042c9416d9d4aaf7a184b100710"}, "e6c5b30ffdf8f79c7aa24e1fe0cff68bba34edd1": {"doc_hash": "407316db92718375fd2f5eca6d249b73ff9e620d7b818955c4b692dbe8fd38e3"}, "a0c729c53d2f65f95a314595a2c3be06e2788c77": {"doc_hash": "05cc997e4416dcb9a19785151c114de87de5884b99d07ab55e6275f96ab7a416"}, "46a6648bc29a05e177a8787430c6b6da47d6235f": {"doc_hash": "299620cece70ce964016c159d06d0f27780736d9cf6512e78639d5d131f65899"}, "4d93469f0924c4a39903f976e363cdcdf9ee1c74": {"doc_hash": "e57c880a952c72fa71d8a526904537f042b6decd985e7adc87740c875ea20c36"}, "bd03d3e32c2af551ab785ec767d9366ba83665ae": {"doc_hash": "d971f667719797a5f297126d48fcb940543fc85b07961666935adc5cabe7af19"}, "734d527577e34abf4963cf3b8ad14ceefeb5f114": {"doc_hash": "eadd0bcc0f8e152f772b58635a455da0168d829f3c32e86bf693e0d1b8890d4a"}, "cfe9c14268e1ea7ad0fbb5d723959cb7aade7b4d": {"doc_hash": "02f912529ab3527fd686bbc5c2940c67c60362edef0bef7302291d3fdc6084f3"}, "e43cf8afd55e48d9ee2ac61401f185adf905af4a": {"doc_hash": "f7fe32b108e462e5d77a38d0f2119da7de437b47466ca8a1ae7b784ffff9d7d4"}, "0fcdd64eb9bed253d98dfd35bf9fd2c94eda243f": {"doc_hash": "5c06e17381763f2027f093d24a0c1405570b5c0cdb23d5f51d6cdcdf1176c661"}, "77f2a9109b6466e7187dcae8e22f3c723e655893": {"doc_hash": "443093394df5b4e0e21ca2333e04fd615699abc4ea77aedc8221d9ae0cebe675"}, "e3cc832d6fe2f756d67f235c591d63fa9b607037": {"doc_hash": "f94abc9b5f1eb0165a109a43bc267a8c726c0a5d009b24c4f9674618afccf40a"}, "68c63d9875ad39ea5768143ba31c64c6e0e1da80": {"doc_hash": "58d3af3370b7a3e3e284714f9ab4165656b46c74daf45eeb2d0d5dbb8a1c3d2c"}, "e41f7879d9748908dd4d9bab1a1b235b26041bdc": {"doc_hash": "8307d765ba049f78934ad2e04d7615f392558dffe6fc99e706e70fac633f958d"}, "fd05d5a63ecdadbba8e6b09198b1606ee575c9b8": {"doc_hash": "387269cb4f6fa67539a46fd4948ad3797a46ead23291addc670da36ded215cc8"}, "ab95f1de2e2de93eac2ad423619f72ae773278a2": {"doc_hash": "3731f5a4bba245d69d61ee8436ada1d7bf5204a5962c4dfd20e359db84f8a972"}, "a3022e826e483cd8837a733acecfd14d2da379e8": {"doc_hash": "cd1bdd04166b4f1bd290834e65ab0ac63b31dd8487705ec9dbf9155c5725e7aa"}, "c9edd2307625a65fdd81053b9a50307130046df1": {"doc_hash": "8c2bc8550d9dd9277f1beba17fd2a86cedf56d4caa5a9162fca806a3fe7e1f7c"}, "42fdcccccdeb0f656fb0f92ca51531584d074c7c": {"doc_hash": "c841c7c97ed48a7d7a08054508648410287aecc9cd1b1a2a4ec565f3f1539505"}, "79ea47c234c09e057332f386000becf3689cb53e": {"doc_hash": "3f0bcbb0555322d55240cfce2a6add16a7908c3b563e8896f0fd1d2d97c2f4c0"}, "81705d6a0e8a1cb4944b5cbd4b42bd68d2fe98d3": {"doc_hash": "0f179aacc56d4423d0c4441c7405cd4b5b9323508544b2e7872c7ee5186134df"}, "732a721361ad62ac5f3a9fbc5bdd927cf971040f": {"doc_hash": "5f7b84be0bf548cc4c69176cd30ac8d054eb62aa77424b6a3723d8269504f251"}, "c4c4bcbab636b1dd619f78fc1e5ce1ee83282903": {"doc_hash": "f914f915f9d573612eb854e9c9a4750f68aa1e1a5ef21852a0ec1198cbcafff0"}, "5a36a874d6a46505d4355f9430a68fa0f2410ca0": {"doc_hash": "94d19939828cdfa2d558ce9693ba4b57625ec24cba23fb3929eb54fa1a149990"}, "039db0c06a94a50f8f4edc7d931ffa49b970435e": {"doc_hash": "1de78a3f1f7b7ae2b16fc35c77e362da8f9fbed2c4cc95f092c804fb091d3d1f"}, "1c80abef9fc5afafc57e1cffb1a05074f3ae33bf": {"doc_hash": "ff6af1da5ab57e948868317575e3a907f10bc9eead58f861525413fb3b5c71df"}, "16e87d356871ed695736b1b738a4c310ac01bbe5": {"doc_hash": "37d57b0ce928927fa04675c765b0722ad622834f90335e81747d386c5a588b69"}, "d154c4ece5be2ea37cdfb5eb9312ce1a0e43a354": {"doc_hash": "638351c119eaaff8640ff1eb77768913094a961f6c91989fb75db62d37d69a31"}, "2f17ddaeb714a01481f19a3c3894db065f97dda8": {"doc_hash": "11cf75c3fe930b387d431e9e0f249b3d39ef7817545ed4d5eb60966fe2354cb3"}, "f3eee86604e1ec407c83af512d89851d7af959ac": {"doc_hash": "fba336a8b9cdb03a2f657b45878de70398db8c0afac917589593d16206ba2457"}, "425da9f086259e4ffecb4a07c95f2b3e4beca9f1": {"doc_hash": "b06a1d2767f1e224932d59b14df07a785e0ff7b89f4fe0aca1cbacc2c5502d06"}, "b1ddaab317daeef54ac9e5aeb656e58b8c01fdad": {"doc_hash": "c0217bd062a12b38c520daa9ba94710da7347718f36ef940eef96ee9182edbc0"}, "e70b59e299673d066933c8b4c45e6856baf5a4de": {"doc_hash": "bcab16d45f5cc5318a03b1971a7bf717e8f6653336a56efe8b791d7e02d82c62"}, "5714d34302ae0abed4e4addc6020868169afdbc1": {"doc_hash": "4579ff414d83b00071a4238277e5765cf5e2bc6c9151fca63aa5b68a9819705f"}, "705686c43c03d89097d61b56abfbf37b1eef0769": {"doc_hash": "0925dac1e1923ff15890775a52392ed027a878cc702d8a8345c26ec8ac5b4d49"}, "0b6efa237ad53fcbced4be2ffb5696533afd43c7": {"doc_hash": "be2195ae438d98e36a1772af5a9e388e9385758db8a0a9a7a692d3d2547a1b24"}, "e2d38dba3c76ad728765886214611d9ebdd91b57": {"doc_hash": "faafcfc216a9d6bd953342a0c9652bc8363d46ea678757108a84bd9d17ca578a"}, "5bed2f1f3fc1dabb00593da8f76b1530db9f49ae": {"doc_hash": "c0ebae2af7e6a5f570f29d201d9836df59caaf14816c80ca8d69e3709135b999"}, "49a591bef45823719a5795ac3160fc3bda4efab8": {"doc_hash": "6a5c986ae78782f5950a2536d7302c43b3b36307fe4cdc80b99a8795dc72b73a"}, "079a42df78d6665c2dc34be520f85fc4fb419d31": {"doc_hash": "3b7c90787d4f17dc8c84adcde0aa70dae1b37174d8ff2e3e61bbceb9d0ab7201"}, "df21fb863c7a54056ce6cbb77646df4ec5807b73": {"doc_hash": "161699514478e486f411a17c090a5abacb0c17d812deaac45528a60b0d5292a1"}, "bf4ac998cdc88ba04bc6823628f04941e9e9d4b5": {"doc_hash": "ead9cd7720f958bfde81d30c219de75dc6be78f0dad92ea29df2cf8e3b362f2f"}, "b54e32475ed6cfae81266e637c1e45cc48a82473": {"doc_hash": "0cc5939263723c2638035a701841e0f36710aa22bddbd35094d24d6f4d884337"}, "a068f24bd73f8ffafcc74478ae897e60ecb32938": {"doc_hash": "6f4cf259d4210fba38bed38f9a389bacb4358780c396f3caa4983168c1f217f3"}, "ef1783aa8603f35f060be7d34ea798a890000eb3": {"doc_hash": "3882f409aac47e6ef9f5222280e00984738ab4cbe124d5ed66f9e1691acf5238"}, "4423cef4b4cba1df1f2a17b34b41f0f2df86886c": {"doc_hash": "a0556f2d00848ddc4385cebb4ee11d7f7dba5a0c264d1c590ca238595696b1e1"}, "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3": {"doc_hash": "a3ee6b533568db0b77add2c76688d7da0c28457639b3d4c931717cdd7b7a82a5"}, "c24a5c4326d98c87d2aa6b84faa0244600e62056": {"doc_hash": "2d93c3391a1e5c548f3e4389d68b6ff92396fce15b5abdc70bc1c1cf06e2b155"}, "d37cc6b47345fe3830a5e6889682f63db50bd1e0": {"doc_hash": "7248efed7d1f039ff64e8b0bd33ed0c40e7404cb048bc0f48ec30af9b25e3330"}, "dd0f3060c5a42be9096ff004a1ece84711081f22": {"doc_hash": "ed2fcb1b9da8ce7f40bf3cf81cfef2ac3a5cfa3c6c2867fc56c2d8a9305a74ec"}, "9e4db402563c32d29fb756ca993ad7b47a6ffbc4": {"doc_hash": "ab72bb909ce0bbd92f22b3e25095ea6d253538feaf54a48ccf2cdd80677ed9b0"}, "ec908dbaa67bf94f6dc9a21f4f1b09a62d9ce87e": {"doc_hash": "dd982b991de6332deb99bb5be8c363324021d553c318adf7ccdeda2901973429"}, "794fea240b5ad2409d61c4470a5be55799bbb769": {"doc_hash": "4b34930c9a9e8ef01827f07c5cfd962d83fb51ca64e6380368c8b1a9e64f35b7"}, "ba1d102a51a8cfff61f5818ec3658435e559ade8": {"doc_hash": "841803f0ccb5c20519d5978541d99639cfc65dedbf099372dff789fd0ef688fa"}, "81a71861-ba9f-4557-8854-4957af88c7f0": {"doc_hash": "c5524ba9ebea72691c74596712422fce9d1701ae344ab73a4306fdfea374e051", "ref_doc_id": "5671492aec033f84da2812e86088ee4ed10051d7"}, "1544b8e4-1031-427b-b421-1be18dd5030d": {"doc_hash": "ba82fa5d2763a121497eceeedc60b5f2efa502de2cd1fdfd7384c2ec7859ac42", "ref_doc_id": "5671492aec033f84da2812e86088ee4ed10051d7"}, "7b5ef479-26f1-4977-b29b-a0ee52851a2c": {"doc_hash": "e83d659541e4e2fed7202d515b42549ebeeb9d675b4570935d09877f6f2c659b", "ref_doc_id": "5671492aec033f84da2812e86088ee4ed10051d7"}, "103f2a97-0678-464e-ab58-2f9f5586cae5": {"doc_hash": "f9102b55ee61011e0c39d631a3f1bfdbc4853b29a09cd76b50d5c427ddbbe69a", "ref_doc_id": "0ed70d273ac7dd6a327f2f46a961848fef52b208"}, "aa5b371e-cc42-4f42-96e5-a3a815ea71df": {"doc_hash": "60242138704d1265c8bc4a738d3b11894d6959c5b78ea2503c01e0af54b227de", "ref_doc_id": "0ed70d273ac7dd6a327f2f46a961848fef52b208"}, "82abe1fd-1144-47de-a499-de3c36b02c24": {"doc_hash": "620d15f15f36d317beb8f333b4f662254edb0985c9d4e9d0eaa2c746762d5667", "ref_doc_id": "0ed70d273ac7dd6a327f2f46a961848fef52b208"}, "66e7b425-f4a9-41f6-bf01-d44bc4b4e8b1": {"doc_hash": "dd4e3d75b4a98e7d104b7e6010d9287be1fd513534c7f22389fabd62afb1e11f", "ref_doc_id": "9e4404da59413b5bded302820d912ae0b583109c"}, "26c3548b-ddcd-42dc-8b15-236cc571d72d": {"doc_hash": "dfd4f1422db269962f26cb9d8c4405a4ae4938519899eed2f19e6296c0047120", "ref_doc_id": "9e4404da59413b5bded302820d912ae0b583109c"}, "ef90062e-9ab3-40c0-88ca-cabda8256d08": {"doc_hash": "959b14fbc0690c3d41ca425d42975c86c4681a24a86c5afa415cf407ad9c2308", "ref_doc_id": "9e4404da59413b5bded302820d912ae0b583109c"}, "b9885655-9735-451e-8fae-b7ec70b7d4d8": {"doc_hash": "640e57b2157089697d2f6c8acebe98562fb1dcfcd6abf82b5b297bc8a8633324", "ref_doc_id": "69a9207196e9a61a0c028ecda93a717e6deec6ea"}, "a92a67b8-12ca-4556-8300-51ecd7d37610": {"doc_hash": "e09dd09e9e4723490d659b9a24bcafe89bed4475935906c7f63838c6ebbcd9e3", "ref_doc_id": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba"}, "8e654730-5b18-487a-9dcc-adf663f6b5a2": {"doc_hash": "0257a4bea753081f21db862c607a3820c906d46487fcb466c37aa46ba9afd6c8", "ref_doc_id": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba"}, "c7d8ee13-c824-4e51-a77d-e5fafd940718": {"doc_hash": "745f7353cba1bed9f14d441a2835a2b8b2a50ae0155dda09241a5ebf6c36efb0", "ref_doc_id": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba"}, "59dada91-b5d5-4eb9-8bcb-62f04c168451": {"doc_hash": "11c01d14dbebf4af3b87c994c45e13e619c0c908337c7cc8447b57ec268a423a", "ref_doc_id": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba"}, "88a33d27-1ba4-4891-b474-be94490b027b": {"doc_hash": "dbb7385abe2948de51065e21ace6fe482131e1a3ca41f13fc891fe07e93862a8", "ref_doc_id": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba"}, "616ce576-f2bb-4bb4-a19a-91786e0f2969": {"doc_hash": "d1c70db20497f8af8046339a32bb773ff6d9bc9d515f93c629eef023ceac6f92", "ref_doc_id": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba"}, "66932dae-05e8-45d9-a667-8ed700325939": {"doc_hash": "1eb583a4fa9473fd6d5c21967be842154120350685b5812e5bdf9c6f47a131da", "ref_doc_id": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba"}, "b75a1a3a-e3f2-43ea-8cd6-f2b69a402502": {"doc_hash": "c60485cc577002185408a21bece28a2055ebbc72bbb2e3a91a593c16800a42f3", "ref_doc_id": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba"}, "8f84a4bd-2e11-44e4-8855-0f46cf2e523d": {"doc_hash": "7aebbf38620b91eb0196699d5ac0371b44684dd9d498854a79533940f13fab45", "ref_doc_id": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba"}, "ff9a9ad7-3150-4938-94a0-4171d8ebf334": {"doc_hash": "135ea0e7ac53906364822cb3e8151382cd6552e9a4e13fc4494a45fa01eb0154", "ref_doc_id": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba"}, "f5fe57db-9df2-4f8a-8af2-1c4ba440767a": {"doc_hash": "2d2913bb2dae8386f44febd9d3100eaad5a74284f1797170e940d016910fb00b", "ref_doc_id": "1048dc86af97aa4f0ba98cdb25cee8e887231c29"}, "b6ee48c8-5f86-4f00-8485-94339b35f43e": {"doc_hash": "74237b1f089715e7f34e7e33989de0c4bc462a0b419c3e056ad68a93e52a3629", "ref_doc_id": "9b7a00af9b35bb226152ad20c0bf27922b0e2653"}, "77f35dc7-6e6b-405e-9ff6-66bdd6e381c6": {"doc_hash": "035acc45892420305c6ced37d536c5447dfdf5ffe37466a2ad300ec7bde179e7", "ref_doc_id": "9b7a00af9b35bb226152ad20c0bf27922b0e2653"}, "9ca7fcd2-29dc-4473-a170-61b33efbb206": {"doc_hash": "b86529d71a2aa040fe93ff06fb3e8980cf3f2517b5398722904db8609c449db2", "ref_doc_id": "c5f02be483026691c084a396003ad63ac26a6ad9"}, "8aa0a039-174f-445c-b340-6c6822c202bf": {"doc_hash": "a09620791224ef1cdf429e925584165604c386f30d4521e275c188d306d1a698", "ref_doc_id": "c5f02be483026691c084a396003ad63ac26a6ad9"}, "2f322d01-5534-4915-97ac-28cd8c44e1f5": {"doc_hash": "d43aab7835526c42b508bc1c0a1f644ecf8b63ac97d625397cdf61aed75818f6", "ref_doc_id": "57bffcf6953ce2a179a01ba4d43b0cc92e1e3002"}, "a502fcd4-da39-458f-9eee-351341bf8d9c": {"doc_hash": "f8c6c98c4b5c91c31149c1078468d1646f6056e11768730bdc309e9201302aff", "ref_doc_id": "57bffcf6953ce2a179a01ba4d43b0cc92e1e3002"}, "67a9c5a0-d0b7-497d-95d8-b8baee490d92": {"doc_hash": "49592cbd9bafba55dcfbc2f92be502a2721e08199218a76bf52f2777b87d9a6b", "ref_doc_id": "91a8da9adeafa9b8be4c9f9b0b57b3e2cac5ce34"}, "ce637b4f-5ba4-49af-8fd2-70e22e2a04a7": {"doc_hash": "3d38cf36084a5c4b8ccf86d360a3ee8c29a5701e202c827be936cdda6e8526db", "ref_doc_id": "b998f7b93229b98d110af86ffa3cf41d8f9a827e"}, "d1b48182-1402-45cc-8dab-618287fcd69c": {"doc_hash": "f2fb527cac8a685c063152e047d191c2d873bb24d323c8036d632a16aaa8d261", "ref_doc_id": "9fc9fc4708360a6b514c19bd8aba2266228f78a3"}, "c7137b7c-29a7-4d74-b26c-678e60cd7481": {"doc_hash": "58b995494b47ab304dc7d4218177838eaf7281f2e358ee85b026da0e00ca2821", "ref_doc_id": "9fc9fc4708360a6b514c19bd8aba2266228f78a3"}, "570aa1da-769e-4908-97ba-c942a4c50f2c": {"doc_hash": "e184fc4132d546f8ee8ee8ea30bd55076567ac8eeff4ee3b493d2465088d41d8", "ref_doc_id": "0dbdc2a5a515873e209178e05cf3484a5fed11e2"}, "e0a074a6-e33a-4ff8-9d67-64463258e4e5": {"doc_hash": "a7674ee4f306cabe172361c10ce44f4f7bd6da4b31ca1a7fe2a56f81d32349aa", "ref_doc_id": "0dbdc2a5a515873e209178e05cf3484a5fed11e2"}, "78079402-6695-4a65-ba57-c76768c938e9": {"doc_hash": "34492547452d2cbd418f9746ea35bd32c4b3d1cdd91e4f1b64b85ae62ad95287", "ref_doc_id": "0dbdc2a5a515873e209178e05cf3484a5fed11e2"}, "e6955ef4-b542-4044-9b72-8648cf13903b": {"doc_hash": "2212fca76c591ce793f135ea382c6cb975a0c2913aaf4ec3ec9b10eaae513f26", "ref_doc_id": "0dbdc2a5a515873e209178e05cf3484a5fed11e2"}, "359e054b-0700-4bbc-b38f-efedb03628e0": {"doc_hash": "eb517d0842710791eb96f12e7454bbceab1effc8101327ad537e4fb3200e260b", "ref_doc_id": "a426339330458ef60eba1eec8501ddc97477e7e2"}, "3bf2bfa9-74f4-4b71-a7a4-8db90ae73646": {"doc_hash": "3fb79cdc683fdbb2c3d804d601b63abe20325e951e2263b89b6eb1c18e80a98b", "ref_doc_id": "8e192908fc3eaf333f9b63dd23b2e3df6ab6f8e9"}, "fe8e1c06-0553-427c-b770-5ce302431daa": {"doc_hash": "6c1c856547f55908c6ed404eb0fc2bd6d4800ae85759992922df4ba6f6c76a24", "ref_doc_id": "ae7815703ece62e71e528d348220551853bc9bd7"}, "040eee72-37b9-4639-8abf-eda21d4c7c2b": {"doc_hash": "334b3b091fdc814b7f4c254b8cad417c0daa5b16ecc87a6e6a97df52be1db1c3", "ref_doc_id": "ae7815703ece62e71e528d348220551853bc9bd7"}, "5560e986-02eb-4d70-b1de-16b8cc1d489b": {"doc_hash": "2a55e97a5a1361f92ce5806dd37d2eb6a0ee28f27c2a6289c520fd3eca58362c", "ref_doc_id": "ae7815703ece62e71e528d348220551853bc9bd7"}, "f8db8c9f-ef24-4857-b30d-3622c8497575": {"doc_hash": "52acca8e1e447170005fd65da8f0b096d4261ee07ccbabba94f6c6261c5ed589", "ref_doc_id": "ae7815703ece62e71e528d348220551853bc9bd7"}, "457e5441-1c28-4fb6-b4c4-374841e2c81f": {"doc_hash": "4c103f214a7984270af1adc6f36a711438b08f7778e7974178811fecf77ac578", "ref_doc_id": "ae7815703ece62e71e528d348220551853bc9bd7"}, "cf63d282-d291-463e-802d-c93127c9a19e": {"doc_hash": "d7e888b5144f84f59c254ff2e95fcc450dc757f40a2b236d13c16f3eeb2a5cad", "ref_doc_id": "ae7815703ece62e71e528d348220551853bc9bd7"}, "8c2a41ef-3bc0-411b-9eee-e9e5cb6a25f7": {"doc_hash": "7036874572386fe9edab4fce9606d3b363a8570069b30d89b3b4ebc4ab86b408", "ref_doc_id": "ae7815703ece62e71e528d348220551853bc9bd7"}, "b0fcfcd1-3dc7-4504-bd71-50d80136de9b": {"doc_hash": "fece083595cf218e8f2fbdd9e4153ce7745d171f1f12f3b459d29f86a42eb500", "ref_doc_id": "07b5167f18af19d2e106590f03673139d5fa0423"}, "47bc01bb-a2f1-482f-96ad-9b7333797394": {"doc_hash": "54c9c6f080579a233607c7c97cc2b18ef232f7dc15958e2f283849b8501c8365", "ref_doc_id": "07b5167f18af19d2e106590f03673139d5fa0423"}, "17f7eafd-68f1-4331-bf60-99df2fd7aaa0": {"doc_hash": "88332e7f78de3b451ee9bb95cae525853c88b9c81193054d1f723400471e0538", "ref_doc_id": "07b5167f18af19d2e106590f03673139d5fa0423"}, "ffaefd80-6526-46c4-9982-9029193f4f08": {"doc_hash": "dccd4b3ed5f3424fd5d77e0c6fdae7615ed76b11a15588a25fbfb5f42a7ad6d9", "ref_doc_id": "07b5167f18af19d2e106590f03673139d5fa0423"}, "1c617377-1845-4e2b-b3bb-2f383fe0bfeb": {"doc_hash": "bfa68c455669eb12960d4fb51e037ccbbb4537340f733e8dc0e7d88a379cb0f4", "ref_doc_id": "b164bda9a66ff9e49325a175cdd29093f733d809"}, "199e5665-9076-41b2-aeb3-cc635274ddc6": {"doc_hash": "4c0ff83065fd8f689ef11493f121dc9ec7e465d8d8208f02e5232f67d1b78b29", "ref_doc_id": "be526e5b79a8ae57956c136b596a262a813dc260"}, "285a0340-493b-4522-8724-e467d375da1f": {"doc_hash": "fe741429b74e99f091adcf06c37da9a15ceaa91ceb97a0833abb9ec19936231d", "ref_doc_id": "be526e5b79a8ae57956c136b596a262a813dc260"}, "be458d20-f7ef-4536-893c-c7c40d08478a": {"doc_hash": "2b08741b7d2ab50f147e278c79641fa0c5b79820162a7c883c90fcc9a2827cd1", "ref_doc_id": "be526e5b79a8ae57956c136b596a262a813dc260"}, "15375105-0cdb-4666-bf83-f65e696a1660": {"doc_hash": "bfc6ba8b76cd7318c298c0a812f77eff9826661725b5dd38a01854956d788cf6", "ref_doc_id": "be526e5b79a8ae57956c136b596a262a813dc260"}, "5c8fdfb0-fda1-4918-b73b-9f921f038e9b": {"doc_hash": "02998cc95635b5a780d013658be372f44ad429e5bc7f8573210a752fc9291c52", "ref_doc_id": "be526e5b79a8ae57956c136b596a262a813dc260"}, "0430b3bb-5a3c-479e-a43e-5280dac7911c": {"doc_hash": "0698ded31bbf490544e7cb2b8c7f3ef4cea6c56d6afc9ff8be973a76747e5136", "ref_doc_id": "9a7e916d43bf7afa9e09a8520dcfdee4dbbf0bb6"}, "82024a48-806d-4d87-9d88-93c1d9059d7e": {"doc_hash": "de979586be86d97bd6b603326d782e3e8f6a12fc484f2a5f45844b0ec515e896", "ref_doc_id": "412cc622609887de5c7b574701db63bd96b03466"}, "9a30f933-e699-4b85-a354-5d24289d5efa": {"doc_hash": "8e6e0196041019d830ba49df6b2b79ffaa254af3c202aef38708447aac3fa8fd", "ref_doc_id": "547138a76a4b1e0a985e96b9aae632dd0177c3ca"}, "455839ff-2783-4a05-b5b8-3cef2944de16": {"doc_hash": "05e7c7496c6821ecc7b07dbe993b6ec6ed4fd835558a706135cdf54704d13b18", "ref_doc_id": "547138a76a4b1e0a985e96b9aae632dd0177c3ca"}, "89baa666-e122-4143-a8f5-250e76f8e36c": {"doc_hash": "60770e2c264c301bb39f4210a980e345d987376b3160676be97c08997dc92fb2", "ref_doc_id": "a4375c718ab916778b56e40eb60f3c95296af965"}, "7440b451-f1b1-40b1-b5c5-1c3dea8d5225": {"doc_hash": "2e76057f142995f8104b2e96abad1cce4ce2936685f0806dd37d0ec651d98221", "ref_doc_id": "028f42036ecd26fcb68e0f57d098aac30f28601b"}, "53f2f7f3-87e2-4962-be75-273f711f7d20": {"doc_hash": "009b22b91d1a283a1e426b9b776055b9bdc5cf4167ffb32a9fa42db815ba0766", "ref_doc_id": "028f42036ecd26fcb68e0f57d098aac30f28601b"}, "dcec3764-ec7e-4665-bc92-b45410fb7520": {"doc_hash": "16628e90c6d2d0065cd7397125ee6770b1c3f786b12767c8759c6c6bf96af370", "ref_doc_id": "576313c1a0afa6bfab8fc0e3beb56c5c341b90cb"}, "db72bf0f-ef9b-4258-bbf2-217fb6a5bb4b": {"doc_hash": "cd30f1235165078343204411ed428778961cf7f1d9908ae864ef2c47693318d7", "ref_doc_id": "576313c1a0afa6bfab8fc0e3beb56c5c341b90cb"}, "cc5cc4ac-92cc-46c3-b7f1-f6ac682d5859": {"doc_hash": "721cd435506d18af91f91683755f43824ac1b206a66aa8129216caa514ee228a", "ref_doc_id": "44e003bf77822b76850b12a39919b761173ed899"}, "2c5867db-778b-4410-b902-0436a0b9850d": {"doc_hash": "1a5b1b9b840aecf048a0a9b0bd64e43c1684bed6b7594ed58a20033cfe3c0ef0", "ref_doc_id": "44e003bf77822b76850b12a39919b761173ed899"}, "936806b7-f771-4a5a-aa5a-091502e17afb": {"doc_hash": "5eee598e704350a5f8aedc25b5685659b0380dd7dfdb313ed4cc2aec6948e912", "ref_doc_id": "44e003bf77822b76850b12a39919b761173ed899"}, "08a1b612-c4e1-476f-9193-23dd76109af2": {"doc_hash": "f0eb0bbe2e7a635481f80076cf212fbd5fbf693fc2a3ba472c845f97dfa86d55", "ref_doc_id": "232cb84e428d7e1578ab630c80f9fb458d98d3b2"}, "313267d4-c720-4f70-b870-d6239eb07fff": {"doc_hash": "9abebd6592015276c569dc582d6ff05b91bfcee4459935e92811e0ceae2b6e66", "ref_doc_id": "6662a1019141825ca4130bb6868b1ed7989abf58"}, "6a533f38-7677-4491-9664-2269cb42313d": {"doc_hash": "866a4b70f37a58f16665bddffbf38075008094d7aac8f83685ea4c7953d9387c", "ref_doc_id": "6662a1019141825ca4130bb6868b1ed7989abf58"}, "b09026e7-b7a1-47d6-8034-47277ff3f55d": {"doc_hash": "4f16afa20b609118f5b3d6d3061b231e2adedd3ca8f242345ceac157ace8a2c5", "ref_doc_id": "6662a1019141825ca4130bb6868b1ed7989abf58"}, "e8f3c2e5-5284-4a9a-8dc8-a02afc24cdac": {"doc_hash": "8cdf0691a76094b80c297ae25a6d95b96cfe9020a58fbee772153ae7e7ecb6d7", "ref_doc_id": "84acf0f72688c789cced0fef1472f68b5b2256c4"}, "4d89d41b-5940-4587-a004-a13d6d151d23": {"doc_hash": "223447e71f91ce2a307ec4151c38cf9db9e2276a945b83b04a167095e4a2448d", "ref_doc_id": "40b80c69ba02aa45e159c01363d87cab6f4a5f7a"}, "744c97ad-d03f-4d9f-bb99-83e025461860": {"doc_hash": "2a7577048113e19ba4ac6b9b15d43b371c3fdd77253316681d397c90f022f342", "ref_doc_id": "6b5d4322455ac11d2e96fdf25fd22186ff990a42"}, "ad032309-5dc0-4104-9215-12073262e210": {"doc_hash": "bd1bd426bdadfe8f4b0ae696e4a73e34f80923cc7490c320d400785e55e71a84", "ref_doc_id": "6b5d4322455ac11d2e96fdf25fd22186ff990a42"}, "3aee61f4-0553-45ba-983f-9af0985f1285": {"doc_hash": "61b3e1db8b31c3eabb52d25d386f3b98741c0a2243030e3108eff94624a66ea8", "ref_doc_id": "327b05363a335a0a4daa90e894db3c48177fc544"}, "6ae15227-a4d8-4bf2-8f69-5a9b7d878cc5": {"doc_hash": "7bba2db55d8257c00be5f30508465af22bfea902e6224f70dd91cfa677119106", "ref_doc_id": "b66858711eb5c50841b37ae15e00d7e7ac3857db"}, "d7b17a6c-511d-4990-870f-0e4afada7a45": {"doc_hash": "dab1171697ab6918c533932c8f1a7b93452e34ea25217db6aaec51c47e152bf7", "ref_doc_id": "b66858711eb5c50841b37ae15e00d7e7ac3857db"}, "02232173-6cc6-4592-8466-2d92f17d4e54": {"doc_hash": "c36e709f3e0cadc2f2aec64a829ad4a28d10f82d71f3676e10c7b72464aa1dad", "ref_doc_id": "5de73531b22bf0f24cc0f50507addbf41b93dfac"}, "7a7b61ad-fb99-48a6-9798-7e5333a15597": {"doc_hash": "77428d93af99d7beea5ec6773cc263a0a262bcbf19994d289c40d604f6887a18", "ref_doc_id": "f669e7cf2b772462b69e60a6dd11796e7fb73906"}, "96be5e89-4eab-4dee-979c-c84fcae0c5d7": {"doc_hash": "d442ae1bc8be7a3df2f63dd4c17b3edf462723f28300c3cf3251020cb2aeb3c4", "ref_doc_id": "4ac5b4fe2583a41853803d7a3a757e4c7457065a"}, "ddd73c22-acc4-41d1-95c9-9ca053dc3241": {"doc_hash": "59dad3e5fc4348d3152615a358489f0b8814cd2bdc2c4a8371755f04deda742a", "ref_doc_id": "4ac5b4fe2583a41853803d7a3a757e4c7457065a"}, "1cbb27d8-dee7-4568-911d-52b240184373": {"doc_hash": "dc37a4dd655cb8430d5f45fb9eca391ed32b5bf8cfe901e630b7d6965b8d8bcf", "ref_doc_id": "fa213065788801d25a41ccbb6494762ea6b60786"}, "395e7aab-3a2b-4aa9-9fc6-471631cbb8fb": {"doc_hash": "f0e2b367193c14f7eac7fe05a10b0b4d05db075eed5c8ef72f9d048b78fadda8", "ref_doc_id": "fa213065788801d25a41ccbb6494762ea6b60786"}, "8f732e1e-0ff6-4372-bb79-b30dd663be03": {"doc_hash": "6f9227303d484663bc8a289b774410dd87939fb739c570d38264244468659cc7", "ref_doc_id": "e2ca1341c20ea9cb5f854bea7e836b867dbcf5df"}, "dfe2b914-9e18-422b-8cfa-a86855f19b04": {"doc_hash": "b45d9f31a2b9e261974162f0fe956eab71c09975133fd1d27406ef751a12aa83", "ref_doc_id": "86ad20318217bfb7e66e1c40738eddad04e75ab6"}, "c7b02284-a446-47b4-be28-811cbe3504c5": {"doc_hash": "e21680c9cc825d4feeb2fcddfa6b31a539be0a54db9be303bee6652fc88bb5fb", "ref_doc_id": "13edba9825e5f0b434d6eb6d10d9a2549f9398a0"}, "bc07890a-3a50-450f-b596-50a0e01466e4": {"doc_hash": "65dd7d599e86b4644e7db89a04f829c0230cb963f796e842254ece148856147b", "ref_doc_id": "13edba9825e5f0b434d6eb6d10d9a2549f9398a0"}, "3d2345f3-2d36-4a97-aebb-8490094b36d5": {"doc_hash": "edece69da612527f2e6a2a9602b828872add298ac738bd256bbda4496eb9f334", "ref_doc_id": "909bd63cbecdc122c31000fcd3507b4a694cd472"}, "0f05c84b-3e9a-45bb-9018-a4a33ba6586c": {"doc_hash": "867fb82f3cda203c9868e940ca9d2312844bf8fa1e37a99a72040565770f4b8f", "ref_doc_id": "909bd63cbecdc122c31000fcd3507b4a694cd472"}, "51cd63d2-c243-490e-85a7-1e60d0709b2a": {"doc_hash": "211f6dbbaa81b3939fc90f2412b8a845860cc3c8dbeca08b90a5d0f654bf6a07", "ref_doc_id": "909bd63cbecdc122c31000fcd3507b4a694cd472"}, "acac4f0a-6448-452a-af0b-61b3eed20610": {"doc_hash": "5b071666019f13061126581ab80a06968cb83c087fa4d52b5fb2e26d054752a8", "ref_doc_id": "bdd297247ca7c547115fe4685765adaf58a951e0"}, "14b14eb9-fe72-405d-920e-75da033b5697": {"doc_hash": "0b83fb4b18e5a8cc1e16a612369044dd86677d9521f275ad09951dcfe74b73c1", "ref_doc_id": "bdd297247ca7c547115fe4685765adaf58a951e0"}, "fa5fb075-0582-4265-9863-95c3a3aff23e": {"doc_hash": "4caa93c9a0860446514527388533f6755aef070e4f8216bc3fd8affdc4d9e08a", "ref_doc_id": "bdd297247ca7c547115fe4685765adaf58a951e0"}, "191adc4a-aff3-4750-8e1d-fff87993f89e": {"doc_hash": "8453394a9cb5d3b3819a5d124d3e66cacfad4ab81cb520ef02b386039ee7c804", "ref_doc_id": "bdd297247ca7c547115fe4685765adaf58a951e0"}, "732ea6af-806d-469b-a6a2-978944f00660": {"doc_hash": "5437f193a586cfc11e940596827cc48fbdc93f37a4dade9442fb01f85f168c70", "ref_doc_id": "bdd297247ca7c547115fe4685765adaf58a951e0"}, "74c67aae-9ddb-4d64-863f-4e016eae99ae": {"doc_hash": "da6a1890a8b7e875a6db4cbdfa35036053c6867f93edf9ae66b239f34a0c5d40", "ref_doc_id": "bdd297247ca7c547115fe4685765adaf58a951e0"}, "5edf6218-b0d4-46a4-a235-b7fa63bc78b4": {"doc_hash": "3bf963b15479c74d65dcd4bdf50afcd55b0f8a8d25eb7d47eb580271083002d7", "ref_doc_id": "bdd297247ca7c547115fe4685765adaf58a951e0"}, "ea429702-f75f-4ac9-8e05-94b82dde72a3": {"doc_hash": "d53d76fd90775ce671202874e1ef71e26356577a3ca36e059f34feb2698eefd2", "ref_doc_id": "bdd297247ca7c547115fe4685765adaf58a951e0"}, "a14d302a-5326-4c19-b8eb-45b91cf2ed22": {"doc_hash": "711a9cdb08faf2c656a8a604446d194cad649b6cefe784691e7db59dc8d26b8b", "ref_doc_id": "bdd297247ca7c547115fe4685765adaf58a951e0"}, "38975513-7900-4b99-a0df-fb4423b7e5cb": {"doc_hash": "ada4485a044c02de9958a868ff3c585cc6fce7e573e841ef7a67749df8a4aeba", "ref_doc_id": "bdd297247ca7c547115fe4685765adaf58a951e0"}, "4b56411a-4ce7-4fa2-ab97-b7222cd50a84": {"doc_hash": "e4e7b3dc0a7fd8982fc0f34e54c68cc005f831301f33c2596c67669af65b0ee2", "ref_doc_id": "6ea498b6e459e0faaac7f8e693b37454c92586e6"}, "f99b825f-cdb8-4028-b5e5-1881fea12873": {"doc_hash": "fe8cf1c4aafacfec616c44627169621ea97a84182a35a700b7ff07a90b76c050", "ref_doc_id": "e429f20687887c64d4e376a37ec4bccf4b0df019"}, "953240f7-f207-4bc6-90b3-a73696c75f62": {"doc_hash": "52ba94cd243b69d483acbeae94bcf1a27a382fb5fa96047b073627b13d7047fa", "ref_doc_id": "dd83ec26522a6ed986440ced4000688c6d2830aa"}, "5549255e-e7de-4f3f-97ea-ed5a311bab81": {"doc_hash": "8de7ae21ef452bbd2d8b244d7895c8592cef26f6e47f340a95b1d78fb75e7d6e", "ref_doc_id": "13c0ddb27ed5c3c0175599a769632ae5a8bd4ec9"}, "779e272f-e34a-4904-859d-eb1dd2e0b24c": {"doc_hash": "9bc218eb7ff8432b6646e7732ca9be6d8c232ee812ab0761e2f775c379b252ea", "ref_doc_id": "5db6055c8bd5228db9762934c61003dbd1125b1a"}, "c10a940e-e5cf-42ff-a204-ed16dc3f4377": {"doc_hash": "33e826784328cae1f6e2de31b4ec48a1067a6a39aa5532dd169281d64d8dbb82", "ref_doc_id": "5db6055c8bd5228db9762934c61003dbd1125b1a"}, "a48db3e7-da77-4111-94b4-55ecc4a2c986": {"doc_hash": "a32bd2553e64c13a76c7fb3a6b372d88cf430ee8869dae88005bdd237a4b3823", "ref_doc_id": "a39ee3df8e1c7a73eb305a5213b293a9c53bf468"}, "b8cc6672-3615-4635-972b-6cfe971ea76e": {"doc_hash": "bd7dd506a38fba8898a5c2dbd98ef51dca8d39becd319da4f28c1357955979dc", "ref_doc_id": "a39ee3df8e1c7a73eb305a5213b293a9c53bf468"}, "c6eadab4-5716-410e-8c95-b877c1f3a0b8": {"doc_hash": "b8b555f2ac16fea1f40f6dcc0c8d38c8334a7285b0b7ab939f2f5efe7272b961", "ref_doc_id": "0d1f5c86014c82126c40bc2aac449407dd1480cb"}, "8cca72b8-62ad-42d7-bf6a-1e3f92288bc2": {"doc_hash": "1df0b76444d29728b2292a7338e082aceb87ffd4a7478237ec1bc7cf86effdbe", "ref_doc_id": "d3a88cf206b46f53b0e6321c62306b0d818555ca"}, "df9a3d05-ba11-4c3d-a6dc-55c765d17010": {"doc_hash": "53fd318470dfb186a52483673b9b615dcc38ea52ce967b422a184256d415ba11", "ref_doc_id": "29f97cf4f9b01220262d8e219f24b526d09f85bd"}, "4ff793da-73bd-4ca9-92fa-a57557abf2ab": {"doc_hash": "be26199c12b0c86f45ba1ed734bd1f1c5fdd4067e9ccc2804cddb5cb573a0ce6", "ref_doc_id": "1d96d9eefe184039b50daf7aeafa77e222b1ec3a"}, "7d1e41e9-6f72-4ef8-907f-da8f3f75e5ee": {"doc_hash": "ce8665b7ffc7a25815dc4edab95f794ae69f486ed75e126c5a8df3792b6f1f5b", "ref_doc_id": "1d96d9eefe184039b50daf7aeafa77e222b1ec3a"}, "08611e4b-a323-4ab7-9b1f-58238d0bf440": {"doc_hash": "78c65b198341d644d5d04c0425bd6c662e351f63f8636e4a9927fae0c6df3cac", "ref_doc_id": "a71a2036432cf3478d17a508356356160cb0a1e5"}, "d446911b-a426-44cf-a0fa-17f6d44bec51": {"doc_hash": "799fa7557d2739beef6c4a6949887e8ca3251aa3e9b94213d9c831c171bbfcc1", "ref_doc_id": "a71a2036432cf3478d17a508356356160cb0a1e5"}, "9df8dfb7-a2e8-4d33-bbb2-0e12af70e2a7": {"doc_hash": "82368d6952f1621070306c7e644dbc8cacc3fd81e610843d2dd5c55ebc0b7d43", "ref_doc_id": "a71a2036432cf3478d17a508356356160cb0a1e5"}, "56c86989-cf36-480d-a410-0a20acaaa5f8": {"doc_hash": "818b5be6891983f7049815d035417b2cdda09fbae98d36a98a6f52c9fb8463a8", "ref_doc_id": "a71a2036432cf3478d17a508356356160cb0a1e5"}, "63fbccd9-5022-4c02-a295-4847c3540339": {"doc_hash": "d2993186db52dfa412de7c80f9a18aaebaafa23815f90a713d5c6cf23bd6ca05", "ref_doc_id": "8e0987329cf58537518bc026a28ffa98d73becf3"}, "150ac9b8-8ad3-4b79-a2e0-cb385cd755e5": {"doc_hash": "897375dd9a7b89ffb8317a234d57bf169a38650a2cb65412578933b8b3763d28", "ref_doc_id": "d06377c27833acafc0095782f7797cc65f9797fb"}, "22c9e9cf-68f0-4eb1-b60a-85e4f832278c": {"doc_hash": "9061129a175058ed058610dd1a2a9f27d01e036d630dee78ab0ce8bbca944461", "ref_doc_id": "13e69dae2f8596b73e57f1a576218d3b37dd6a70"}, "d92a7ad8-be9b-4883-aaf9-edcd0167b00c": {"doc_hash": "40d36e5835e763ade60ea3b3dd391dff935361a85ef43232e625ebcebfcd74cf", "ref_doc_id": "4ab73fcb20b09856d03bf626e32106ee32077fa5"}, "fa9965ff-45aa-4aab-abc9-723f219792f2": {"doc_hash": "302d3dbb78b9049aba54f9c00d99d92e02959cdacbd7b9026eec85df38c5b323", "ref_doc_id": "8518cfd1f76784a901468ff5c2f06835c6139157"}, "5002195e-c7ac-49b2-a1be-b1bb795eab31": {"doc_hash": "eb1ba815ee1080e1ff78fbd9f253c9d93d4bc05b23d78e897dd4834a80b41bfb", "ref_doc_id": "5bc19aea672cc6bfa27b66cf7c30c88caf6bb381"}, "f2320b23-8eb1-4aa1-ada9-c07acf33f349": {"doc_hash": "a079c187259a8dde6f01a60e63487b2ea3ca38bcd6112f313d5aff19a655b057", "ref_doc_id": "15f8cd140ad774cb2642b47b16c296ac46df7b93"}, "eb364c4a-e1a5-40f4-b36f-3a989fe71e39": {"doc_hash": "271a2fb2ed9e2a8b721407547d4102b66d75bbc1dc3d9dc67044fe2002159d5d", "ref_doc_id": "591844078c04a37d3ba3d7f3d88debd74a5805f3"}, "18059084-82e5-48b6-bd0c-34472e162218": {"doc_hash": "9596de4985c8c711dbb4b1e29a5244b0974a967855c1a751b854a99e12169b81", "ref_doc_id": "b9468f4d72616c425e15082ef9ebe2f91148480e"}, "8c0701a1-f866-4b1c-802d-48355bb592e4": {"doc_hash": "d9150d3fddb4d85323fac194bcffc1e4c6ebaa62aaffa1306b7599d9fac81f01", "ref_doc_id": "0a9253dc121628d5972511eb49970e3f10396287"}, "7875326d-16d2-44a1-9d3d-6eab5ae27a20": {"doc_hash": "52aae7a53d9907afd437650f321f4904d0bec3116b0a13b252d92e82c2bcf3bb", "ref_doc_id": "79a7aa39830e71c7be7f4ca3e2e226c9a8c1fb9f"}, "883b2e93-7933-4703-afae-5f2a9563a751": {"doc_hash": "c188001341114735f9b229d368e5d3467b3868acd56b830a4106bad3d6e15acf", "ref_doc_id": "79a7aa39830e71c7be7f4ca3e2e226c9a8c1fb9f"}, "0457c0cd-809d-4c59-8803-0fb4ae746b01": {"doc_hash": "359a536620b530e24034c4b6aa74665a352ca8326673197d4fa9ec6e7d374438", "ref_doc_id": "79a7aa39830e71c7be7f4ca3e2e226c9a8c1fb9f"}, "cd1a9c1a-6b0a-4927-b434-1ad7cfb97541": {"doc_hash": "77f5b0b06db7ed6906b68f00dd5eb3d5aadd146ae93b3d7fd281a81f53344548", "ref_doc_id": "376b2dcdf8a1d40c202f191c801b9a847441e216"}, "d289cf4a-1ca2-4782-bd38-99db14076d4e": {"doc_hash": "f62c3e4130b4acf2f59df79a0dbe9944e73dd175a107f6ef51a243161c5e37fe", "ref_doc_id": "376b2dcdf8a1d40c202f191c801b9a847441e216"}, "a5304b49-d3db-448d-8b18-57ba2a0c3a48": {"doc_hash": "a40316ba25bbcbd035cd8c34d47bf97e1ea7ba1116ce0ed673844f84d767b72c", "ref_doc_id": "376b2dcdf8a1d40c202f191c801b9a847441e216"}, "b6f6a248-7177-43d5-9a93-96a1a0dfb638": {"doc_hash": "1c3946038eb7f437beab0021a55f0e7eb4d951c8477f51755637a45d3027b0b1", "ref_doc_id": "376b2dcdf8a1d40c202f191c801b9a847441e216"}, "6af1b234-a0d3-4dac-8b99-64f8fac7bb80": {"doc_hash": "b81672f95f55869b574c9a4e489818743ee7d3b5facb56496ba8f3beb1dffe96", "ref_doc_id": "376b2dcdf8a1d40c202f191c801b9a847441e216"}, "fa1f2600-69fa-47d9-a0a0-4f9067168c73": {"doc_hash": "3f13aa90b3484fbd50fdbde4767f12f1480b4052566fef294f446135e036ee3c", "ref_doc_id": "324f96d84022e9ecba771c6d7c5ec48dab86f08b"}, "ac80fc3d-4ed7-44c2-9ea5-1c77acc0bba4": {"doc_hash": "0f389a393b5e91d9b2d66062e9e63a54bafbe339157f0553ba5a235deb980afe", "ref_doc_id": "324f96d84022e9ecba771c6d7c5ec48dab86f08b"}, "9fde9241-0d2a-41f3-ba45-61fd6982d43e": {"doc_hash": "994ebeeb35750d971c0bd31ecc3f09e527cf43df6cf96fba5e42b2700cd5c26c", "ref_doc_id": "324f96d84022e9ecba771c6d7c5ec48dab86f08b"}, "1aa0ca54-10f9-4fe7-af50-3c076e027a4b": {"doc_hash": "d4dec7adb72b98f89ef70e91ca52c1e3fc403d7e401bc2b0bfcfb063335890a2", "ref_doc_id": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853"}, "a1f95481-ba9f-4ddd-8c93-4eef611cf674": {"doc_hash": "4ca66d3f8794e52c5f16ec85b43c301d82f3e85de6de041e5a7d8d5f780579f7", "ref_doc_id": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853"}, "17126fb4-386c-4426-8fb3-db85edf4773c": {"doc_hash": "cf010ac370f73d2469a40978520392afdcc62cc265017e84d195f97311d9296a", "ref_doc_id": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853"}, "cf217b6d-3ce2-4aad-94fb-85aeababda78": {"doc_hash": "fbf31ab3151fa7b737b878cbf560be81b75dbadf644d45601f2363563b085c6d", "ref_doc_id": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853"}, "0aad59c5-2320-45c5-b4a6-beb03b1271d9": {"doc_hash": "daed9bd211358ea34630ae6fdc5e9cf7d2219e53509c83a2c964571a34fdad66", "ref_doc_id": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853"}, "6adda8b7-050a-45c3-a228-75214ba66bb5": {"doc_hash": "5ab211c2377dfd36e603255fa9e5d692d03a60b8785c93995de707c28175eb94", "ref_doc_id": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853"}, "35fe1c58-8cee-492b-9b30-df0362960a4f": {"doc_hash": "e2f752e3632c7f84ab5f6adac94a07eae5ad26a605b795c48d8a29815ad9dae5", "ref_doc_id": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853"}, "a38dd0b2-341c-41e5-b251-e509ef9ec5ed": {"doc_hash": "31a1eb7b778dc089ba451d01793840447e9318daff3e6b0fa6ef84aa32aba9cb", "ref_doc_id": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853"}, "ae42c0a4-3a98-4abd-bf6e-6ed480fdae69": {"doc_hash": "ae9e2daf46384737d4bdfeb8b4e06bc8acb6c7f1e2e985f29e4dc08f3915357b", "ref_doc_id": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853"}, "8a638264-6ed5-4794-b05d-a5c01537eb85": {"doc_hash": "8975e81406b6bd023ad4aa0f99a3f92d747405a1301ee047269f99112d1d29b0", "ref_doc_id": "005cc71ba7456739c278c9cfac95e4dcfa205bca"}, "539b56d4-99a3-4e31-867d-9725bc972783": {"doc_hash": "894a61a5d10da0075ca73e55a52ce33115847f9ed0bc39c15a3d00b4b6ba48b5", "ref_doc_id": "446d587e2f2b75067338c233622229db4bf9567f"}, "ae4396a5-9295-4291-a0ec-c80ce6eaceb9": {"doc_hash": "efae97e8309b86ea3fbc86f236f9d4913f6aecbed25e14dbbd9c03be146da390", "ref_doc_id": "446d587e2f2b75067338c233622229db4bf9567f"}, "bd3ed8b3-9531-417f-9b8d-00916d4a97ef": {"doc_hash": "e534ec7fb70372f0f84c948ddb3f5d1bb61b39104c4ffc60a4ed3f454d013ca5", "ref_doc_id": "446d587e2f2b75067338c233622229db4bf9567f"}, "0cc71f5a-6ba8-4a30-b629-0e9f5cb3351a": {"doc_hash": "80987604f1848488ae41e94f627c3e564aafee523f1c812fedd8d4bf328e1fdd", "ref_doc_id": "446d587e2f2b75067338c233622229db4bf9567f"}, "31cd10da-6d6c-4e5d-a95f-0ef238531512": {"doc_hash": "03d1368902220a26cecb19e4f603ada84fc230f84d8400216643a09b59655008", "ref_doc_id": "5ce30e894eda7c8062d3e25699c98c5edecfdcb6"}, "da1478ff-4f8d-4ee7-becd-40b8d6dbaab1": {"doc_hash": "d8e7795840b442f217c88231f73bc38d61bb5caf36117324e9d03aa5c38852e8", "ref_doc_id": "d2a26a5d0953bc9ff20458bee861510b4ccc24b8"}, "5337bb93-2847-46ba-89d7-aed1760b70a6": {"doc_hash": "ec88b04567a558441de5ad003dc5c3de2cfc97fa3e7a2165b7ead6afd48fa2a2", "ref_doc_id": "d2a26a5d0953bc9ff20458bee861510b4ccc24b8"}, "de481e5e-6a05-47d1-b53c-e14abed079e7": {"doc_hash": "aaff2cc27ae19d74a6a4f996828a608d13b2fef10a5d8a556b85f73444f664c3", "ref_doc_id": "d2a26a5d0953bc9ff20458bee861510b4ccc24b8"}, "b62469b3-e58f-476e-b6c1-2b92b804c11d": {"doc_hash": "399ff0294b82e209894653d35ce334eb4f6f7575cd41523b2624c6e0e5c7ae6e", "ref_doc_id": "d2a26a5d0953bc9ff20458bee861510b4ccc24b8"}, "9a393ceb-c7ce-49df-ad48-d6a7c27a5a34": {"doc_hash": "5b124ee5dce7c5902672de502c81cefbd871704bbc94c4a493c50cbb92f6b453", "ref_doc_id": "1266a2a5da0b60940fc25f7fef24b29033d87c27"}, "da71588b-e2ca-4e36-8371-fa375bc9e405": {"doc_hash": "634551230900c4493c9f8c65d77ec4327a3e2071e253c170a2c17c42515b7346", "ref_doc_id": "1266a2a5da0b60940fc25f7fef24b29033d87c27"}, "05bdf6d0-3fbf-40e2-abf9-cce1be51e0ec": {"doc_hash": "324ddecef5df3fa35a5cbe95607d84c7fb1013517bd2f3d456cb4007d0ba856c", "ref_doc_id": "1266a2a5da0b60940fc25f7fef24b29033d87c27"}, "bc9da2ca-294f-486c-9982-c1b43e00a928": {"doc_hash": "d337aa258145d65c3db5a68204bb11c5379d2e6c5bba1bc7ad7c22221f32b5aa", "ref_doc_id": "5b7341d7ff661baa4f1128ff3a183c73301bb67c"}, "ad09c87e-505b-4a5a-854f-7c7147786a92": {"doc_hash": "2d4493a2673da6cbe919c934f2b1f4420ea6bd708faf238204992b232b5df05d", "ref_doc_id": "e72cf32b5d70fef836a13b62b9c3e45b573ff8c2"}, "a30eec9b-e6c7-4875-99e4-9ea62b69b7af": {"doc_hash": "57640e9ddc0952798268eace59edb5447efebdea09b285fbea42000177ffbc6a", "ref_doc_id": "9c019c16a40827d306dbf598780a0ae12b1ae666"}, "a1c6cecf-6503-4661-b83b-90ba49452be0": {"doc_hash": "63a256406d4b1366426c2a0bace4ab8efd91c90c0b4fa1cad5690d635228dff9", "ref_doc_id": "9f019c104f22fc94c596b644cee8190c0e29463b"}, "4f7b3d62-da0d-427f-a7f6-5084c662261a": {"doc_hash": "f5f9336ac7fbe6cd1cd99e7fc8a048a992c9e2c40fff5bbd70d76bbe74ffb1b5", "ref_doc_id": "a53cf3fdf072a51064754e415f84894a4927e334"}, "c059ad8d-d8f4-40af-9ce5-ec0155682764": {"doc_hash": "ddefc8234b6522d64500193111082ca2b3268116937a03741ad509aa5f39a5a9", "ref_doc_id": "a53cf3fdf072a51064754e415f84894a4927e334"}, "314266b8-15ed-401a-aaba-cfd7fd8e2176": {"doc_hash": "b1e22a1c044251eaf35286b83da220abe8ed69bd5bb631d5e57e639d26661593", "ref_doc_id": "a53cf3fdf072a51064754e415f84894a4927e334"}, "cf381bfa-3c0a-489c-9b9f-ea290bc26632": {"doc_hash": "882fd23684ddbb5f1f9ee5b0ab27f778c198a8ac6a96b022991401915c3c822e", "ref_doc_id": "44386bbf7e260a70bae158b25f9144aa8615cd0d"}, "e4e7fabf-cd72-4ab5-b12e-ff22cb21021f": {"doc_hash": "39aa7b8684489894740045be3ce193d3fc6a8fc918a5995b44eb64bd99df9c9a", "ref_doc_id": "44386bbf7e260a70bae158b25f9144aa8615cd0d"}, "7aa95aeb-0940-4d49-86b0-b8b103407b1a": {"doc_hash": "5d0985b3ce71206de6fb2b09bf4c4e0eb229a8d6d37cf1e3ac1631933add953d", "ref_doc_id": "44386bbf7e260a70bae158b25f9144aa8615cd0d"}, "aa28339a-4aa7-4f62-86c5-29c1c4181b00": {"doc_hash": "addbafef22233488835ecdf13b93a87fe5eac67144394f97de4319af02207cee", "ref_doc_id": "44386bbf7e260a70bae158b25f9144aa8615cd0d"}, "79d64c95-8066-4dbf-9142-fffbe169ca24": {"doc_hash": "dd1fff0e7ee5d720df1ce14de6214dc20e847374b45a84867ffd3094b1bbcfd5", "ref_doc_id": "44386bbf7e260a70bae158b25f9144aa8615cd0d"}, "37827c02-d662-4807-94dd-5521bf292480": {"doc_hash": "adfe07668fed6e31d02a5b373cd0e09487bfe19f04753c8950282e7ad3f229c1", "ref_doc_id": "44386bbf7e260a70bae158b25f9144aa8615cd0d"}, "17d9c497-1c95-4964-9bbd-cd60cc7c49d8": {"doc_hash": "3807f19b2f51194645b0d85ae3c3e221e0abc85462538ca77b7a363d42e696eb", "ref_doc_id": "9ca98193fe2d281925d030ad540cca94df6e0d29"}, "71e2de1d-46fd-4932-bf93-a764081d0f02": {"doc_hash": "ace2d91cfc4e35be9141b1c63118e586ada8cec3d2bc1b610751ec4b67f91600", "ref_doc_id": "9ca98193fe2d281925d030ad540cca94df6e0d29"}, "073ae137-b55c-478e-8ae7-9bac2d5970cd": {"doc_hash": "27ca40506db1f4eb6198acf7cb2f5db7d6de30a9827c5dc2195ee64ff37f293f", "ref_doc_id": "982fd276bd9e7b9db20d2813160b9e53260604bf"}, "833d62f8-0787-4bbe-b769-41e61b4a9ecf": {"doc_hash": "8224cadb41b96e44395225394fa71c611b4e38ad55cb083132dfba861305d1d3", "ref_doc_id": "982fd276bd9e7b9db20d2813160b9e53260604bf"}, "cadf7575-09ab-4dc4-8600-0c4d39981039": {"doc_hash": "0b03b05e8298b4c859060f0fb9986072e6151aba54458e6ee7547bd809186e94", "ref_doc_id": "20be0b89273b007bb12c397f0a7ff3976fae0378"}, "a645b406-6994-4b1d-a7c2-8bdecfad39f1": {"doc_hash": "14e108c1e27b37c595e31e9b3017d5e56d4d8510982f8a041cf4dde915e83e68", "ref_doc_id": "c9a1d8aa0857ba1ec03eb203c6a86facd038ff32"}, "d80f6669-1dd2-497b-ae66-23c3c00d42a6": {"doc_hash": "0ffb0309864cc484df6d2f61572449936677220457d46499eed1f15db8d067c6", "ref_doc_id": "eb9aec2cf1be4db88d7461e976bd55bbb2dc3c13"}, "3286d537-476a-495c-b1ab-e43f6140de74": {"doc_hash": "062a2726fae70f43365cfacda9fb77d71c366909bc1ba88b4e472b6f53a2677d", "ref_doc_id": "eb9aec2cf1be4db88d7461e976bd55bbb2dc3c13"}, "e474bc31-d3c1-4ef5-b243-da9de180741f": {"doc_hash": "75d9a610a66f7cedb6677ba7fe77f10046fbb73844c194d949717a25611ecd86", "ref_doc_id": "5a1a8541e63ec2351d35af239d793c8515fd6f18"}, "c1a82d61-7ce4-4385-8a66-dc478528dbda": {"doc_hash": "b5a245bfde21b0d1f7bde112bcb92918c2a22ab7eb3741a718f43fccb413f0b5", "ref_doc_id": "c5d7a6b8d8f879b7dc32bdc4bbf11bc13d5768f8"}, "65d90634-15cf-4b4c-ac12-9f3061e0fb1d": {"doc_hash": "019acdebf9297501f7e39f344380a8da20d1296994d01abee0fc036f294ba5bf", "ref_doc_id": "31a1d1d54ce3f810b57221bd364569cb5e5946d8"}, "f0ffaf41-8ff6-484f-819b-4500fa27284d": {"doc_hash": "5506d9b5a7e59e90953c9b6cd63ee5a42427b359f2b43ca60786d4c2cbf82398", "ref_doc_id": "1483727ba2bd53e2b455a3eba6bba299978843f9"}, "9e761934-e34e-400c-9d14-2df5180dd58d": {"doc_hash": "d8de4fc36660711cc928347609186b8e38af43a4380683983d24d0244bbd4138", "ref_doc_id": "1483727ba2bd53e2b455a3eba6bba299978843f9"}, "41c60496-ef67-4d4d-9fa6-5fd4dd39581a": {"doc_hash": "346a41e1961432dcfc71779104b6121139b5d3a5c8362c5ce6b673d45cb980cf", "ref_doc_id": "b5544972b74efdf701adc6d8a7e4f76547e8a904"}, "d29cb4d6-96eb-4975-8d00-7c04307f437f": {"doc_hash": "9d4ba0d41af48ddfeb2fba4b3dfac4d52eabcb9b0652810ce1fd55ce27c49263", "ref_doc_id": "b5544972b74efdf701adc6d8a7e4f76547e8a904"}, "b9355f0c-181a-49a8-8cb1-da224d125cdf": {"doc_hash": "238fea01ba93118c7fcaab4412c8812b4674d5e6f81b848a3512513f539ec547", "ref_doc_id": "677f28359a2fd7c95a49afdd42c1952335245f52"}, "b5327000-e158-4f93-83bd-1cbf816cac40": {"doc_hash": "a49c010f944d0c44510da923d39c7881d0d2f957f0a2fcd19f988196cfc3bc79", "ref_doc_id": "677f28359a2fd7c95a49afdd42c1952335245f52"}, "a8cb5761-78a3-4779-873d-d9eea6302ff0": {"doc_hash": "987a421cd967f3e15ecc7e5be246c4d9b565441d7359b561c6bcddbc235aa8bd", "ref_doc_id": "be4324cda7377c447b675c8ff3cf662068474790"}, "c542380a-3987-425c-a1cf-e2c9cae8e072": {"doc_hash": "afaa6d23bb48c26b54e0095db2ed50d2e9302ebfc79b2949ff558b5a83a191c3", "ref_doc_id": "be4324cda7377c447b675c8ff3cf662068474790"}, "d3023ba3-eaab-4424-8ffb-e25903de83ca": {"doc_hash": "84f507b272490bfac1f2506d10d916c7b6011a5b89ac209410c703272b00c3a0", "ref_doc_id": "be4324cda7377c447b675c8ff3cf662068474790"}, "b8c16a29-f3be-4956-ae9d-c0d282344293": {"doc_hash": "a4a583b0c723036239ecda8177353b2c3134a632c9b88cee35948ee0412ab7dc", "ref_doc_id": "be4324cda7377c447b675c8ff3cf662068474790"}, "6a9c59c7-d91a-4fee-9e38-8487a72383ee": {"doc_hash": "f88d93630ad54f6f5aa9c1d5e999a73c686b6f874a2be840de61caf97db6f9f0", "ref_doc_id": "be4324cda7377c447b675c8ff3cf662068474790"}, "7edc6125-3324-49b4-b26e-14f82691a5ab": {"doc_hash": "cf243b893be11ade074a7559e0c9a061c884539511d80b9752ae82fd2c4a7e77", "ref_doc_id": "be4324cda7377c447b675c8ff3cf662068474790"}, "0645608d-7fd3-4c2c-b128-b0e769704df2": {"doc_hash": "1dc118ca0c7eb2bf82190ddd701a8604ca740bb2bae1d32804ad47c06ef6fe3f", "ref_doc_id": "b662b9e24236821fb28deb121c7aa594dd24a17f"}, "8dc6c554-2585-4dce-8ebc-ea181075b972": {"doc_hash": "291521e2b73389ab29cf229620bb9e948f55277769026e36e85c4efae5e85476", "ref_doc_id": "b662b9e24236821fb28deb121c7aa594dd24a17f"}, "e33f14c3-7de4-4f9d-b59f-48891656acfe": {"doc_hash": "8855c26a7daccc43d5cd0a33ab2c3f88d3f9fedc25a20e075203987a7426ee79", "ref_doc_id": "ff6620c7c48cdcbbc3a38dae9349381f29fb2707"}, "df7f38b6-633a-4b0c-ac3f-a9f612767ed3": {"doc_hash": "32aa3f6d0169d5e858966a8a95ac0e3ef69fb0c710210c78d87ca2b3fe6cd75a", "ref_doc_id": "ff6620c7c48cdcbbc3a38dae9349381f29fb2707"}, "47aca423-4c34-4a56-8e93-feb8d60229d1": {"doc_hash": "b9bb0a6cdefaf5b98598a5bf75892c9abe9a9c50be7ef3b63918a1062abb4336", "ref_doc_id": "440e043f3280a01e56f48bf2df9ce8f088163c1c"}, "4e148d4d-d81a-4291-8de8-3547de8eeeb4": {"doc_hash": "4c9681f48f304ae41e51d4d6821d846df9ff3606b12fe296736c2a49f4c014bd", "ref_doc_id": "440e043f3280a01e56f48bf2df9ce8f088163c1c"}, "a812ef1c-22c2-4d57-a4b4-1f3d0368fe4d": {"doc_hash": "e18fe543ae1a540a340ecb451f0ca6072f42a0315f1682e72e3254ffe5c7ed5e", "ref_doc_id": "8edab9f0301edf7764cc4ce9145977a5f7ad118b"}, "fcd2994f-6434-4745-b20c-ceb196838d0f": {"doc_hash": "c43b28a0513d4b89b9d572ba9e259ca2f39082e04d003bdca84eec06a8492216", "ref_doc_id": "fe01a8a0f4fb57f38afb9213e68df66a4415a0fd"}, "455f408b-8e76-4fc9-b2a9-e607cfbeabe5": {"doc_hash": "6e2e5097a248ab57bfe3178b7901ce559ea54a47d2d295e2fe70827745ef01bc", "ref_doc_id": "f027f24c299c94df415c9b0046a69dbda7b512ff"}, "1b9e4fb1-0407-4ef8-a9a8-0919cf91bbe4": {"doc_hash": "ce1c0fe6dfc06b056f886677865ded0955a243e916fdc97bbf010dafa58e339d", "ref_doc_id": "62dccc9f85f546c1ea67355de28a95fdd4fc8a77"}, "712f17d6-e5b6-4093-8831-b2a2ade4c6db": {"doc_hash": "36c4f8b96973fc3f0a70e87969b6b81dae1e42d0a664adb9e3c2ea7fc1ee269a", "ref_doc_id": "4d3c6e9f185ef43ba9cdbfb48fa54ec7295746b5"}, "1ceb8d6c-6c7c-4fff-a56f-b4daa12b1e5b": {"doc_hash": "e1af8662d0413bd73229c21265e8092982d9244c0ed48c116acc1ef65ba3c4af", "ref_doc_id": "f406dc10ba4157fa95613d1cf4d93c34f8275438"}, "02d208f3-1849-4e29-8e5a-7d1d18dd9e24": {"doc_hash": "1e57e377888f4ec0238ea30934335d4e5b6c0ccde232583362d7744a80baa0be", "ref_doc_id": "6ee1313c5949b0a55dd66de4f383cb05662e4488"}, "a2b0e393-ad31-48b7-b357-ffed60a0ad58": {"doc_hash": "86c0a863483f45ee047bf8b7eeb1417e6235fa481cba89ce2d0ba7d5e704d4e8", "ref_doc_id": "6ee1313c5949b0a55dd66de4f383cb05662e4488"}, "bcffecae-9a4c-4ba4-b48f-cdd1d77fe0be": {"doc_hash": "2aeecc1afd2eb1f16f2455fb7980314f8161c1f7c83442065bd3cb4074c8a8b1", "ref_doc_id": "6ee1313c5949b0a55dd66de4f383cb05662e4488"}, "090e4302-f60c-400d-b839-3116a242830e": {"doc_hash": "4e80bfd84d5ccd69aeb276745474dd2133e4db0a9f1987453cb5b48aa6ad27a4", "ref_doc_id": "6529d9f84d9b6a9242c8219794abe434c572f18e"}, "b164050c-55c2-4ad3-864a-fe528db9a086": {"doc_hash": "bda8d4f7b26ef7f9d55ab923fe2e1807731de451641f09f76f0b85ae024a379c", "ref_doc_id": "26292db1ec5b48c49ed995f49aa5f9f1c98432a1"}, "cdb4803e-789e-48e3-9be6-e653fc8c5e03": {"doc_hash": "cb1f44e3d1692065027a1b09e79221356389b5e0f15f7593c22c8ebf54fb1093", "ref_doc_id": "fc797cb72efeb0ca1b9a94e09e09149ac87dbc95"}, "64a6c0f5-2b3b-4e6b-af52-157fecc78afb": {"doc_hash": "90839ba98c37431d540390efaff7b3c83dfb5487e3fd26d640341f1d7a89e19c", "ref_doc_id": "93f820e7b654eef754c17f738c882465b7a53a7b"}, "b5f858b5-91fa-48d6-ac51-d1bb62562a6e": {"doc_hash": "2c7bdb30c78d274978a4a3e2ca31bf17c9ba7802e03a295df98cd87f30784670", "ref_doc_id": "b6f7547f3b71b9d63ce3be5feb3ac987d110679a"}, "00f332d4-aa84-4a1c-8d8e-26166ef9edcf": {"doc_hash": "9803a968a64018e9e29cd075d2fa668166d90500c7ede0fc19e4219e62f8c052", "ref_doc_id": "fcafa4124add3d8927846deee874f43d3b99bbf7"}, "98010a80-c7f4-4e33-92d8-af7b3764f6b8": {"doc_hash": "9cfcebd4ea6df8e56d66c9586d09fc04e0c9ff9131b17bb0676c90226d863194", "ref_doc_id": "272c6a7a4ec979b65763c3ee27028c3adc2562f0"}, "a600ca5e-6eb4-44ad-8113-912bbb03d499": {"doc_hash": "d7ad36f90df05fc7a3980c02782b576072b0c78f29ced00d17bd1f4ec3c8f9cf", "ref_doc_id": "272c6a7a4ec979b65763c3ee27028c3adc2562f0"}, "e20ff1be-c08d-44e7-ba4d-745339944ede": {"doc_hash": "08f5f587c56509f499c484b5ad46442195423b72f805873ac87bb7f7083969bd", "ref_doc_id": "240bdd40db78063f2558938a25e571d3a99da90d"}, "d717de9b-aed6-4414-9fa2-98ccf28b19f6": {"doc_hash": "eae19fdedd83583dc04d27a3597e5fca2d6fdab6fb799054640b77cf9fb06ec7", "ref_doc_id": "b37137ea7e4959bde2232209d70fe7448a991a5f"}, "6466bf06-da5d-43c6-9f12-cfb99967d25f": {"doc_hash": "606aa3ae9862f2f5932ade62e522f5d92254b3ff1837c468cd9a3a1b5ceaec16", "ref_doc_id": "02072f7ef401ce69eed24f3276b2af5039bb674f"}, "8acaeb6a-e209-4f34-9c60-6f21fe2f552a": {"doc_hash": "dce012f8076ccc73303b7fb85bc4f2b7438cb59b7d90364e166ed17fd081c550", "ref_doc_id": "02072f7ef401ce69eed24f3276b2af5039bb674f"}, "1ec7a8a5-4f4d-4a70-9343-cef02fd08c78": {"doc_hash": "0598e6d0bc03cabf405e5d3d7f61afb0ac1ff85bfc0e7c46ec865e0677ba3e79", "ref_doc_id": "51af1f2e59fa01781ee3e27f08fb18ccd3a4ae0f"}, "e6456e53-4975-4941-a201-6065e28dcb17": {"doc_hash": "d31bf43631488473b44b495779305983e6aae00b89e783143ed786a4b41be5f5", "ref_doc_id": "f929b88878f6ae30f4034dca5bc7b98128a9b15e"}, "6318d340-7d34-4ebb-bb02-01934feb0792": {"doc_hash": "194d9fff3cc20d01164969fd786d92119371f66af6e736c3aa21987a07f27be8", "ref_doc_id": "f929b88878f6ae30f4034dca5bc7b98128a9b15e"}, "feb5bf05-69f4-4c09-a370-2cfc99420d4c": {"doc_hash": "0f11951d3e743418227b9062a03034f2222eb656f8e69d1cb42dfe361169472a", "ref_doc_id": "214aee6bee0ebd551048c59c08897912853e07cd"}, "5d581b77-27be-4d09-bc2c-8c836aa761a2": {"doc_hash": "746ec821ff02dd521eb590e394587a5b2583db52daf2f30720e21c0f0e14eb34", "ref_doc_id": "214aee6bee0ebd551048c59c08897912853e07cd"}, "2c1445cd-d2e3-4418-9195-3f6dd7c14a8b": {"doc_hash": "ed018a4998e751e18ed2942d106e5e1d5e65d2bd1285c351d8ce7b9a64baa1bb", "ref_doc_id": "214aee6bee0ebd551048c59c08897912853e07cd"}, "ccfdcddb-4eeb-4f1a-b574-249d99a272c2": {"doc_hash": "658ce9a1eb677e8034de12d8271dae4ab2136a3860fa32258ef72d93b34a3645", "ref_doc_id": "caeceb80adf98350d352cf51992b804891ed57e6"}, "88bcd294-cfd5-41bc-950d-fad27b19d6a6": {"doc_hash": "d4317073ede2ea3fd70657c1bd1032c441feef1353f34865f5b8d8601f4cc76a", "ref_doc_id": "caeceb80adf98350d352cf51992b804891ed57e6"}, "55d86028-3e34-4971-b30d-36d17d7c9937": {"doc_hash": "5ce1cb6bd9bcba7fc73bba75a312da3b6cd1d3cbee75e890bcc8c7c1f4a8eac8", "ref_doc_id": "caeceb80adf98350d352cf51992b804891ed57e6"}, "dbead414-6c79-42fe-ac7d-109810b80810": {"doc_hash": "247897e8a58f8d137c7129f69402445adcea5ab899bb4fe5dabbe8a4c82f6820", "ref_doc_id": "caeceb80adf98350d352cf51992b804891ed57e6"}, "bc951f4e-b96c-4e4c-8a70-efb6f92bc708": {"doc_hash": "af3b8a5fa1811a4ba88e7a5ace4255fab2a4e54ca652c9ab8f62b60814b89a38", "ref_doc_id": "ea811ad39f7ea9edd996d9019254b9f23fe0551f"}, "a2b23d11-a0c6-49fe-932d-4fb15219bef7": {"doc_hash": "d2d38cbabcc30e0f86475d67a49946fcef066fb5bcbe2a01d6269e49314c0557", "ref_doc_id": "ea811ad39f7ea9edd996d9019254b9f23fe0551f"}, "95c926fd-ee35-4882-846f-45a8a94d2b21": {"doc_hash": "fefd1629689d2a65470c69d9b2ca0221bc59dfdf16151792d7d864abcd7501cf", "ref_doc_id": "e605adb9186c10332670bef7ad37b5cafcf3999a"}, "5903f7c7-aa1d-44b5-80b2-13dc1a1afd92": {"doc_hash": "478bd21ef8262173d4d7fa65c223898bc89bf75cdb91eba1882189c42b6b1483", "ref_doc_id": "356e28dd737c28096b10d073590f5bc53ce522eb"}, "0fc91b5c-171f-4198-bd2e-e56d1ac5288f": {"doc_hash": "05b9a64af52a744ddf551afd454fc985dd0a3dabff240c0e5ea67693dbf3cd00", "ref_doc_id": "521cab09631a4b86fc84a1312f3c113ee732f73e"}, "28678798-a0bf-4eeb-886e-23ba62981d58": {"doc_hash": "a0d406ccd462090899b2521f25b4de20938563c394f19a2947deac4a8447352e", "ref_doc_id": "521cab09631a4b86fc84a1312f3c113ee732f73e"}, "1b1cd5a5-f7d0-4e5d-9e05-497bb4271f3e": {"doc_hash": "cb3e5155931f4c756619bd9c45dd007aabe6973949df02b1ecfb195fe1d5dc71", "ref_doc_id": "521cab09631a4b86fc84a1312f3c113ee732f73e"}, "39dfbb36-6aee-4c66-bf3d-705737f05966": {"doc_hash": "53e6cdd33e3b98313fbf440c2adbae93c5c7db3c8d84503a17b22ca856399b28", "ref_doc_id": "be9f2ce086eacebcd83cfb9b27195278a71cdf88"}, "623150d2-a09b-4c84-a76d-3c66d73c5cdb": {"doc_hash": "25b6c935a0af673659f3d9888c7d9b691d5e1b8f1e4f33628b8b2fda2d040ade", "ref_doc_id": "7e216e816b54aa2a877e60607f779a1386a1b8f1"}, "cb3143a1-c849-479b-a79c-95aa0cd1db8a": {"doc_hash": "ca35db170ed7525976558e8872a084d8ce2cb32ab6301ee9ac62966cf33b59fb", "ref_doc_id": "522a1c2198be25e06bfd5f2c057f58e2f3f5f586"}, "357e09a9-0027-41c9-901d-395c2a0b79f3": {"doc_hash": "a3fab6165ca47e087e80549bfffdd8215528cabe9f7362fd71af13f7674bc048", "ref_doc_id": "3bd62b5a306ed81a1569600e12faca526f15ac81"}, "d3c4c32a-351b-47e6-8b39-1b8ce7a98013": {"doc_hash": "402c8d4f24efffcdf4b7bed79afc4ed6d38e925d566382b313d87d4656ae42dc", "ref_doc_id": "bce78121bca90a97161b8a7abcf962dfb5a02bb3"}, "bdbb3399-8f49-4a4c-9170-9d547d6e0f84": {"doc_hash": "9a341c932172c7d58d5f53fcb157b0997003ed4905747a5377bb3444597f03ea", "ref_doc_id": "bce78121bca90a97161b8a7abcf962dfb5a02bb3"}, "e4e4a2de-8f9e-4377-9ca3-212b583c9357": {"doc_hash": "be7d0aef99267fb1a0112f8e6c741aad27ae761c4f73240e36385c5f2fce4857", "ref_doc_id": "eabb6a31dc07b1ba7f472a5d8048698cac9d2d19"}, "e9558a93-8e6e-4cc3-b774-f362a2de6b2f": {"doc_hash": "87cc314fb3410a84cd137353d9a678628be2eda7fbb530bfeddf0b09a99006a4", "ref_doc_id": "eabb6a31dc07b1ba7f472a5d8048698cac9d2d19"}, "712291cc-9556-4419-b697-5a138f2051cc": {"doc_hash": "cfa10d8166e10fe28251e4b13c9717d309c37346b2e1677e3d4589d0e90eddc5", "ref_doc_id": "130d94bc314ebd462ea4a854c703cdff9f7f24fb"}, "d698d37c-2a42-423e-99dd-c1a99e95247d": {"doc_hash": "5a95e0a554d30e7cceaff558733de89c5de04067dc1eb0d013a4605bb0839129", "ref_doc_id": "5bd8fb8130646b27ab0efbad7151a049e0d80988"}, "2f9d366b-9d56-4eb9-aaf1-9d6940d48386": {"doc_hash": "59b265b5c2612b5f9befb87e00fca98d25fe16c05f49ef8519059f95d4fa22be", "ref_doc_id": "56db32c9ee99c0654f0e5602466cc85308d5fb7b"}, "60144fcf-0315-4970-a08e-72d7ba8cde46": {"doc_hash": "f3d4e405afe050bddbfa97cd2264d723569b73d53b6b581efed009f4bb3d446a", "ref_doc_id": "4ccdb2fb751c41374dc41d390b4ec5bd2a5fa017"}, "9fb78d77-ac1a-428e-94fe-e93ca9f9faf7": {"doc_hash": "83f3b453388789bba93d9dbd86bc453183991e6663d645edc754056393e5b9c1", "ref_doc_id": "05826bacd4cc0005352cb6595ca0fbc184c2f2da"}, "a24270ff-9a09-41be-8717-e36a3d417bf7": {"doc_hash": "5391173705eda3ff78f406f0bc454045ff05b7a4a273a66b61d65881aa98fbfa", "ref_doc_id": "05826bacd4cc0005352cb6595ca0fbc184c2f2da"}, "22292c4a-5fcc-43a0-a38e-44cd6410c406": {"doc_hash": "26806c60550e67073b9f43b382c2f88e8f38a699fc87a5bbd4d3e72a0707773c", "ref_doc_id": "bc6020ae1bf3c27464490f76b03b2592d0e6ca3e"}, "56f05ace-2d7d-4456-b7a5-0cbc45c10d7f": {"doc_hash": "d7d2c1de74be0eee32f7060d50d10716cc9b3fb63b89c1ed672bddb3a30d8862", "ref_doc_id": "080acf44a469907e567882aa932b73e712fe0114"}, "88f8a558-96e6-4312-83a5-18a9308d4766": {"doc_hash": "11e77c5dbf44f2822585b14511ea6ad6f65873360934940a18e3ea619155aff6", "ref_doc_id": "1627cdd4a4188ad3ea7eca47b8887649b69e6396"}, "e3039c7e-7b4c-4a92-ae1b-4f8aa97ab51c": {"doc_hash": "9e668fc0d72880d6f64e1aaa8197d3f7eed3e3d89e917ab04bb4bd94592801f8", "ref_doc_id": "e4d674c827083afe0a5fad750e119c756058d271"}, "1b2976b6-1f95-440c-acf8-698017f89347": {"doc_hash": "f0728169a7eab944e58b59b1dec5b47c6ba226b897a569dbe627245320b46447", "ref_doc_id": "e4d674c827083afe0a5fad750e119c756058d271"}, "be955e22-4b69-4efd-991b-02b4c06feaac": {"doc_hash": "2527ec6e5e7e71777a13eb0bcd2397b71ca51fc2d7ff733c2d9f99ddef6068c9", "ref_doc_id": "b6fc0c8622a3e75b89681149f9534bb6b0eeaf06"}, "e2f5bd8a-2c8a-4573-9cf3-1cb31d5d433b": {"doc_hash": "1096f39224fbca38057774dc72a9e42a0b037203849988923f68a3fee83c502c", "ref_doc_id": "bc89d4f48c5e8405c7e62a9d0c14c34fc3ede925"}, "baac30c4-813c-4767-9b1e-9c10f20e0701": {"doc_hash": "4f067b5ff85655d605eec64e7b79bcc2069f8642b0b2a22f27d5867fc2217285", "ref_doc_id": "bc89d4f48c5e8405c7e62a9d0c14c34fc3ede925"}, "0933c4b4-428c-4b9f-97d2-ce8a104ea2ea": {"doc_hash": "f9e0e83ec4c1e3dc9c6298710977ebbbc88811d003f0ab8abcc15ade132c0971", "ref_doc_id": "d797900f79bf5d1c65c5616588db0ea6f9b960b5"}, "7b2fcbf2-e0ff-41f9-8978-2276a8afb45f": {"doc_hash": "91023c72ac5d92c0b96501d843c6ec0bdba7172d4afb116ba58d36b70f186d98", "ref_doc_id": "031c58b44863977ff8e23a98882bb8200700b4b4"}, "a64e971f-048c-4814-981f-eacf99ff4fd6": {"doc_hash": "335ca39d60dc23b1c7da87df48eaa895be95fa1232264483dee38e89fefad54f", "ref_doc_id": "55a42e6f03c8c0f9f4018b40436737db6705633a"}, "1c9a7d9c-19db-4a6f-a558-03164e69ae44": {"doc_hash": "8e41b55920af47aa363452fb9104357a73c86999f3f708dec5e76d1a00357058", "ref_doc_id": "55a42e6f03c8c0f9f4018b40436737db6705633a"}, "d1c9f756-d260-4cb9-bb07-8d962ed8cf38": {"doc_hash": "3e42e764f87a5800aac11b50290ee1c5bd7a79216580b8a238f2b18e91d230a2", "ref_doc_id": "396f6eb474a91c6e1c0ebd03863de0f62a65c4ae"}, "c3239452-892b-417e-81de-cf42e3eee7ca": {"doc_hash": "c4e622dde0f1d2c1720ff02b6481390eb24b824e0c9b56acb9532063f90e9988", "ref_doc_id": "cb4ccd561e62fd866e71b0e72deed51d787658ed"}, "ae0af7a0-8554-4dd0-8e48-ae85bcbb3a7f": {"doc_hash": "762af42e6613be264b9e48596f32dc4536f0e462a5bc0a7cc2608bd9e0fe4856", "ref_doc_id": "de2a69b29790cb02bd1a490d6f89db6118452038"}, "09408a92-03eb-4ceb-92b2-943ee7c52783": {"doc_hash": "d8271e3f85a09698b8e8d1ed9024907accf8f2365f7a70859d7746d7c64fe92b", "ref_doc_id": "de2a69b29790cb02bd1a490d6f89db6118452038"}, "a48492e3-8de3-4783-a2f1-d7c3cf0f2dbd": {"doc_hash": "a49cb8a72c74af9460bfa2d9695b2e8e9f13a578cc35af32da2f63d4131fb2e1", "ref_doc_id": "3b1f74c6121363d407dd4205178adff6e6db4cbb"}, "7b17c1a8-2471-4f66-8516-1784020a9412": {"doc_hash": "43d561d9e1f7830ae0899c410269efbdb6df888941c5696ddc97288e6db06a1c", "ref_doc_id": "3b1f74c6121363d407dd4205178adff6e6db4cbb"}, "5841ae26-16fa-43ef-9750-e620cd2ac947": {"doc_hash": "ad0973b310a49c2d11f83f8359b81a0ca7a280bc9be81431e08663dbbf32a62b", "ref_doc_id": "bde9d3369fcedc4817d84351f2de5b09109d620e"}, "c8e34d08-0626-4b86-9823-f60234d91e4b": {"doc_hash": "592aafb42f5c2088fc9c84143e5b4c7290af8e41625731ca709ef67621233ad7", "ref_doc_id": "bde9d3369fcedc4817d84351f2de5b09109d620e"}, "f685cdab-c964-416f-a793-f1178e33b2ab": {"doc_hash": "19c312878cbafc1fd0566ea4a08b7a5829a04fe722782d907338d82f1b8dc12d", "ref_doc_id": "bde9d3369fcedc4817d84351f2de5b09109d620e"}, "4a535c41-470e-43e2-9893-ecc717531592": {"doc_hash": "6623af5fb5d06c0ce43a7d34e5d29d600316b0761e1acd1986a6c07c9b784599", "ref_doc_id": "0f95c494374a5beff5ebe400d025f657f84c4217"}, "5974c62b-5b3b-4674-842e-a133ce42fad4": {"doc_hash": "c63c3c140d96af9e6341ee118a7b0a47d067e7a07507b8d2a7a8e5e6e6177dec", "ref_doc_id": "0f95c494374a5beff5ebe400d025f657f84c4217"}, "c538eba6-5891-464f-a639-b7b6998f7c67": {"doc_hash": "3b7a05751e69b2c8578482111fc78d7f10660b31bd729a898dacc03a6167e540", "ref_doc_id": "89139710f5731cae660d4d8686e4ae183c4c4499"}, "5c91dc82-f53f-416e-82a1-81af14fccf84": {"doc_hash": "8e5f74c695856709d0b07617b72fa5d9bb055f9e43fbec958fd3168d4d61babf", "ref_doc_id": "89139710f5731cae660d4d8686e4ae183c4c4499"}, "012e5f04-acbb-4933-b96b-504081203da1": {"doc_hash": "d090d9caad3f6bcac124b6680f7fae1927cbe5d48dd2fdfd3ed24a9aef0c4e27", "ref_doc_id": "5256b2c14fb851d7aa231dfa78aaf0a88114b6db"}, "984dee8b-32da-4c55-b046-2f08e861f8db": {"doc_hash": "1566ff57ba84a85b0ecfd5ee7d0d98ab51a8c0450e810d8061be30fc6ccb7686", "ref_doc_id": "5256b2c14fb851d7aa231dfa78aaf0a88114b6db"}, "9941b652-fcfc-4341-a4b1-2f02ed312d10": {"doc_hash": "e5e035952fd5a5ac77c692268a0c117de38a230349d376ea96c3f4df2d157d18", "ref_doc_id": "6283a34850c2abb31861283d90788e7f1816d648"}, "f731648d-1e61-4651-a6c8-8ff5eb1e730b": {"doc_hash": "8f0381bfd56cbd83f91735dbe26c5f4e61b0260373d884aa59c700aa594d6807", "ref_doc_id": "6283a34850c2abb31861283d90788e7f1816d648"}, "fb6a75a4-b2f2-4478-ad79-fe6443e85346": {"doc_hash": "1523fa63c1d9fa3eb9ba78c1ba2944e42a0537661c9c501e2149ec1880bff9d5", "ref_doc_id": "590db04b06e35270a8e3afc2bc07ff781d5f7d7e"}, "4b266d0e-ec44-4e81-b0ed-4a7f53352eaa": {"doc_hash": "a352370cb4935f3d152c7f1da044ee322fea7738e2f942aa0622dcf99529cddc", "ref_doc_id": "a2187a3d22d44914760959190b9a31d995506039"}, "73af855e-7227-4db7-bb70-07c9f2591d10": {"doc_hash": "3636be63642dc5420dcd8a620dd1ed26915637a79eac0af305330ec65f015295", "ref_doc_id": "86a6bc5c47227b1b82fa2e489c5f785d6375f39e"}, "cd2ddb1e-13cf-4aab-88f2-6b86eb9c2f51": {"doc_hash": "34a79628b2b4e8c9e3eeed4c95d9293c3ded64a91fb1839e807eb184837bbbef", "ref_doc_id": "86a6bc5c47227b1b82fa2e489c5f785d6375f39e"}, "d31f5f15-2ea9-481f-a138-11b768091d14": {"doc_hash": "3cd2272baf11d67ba1fa400dd9fa84adc4bb690d424b4fd175119ca04f68d00d", "ref_doc_id": "86a6bc5c47227b1b82fa2e489c5f785d6375f39e"}, "53d9cb2d-5600-432d-9240-63a003a7a9c9": {"doc_hash": "ae913db8784a6bc1abdd9daad094cdb1ee7041014b6ff993d01bbfecafd9d028", "ref_doc_id": "5f38d6590bbbbd05eaabb113c63f3f45f3e42263"}, "2de641b6-32b8-4fdd-ae02-45ce61a56fde": {"doc_hash": "e869978c9795fed4fd429ae36f1798d9705809d12709f44831917141cebec23b", "ref_doc_id": "5f38d6590bbbbd05eaabb113c63f3f45f3e42263"}, "721e1f5d-681f-4ada-9b6e-504c4cd7406a": {"doc_hash": "1904197169691fc79f58077de7ce16a2ab73a739c4eb51a529fae5fa00c31743", "ref_doc_id": "809616575fcb6974b0c9a36f0097360cb237dba9"}, "79b77f86-dad6-4c80-921c-cfed66f1a0e7": {"doc_hash": "50c0905c407625f939010ff905776498d055dc4cb2d34bb0fbc749c48464eb74", "ref_doc_id": "809616575fcb6974b0c9a36f0097360cb237dba9"}, "4f595c2c-3c47-41bf-827e-febf8c2e04dd": {"doc_hash": "34d7ab48865d230e3c1fceffb718a1b962cf1b4ad717a265c9a10634a7a82e08", "ref_doc_id": "809616575fcb6974b0c9a36f0097360cb237dba9"}, "cdff6b0c-d462-4bc6-9a11-1c4fc61fa46a": {"doc_hash": "25e9fafb84f18c8657f40fa4b49b3df3390bd2b57103fb1afd9b9687b5d44b17", "ref_doc_id": "809616575fcb6974b0c9a36f0097360cb237dba9"}, "776a2f5f-ff32-4e97-be6e-7951f3ad21ce": {"doc_hash": "a13128947ccecdfa6ab4b80ee901ce3d9211b3ac9ea283ae4ec619af5f8e633c", "ref_doc_id": "809616575fcb6974b0c9a36f0097360cb237dba9"}, "f144ed4f-95a9-40c2-9aab-10e2fce36a32": {"doc_hash": "87d4d35dc0266a732a9b127551fe7c01840eee22c8fb4ae17f140414f23d315f", "ref_doc_id": "36420b550190ac49aba964e6a4adb6a04a64a711"}, "28632d92-5d8f-4af0-8249-194b6efbab08": {"doc_hash": "898c925228d7be1940e90be4fcb6bb5b420b12d8762be70ffedaad58208d0582", "ref_doc_id": "36420b550190ac49aba964e6a4adb6a04a64a711"}, "86b4d58b-7e39-449f-892e-5937125891cd": {"doc_hash": "46c24bde6b59d172bd465fbb24e0634d859182d2738bccceb64be182302f0e7d", "ref_doc_id": "a5942b73aa4199416281b74616aa258027f2d725"}, "fa21c9f6-1167-4fc9-b1d8-ea37acba86dc": {"doc_hash": "55fd36f48f2a3f229273ed84fd7b472dc69d9e1513ff5c2bbc0460bfee159c9b", "ref_doc_id": "a5942b73aa4199416281b74616aa258027f2d725"}, "43c13f38-6dc6-4e1a-b0ae-c8e139808805": {"doc_hash": "95804347c34ae1331dda1519714f04d1fa80f3a1be4378850bffd37ecfa4e0ec", "ref_doc_id": "b64f4ed6edc4f6543cc1f7c422f24f9e53b520fe"}, "04830afc-516a-4b6b-a7bd-048a5cab2b60": {"doc_hash": "f23927d8765084b02c5955edd41a3962ac1e9fb289ad9f04ad79425ddb935289", "ref_doc_id": "25a4c69537e4ccc17e3f9be88402907181d8ae12"}, "ae2556ca-4de3-426b-b22a-686ae2ab4c0d": {"doc_hash": "efae445823de24343fb37282146f55e3eb9bd2d9074fd370ae62262061d457c5", "ref_doc_id": "25a4c69537e4ccc17e3f9be88402907181d8ae12"}, "92b47052-7df7-4a3e-b6d1-d5e25e5dda8e": {"doc_hash": "fa15320b892c6878eb59be1a5c6abf61d8514cbd972e31cecc607a754f3baebc", "ref_doc_id": "25a4c69537e4ccc17e3f9be88402907181d8ae12"}, "96d785ae-267c-46df-85f8-49b69ac6944c": {"doc_hash": "c9bcabd07116222a905051c7910f8b8d02ce38d23827fa1be33eb0fd595e7469", "ref_doc_id": "543cf842e50426577d550e7e5f17cd64baebf5a7"}, "ce6050e7-4209-42a4-b9dc-0811fb66dc7a": {"doc_hash": "13f6ffa6f3c96416acfdd877fd476368c676da51d5d178bd1392c979ff56ad2f", "ref_doc_id": "543cf842e50426577d550e7e5f17cd64baebf5a7"}, "2535d1ba-b7c6-4386-985a-4f9126cde6fb": {"doc_hash": "e4dfeb204fa48e45d0310317b0b1978c203f22fa3c37e6555fa6a21a400fb2cd", "ref_doc_id": "82487b1ddf23730b0c46fb53db0de200f8ba2846"}, "ce824b2d-7866-418e-b847-cfca68c790ec": {"doc_hash": "018dfabdaa82cc9d664f5062a68596cc9f9c0867abb3f173e67d8c2f3da581e3", "ref_doc_id": "bd9ab788b42cdad0391db1b48b92ae2bb4d01c48"}, "0342fdff-f98c-43eb-9b41-64367ee2035f": {"doc_hash": "068afd2ca0c3e1b108532adab49b0e7b323be42fac34e093c963130a055ef1b5", "ref_doc_id": "bd9ab788b42cdad0391db1b48b92ae2bb4d01c48"}, "1398cb85-25e7-4573-b99d-59c92ff4edc7": {"doc_hash": "42045fbdf87829b4ae44f6c57c0e46422536a6b5d80f5c1fad8699f8782219df", "ref_doc_id": "536bd9e20290a89068e0881aa0108d56d9833b26"}, "a8e60942-4653-468a-aa7d-9059d3895758": {"doc_hash": "6b460f78ffef1f0574d8f13a6c743f929aa6ec50119b33bfd2d269acb26d5a45", "ref_doc_id": "3bbc1c4c759c63ace11e14c48f4fa1d01812665c"}, "8b656dee-2466-474c-a225-e561d23e7a4c": {"doc_hash": "836d597cea9a1742df2fa11a386d8e9c9c4f13172691e93ec79258e0e09abe60", "ref_doc_id": "ad22cefca0c1bdc1b22e2f6e8d8f1681441f4f0b"}, "a492c4d8-de28-49f5-a772-75c654456f61": {"doc_hash": "91f99993fb2e65f6836d7ef1b866b32cc816a4c3d7319f048344ec34e607c992", "ref_doc_id": "ad22cefca0c1bdc1b22e2f6e8d8f1681441f4f0b"}, "1ed927cc-73c4-414e-ac3b-78712486ada7": {"doc_hash": "fd8e4b7aa2b47e0b920f6f720e010c3b68924c9ec875b71c1b207712f4f562da", "ref_doc_id": "6be0f7a9122cad5904b2605a5eba0fbfacae47f0"}, "bbef1e3c-83ea-42ab-a72f-ea691d955c7b": {"doc_hash": "abea392e6f7043038c80408084a92b86f6e3cacca73582f73da0d4ab35bcdf58", "ref_doc_id": "6be0f7a9122cad5904b2605a5eba0fbfacae47f0"}, "d3aed894-832c-4bc5-a077-e4629219d3bf": {"doc_hash": "6438828ed37d320b99d5f97bb1a98def41391ef70cf76e1d40aec9f1022ab670", "ref_doc_id": "6be0f7a9122cad5904b2605a5eba0fbfacae47f0"}, "b160f86d-cfe2-4e0a-88b4-92a3ff367167": {"doc_hash": "d3e8a6b75c11016274651f38fd4178df851733356f68027ad4a603b0fd5989ac", "ref_doc_id": "7e5b7ab988e3356825e0befad0993cffea8553f1"}, "b4c05558-6fa8-482b-b848-403d02d60283": {"doc_hash": "b6069ccfbfb5a3c5206149f2a6424da99b3503ae15a70edf023bd8823bfc41e0", "ref_doc_id": "7e5b7ab988e3356825e0befad0993cffea8553f1"}, "2ee17623-4101-4f26-8e04-295f6e453209": {"doc_hash": "8867ee1421c1ec00eca9a2019d41548fe0f84324f581da903c52ecef3f635aff", "ref_doc_id": "d0b13b6b0275cfa527d7493fdb214f9ab884076e"}, "487d6538-b0bf-4bb7-bec0-7003f8fb8c99": {"doc_hash": "f47a7137115dd831d9998eecd2e8525f444822c0391eee53a75e3d2e31d2d014", "ref_doc_id": "d0b13b6b0275cfa527d7493fdb214f9ab884076e"}, "29a91d38-17e6-4f19-8b12-8c137ffa74c9": {"doc_hash": "da017e20af83997b2684d19be3505785fe0b5e294e389a120af7b6cdc16f495e", "ref_doc_id": "6894124c65a612d25ce19966b2846141c1b3b1ef"}, "519fb0d3-0f42-46c8-8413-fba2ccf2ccc9": {"doc_hash": "7c70d4ad8508008534e3769e6ee8693e76dc8f4a7273f30dc4a6f526c6a4cf20", "ref_doc_id": "c26e5e51e5a26783e38dafb4b10ed897235734f3"}, "2da3f285-135e-4f77-916e-f08e3fe5c8fb": {"doc_hash": "582d95836756aa9c3272c0afabe6cbfec6cfef9571870731a397d830416d9335", "ref_doc_id": "c26e5e51e5a26783e38dafb4b10ed897235734f3"}, "38f622a6-7ec9-4b12-8cd5-8561f506d307": {"doc_hash": "ee9015d4a4d2655f1ae62858bfc136ca56098a62d58652d335bde5e60a8e835d", "ref_doc_id": "98b392d2c86e8861d251944cd120fc4bffede4b9"}, "f4eba0bd-15d3-4e97-882d-80cb4a473707": {"doc_hash": "2059fee704c524285ec6b821b5ff9e15190bd7bd8451b4f734d781126e3e9a89", "ref_doc_id": "8b816f3fd229f95097b4cb8894717540e27dd9d5"}, "29606d29-a981-438f-a7df-806ae3b50028": {"doc_hash": "ce8d0c73d409165b650a5701a09a8dcc62f11c380d8e1411a9e309e091bcd581", "ref_doc_id": "afd317930b7349d53bd4c81834986ad5d935f6bc"}, "b8250e3c-82fd-45d6-b4c4-17eeafc1e5e8": {"doc_hash": "e5cf1104a34fa1d4344af2982886257119abb3d927a503f8a474c51c731f7c04", "ref_doc_id": "7b81d084abad64bf1db634f44fa5c07ccd61854f"}, "9e520c65-2e90-430e-ab6f-306b0c6b47e0": {"doc_hash": "4474edea18cda1cbba29cbf5bbf706d816ed647e52f6732840df10d63f5dc270", "ref_doc_id": "7b81d084abad64bf1db634f44fa5c07ccd61854f"}, "f607e13d-caa6-4a55-adb4-bcc9ee2b42f7": {"doc_hash": "d70a92f70622c430cf45f3bbb34821360812960f6d72b2033372bba65dccf918", "ref_doc_id": "f66ad15e426159e42cea14ea5b29b6aca90bb826"}, "782d070c-6966-4ccf-8c91-b9b44c672e8f": {"doc_hash": "866399a6ac41b7a6b0ef8c80ca22f7f4f282b75d62aee16df04274a5014783fc", "ref_doc_id": "f66ad15e426159e42cea14ea5b29b6aca90bb826"}, "32c76ed3-a13d-4a10-b880-50ff28c91781": {"doc_hash": "c726292e6f770343e0c6a7282f44bfa0c97aa5dd10ee6187971708bdb8bf459d", "ref_doc_id": "bd143e35f4bee6acceb9537890db14e2cd883031"}, "dbf04b64-b151-41f9-bb8a-e574f1749e48": {"doc_hash": "2323f6b1ac97c271d03b9f489b12f82f295a90bb0c71b006f03dad30751fccdc", "ref_doc_id": "bd143e35f4bee6acceb9537890db14e2cd883031"}, "2fd8a584-fb44-4af6-b65f-9de0f5d1d3b1": {"doc_hash": "e0af9ba398d26558c2bf8dba560516163daba47add6ae72672a6d3a8f3072b77", "ref_doc_id": "bd143e35f4bee6acceb9537890db14e2cd883031"}, "aef6bbad-b466-4fee-bf1d-8881858335d9": {"doc_hash": "fdac670a1fd06a7f1455747b64070765f78ad5574a87f7958c6f61cda002c414", "ref_doc_id": "da8a5d313809701f6c04fb8ed2f11ac356750079"}, "e135f070-28a8-472b-b098-c8e6592ad5d4": {"doc_hash": "5d9681b04d3c2f268ffbd36a0222d8a850d2600f75eb753f51f6d6ad82250938", "ref_doc_id": "1a3194392f14a78d262ef86d582b912bce1029b2"}, "bc606504-acae-4909-b0a5-e692ace07127": {"doc_hash": "f9231c1389a5036eac8b0cfc640acba89a02f09133dcd901364a0e63fbd26ec2", "ref_doc_id": "83c29d3789a94bdee119fbb50515bd8280216d33"}, "9783a244-72f9-4a55-8d36-6380a6a2ea53": {"doc_hash": "3145273469c1835bf58566a6247137e28177d0e0fd670a88797b7e3ee5909728", "ref_doc_id": "ac9f83a08c71388a493ea52cd3da2e8f69e07f44"}, "e423adbf-1764-4bc4-b1f6-1557aefb84d2": {"doc_hash": "94962f0a95e4dac7266cdde66484f7a221b0b06863e1286e768301fa19cbb1b6", "ref_doc_id": "f9d4fac3cb7d48153bf2434c7302feeded0f3fca"}, "ecfaa753-5fe4-49e1-a8aa-5c47792b80b4": {"doc_hash": "e350082ebf26339deaee059a0ec0e9ced7f3fccf7a77955fb1f07bf4213021e4", "ref_doc_id": "f9d4fac3cb7d48153bf2434c7302feeded0f3fca"}, "bbeaef50-dc1f-45b7-9155-694e7f05178a": {"doc_hash": "ae42915fb84ad963c773621fc458c45963a993adcd8a73e66dae36b91111fc41", "ref_doc_id": "93ef6ed6f6195507fc8e6ec4ced648c13b2381be"}, "c0550596-3c09-40db-a466-f104da915bdb": {"doc_hash": "16555be9f82740efcb9238489c3b8277abb1f4ebeac3556855ce8b78912f7b88", "ref_doc_id": "4f7282416ccf0c45d59eb887dbe2dc5d47e516e2"}, "9cd65341-155d-44c7-921b-ad7dc9f69787": {"doc_hash": "1395268739b129936cd4811e4e47d925cd8e4d5630e4561f5a90145c61c563d4", "ref_doc_id": "6dd34e190612f1248325172624f42efe6fc58e43"}, "e382b892-1389-401e-b4c3-edab79d7ae09": {"doc_hash": "e48e066233ecf9a98e42cdf8c607f812fc39d6b8e39fd421aaaff8dd55892d65", "ref_doc_id": "4e938e095164241f004d78779b3ca388bea78be3"}, "f7a0384b-ccba-4077-a1e5-3922deb01215": {"doc_hash": "623c3847cd2904aae7d7be8f168bb04f90e14ed2d5457ef2096043ba3e45fae7", "ref_doc_id": "5f2db22d6ca0ca53228acbc87f47c8d8c2eb3a72"}, "22d425d4-0075-4b88-b3f9-6c9bc95dbdf5": {"doc_hash": "65f34f6ba71297e24516c4625405597982fc28b3237ffc5c1172c8dc2c526ec7", "ref_doc_id": "c80220107578c2cd57cc57f5153a3165493060ec"}, "095ace39-7378-4416-8596-dd8244f4d7fd": {"doc_hash": "ea7c76e3b08ef6272427e11282b1cfc2a6a0754b7b23bbed3c4d7e9ee0f545ec", "ref_doc_id": "c80220107578c2cd57cc57f5153a3165493060ec"}, "c8ee4cda-3a4e-4687-8a98-fc6747fc8a71": {"doc_hash": "a32711b046006705e097b107cabd551b8f86befb2ac414b8b3a407f8dd92abdf", "ref_doc_id": "c80220107578c2cd57cc57f5153a3165493060ec"}, "69c203f1-6498-4977-87ae-1383728c9793": {"doc_hash": "dcdca1eedbee38d8a6b5b77bb755f1a8c8e05976597e5197d551414cd8fe98c7", "ref_doc_id": "c80220107578c2cd57cc57f5153a3165493060ec"}, "0f99132d-47b3-4eea-a5a3-f202aa20bb4d": {"doc_hash": "5e43fdccb0ce0495fc94320e7c43edf0097d537eb76c0071c9f2eb28bd352b20", "ref_doc_id": "c80220107578c2cd57cc57f5153a3165493060ec"}, "c000bd7a-2de6-4193-b60a-50fab26af232": {"doc_hash": "c30e0ba50e36a1f03d993b1d1c0af1e1d8fe227c98d1a9b463fbb5b0a7773d87", "ref_doc_id": "c80220107578c2cd57cc57f5153a3165493060ec"}, "48b86d76-952d-4eea-9a66-c143788dd7b1": {"doc_hash": "a46a1d8a6884f62bf7217a92ce640ba77c0f818fe04657c46c6cd0f727b9dcb0", "ref_doc_id": "0d0dd09f7e191da34804a14b7d5659b0cb0a744a"}, "cbfd6a94-c8b1-4e70-8dc6-5e296f71f439": {"doc_hash": "14c15d111533f75117f910ddbcf385be4df6b29fb70427a9ac3d4ee940dde668", "ref_doc_id": "bd400f7a2d3fcf09f72a99ebe9e46cbe9284f9b2"}, "e42c2577-192d-4b6a-8c31-8776f009a7e2": {"doc_hash": "67266ea9bdd1ad4f3a8824c8ca5db7170db0b39eb628718b1bf7914a578b9bc4", "ref_doc_id": "bd400f7a2d3fcf09f72a99ebe9e46cbe9284f9b2"}, "e2a48a68-79b4-4718-821a-600c36ac03ce": {"doc_hash": "0df27fc53ff812add049e4436905a4714878352b26afdbb3bfca42e67a4d14de", "ref_doc_id": "bd400f7a2d3fcf09f72a99ebe9e46cbe9284f9b2"}, "f0cc0181-cd91-4bf9-a1ea-173798619920": {"doc_hash": "8a62201e74ea9611b2ff4d29a0f162d0ef9e4f43cc0b8c7417817bb0c0a57656", "ref_doc_id": "bd400f7a2d3fcf09f72a99ebe9e46cbe9284f9b2"}, "a60f6759-3d36-42ec-bfc0-ac575403a4bb": {"doc_hash": "27c64defbca304523e225c5c4900536f50dface8d889f0cabdddda02e2b81b23", "ref_doc_id": "bd400f7a2d3fcf09f72a99ebe9e46cbe9284f9b2"}, "f798351d-67cb-4b52-8076-52b21d0005c1": {"doc_hash": "2fcebdda475ac983277e68e326d1cf7c5ee4b66f9f6d644e0303f9cd0780c4ad", "ref_doc_id": "681a314dda1f5bd822330bdbf39a7ee30168aeb0"}, "093c0089-9746-488a-9475-908504a59089": {"doc_hash": "b001c7e60cf962b473b2a1a9309040826994e0021d79c31a74ce0021f987ef71", "ref_doc_id": "f49a38e5ba8eb389ea104f95e4edd67f99d252b9"}, "4618b8b4-80ae-42be-8e11-e196ef23a62f": {"doc_hash": "a2c9627fe567faa543f407ab0f7f273c570525b1115bb4a6e98173e40fa62a45", "ref_doc_id": "6923c68ede99ecf21e569912f3044177785a9e10"}, "dc274d00-c554-4efb-983c-b6973f77220c": {"doc_hash": "b98f4b3dc9bd6948ec2c2f36636e9437ff4fc302adf050a9865e424e84aed6d3", "ref_doc_id": "6923c68ede99ecf21e569912f3044177785a9e10"}, "55cb7e72-b6a4-4b20-838d-4825a171bc8e": {"doc_hash": "dc5c73e048756041d2b1aed625f2b7ea27cd3b4f9e8ec92c1307736d8f2bfa8a", "ref_doc_id": "6923c68ede99ecf21e569912f3044177785a9e10"}, "3772604c-84ec-41ff-9454-497d9f1bd8aa": {"doc_hash": "ef54e9d0680fa7e03b3fb6a93e547deb80f22c58baab3e2490bab39a796d87c8", "ref_doc_id": "6923c68ede99ecf21e569912f3044177785a9e10"}, "d29b13fe-69a8-4dd9-8048-b37583603333": {"doc_hash": "63eca291f0165810bff07293effc2b42d9c19d1761f9aba9a52a60b0d7349d2e", "ref_doc_id": "6923c68ede99ecf21e569912f3044177785a9e10"}, "35e62b9f-b7e0-4a09-a932-cfc2058b5f65": {"doc_hash": "24427dab97eae2bd3aa4d7eebe9bb4498cfc8b0d90ca4cf1e1e81eb4b393e955", "ref_doc_id": "bc503a2d6046f7d35783636805c537ba02fab937"}, "53027dc5-84ff-445f-8510-1e8338d8f81b": {"doc_hash": "1f5c6b2e1ecd7596dd4fca238f980b42cfd6162a31570000d38eeb485555ccef", "ref_doc_id": "8c7abeabee2372c2d7aeca5e46eecb3fcde1612b"}, "171ea692-bbe7-4ca3-83c2-ea54c1109b70": {"doc_hash": "240c85fde78271fcb627d00a0fbdf5e3f3b022f7548445d461bce7d5be17b7b6", "ref_doc_id": "8c7abeabee2372c2d7aeca5e46eecb3fcde1612b"}, "873369f0-751e-4cf8-8ada-5b814314b51f": {"doc_hash": "6d9b013d12add830bcbcdfd1585c9170d8b02246d99e2aae826f1024924ae876", "ref_doc_id": "2c77adc60f01ea850b492196c15079898c150ad3"}, "bd1987fa-f9b5-4da5-b115-899e7c7f2dac": {"doc_hash": "89e62ad148e06bdd298515c65c98072d177719a2c1287ea58227f2e06c7bf12e", "ref_doc_id": "f99db088a10db1a1bd5b7c8b622fd1e48672d546"}, "5f50a87f-9d92-4d09-a6c9-70eb7ceed46d": {"doc_hash": "77dbe3bf862970675275ec01fa1192d3f2bd8e2616b4299065ed296df7dda2e3", "ref_doc_id": "1b1f61d75a6cb1c72429e9a1bf6abb86be75d644"}, "3f95f270-8d03-454c-89eb-1a625c11c856": {"doc_hash": "96afcced3d4be081038fddb3c4aa7c210755456680150f2d4b34fc8b4959ab10", "ref_doc_id": "bf2601e6519a3d04633cc28441ce2d8a7a3b4d14"}, "6730909d-718a-4139-bde7-103d73a6643b": {"doc_hash": "491dab2f70751649ec738f40164fe77bbe2d74f5a384513f8d7dcac37fc4eda1", "ref_doc_id": "4296e67e8f199c3faef285773a98fa5601d85778"}, "ae7b7fa0-5cae-4cf0-9192-1f181d1bd6ea": {"doc_hash": "5055aa40f9619b4feeac1335986fa4c36cb04642e5ebf23986d106ae0f8691f1", "ref_doc_id": "2b3d54bf1283987a9c0400dfc697cf38452e8a83"}, "5b11833a-02aa-4c9b-946e-605e21154294": {"doc_hash": "6480444311122c76030b71757776744f3ae55f7411a16c28daf8799f14739330", "ref_doc_id": "02c411fbb10492d88625c77f7063141fbf1615c8"}, "bfc81b41-276e-4c79-9af7-6576e2f52240": {"doc_hash": "5654b463e2bb4c5d0e74c54947e0ff0af7fdf04c256a646fc16d7aa4835c9e3e", "ref_doc_id": "545431ed64921223e9769d8b8656631b79a06f20"}, "e3ad2bab-e0ba-4344-a02d-1bc1821fdfaa": {"doc_hash": "90e377652dd3d27d4342205e2c6c44f4f8493857c2acdcffe8c941bc936c22d1", "ref_doc_id": "a90a58573e336368e81b11e5181a1857622b5925"}, "303f2ae0-f00e-4ee8-8cb6-1ff48b721b8a": {"doc_hash": "2bfaa8c023bc1f475ab88e167b4acca7ce2657b2b5ee7e9472e9f73fc65c4ef0", "ref_doc_id": "44056b05fe2d2955cdad998617fd847ab4ca9505"}, "0bcd7602-4b4d-471c-9cc1-a8002af5dd40": {"doc_hash": "f3d6c8130af2c4ed99c72073ddcacdd9839787b1783f6a3adb8284022f913996", "ref_doc_id": "44056b05fe2d2955cdad998617fd847ab4ca9505"}, "0b8a56e8-cac2-49fa-a782-6e304e79dc45": {"doc_hash": "1b00103e68f79d5e30a8f8193b64d9360e0e7374cdcd2182ca1dbdc4b257634b", "ref_doc_id": "afa9ffa3c556059f2530adcf5657e0ff2c19f3d4"}, "4ab264ec-7787-4f40-8831-d417f2101d53": {"doc_hash": "be9ff741413e5ee8153ede5d03f4962d25e19042c9416d9d4aaf7a184b100710", "ref_doc_id": "992879c4ffa542a7495b0b15303c196ded3ee3df"}, "5e861f85-9be2-48b4-95e8-d8643868f772": {"doc_hash": "407316db92718375fd2f5eca6d249b73ff9e620d7b818955c4b692dbe8fd38e3", "ref_doc_id": "e6c5b30ffdf8f79c7aa24e1fe0cff68bba34edd1"}, "6cb8b09b-8665-478d-8106-acd34c6cbfe3": {"doc_hash": "05cc997e4416dcb9a19785151c114de87de5884b99d07ab55e6275f96ab7a416", "ref_doc_id": "a0c729c53d2f65f95a314595a2c3be06e2788c77"}, "c2cbca83-f322-41c6-98e2-53bc4dc8ae7b": {"doc_hash": "299620cece70ce964016c159d06d0f27780736d9cf6512e78639d5d131f65899", "ref_doc_id": "46a6648bc29a05e177a8787430c6b6da47d6235f"}, "43377517-b756-4c80-a372-d55f25b0a81c": {"doc_hash": "0da569f556b15209ade345736438480f9e202abf9cecb14c171f2bd0dd4a109a", "ref_doc_id": "4d93469f0924c4a39903f976e363cdcdf9ee1c74"}, "e252574c-cf70-41b4-91a8-9d86f9b0cf41": {"doc_hash": "c50e89e4a2ef982a96ef2725c0b4be03bafb78f3f56adf36d130c7217b3562e7", "ref_doc_id": "4d93469f0924c4a39903f976e363cdcdf9ee1c74"}, "711d6d87-d956-4446-8dda-14ff277dc0a9": {"doc_hash": "d971f667719797a5f297126d48fcb940543fc85b07961666935adc5cabe7af19", "ref_doc_id": "bd03d3e32c2af551ab785ec767d9366ba83665ae"}, "3e028061-ba69-4a84-b5fc-1ec6bec74022": {"doc_hash": "eadd0bcc0f8e152f772b58635a455da0168d829f3c32e86bf693e0d1b8890d4a", "ref_doc_id": "734d527577e34abf4963cf3b8ad14ceefeb5f114"}, "8667a10f-2d00-40d5-a744-7131c7b2c607": {"doc_hash": "02f912529ab3527fd686bbc5c2940c67c60362edef0bef7302291d3fdc6084f3", "ref_doc_id": "cfe9c14268e1ea7ad0fbb5d723959cb7aade7b4d"}, "f7756a27-4b50-45d7-9cda-64e2dde51127": {"doc_hash": "d2f50582f9e356ebc3db2d6aa8dc4097c976e6ba9446caa09e9aab4a45b5ae0b", "ref_doc_id": "e43cf8afd55e48d9ee2ac61401f185adf905af4a"}, "33d362fb-553b-45ea-a993-47a9fcfff52c": {"doc_hash": "e880147e6409fc7357e14b683ee5d925850060152360cb04aca4fdb2cf82efb0", "ref_doc_id": "e43cf8afd55e48d9ee2ac61401f185adf905af4a"}, "265688b6-0085-4521-9ed8-8701efb11e95": {"doc_hash": "5c06e17381763f2027f093d24a0c1405570b5c0cdb23d5f51d6cdcdf1176c661", "ref_doc_id": "0fcdd64eb9bed253d98dfd35bf9fd2c94eda243f"}, "7e125326-ddf9-4623-b0c8-12dbdd6721ac": {"doc_hash": "443093394df5b4e0e21ca2333e04fd615699abc4ea77aedc8221d9ae0cebe675", "ref_doc_id": "77f2a9109b6466e7187dcae8e22f3c723e655893"}, "9dcccb3a-27c1-459e-9a56-70cfcd18ea92": {"doc_hash": "cd15831ab4f46105b05eaf9341122b2e6e6496780b9730558fc696ee3ab220e1", "ref_doc_id": "e3cc832d6fe2f756d67f235c591d63fa9b607037"}, "513c4136-b633-4e86-a9c7-ec939670f48f": {"doc_hash": "5e59bb33bea83a1d141d773935420b08693de8ff500cb899b2b5f606fdff3bf0", "ref_doc_id": "e3cc832d6fe2f756d67f235c591d63fa9b607037"}, "e1b07707-e6c4-4c6b-88a6-8af5498aa8f4": {"doc_hash": "58d3af3370b7a3e3e284714f9ab4165656b46c74daf45eeb2d0d5dbb8a1c3d2c", "ref_doc_id": "68c63d9875ad39ea5768143ba31c64c6e0e1da80"}, "e89acb5a-5fc3-4159-91ea-b38334f32acc": {"doc_hash": "a885b584ba9cf02611221e295ca84ac6e58820a25f2db5219a2c65de2154bbd1", "ref_doc_id": "e41f7879d9748908dd4d9bab1a1b235b26041bdc"}, "bb28bb83-152d-489a-a2d8-1e13d868e9b1": {"doc_hash": "c6d88e9bbe422b924429cf94db0ba00d3a1f3b18f52fc6c4c1bc9cfeebb4b9f1", "ref_doc_id": "e41f7879d9748908dd4d9bab1a1b235b26041bdc"}, "5806b011-c870-4b63-994d-171b1e9fc170": {"doc_hash": "69541d5b6f135abe55dcc296c715baa83db57b55929e1baeb101b454b124c77d", "ref_doc_id": "fd05d5a63ecdadbba8e6b09198b1606ee575c9b8"}, "c190c342-7a8a-4f4d-b17a-d2d8df1d3a7f": {"doc_hash": "35ed5f1fa147bc6695335edd287ce7343af90fe0f3c8e7d399cd7ae7ac4bab66", "ref_doc_id": "fd05d5a63ecdadbba8e6b09198b1606ee575c9b8"}, "3d2b90ae-681c-4722-9014-1c83afa9fdfc": {"doc_hash": "ab5e228cc3f66e7125244c4982bda31525ec778785e104b2eaca50a6ddae7083", "ref_doc_id": "fd05d5a63ecdadbba8e6b09198b1606ee575c9b8"}, "7bfa9481-e849-459a-8e7c-77e46bcad072": {"doc_hash": "0cad0154dbe6bc3e0524fa07863624499d94813e27a35cbe97b3fff994a8c445", "ref_doc_id": "ab95f1de2e2de93eac2ad423619f72ae773278a2"}, "c301d2e8-a235-4850-9e9f-8864edd9d679": {"doc_hash": "9c0f148a20d110762ca30f3c584b323e71cca266b6a02b6ee98818af8d135d6a", "ref_doc_id": "ab95f1de2e2de93eac2ad423619f72ae773278a2"}, "3157cd8b-7a9d-45e6-874d-81500471fdfb": {"doc_hash": "f66bee7a50fd86566b8c795caa4d4411408417c786fd6119208111faaec44e51", "ref_doc_id": "a3022e826e483cd8837a733acecfd14d2da379e8"}, "3073d8d8-9797-4990-8a30-bcfad05b0822": {"doc_hash": "26493bc24698b68f8442e3d9e5f252aced4732e9fad690babcf9a3b17d4b3a10", "ref_doc_id": "a3022e826e483cd8837a733acecfd14d2da379e8"}, "9aa21791-9e21-4b52-9daf-2ab871cfd8ff": {"doc_hash": "470dfc959c29d0fbb53262b2d7113d38828c976dac8088d5c23a1c9e8dab8061", "ref_doc_id": "a3022e826e483cd8837a733acecfd14d2da379e8"}, "c5600297-18c9-4a17-86d9-8bff93698c75": {"doc_hash": "8c2bc8550d9dd9277f1beba17fd2a86cedf56d4caa5a9162fca806a3fe7e1f7c", "ref_doc_id": "c9edd2307625a65fdd81053b9a50307130046df1"}, "20db7f4a-f670-42bf-9670-5d950bb284db": {"doc_hash": "c841c7c97ed48a7d7a08054508648410287aecc9cd1b1a2a4ec565f3f1539505", "ref_doc_id": "42fdcccccdeb0f656fb0f92ca51531584d074c7c"}, "49774169-84b3-4f84-a6d3-01e4fcf41e7f": {"doc_hash": "3f0bcbb0555322d55240cfce2a6add16a7908c3b563e8896f0fd1d2d97c2f4c0", "ref_doc_id": "79ea47c234c09e057332f386000becf3689cb53e"}, "c1d6468e-8729-4789-a734-62673ffe9181": {"doc_hash": "0c70bff2ecfd26849a6cb1dc0e032ad2ced788ff95a1ad1a0186d1c422c61dc7", "ref_doc_id": "81705d6a0e8a1cb4944b5cbd4b42bd68d2fe98d3"}, "428dc21f-38ff-4705-9e51-cdcce14da1c4": {"doc_hash": "18e593111984416c1a23371516f7a893bd2064695509a422ddbded854fd79d04", "ref_doc_id": "81705d6a0e8a1cb4944b5cbd4b42bd68d2fe98d3"}, "6882259f-d5f1-4055-b0ba-210914dd2514": {"doc_hash": "fbaff272dcec72c73d0b06532ebf0be4141a04736ef9870dca61c77c8d94a64a", "ref_doc_id": "81705d6a0e8a1cb4944b5cbd4b42bd68d2fe98d3"}, "a0351c26-3890-4129-bb87-de34c4d72cdc": {"doc_hash": "7c6b15a75b443e8ace1876df0a831d82e2b9a8776e7d19dc79a1068a6532bb94", "ref_doc_id": "81705d6a0e8a1cb4944b5cbd4b42bd68d2fe98d3"}, "4c4b4a2e-990c-4218-8883-8f2075274816": {"doc_hash": "d865f7f033547b2b3341021bb0dedf6beafb0f240e90f12dbf939db5fe496559", "ref_doc_id": "81705d6a0e8a1cb4944b5cbd4b42bd68d2fe98d3"}, "2e9bab57-5e3f-4000-b5d9-e790517f8c8b": {"doc_hash": "0382b0c73cb520d491d118592d2c619d9910cd0ef9886a70ccd3f96dbdcc6b7f", "ref_doc_id": "732a721361ad62ac5f3a9fbc5bdd927cf971040f"}, "ac7970c3-f6d0-4eaa-bab0-66315a30f96e": {"doc_hash": "68069efa31630759dd1187cb5b93609ef68b2b5e523e58621fc2fc11c5808d77", "ref_doc_id": "732a721361ad62ac5f3a9fbc5bdd927cf971040f"}, "7c4068d7-562b-4907-b442-184f9790a0f8": {"doc_hash": "b6730ad61c1e634fabf2573d6df04ae6db18505403cc1144ca33097035610bd3", "ref_doc_id": "732a721361ad62ac5f3a9fbc5bdd927cf971040f"}, "4725b319-e61f-4d04-9a51-b84ba7acba2b": {"doc_hash": "030bbc200977ca7c812fdbed0faef4f21670daa5bc76ef47b5dd18f94e3117af", "ref_doc_id": "732a721361ad62ac5f3a9fbc5bdd927cf971040f"}, "27fdddf4-6cd8-4dc6-bbeb-b4032b72f688": {"doc_hash": "f914f915f9d573612eb854e9c9a4750f68aa1e1a5ef21852a0ec1198cbcafff0", "ref_doc_id": "c4c4bcbab636b1dd619f78fc1e5ce1ee83282903"}, "da434633-0159-4d80-bb68-c28230bb5ed6": {"doc_hash": "e8e852997868741cac792d46152cd3dcbc435e635b46ebcf622446e6a2e94362", "ref_doc_id": "5a36a874d6a46505d4355f9430a68fa0f2410ca0"}, "a5aa3428-01ff-41dd-a480-ed1fd3d7bebf": {"doc_hash": "81b1ec3895ad3f1ad1580fdc95e3a1687360e1a465de107790b16810eae76be4", "ref_doc_id": "5a36a874d6a46505d4355f9430a68fa0f2410ca0"}, "17f10c9f-c4e2-44d7-adf8-ca09975fd2a3": {"doc_hash": "1dd175f91cdf80e492d9619d66d9af7ffd9b6be7dd2585d49bd816dd0afa4d09", "ref_doc_id": "039db0c06a94a50f8f4edc7d931ffa49b970435e"}, "036b31d7-843a-4ca3-90bd-cb57528b2fde": {"doc_hash": "6198dbe08947a77c30e7de79e5c2afc3cd6ebcf12ee81458ed00d445efc3a348", "ref_doc_id": "039db0c06a94a50f8f4edc7d931ffa49b970435e"}, "2edc2925-818e-4ce2-b065-d486bf9048da": {"doc_hash": "ff6af1da5ab57e948868317575e3a907f10bc9eead58f861525413fb3b5c71df", "ref_doc_id": "1c80abef9fc5afafc57e1cffb1a05074f3ae33bf"}, "cf79296c-0c2a-4448-a708-879b4504c44c": {"doc_hash": "37d57b0ce928927fa04675c765b0722ad622834f90335e81747d386c5a588b69", "ref_doc_id": "16e87d356871ed695736b1b738a4c310ac01bbe5"}, "b5bece55-4304-42fa-b591-4e577843b588": {"doc_hash": "4c1c6b3e090eecd94781e1318d4e4caf329c838645d953437fdce318368a33fe", "ref_doc_id": "d154c4ece5be2ea37cdfb5eb9312ce1a0e43a354"}, "af096b3b-b5e1-460f-a9c4-532191068881": {"doc_hash": "7a66016c34b71e6b8dc891f5cc97f39a916097dde31a17e81d0621968d636f6e", "ref_doc_id": "d154c4ece5be2ea37cdfb5eb9312ce1a0e43a354"}, "7813138e-d920-4e63-b342-b1be3b88a637": {"doc_hash": "11cf75c3fe930b387d431e9e0f249b3d39ef7817545ed4d5eb60966fe2354cb3", "ref_doc_id": "2f17ddaeb714a01481f19a3c3894db065f97dda8"}, "de68509b-f8b9-46fd-b1de-76a88888cbe4": {"doc_hash": "fba336a8b9cdb03a2f657b45878de70398db8c0afac917589593d16206ba2457", "ref_doc_id": "f3eee86604e1ec407c83af512d89851d7af959ac"}, "c3b85b37-bda6-4673-a772-583eea5cdff6": {"doc_hash": "b06a1d2767f1e224932d59b14df07a785e0ff7b89f4fe0aca1cbacc2c5502d06", "ref_doc_id": "425da9f086259e4ffecb4a07c95f2b3e4beca9f1"}, "b2facfce-53c8-478a-88e1-c2432e670164": {"doc_hash": "c0217bd062a12b38c520daa9ba94710da7347718f36ef940eef96ee9182edbc0", "ref_doc_id": "b1ddaab317daeef54ac9e5aeb656e58b8c01fdad"}, "5d762809-6ecd-43bf-9444-4c79316b6d47": {"doc_hash": "bcab16d45f5cc5318a03b1971a7bf717e8f6653336a56efe8b791d7e02d82c62", "ref_doc_id": "e70b59e299673d066933c8b4c45e6856baf5a4de"}, "8598e285-2efd-4fbc-af55-94d9467b3e63": {"doc_hash": "4579ff414d83b00071a4238277e5765cf5e2bc6c9151fca63aa5b68a9819705f", "ref_doc_id": "5714d34302ae0abed4e4addc6020868169afdbc1"}, "8d965255-2d90-4090-9393-08dc2f1516bc": {"doc_hash": "0925dac1e1923ff15890775a52392ed027a878cc702d8a8345c26ec8ac5b4d49", "ref_doc_id": "705686c43c03d89097d61b56abfbf37b1eef0769"}, "086cb276-bc8a-4132-b4ae-80b731799234": {"doc_hash": "be2195ae438d98e36a1772af5a9e388e9385758db8a0a9a7a692d3d2547a1b24", "ref_doc_id": "0b6efa237ad53fcbced4be2ffb5696533afd43c7"}, "10b56949-4499-43f7-bb0f-a7deb9dfe3ff": {"doc_hash": "f76c46847bf12bad80cc910aa74bf74c9765f677cb34952247e4a7e70fc81dcc", "ref_doc_id": "e2d38dba3c76ad728765886214611d9ebdd91b57"}, "22b223fd-c2ea-4190-a77c-1ff2dcbff401": {"doc_hash": "c1979704026eb814af446d2f030db80746b5635d01fbf3bd9c481c54b1cd16d8", "ref_doc_id": "e2d38dba3c76ad728765886214611d9ebdd91b57"}, "97f46672-1987-4a1a-a25a-9c193668fd6f": {"doc_hash": "c0ebae2af7e6a5f570f29d201d9836df59caaf14816c80ca8d69e3709135b999", "ref_doc_id": "5bed2f1f3fc1dabb00593da8f76b1530db9f49ae"}, "898a874e-5386-4499-9fa4-ef2848ee7cab": {"doc_hash": "6a5c986ae78782f5950a2536d7302c43b3b36307fe4cdc80b99a8795dc72b73a", "ref_doc_id": "49a591bef45823719a5795ac3160fc3bda4efab8"}, "24db16c4-252e-4a9f-ba81-57da2906fdfa": {"doc_hash": "e62d98323a8054d745bdbd918bb54eb578dce09fc941241b3ff98de72f9fa7e0", "ref_doc_id": "079a42df78d6665c2dc34be520f85fc4fb419d31"}, "b5ed452c-61b5-4cf7-91fe-7d8930d3cf51": {"doc_hash": "2f2855638cc10954d7f589f097a6f19709ef1b879b9c43f971cd48138395d210", "ref_doc_id": "079a42df78d6665c2dc34be520f85fc4fb419d31"}, "dfaaddb7-1e44-4ffc-b0b7-7ab651c56c9c": {"doc_hash": "9f297b71d78bdb65e7fbd122bd1316f167ef216eab6e4aee7407f6ebab174478", "ref_doc_id": "079a42df78d6665c2dc34be520f85fc4fb419d31"}, "ca6d435d-980c-4b54-b2c7-5eb4979a514c": {"doc_hash": "977180e40157451b9db11976710edac8a263aab44d66fa201a342ca2effc1d19", "ref_doc_id": "079a42df78d6665c2dc34be520f85fc4fb419d31"}, "5cfa03f6-c316-406b-b1e3-c6e8c4807487": {"doc_hash": "161699514478e486f411a17c090a5abacb0c17d812deaac45528a60b0d5292a1", "ref_doc_id": "df21fb863c7a54056ce6cbb77646df4ec5807b73"}, "866ad996-0115-4933-bffc-55ce76f037e0": {"doc_hash": "75639aca3bc84d77f8968903904a1bae3fe2e0385bae1ecb213f6f23f12bc3eb", "ref_doc_id": "bf4ac998cdc88ba04bc6823628f04941e9e9d4b5"}, "eb925b9f-3849-4037-b351-105e2bc67052": {"doc_hash": "9cbd6ec722ce206b17af05742a5435a6b7abc81b1c79b500ed12a72050423e56", "ref_doc_id": "bf4ac998cdc88ba04bc6823628f04941e9e9d4b5"}, "d9202122-fe39-4bd6-a0cf-a0f5ab140d21": {"doc_hash": "a5086ed653128246a240a29c4db32b35e89ea5af7470f1cb00f96a4e2166bc4f", "ref_doc_id": "b54e32475ed6cfae81266e637c1e45cc48a82473"}, "37312899-f739-4808-ba26-be504f789101": {"doc_hash": "2897e8f10239eede0dc78152fd8efbf927b6441ccbf831e7973ed202afc85b1a", "ref_doc_id": "b54e32475ed6cfae81266e637c1e45cc48a82473"}, "53ba3d5c-411e-4da2-9e06-013d5fb6e30a": {"doc_hash": "6a5cc0b90af938db65d39f46f568433123786161ccbb422aa647838784edd133", "ref_doc_id": "a068f24bd73f8ffafcc74478ae897e60ecb32938"}, "cfcd108d-6823-40b8-8113-334c02504c51": {"doc_hash": "5c7cdf46b63fe1ec2ac3559eec7092c97794c549d2f5070e3c77417c52ce4329", "ref_doc_id": "a068f24bd73f8ffafcc74478ae897e60ecb32938"}, "f3da2363-bfe0-431d-8cd8-331ea769ba6c": {"doc_hash": "3882f409aac47e6ef9f5222280e00984738ab4cbe124d5ed66f9e1691acf5238", "ref_doc_id": "ef1783aa8603f35f060be7d34ea798a890000eb3"}, "7017c70e-a88f-4fe3-970d-0657f96e4cd1": {"doc_hash": "a0556f2d00848ddc4385cebb4ee11d7f7dba5a0c264d1c590ca238595696b1e1", "ref_doc_id": "4423cef4b4cba1df1f2a17b34b41f0f2df86886c"}, "789f5a51-ff97-4f3a-9017-1df01eee74ad": {"doc_hash": "3d484fef0b39f503a64140cf2cc1dc743e69122ba3dda5fcc879d2030aa598af", "ref_doc_id": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3"}, "f7a3fc68-2ba1-45da-a9c4-e1dfb13aeaaf": {"doc_hash": "82ae0987629fb1a0fd0cb6e4b3b3427d09c170196cc71d865c6d8d0dafb2f6d4", "ref_doc_id": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3"}, "c3a10e06-9909-4a65-b43b-9462679d9ed5": {"doc_hash": "b2d1fc670c061e6cb674d1af93036745478cd41d9d732a97506bdb350aad1786", "ref_doc_id": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3"}, "36279905-28ce-4eb6-9428-b4fa39d287df": {"doc_hash": "2e800e7b4b63a310ec24781af1c30416938e623b68c23b9d083f406624074bdc", "ref_doc_id": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3"}, "77843106-707d-41fe-96f0-a03309f9f5f8": {"doc_hash": "27fca305c812d6153512941fbc757137ef7f6b4824e5434bbce6701aba977141", "ref_doc_id": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3"}, "39df2fb5-a6e1-41af-a7c1-0540578c1140": {"doc_hash": "63fa5a457abdec995a879544256c3be812083bbe597b636ad13bc0b2e4060b37", "ref_doc_id": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3"}, "f77bbf06-209f-4c00-99ae-a2a49c37be88": {"doc_hash": "de71de647850569b00eeaf3d65b02d1e6bd902ccd297d19e64d4caaa7e2f433d", "ref_doc_id": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3"}, "f3d32721-dd0d-4c49-bcc8-f6d6c97b12ee": {"doc_hash": "7f2526edd2e822d38d9330a063478415b1ec82258534835946eaa73e8277a5ed", "ref_doc_id": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3"}, "f5570f51-f130-4fbe-8028-9d10e3c8b84f": {"doc_hash": "2d93c3391a1e5c548f3e4389d68b6ff92396fce15b5abdc70bc1c1cf06e2b155", "ref_doc_id": "c24a5c4326d98c87d2aa6b84faa0244600e62056"}, "5654ac06-1082-47a4-8c99-67585cc4e1ee": {"doc_hash": "7248efed7d1f039ff64e8b0bd33ed0c40e7404cb048bc0f48ec30af9b25e3330", "ref_doc_id": "d37cc6b47345fe3830a5e6889682f63db50bd1e0"}, "279e97fe-0eef-4e12-8aaa-80bdc0c4f709": {"doc_hash": "ed2fcb1b9da8ce7f40bf3cf81cfef2ac3a5cfa3c6c2867fc56c2d8a9305a74ec", "ref_doc_id": "dd0f3060c5a42be9096ff004a1ece84711081f22"}, "5540414c-c000-4843-b825-42958f40354e": {"doc_hash": "ab72bb909ce0bbd92f22b3e25095ea6d253538feaf54a48ccf2cdd80677ed9b0", "ref_doc_id": "9e4db402563c32d29fb756ca993ad7b47a6ffbc4"}, "65d436cf-0eaf-4325-ba01-3cd3f562de8d": {"doc_hash": "dd982b991de6332deb99bb5be8c363324021d553c318adf7ccdeda2901973429", "ref_doc_id": "ec908dbaa67bf94f6dc9a21f4f1b09a62d9ce87e"}, "d3b98457-d3f9-4c4c-8f89-e4985d213a22": {"doc_hash": "4b34930c9a9e8ef01827f07c5cfd962d83fb51ca64e6380368c8b1a9e64f35b7", "ref_doc_id": "794fea240b5ad2409d61c4470a5be55799bbb769"}, "00aa95e8-3dd7-48b8-92b8-94774da4564e": {"doc_hash": "841803f0ccb5c20519d5978541d99639cfc65dedbf099372dff789fd0ef688fa", "ref_doc_id": "ba1d102a51a8cfff61f5818ec3658435e559ade8"}}, "docstore/data": {"81a71861-ba9f-4557-8854-4957af88c7f0": {"__data__": {"text": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: \"Flipside Rest API\"\n  description: Used to run sql queries on Flipside blockchain data\npaths:\n  /queries:\n    post:\n      summary: Queue up the execeution of a sql statement and get a token back which you can use to poll the result\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ExecParam\"\n            examples:\n              Simple:\n                value:\n                  sql: select TX_ID from ethereum.TRANSACTIONS limit 10\n              With-Parameters:\n                value:\n                  sql: select {{col}} from ethereum.TRANSACTIONS limit {{amount}}\n                  params:\n                    col: TX_ID\n                    amount: 10\n              All:\n                value:\n                  sql: select {{col}} from ethereum.TRANSACTIONS limit {{amount}}\n                  params:\n                    col: TX_ID\n                    amount: 10\n                  cache: true\n                  ttl_minutes: 15\n      responses:\n        \"200\":\n          description: token used to poll for query results\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - token\n                  - cached\n                properties:\n                  token:\n                    type: string\n                    description: token used to poll for query result\n                    example: queryRun-3faa00f922cf482ef798b1ec98ee3c16\n                  cached:\n                    type: boolean\n                    description: true if the query result is already cached\n        \"400\":\n          description: error state\n  ", "doc_id": "81a71861-ba9f-4557-8854-4957af88c7f0", "embedding": null, "doc_hash": "c5524ba9ebea72691c74596712422fce9d1701ae344ab73a4306fdfea374e051", "extra_info": {"file_path": ".gitbook/assets/rest_api.yml", "file_name": "rest_api.yml"}, "node_info": {"start": 0, "end": 1763, "_node_type": "1"}, "relationships": {"1": "5671492aec033f84da2812e86088ee4ed10051d7", "3": "1544b8e4-1031-427b-b421-1be18dd5030d"}}, "__type__": "1"}, "1544b8e4-1031-427b-b421-1be18dd5030d": {"__data__": {"text": "\"400\":\n          description: error state\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /queries/{token}:\n    get:\n      summary: Poll this endpoint to get the response of your query run\n      parameters:\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n          description: The token received as a response from POST /queries\n          example: queryRun-3faa00f922cf482ef798b1ec98ee3c16\n        - in: query\n          name: pageNumber\n          required: false\n          schema:\n            type: number\n        - in: query\n          name: pageSize\n          required: false\n          schema:\n            type: number\n      responses:\n        \"200\":\n          description: results of query run and other metadata\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/QueryResults\"\n        \"400\":\n          description: error state\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\ncomponents:\n  schemas:\n    ExecParam:\n      type: object\n      required:\n        - sql\n      properties:\n        sql:\n          type: string\n          description: sql statement to execute\n          example: select TX_ID from ethereum.TRANSACTIONS limit 10\n        ttl_minutes:\n          type: integer\n          minimum: 1\n          maximum: 1440\n          default: 15\n          description: Amount of time query result will remain in cache.\n        cache:\n          type: boolean\n          default: true\n          description: If false, will ignore cached results and re-execute.\n        params:\n          type: object\n          description: Key values to replace sql statement with in sql templated parameters.\n          additionalProperties:\n            type: string\n    QueryResults:\n      type: object\n      required:\n        -", "doc_id": "1544b8e4-1031-427b-b421-1be18dd5030d", "embedding": null, "doc_hash": "ba82fa5d2763a121497eceeedc60b5f2efa502de2cd1fdfd7384c2ec7859ac42", "extra_info": {"file_path": ".gitbook/assets/rest_api.yml", "file_name": "rest_api.yml"}, "node_info": {"start": 1734, "end": 3721, "_node_type": "1"}, "relationships": {"1": "5671492aec033f84da2812e86088ee4ed10051d7", "2": "81a71861-ba9f-4557-8854-4957af88c7f0", "3": "7b5ef479-26f1-4977-b29b-a0ee52851a2c"}}, "__type__": "1"}, "7b5ef479-26f1-4977-b29b-a0ee52851a2c": {"__data__": {"text": "type: object\n      required:\n        - results\n        - columnLabels\n        - status\n        - startedAt\n        - endedAt\n        - columnTypes\n      properties:\n        results:\n          type: array\n          description: Array of rows. Each row is an array of strings. Each element in a row corresponds to its respective columnLabel.\n          example: [[\"1\", \"2\", \"3\"], [\"6\", \"5\", \"4\"]]\n          items:\n            type: array\n            items:\n              type: string\n        columnLabels:\n          type: array\n          description: Array of rows. Each row is an array of strings. Each element in a row corresponds to its respective columnLabel.\n          example: [\"day\", \"avg_deposits\", \"avg_borrowed\"]\n          items:\n            type: string\n        columnTypes:\n          type: array\n          items:\n            type: string\n          description: Describes data type of each column in a row.\n          example: [\"timestamp\", \"number\", \"number\"]\n        status:\n          type: string\n          enum: [\"finished\", \"running\", \"failed\"]\n          description: If running, keep polling until finished.\n        message:\n          type: string\n          description: Indicates an error message\n        startedAt:\n          type: string\n          description: Shows when query started running (ISO 8601)\n          example: \"2022-05-07T00:15:00.000Z\"\n        endedAt:\n          type: string\n          description: Shows when query ended running (ISO 8601)\n          example: \"2022-05-07T00:15:01.000Z\"\n    Error:\n      type: object\n      required:\n        - errors\n      properties:\n        errors:\n          type: object\n          additionalProperties: true\n\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-API-KEY\n\nsecurity:\n  - ApiKeyAuth: []\n\nservers:\n  - description: Production server\n    url: https://node-api.flipsidecrypto.com/\n", "doc_id": "7b5ef479-26f1-4977-b29b-a0ee52851a2c", "embedding": null, "doc_hash": "e83d659541e4e2fed7202d515b42549ebeeb9d675b4570935d09877f6f2c659b", "extra_info": {"file_path": ".gitbook/assets/rest_api.yml", "file_name": "rest_api.yml"}, "node_info": {"start": 3713, "end": 5602, "_node_type": "1"}, "relationships": {"1": "5671492aec033f84da2812e86088ee4ed10051d7", "2": "1544b8e4-1031-427b-b421-1be18dd5030d"}}, "__type__": "1"}, "103f2a97-0678-464e-ab58-2f9f5586cae5": {"__data__": {"text": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: \"Flipside Rest API\"\n  description: Used to run sql queries on Flipside blockchain data\npaths:\n  /queries:\n    post:\n      summary: Queue up the execeution of a sql statement and get a token back which you can use to poll the result\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ExecParam\"\n            examples:\n              Simple:\n                value:\n                  sql: select TX_ID from ethereum.TRANSACTIONS limit 10\n              With-Parameters:\n                value:\n                  sql: select {{col}} from ethereum.TRANSACTIONS limit {{amount}}\n                  params:\n                    col: TX_ID\n                    amount: 10\n              All:\n                value:\n                  sql: select {{col}} from ethereum.TRANSACTIONS limit {{amount}}\n                  params:\n                    col: TX_ID\n                    amount: 10\n                  cache: true\n                  ttl_minutes: 15\n      responses:\n        \"200\":\n          description: token used to poll for query results\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - token\n                  - cached\n                properties:\n                  token:\n                    type: string\n                    description: token used to poll for query result\n                    example: queryRun-3faa00f922cf482ef798b1ec98ee3c16\n                  cached:\n                    type: boolean\n                    description: true if the query result is already cached\n        \"400\":\n  ", "doc_id": "103f2a97-0678-464e-ab58-2f9f5586cae5", "embedding": null, "doc_hash": "f9102b55ee61011e0c39d631a3f1bfdbc4853b29a09cd76b50d5c427ddbbe69a", "extra_info": {"file_path": ".gitbook/assets/rest_api_2022-08-31.yml", "file_name": "rest_api_2022-08-31.yml"}, "node_info": {"start": 0, "end": 1728, "_node_type": "1"}, "relationships": {"1": "0ed70d273ac7dd6a327f2f46a961848fef52b208", "3": "aa5b371e-cc42-4f42-96e5-a3a815ea71df"}}, "__type__": "1"}, "aa5b371e-cc42-4f42-96e5-a3a815ea71df": {"__data__": {"text": "result is already cached\n        \"400\":\n          description: error state\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /queries/{token}:\n    get:\n      summary: Poll this endpoint to get the response of your query run\n      parameters:\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n          description: The token received as a response from POST /queries\n          example: queryRun-3faa00f922cf482ef798b1ec98ee3c16\n        - in: query\n          name: pageNumber\n          required: false\n          schema:\n            type: number\n        - in: query\n          name: pageSize\n          required: false\n          schema:\n            type: number\n      responses:\n        \"200\":\n          description: results of query run and other metadata\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/QueryResults\"\n        \"400\":\n          description: error state\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\ncomponents:\n  schemas:\n    ExecParam:\n      type: object\n      required:\n        - sql\n      properties:\n        sql:\n          type: string\n          description: sql statement to execute\n          example: select TX_ID from ethereum.TRANSACTIONS limit 10\n        ttl_minutes:\n          type: integer\n          minimum: 1\n          maximum: 1440\n          default: 15\n          description: Amount of time query result will remain in cache.\n        cache:\n          type: boolean\n          default: true\n          description: If false, will ignore cached results and re-execute.\n        params:\n          type: object\n          description: Key values to replace sql statement with in sql templated parameters.\n          additionalProperties:\n            type: string\n   ", "doc_id": "aa5b371e-cc42-4f42-96e5-a3a815ea71df", "embedding": null, "doc_hash": "60242138704d1265c8bc4a738d3b11894d6959c5b78ea2503c01e0af54b227de", "extra_info": {"file_path": ".gitbook/assets/rest_api_2022-08-31.yml", "file_name": "rest_api_2022-08-31.yml"}, "node_info": {"start": 1700, "end": 3661, "_node_type": "1"}, "relationships": {"1": "0ed70d273ac7dd6a327f2f46a961848fef52b208", "2": "103f2a97-0678-464e-ab58-2f9f5586cae5", "3": "82abe1fd-1144-47de-a499-de3c36b02c24"}}, "__type__": "1"}, "82abe1fd-1144-47de-a499-de3c36b02c24": {"__data__": {"text": "           type: string\n    QueryResults:\n      type: object\n      required:\n        - results\n        - columnLabels\n        - status\n        - startedAt\n        - endedAt\n        - columnTypes\n      properties:\n        results:\n          type: array\n          description: Array of rows. Each row is an array of strings. Each element in a row corresponds to its respective columnLabel.\n          example: [[\"1\", \"2\", \"3\"], [\"6\", \"5\", \"4\"]]\n          items:\n            type: array\n            items:\n              type: string\n        columnLabels:\n          type: array\n          description: Array of rows. Each row is an array of strings. Each element in a row corresponds to its respective columnLabel.\n          example: [\"day\", \"avg_deposits\", \"avg_borrowed\"]\n          items:\n            type: string\n        columnTypes:\n          type: array\n          items:\n            type: string\n          description: Describes data type of each column in a row.\n          example: [\"timestamp\", \"number\", \"number\"]\n        status:\n          type: string\n          enum: [\"finished\", \"running\", \"failed\"]\n          description: If running, keep polling until finished.\n        message:\n          type: string\n          description: Indicates an error message\n        startedAt:\n          type: string\n          description: Shows when query started running (ISO 8601)\n          example: \"2022-05-07T00:15:00.000Z\"\n        endedAt:\n          type: string\n          description: Shows when query ended running (ISO 8601)\n          example: \"2022-05-07T00:15:01.000Z\"\n    Error:\n      type: object\n      required:\n        - errors\n      properties:\n        errors:\n          type: object\n          additionalProperties: true\n\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-API-KEY\n\nsecurity:\n  - ApiKeyAuth: []\n\nservers:\n  - description: Production server\n    url: https://node-api.flipsidecrypto.com\n", "doc_id": "82abe1fd-1144-47de-a499-de3c36b02c24", "embedding": null, "doc_hash": "620d15f15f36d317beb8f333b4f662254edb0985c9d4e9d0eaa2c746762d5667", "extra_info": {"file_path": ".gitbook/assets/rest_api_2022-08-31.yml", "file_name": "rest_api_2022-08-31.yml"}, "node_info": {"start": 3663, "end": 5599, "_node_type": "1"}, "relationships": {"1": "0ed70d273ac7dd6a327f2f46a961848fef52b208", "2": "aa5b371e-cc42-4f42-96e5-a3a815ea71df"}}, "__type__": "1"}, "66e7b425-f4a9-41f6-bf01-d44bc4b4e8b1": {"__data__": {"text": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: \"Flipside Rest API\"\n  description: Used to run sql queries on Flipside blockchain data\npaths:\n  /queries:\n    post:\n      summary: Queue up the execeution of a sql statement and get a token back which you can use to poll the result\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ExecParam\"\n            examples:\n              Simple:\n                value:\n                  sql: select TX_ID from ethereum.TRANSACTIONS limit 10\n              With-Parameters:\n                value:\n                  sql: select {{col}} from ethereum.TRANSACTIONS limit {{amount}}\n                  params:\n                    col: TX_ID\n                    amount: 10\n              All:\n                value:\n                  sql: select {{col}} from ethereum.TRANSACTIONS limit {{amount}}\n                  params:\n                    col: TX_ID\n                    amount: 10\n                  cache: true\n                  ttl_minutes: 15\n      responses:\n        \"200\":\n          description: token used to poll for query results\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - token\n                  - cached\n                properties:\n                  token:\n                    type: string\n                    description: token used to poll for query result\n                    example: queryRun-3faa00f922cf482ef798b1ec98ee3c16\n                  cached:\n                    type: boolean\n                    description: true if the query result is already cached\n        \"400\":\n          description: error state\n", "doc_id": "66e7b425-f4a9-41f6-bf01-d44bc4b4e8b1", "embedding": null, "doc_hash": "dd4e3d75b4a98e7d104b7e6010d9287be1fd513534c7f22389fabd62afb1e11f", "extra_info": {"file_path": ".gitbook/assets/restapi_docs.yml", "file_name": "restapi_docs.yml"}, "node_info": {"start": 0, "end": 1761, "_node_type": "1"}, "relationships": {"1": "9e4404da59413b5bded302820d912ae0b583109c", "3": "26c3548b-ddcd-42dc-8b15-236cc571d72d"}}, "__type__": "1"}, "26c3548b-ddcd-42dc-8b15-236cc571d72d": {"__data__": {"text": "  \"400\":\n          description: error state\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /queries/{token}:\n    get:\n      summary: Poll this endpoint to get the response of your query run\n      parameters:\n        - in: path\n          name: token\n          required: true\n          schema:\n            type: string\n          description: The token received as a response from POST /queries\n          example: queryRun-3faa00f922cf482ef798b1ec98ee3c16\n        - in: query\n          name: limit\n          required: false\n          schema:\n            type: number\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: number\n      responses:\n        \"200\":\n          description: results of query run and other metadata\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/QueryResults\"\n        \"400\":\n          description: error state\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\ncomponents:\n  schemas:\n    ExecParam:\n      type: object\n      required:\n        - sql\n      properties:\n        sql:\n          type: string\n          description: sql statement to execute\n          example: select TX_ID from ethereum.TRANSACTIONS limit 10\n        ttl_minutes:\n          type: integer\n          minimum: 1\n          maximum: 1440\n          default: 15\n          description: Amount of time query result will remain in cache.\n        cache:\n          type: boolean\n          default: true\n          description: If false, will ignore cached results and re-execute.\n        params:\n          type: object\n          description: Key values to replace sql statement with in sql templated parameters.\n          additionalProperties:\n            type: string\n    QueryResults:\n      type: object\n      required:\n      ", "doc_id": "26c3548b-ddcd-42dc-8b15-236cc571d72d", "embedding": null, "doc_hash": "dfd4f1422db269962f26cb9d8c4405a4ae4938519899eed2f19e6296c0047120", "extra_info": {"file_path": ".gitbook/assets/restapi_docs.yml", "file_name": "restapi_docs.yml"}, "node_info": {"start": 1732, "end": 3711, "_node_type": "1"}, "relationships": {"1": "9e4404da59413b5bded302820d912ae0b583109c", "2": "66e7b425-f4a9-41f6-bf01-d44bc4b4e8b1", "3": "ef90062e-9ab3-40c0-88ca-cabda8256d08"}}, "__type__": "1"}, "ef90062e-9ab3-40c0-88ca-cabda8256d08": {"__data__": {"text": "  type: object\n      required:\n        - results\n        - columnLabels\n        - status\n        - startedAt\n        - endedAt\n        - columnTypes\n      properties:\n        results:\n          type: array\n          description: Array of rows. Each row is an array of strings. Each element in a row corresponds to its respective columnLabel.\n          example: [[\"1\", \"2\", \"3\"], [\"6\", \"5\", \"4\"]]\n          items:\n            type: array\n            items:\n              type: string\n        columnLabels:\n          type: array\n          description: Array of rows. Each row is an array of strings. Each element in a row corresponds to its respective columnLabel.\n          example: [\"day\", \"avg_deposits\", \"avg_borrowed\"]\n          items:\n            type: string\n        columnTypes:\n          type: array\n          items:\n            type: string\n          description: Describes data type of each column in a row.\n          example: [\"timestamp\", \"number\", \"number\"]\n        status:\n          type: string\n          enum: [\"finished\", \"running\", \"failed\"]\n          description: If running, keep polling until finished.\n        message:\n          type: string\n          description: Indicates an error message\n        startedAt:\n          type: string\n          description: Shows when query started running (ISO 8601)\n          example: \"2022-05-07T00:15:00.000Z\"\n        endedAt:\n          type: string\n          description: Shows when query ended running (ISO 8601)\n          example: \"2022-05-07T00:15:01.000Z\"\n    Error:\n      type: object\n      required:\n        - errors\n      properties:\n        errors:\n          type: object\n          additionalProperties: true\n\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-API-KEY\n\nsecurity:\n  - ApiKeyAuth: []\n\nservers:\n  - description: Production server\n    url: https://node-api.flipsidecrypto.com/\n  - description: Local Dev\n    url: http://localhost:3001/\n  - description: Staging\n    url: https://node-api.flipside.kitchen/\n", "doc_id": "ef90062e-9ab3-40c0-88ca-cabda8256d08", "embedding": null, "doc_hash": "959b14fbc0690c3d41ca425d42975c86c4681a24a86c5afa415cf407ad9c2308", "extra_info": {"file_path": ".gitbook/assets/restapi_docs.yml", "file_name": "restapi_docs.yml"}, "node_info": {"start": 3704, "end": 5723, "_node_type": "1"}, "relationships": {"1": "9e4404da59413b5bded302820d912ae0b583109c", "2": "26c3548b-ddcd-42dc-8b15-236cc571d72d"}}, "__type__": "1"}, "b9885655-9735-451e-8fae-b7ec70b7d4d8": {"__data__": {"text": "---\ndescription: >-\n  Flipside generates the most reliable and comprehensive blockchain data. And we\n  have the tools that let you build more with it. All for free.\n---\n\n# Welcome to Flipside!\n\n### Getting Started\n\n\ud83c\udf32 **Flipside Data Studio**: [flipsidecrypto.xyz](http://www.flipsidecrypto.xyz/)\\\nAnalyze blockchain data, visualize it, and share a dashboard instantly. \\\nIdeal for: data exploration, analytical storytelling, comprehensive dashboard-building.\\\n\\\n\ud83c\udf44 **Flipside API**: [flipsidecrypto.xyz/account/api-keys](https://flipsidecrypto.xyz/account/api-keys)\\\nSkip the app, and submit queries directly from your dev or data science environment.\\\nIdeal for: building a custom analytics app, constructing a trading model, or using Flipside data in R or Python for data science work.\\\n\\\n\u2744\ufe0f **Flipside Shares** (via Snowflake): [data.flipsidecrypto.xyz](https://data.flipsidecrypto.xyz/)\\\nWant Flipside's entire database in your stack? We can do that. Just [reach out](https://data.flipsidecrypto.xyz/). \\\nIdeal for: teams that rely on blockchain data to operate, understand their users, or make applications more web3-connected.\n\n### Important Things to Know\n\n* All our data is accessible via SQL queries, and you'll use the [Snowflake SQL](our-data/using-snowflake-sql.md) dialect to access it.\n* Our core app is brand new (launched Feb 2023) and some [documentation](our-app/getting-around-the-app/) is available \u2014 we're actively building this out, including both text and video content \u2014 if you have questions that aren't answered here, please reach out in [Discord](https://discord.gg/ZmU3jQuu6W).\n* Our data structures are and designed for ease of use and efficient querying, and are  [extensively documented](our-data/data-table-documentation.md). We regularly update our data structures to optimize efficiency.\n* Latency varies from table to table, but typically lags either 1 hour or 1 day at most, find the most up-to-date view on latency on [this dashboard](https://flipsidecrypto.xyz/flipsidecrypto/flipside-data-latency-49ZITn)!\n* If you run into difficulty getting your queries to run, we provide [a guide for efficient query writing](our-data/writing-efficient-queries.md). Need more assistance? Get help anytime in our [Discord](https://discord.gg/ZmU3jQuu6W).\n* Learn more about [contract decoding](our-data/contract-decoding-and-abis.md), and adding ABIs.\n\n### What blockchains and projects does Flipside have data on?\n\nIf it happens on-chain, we've got it.&#x20;\n\nData includes core tables (blocks, events, transactions) for every chain, with added 'easy' tables (swaps, prices, etc.) and project-specific tables modeled by the Flipside community.\n\nSee our [Data Table Documentation](our-data/data-table-documentation.md) for a current list of supported chains. Don\u2019t see the chain you\u2019re looking for? We add new chains regularly, but you can drop a request in our [Discord](https://discord.gg/ZmU3jQuu6W) anytime.\n", "doc_id": "b9885655-9735-451e-8fae-b7ec70b7d4d8", "embedding": null, "doc_hash": "640e57b2157089697d2f6c8acebe98562fb1dcfcd6abf82b5b297bc8a8633324", "extra_info": {"file_path": "README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 2936, "_node_type": "1"}, "relationships": {"1": "69a9207196e9a61a0c028ecda93a717e6deec6ea"}}, "__type__": "1"}, "a92a67b8-12ca-4556-8300-51ecd7d37610": {"__data__": {"text": "# Table of contents\n\n* [Welcome to Flipside!](README.md)\n\n## Our App\n\n* [Getting Started](our-app/getting-started.md)\n* [Getting Around the App](our-app/getting-around-the-app/README.md)\n  * [Discover](our-app/getting-around-the-app/discover.md)\n  * [My Work](our-app/getting-around-the-app/my-work.md)\n  * [Query Editor](our-app/getting-around-the-app/query-editor.md)\n  * [Dashboard Editor](our-app/getting-around-the-app/dashboard-editor.md)\n  * [Profiles](our-app/getting-around-the-app/profiles.md)\n* [Keyboard Shortcuts](our-app/keyboard-shortcuts.md)\n* [Markdown Reference](our-app/markdown-reference.md)\n* [Analyst Rewards](our-app/analyst-rewards/README.md)\n  * [\u2728Top 8\u2728 Dashboard Rewards](our-app/analyst-rewards/top-8-dashboard-rewards.md)\n\n## Our Data\n\n* [Data Table Documentation](our-data/data-table-documentation.md)\n* [Using Snowflake SQL](our-data/using-snowflake-sql.md)\n* [Writing Efficient Queries](our-data/writing-efficient-queries.md)\n* [Data Modeling Approach](our-data/data-models.md)\n* [Contract Decoding & ABIs](our-data/contract-decoding-and-abis.md)\n* [Tags](our-data/featured-tags-and-sql-examples/README.md)\n  * [How to Add Your Own Tags](our-data/featured-tags-and-sql-examples/how-to-add-your-own-tags.md)\n* [Labels](our-data/labels/README.md)\n  * [Centralized Exchange Label Type](our-data/labels/cex-label-type.md)\n  * [Decentralized Exchange Label Type](our-data/labels/dex-label-type.md)\n  * [Operator Label Type](our-data/labels/operator-label-type.md)\n  * [Chain Admin Label Type](our-data/labels/chadmin-label-type.md)\n  * [Decentralized Finance Label Type](our-data/labels/defi-label-type.md)\n  * [NonFungible Tokens Label Type](our-data/labels/nft-label-type.md)\n  * [Layer Two Label Type](our-data/labels/layer2-label-type.md)\n  * [Decentralized Applications Label Type](our-data/labels/other-label-type.md)\n  * [Token Label Type](our-data/labels/token-label-type.md)\n  * [Flotsam Label Type](our-data/labels/flotsam-label-type.md)\n* [Video Tutorials](our-data/tutorials/README.md)\n  * [Overview of Schemas & Tables](our-data/tutorials/overview-of-schemas-and-tables.md)\n  * [Ethereum Tutorials](our-data/tutorials/ethereum-tutorials/README.md)\n    * [Getting Started with Ethereum Events](our-data/tutorials/ethereum-tutorials/getting-started-with-ethereum-events.md)\n    * [Getting Started with Ethereum ERC20 Balances](our-data/tutorials/ethereum-tutorials/getting-started-with-ethereum-erc20-balances.md)\n    * [Using Labels to Break Down Token Supply](our-data/tutorials/ethereum-tutorials/using-labels-to-break-down-token-supply.md)\n    * [Finding Centralized Exchange Deposits", "doc_id": "a92a67b8-12ca-4556-8300-51ecd7d37610", "embedding": null, "doc_hash": "e09dd09e9e4723490d659b9a24bcafe89bed4475935906c7f63838c6ebbcd9e3", "extra_info": {"file_path": "SUMMARY.md", "file_name": "SUMMARY.md"}, "node_info": {"start": 0, "end": 2626, "_node_type": "1"}, "relationships": {"1": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba", "3": "8e654730-5b18-487a-9dcc-adf663f6b5a2"}}, "__type__": "1"}, "8e654730-5b18-487a-9dcc-adf663f6b5a2": {"__data__": {"text": "   * [Finding Centralized Exchange Deposits and Withdrawals](our-data/tutorials/ethereum-tutorials/finding-centralized-exchange-deposits-and-withdrawals.md)\n  * [Solana Tutorials](our-data/tutorials/solana-tutorials/README.md)\n    * [Solana Schema & Tables: Video Walkthrough](our-data/tutorials/solana-tutorials/solana-schema-and-tables-video-walkthrough.md)\n    * [Solana Specialty Tables: Video Walkthrough](our-data/tutorials/solana-tutorials/solana-specialty-tables-video-walkthrough.md)\n    * [Exploring Transactions in solana.events](our-data/tutorials/solana-tutorials/exploring-transactions-in-solana.events.md)\n  * [THORChain Tutorials](our-data/tutorials/thorchain-tutorials/README.md)\n    * [THORChain Schema & Tables](our-data/tutorials/thorchain-tutorials/thorchain-schema-and-tables.md)\n    * [Calculating IL for THORChain](our-data/tutorials/thorchain-tutorials/calculating-il-for-thorchain.md)\n  * [MakerDAO Tutorials](our-data/tutorials/getting-started-with-dai-events.md)\n* [Hex-to-Integer Function](our-data/hex-to-integer-function.md)\n* [Archive](our-data/archive/README.md)\n  * [Data Updates](our-data/archive/data-updates.md)\n  * [Legacy Table Documentation](our-data/archive/tables/README.md)\n    * [AAVE Tables](our-data/archive/tables/aave-tables/README.md)\n      * [Market Stats](our-data/archive/tables/aave-tables/market-stats.md)\n      * [Votes](our-data/archive/tables/aave-tables/votes.md)\n      * [Proposals](our-data/archive/tables/aave-tables/proposals.md)\n      * [Deposits](our-data/archive/tables/aave-tables/deposits.md)\n      * [Liquidations](our-data/archive/tables/aave-tables/liquidations.md)\n      * [Borrows](our-data/archive/tables/aave-tables/borrows.md)\n      * [Repayments](our-data/archive/tables/aave-tables/repayments.md)\n      * [Flashloans](our-data/archive/tables/aave-tables/flashloans.md)\n      * [Withdraws](our-data/archive/tables/aave-tables/withdraws.md)\n    * [Algorand Tables](our-data/archive/tables/algorand-tables/README.md)\n      * [Algorand Base Tables](our-data/archive/tables/algorand-tables/algorand-base-tables/README.md)\n        * [Account](our-data/archive/tables/algorand-tables/algorand-base-tables/account.md)\n        * [Account App](our-data/archive/tables/algorand-tables/algorand-base-tables/account-app.md)\n        * [Account Asset](our-data/archive/tables/algorand-tables/algorand-base-tables/account-asset.md)\n   ", "doc_id": "8e654730-5b18-487a-9dcc-adf663f6b5a2", "embedding": null, "doc_hash": "0257a4bea753081f21db862c607a3820c906d46487fcb466c37aa46ba9afd6c8", "extra_info": {"file_path": "SUMMARY.md", "file_name": "SUMMARY.md"}, "node_info": {"start": 2591, "end": 4987, "_node_type": "1"}, "relationships": {"1": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba", "2": "a92a67b8-12ca-4556-8300-51ecd7d37610", "3": "c7d8ee13-c824-4e51-a77d-e5fafd940718"}}, "__type__": "1"}, "c7d8ee13-c824-4e51-a77d-e5fafd940718": {"__data__": {"text": "       * [App](our-data/archive/tables/algorand-tables/algorand-base-tables/app.md)\n        * [Application Call Transaction](our-data/archive/tables/algorand-tables/algorand-base-tables/application-call-transaction.md)\n        * [Asset](our-data/archive/tables/algorand-tables/algorand-base-tables/asset.md)\n        * [Asset Configuration Transaction](our-data/archive/tables/algorand-tables/algorand-base-tables/asset-configuration-transaction.md)\n        * [Asset Freeze Transaction](our-data/archive/tables/algorand-tables/algorand-base-tables/asset-freeze-transaction.md)\n        * [Asset Transfer Transaction](our-data/archive/tables/algorand-tables/algorand-base-tables/asset-transfer-transaction.md)\n        * [Block](our-data/archive/tables/algorand-tables/algorand-base-tables/block.md)\n        * [Key Registration Transaction](our-data/archive/tables/algorand-tables/algorand-base-tables/key-registration-transaction.md)\n        * [Payment Transaction](our-data/archive/tables/algorand-tables/algorand-base-tables/payment-transaction.md)\n        * [Transactions](our-data/archive/tables/algorand-tables/algorand-base-tables/transactions.md)\n        * [Transfers](our-data/archive/tables/algorand-tables/algorand-base-tables/transfers.md)\n        * [Swaps](our-data/archive/tables/algorand-tables/algorand-base-tables/swaps.md)\n        * [Transactions Participation](our-data/archive/tables/algorand-tables/algorand-base-tables/transactions-participation.md)\n        * [Prices Swap](our-data/archive/tables/algorand-tables/algorand-base-tables/prices-swap.md)\n        * [Prices Pool Balances](our-data/archive/tables/algorand-tables/algorand-base-tables/prices-pool-balances.md)\n        * [Daily Balances](our-data/archive/tables/algorand-tables/algorand-base-tables/daily-balances.md)\n      * [Core Tables](our-data/archive/tables/algorand-tables/core-tables.md)\n    * [Arbitrum Tables](our-data/archive/tables/arbitrum-tables.md)\n    * [Astroport Tables](our-data/archive/tables/astroport-tables/README.md)\n      * [Astroport Pool Reserves](our-data/archive/tables/astroport-tables/lp-actions.md)\n      * [Astroport Swaps](our-data/archive/tables/astroport-tables/swap.md)\n    * [Avalanche Tables](our-data/archive/tables/avalanche-tables.md)\n    * [Axelar Tables](our-data/archive/tables/axelar-tables.md)\n    * [BSC Tables](our-data/archive/tables/bsc-tables.md)\n    *", "doc_id": "c7d8ee13-c824-4e51-a77d-e5fafd940718", "embedding": null, "doc_hash": "745f7353cba1bed9f14d441a2835a2b8b2a50ae0155dda09241a5ebf6c36efb0", "extra_info": {"file_path": "SUMMARY.md", "file_name": "SUMMARY.md"}, "node_info": {"start": 5024, "end": 7405, "_node_type": "1"}, "relationships": {"1": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba", "2": "8e654730-5b18-487a-9dcc-adf663f6b5a2", "3": "59dada91-b5d5-4eb9-8bcb-62f04c168451"}}, "__type__": "1"}, "59dada91-b5d5-4eb9-8bcb-62f04c168451": {"__data__": {"text": "   * [Compound Tables](our-data/archive/tables/compound-tables/README.md)\n      * [Repayments](our-data/archive/tables/compound-tables/repayments.md)\n      * [Redemptions](our-data/archive/tables/compound-tables/redemptions.md)\n      * [Deposits](our-data/archive/tables/compound-tables/mints.md)\n      * [Liquidations](our-data/archive/tables/compound-tables/liquidations.md)\n      * [Borrows](our-data/archive/tables/compound-tables/borrows.md)\n      * [Market Stats](our-data/archive/tables/compound-tables/market-stats.md)\n    * [Cosmos Tables](our-data/archive/tables/cosmos-tables.md)\n    * [Crosschain Tables](our-data/archive/tables/crosschain-tables/README.md)\n      * [Fact Hourly Prices](our-data/archive/tables/crosschain-tables/fact-hourly-prices.md)\n      * [Dim Asset Metadata](our-data/archive/tables/crosschain-tables/dim-asset-metadata.md)\n      * [Dim Dates](our-data/archive/tables/crosschain-tables/dim-dates.md)\n      * [Dim Date Hours](our-data/archive/tables/crosschain-tables/dim-date-hours.md)\n      * [Crosschain Address Labels](our-data/archive/tables/crosschain-tables/crosschain-address-labels.md)\n      * [Crosschain Address Tags](our-data/archive/tables/crosschain-tables/crosschain-address-tags.md)\n    * [Ethereum Tables](our-data/archive/tables/ethereum-tables.md)\n    * [Ethereum Beacon Chain Tables](our-data/archive/tables/ethereum-beacon-chain-tables.md)\n    * [Ethereum Beta Tables](our-data/archive/tables/ethereum-beta-tables.md)\n    * [Ethereum Chainlink Tables](our-data/archive/tables/ethereum-chainlink-tables.md)\n    * [Ethereum Maker DAO Tables](our-data/archive/tables/ethereum-maker-dao-tables.md)\n    * [Ethereum Sushi Tables](our-data/archive/tables/ethereum-sushi-tables.md)\n    * [FLOW Tables](our-data/archive/tables/flow-tables/README.md)\n      * [Blocks](our-data/archive/tables/flow-tables/blocks.md)\n      * [Bridge Transactions](our-data/archive/tables/flow-tables/bridge-transactions.md)\n      * [Contract Labels](our-data/archive/tables/flow-tables/contract-labels.md)\n      * [Events](our-data/archive/tables/flow-tables/events.md)\n      * [Moment Metadata](our-data/archive/tables/flow-tables/moment-metadata.md)\n      * [NFT Sales](our-data/archive/tables/flow-tables/nft-sales.md)\n      * [Prices](our-data/archive/tables/flow-tables/prices.md)\n      * [Swaps](our-data/archive/tables/flow-tables/swaps.md)\n      * [Token", "doc_id": "59dada91-b5d5-4eb9-8bcb-62f04c168451", "embedding": null, "doc_hash": "11c01d14dbebf4af3b87c994c45e13e619c0c908337c7cc8447b57ec268a423a", "extra_info": {"file_path": "SUMMARY.md", "file_name": "SUMMARY.md"}, "node_info": {"start": 7405, "end": 9792, "_node_type": "1"}, "relationships": {"1": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba", "2": "c7d8ee13-c824-4e51-a77d-e5fafd940718", "3": "88a33d27-1ba4-4891-b474-be94490b027b"}}, "__type__": "1"}, "88a33d27-1ba4-4891-b474-be94490b027b": {"__data__": {"text": "     * [Token Transfers](our-data/archive/tables/flow-tables/token-transfers.md)\n      * [TopShot Metadata](our-data/archive/tables/flow-tables/topshot-metadata.md)\n      * [Transactions](our-data/archive/tables/flow-tables/transactions.md)\n      * [Validator Labels](our-data/archive/tables/flow-tables/validator-labels.md)\n    * [Gnosis Tables](our-data/archive/tables/gnosis-tables.md)\n    * [NEAR Tables](our-data/archive/tables/near-tables.md)\n    * [Optimism Tables](our-data/archive/tables/optimism-tables.md)\n    * [Osmosis Tables](our-data/archive/tables/osmosis-tables/README.md)\n      * [Osmosis Fact Airdrops](our-data/archive/tables/osmosis-tables/osmosis-fact-airdrops.md)\n      * [Osmosis Fact Blocks Table](our-data/archive/tables/osmosis-tables/osmosis-fact-blocks-table.md)\n      * [Osmosis Daily Balances](our-data/archive/tables/osmosis-tables/osmosis-daily-balances.md)\n      * [Osmosis Fact Governance Proposal Deposits](our-data/archive/tables/osmosis-tables/osmosis-fact-governance-proposal-deposits.md)\n      * [Osmosis Fact Governance Submit Proposal](our-data/archive/tables/osmosis-tables/osmosis-fact-governance-submit-proposal.md)\n      * [Osmosis Fact Governance Votes](our-data/archive/tables/osmosis-tables/osmosis-fact-governance-votes.md)\n      * [Osmosis Dim Labels](our-data/archive/tables/osmosis-tables/osmosis-dim-labels.md)\n      * [Osmosis Dim Liquidity Pools](our-data/archive/tables/osmosis-tables/osmosis-dim-liquidity-pools.md)\n      * [Osmosis Fact Liquidity Provider Actions](our-data/archive/tables/osmosis-tables/osmosis-fact-liquidity-provider-actions.md)\n      * [Osmosis Fact Msg Attributes Table](our-data/archive/tables/osmosis-tables/osmosis-fact-msg-attributes-table.md)\n      * [Osmosis Fact Msgs Table](our-data/archive/tables/osmosis-tables/osmosis-fact-msgs-table.md)\n      * [Osmosis Dim Prices](our-data/archive/tables/osmosis-tables/osmosis-dim-prices.md)\n      * [Osmosis Fact Staking Rewards](our-data/archive/tables/osmosis-tables/osmosis-fact-staking-rewards.md)\n      * [Osmosis Fact Staking](our-data/archive/tables/osmosis-tables/osmosis-fact-staking.md)\n      * [Osmosis Fact Superfluid Staking](our-data/archive/tables/osmosis-tables/osmosis-fact-superfluid-staking.md)\n      * [Osmosis Fact Swaps](our-data/archive/tables/osmosis-tables/osmosis-fact-swaps.md)\n      * [Osmosis Dim", "doc_id": "88a33d27-1ba4-4891-b474-be94490b027b", "embedding": null, "doc_hash": "dbb7385abe2948de51065e21ace6fe482131e1a3ca41f13fc891fe07e93862a8", "extra_info": {"file_path": "SUMMARY.md", "file_name": "SUMMARY.md"}, "node_info": {"start": 9787, "end": 12141, "_node_type": "1"}, "relationships": {"1": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba", "2": "59dada91-b5d5-4eb9-8bcb-62f04c168451", "3": "616ce576-f2bb-4bb4-a19a-91786e0f2969"}}, "__type__": "1"}, "616ce576-f2bb-4bb4-a19a-91786e0f2969": {"__data__": {"text": "     * [Osmosis Dim Tokens](our-data/archive/tables/osmosis-tables/osmosis-dim-tokens.md)\n      * [Osmosis Fact Transactions Table](our-data/archive/tables/osmosis-tables/osmosis-fact-transactions-table.md)\n      * [Osmosis Fact Transfers](our-data/archive/tables/osmosis-tables/osmosis-fact-transfers.md)\n      * [Osmosis Fact Validators](our-data/archive/tables/osmosis-tables/osmosis-fact-validators.md)\n      * [Osmosis Dim Vote Options](our-data/archive/tables/osmosis-tables/osmosis-dim-vote-options.md)\n      * [Osmosis EZ Prices](our-data/archive/tables/osmosis-tables/osmosis-ez-prices.md)\n      * [Osmosis EZ ICNS](our-data/archive/tables/osmosis-tables/osmosis-ez-icns.md)\n    * [Polygon Tables](our-data/archive/tables/polygon-tables/README.md)\n      * [Polygon Events Emitted](our-data/archive/tables/polygon-tables/polygon-events-emitted.md)\n      * [Polygon Transactions](our-data/archive/tables/polygon-tables/polygon-transactions.md)\n      * [Polygon UDM Events](our-data/archive/tables/polygon-tables/polygon-udm-events.md)\n      * [Position Collected Fees](our-data/archive/tables/polygon-tables/position-collected-fees.md)\n      * [Swaps](our-data/archive/tables/polygon-tables/swaps.md)\n      * [V3 Resources](our-data/archive/tables/polygon-tables/v3-resources.md)\n    * [Polygon 2.0 Tables](our-data/archive/tables/polygon-2.0-tables.md)\n    * [Solana Tables](our-data/archive/tables/solana-tables.md)\n    * [Terra Tables](our-data/archive/tables/terra-tables/README.md)\n      * [Terra Raw Tables](our-data/archive/tables/terra-tables/terra-raw-tables/README.md)\n        * [Blocks](our-data/archive/tables/terra-tables/terra-raw-tables/blocks.md)\n        * [Msgs](our-data/archive/tables/terra-tables/terra-raw-tables/msgs.md)\n        * [Msg\\_events](our-data/archive/tables/terra-tables/terra-raw-tables/msg\\_events.md)\n        * [Transactions](our-data/archive/tables/terra-tables/terra-raw-tables/transactions.md)\n        * [Transitions](our-data/archive/tables/terra-tables/terra-raw-tables/transitions.md)\n      * [Terra Base Tables](our-data/archive/tables/terra-tables/terra-base-tables/README.md)\n        * [Validator Labels](our-data/archive/tables/terra-tables/terra-base-tables/validator-labels.md)\n        *", "doc_id": "616ce576-f2bb-4bb4-a19a-91786e0f2969", "embedding": null, "doc_hash": "d1c70db20497f8af8046339a32bb773ff6d9bc9d515f93c629eef023ceac6f92", "extra_info": {"file_path": "SUMMARY.md", "file_name": "SUMMARY.md"}, "node_info": {"start": 12137, "end": 14379, "_node_type": "1"}, "relationships": {"1": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba", "2": "88a33d27-1ba4-4891-b474-be94490b027b", "3": "66932dae-05e8-45d9-a667-8ed700325939"}}, "__type__": "1"}, "66932dae-05e8-45d9-a667-8ed700325939": {"__data__": {"text": "       * [Labels](our-data/archive/tables/terra-tables/terra-base-tables/labels.md)\n        * [Oracle Prices](our-data/archive/tables/terra-tables/terra-base-tables/oracle-prices.md)\n        * [Tax Rate](our-data/archive/tables/terra-tables/terra-base-tables/tax-rate.md)\n        * [Daily Balances](our-data/archive/tables/terra-tables/terra-base-tables/daily-balances.md)\n        * [Swaps](our-data/archive/tables/terra-tables/terra-base-tables/swap.md)\n        * [Staking](our-data/archive/tables/terra-tables/terra-base-tables/staking.md)\n        * [Reward](our-data/archive/tables/terra-tables/terra-base-tables/rewards.md)\n        * [Transfer Events](our-data/archive/tables/terra-tables/terra-base-tables/transfer-events.md)\n        * [Event Actions](our-data/archive/tables/terra-tables/terra-base-tables/event-actions.md)\n    * [Terraswap Tables](our-data/archive/tables/terraswap-tables/README.md)\n      * [Terraswap LP Actions](our-data/archive/tables/terraswap-tables/lp-actions.md)\n      * [Terraswap Pool Reserves](our-data/archive/tables/terraswap-tables/lp-actions-1.md)\n      * [Terraswap Swaps](our-data/archive/tables/terraswap-tables/swap.md)\n    * [THORChain Tables](our-data/archive/tables/thorchain-tables/README.md)\n      * [THORChain Raw Table](our-data/archive/tables/thorchain-tables/thorchain-raw-table/README.md)\n        * [Active Vault Events](our-data/archive/tables/thorchain-tables/thorchain-raw-table/active-vault-events.md)\n        * [Inactive Vault Events](our-data/archive/tables/thorchain-tables/thorchain-raw-table/inactive-vault-events.md)\n        * [Add events](our-data/archive/tables/thorchain-tables/thorchain-raw-table/add-events.md)\n        * [Block Pool Depths](our-data/archive/tables/thorchain-tables/thorchain-raw-table/block-pool-depths.md)\n        * [Bond Events](our-data/archive/tables/thorchain-tables/thorchain-raw-table/bond-events.md)\n        * [Fee Events](our-data/archive/tables/thorchain-tables/thorchain-raw-table/fee-events.md)\n        * [Gas Events](our-data/archive/tables/thorchain-tables/thorchain-raw-table/gas-events.md)\n        * [Message Events](our-data/archive/tables/thorchain-tables/thorchain-raw-table/message-events.md)\n        * [New Node", "doc_id": "66932dae-05e8-45d9-a667-8ed700325939", "embedding": null, "doc_hash": "1eb583a4fa9473fd6d5c21967be842154120350685b5812e5bdf9c6f47a131da", "extra_info": {"file_path": "SUMMARY.md", "file_name": "SUMMARY.md"}, "node_info": {"start": 14391, "end": 16607, "_node_type": "1"}, "relationships": {"1": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba", "2": "616ce576-f2bb-4bb4-a19a-91786e0f2969", "3": "b75a1a3a-e3f2-43ea-8cd6-f2b69a402502"}}, "__type__": "1"}, "b75a1a3a-e3f2-43ea-8cd6-f2b69a402502": {"__data__": {"text": "       * [New Node Events](our-data/archive/tables/thorchain-tables/thorchain-raw-table/new-node-events.md)\n        * [Pending Liquidity Events](our-data/archive/tables/thorchain-tables/thorchain-raw-table/pending-liquidity-events.md)\n        * [Pool Balance Change Events](our-data/archive/tables/thorchain-tables/thorchain-raw-table/pool-balance-change-events.md)\n        * [Pool Events](our-data/archive/tables/thorchain-tables/thorchain-raw-table/pool-events.md)\n        * [Refund Events](our-data/archive/tables/thorchain-tables/thorchain-raw-table/refund-events.md)\n        * [Reserve Events](our-data/archive/tables/thorchain-tables/thorchain-raw-table/reserve-events.md)\n        * [Rewards Events](our-data/archive/tables/thorchain-tables/thorchain-raw-table/rewards-events.md)\n        * [Rewards Event Entries](our-data/archive/tables/thorchain-tables/thorchain-raw-table/rewards-event-entries.md)\n        * [Swap Events](our-data/archive/tables/thorchain-tables/thorchain-raw-table/swap-events.md)\n      * [THORChain Base Table](our-data/archive/tables/thorchain-tables/thorchain-base-table/README.md)\n        * [Block Rewards](our-data/archive/tables/thorchain-tables/thorchain-base-table/block-rewards.md)\n        * [Bond Actions](our-data/archive/tables/thorchain-tables/thorchain-base-table/bond-actions.md)\n        * [Daily Earnings](our-data/archive/tables/thorchain-tables/thorchain-base-table/daily-earnings.md)\n        * [Daily Pool Stats](our-data/archive/tables/thorchain-tables/thorchain-base-table/daily-pool-stats.md)\n        * [Daily TVL](our-data/archive/tables/thorchain-tables/thorchain-base-table/daily-tvl.md)\n        * [Prices](our-data/archive/tables/thorchain-tables/thorchain-base-table/prices.md)\n        * [Swaps](our-data/archive/tables/thorchain-tables/thorchain-base-table/swaps.md)\n        * [Liquidity Actions](our-data/archive/tables/thorchain-tables/thorchain-base-table/liquidity-actions.md)\n        * [Pool Block Balances](our-data/archive/tables/thorchain-tables/thorchain-base-table/pool-block-balances.md)\n        * [Pool Block Fees](our-data/archive/tables/thorchain-tables/thorchain-base-table/pool-block-fees.md)\n        * [Pool Block Statistics](our-data/archive/tables/thorchain-tables/thorchain-base-table/pool-block-statistics.md)\n        * [Total Block", "doc_id": "b75a1a3a-e3f2-43ea-8cd6-f2b69a402502", "embedding": null, "doc_hash": "c60485cc577002185408a21bece28a2055ebbc72bbb2e3a91a593c16800a42f3", "extra_info": {"file_path": "SUMMARY.md", "file_name": "SUMMARY.md"}, "node_info": {"start": 16600, "end": 18908, "_node_type": "1"}, "relationships": {"1": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba", "2": "66932dae-05e8-45d9-a667-8ed700325939", "3": "8f84a4bd-2e11-44e4-8855-0f46cf2e523d"}}, "__type__": "1"}, "8f84a4bd-2e11-44e4-8855-0f46cf2e523d": {"__data__": {"text": "       * [Total Block Rewards](our-data/archive/tables/thorchain-tables/thorchain-base-table/total-block-rewards.md)\n        * [Total Value Locked](our-data/archive/tables/thorchain-tables/thorchain-base-table/total-value-locked.md)\n        * [Transfers](our-data/archive/tables/thorchain-tables/thorchain-base-table/transfers.md)\n        * [Upgrades](our-data/archive/tables/thorchain-tables/thorchain-base-table/upgrades.md)\n      * [Thorchain Core Tables](our-data/archive/tables/thorchain-tables/thorchain-core-tables.md)\n    * [Uniswap V3 Tables](our-data/archive/tables/uniswap-v3-tables/README.md)\n      * [Pools](our-data/archive/tables/uniswap-v3-tables/pools.md)\n      * [Pool Stats](our-data/archive/tables/uniswap-v3-tables/pool-stats.md)\n      * [Positions](our-data/archive/tables/uniswap-v3-tables/positions.md)\n      * [LP Actions](our-data/archive/tables/uniswap-v3-tables/lp-actions.md)\n  * [Algorand Tutorials](our-data/archive/algorand-tutorials.md)\n* [Misc](our-data/misc/README.md)\n  * [Data Roadmap](our-data/misc/data-roadmap.md)\n  * [Table Freshness Targets](our-data/misc/table-freshness-targets.md)\n\n## Flipside API\n\n* [Get Started](flipside-api/getting-started.md)\n* [Concepts & Examples](flipside-api/get-started/README.md)\n  * [Run Your First Query](flipside-api/key-concepts/run-your-first-query.md)\n  * [Query Results](flipside-api/key-concepts/query-results.md)\n  * [Pagination](flipside-api/key-concepts/pagination.md)\n  * [Sorting](flipside-api/key-concepts/sorting.md)\n  * [Filtering](flipside-api/key-concepts/filtering.md)\n  * [Query Seconds](flipside-api/key-concepts/query-seconds.md)\n  * [Caching (maxAgeMinutes)](flipside-api/key-concepts/caching-maxageminutes.md)\n  * [Rate Limits](flipside-api/get-started/rate-limits.md)\n  * [Errors](flipside-api/key-concepts/errors.md)\n  * [More Examples](flipside-api/templates-and-walkthroughs.md)\n  * [Archive](flipside-api/get-started/archive/README.md)\n    * [\\[ARCHIVED\\] JS/TS SDK](flipside-api/get-started/js-ts-sdk.md)\n    * [\\[LEGACY\\] R](flipside-api/get-started/archive/r.md)\n* [API (JSON RPC)](flipside-api/get-started/rest-api.md)\n* [SDKs](flipside-api/sdks.md)\n* [Community Showcase](flipside-api/community-showcase.md)\n* [ShroomDK Migration Guide](flipside-api/shroomdk-migration-guide.md)\n* [Have", "doc_id": "8f84a4bd-2e11-44e4-8855-0f46cf2e523d", "embedding": null, "doc_hash": "7aebbf38620b91eb0196699d5ac0371b44684dd9d498854a79533940f13fab45", "extra_info": {"file_path": "SUMMARY.md", "file_name": "SUMMARY.md"}, "node_info": {"start": 18906, "end": 21199, "_node_type": "1"}, "relationships": {"1": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba", "2": "b75a1a3a-e3f2-43ea-8cd6-f2b69a402502", "3": "ff9a9ad7-3150-4938-94a0-4171d8ebf334"}}, "__type__": "1"}, "ff9a9ad7-3150-4938-94a0-4171d8ebf334": {"__data__": {"text": "[Have Questions?](flipside-api/have-questions.md)\n\n## Contribute to Our Data <a href=\"#contribute\" id=\"contribute\"></a>\n\n* [Community Curation](contribute/contribute-to-flipside-data.md)\n* [Model Standards](contribute/model-standards/README.md)\n  * [dbt Tips](contribute/model-standards/dbt-tips.md)\n* [Getting Started](contribute/getting-started/README.md)\n  * [Contribution Workflow](contribute/getting-started/contribution-workflow.md)\n* [PR Checklist](contribute/pr-checklist.md)\n\n## Data Shares\n\n* [Snowflake Data Shares](data-shares/snowflake-data-shares.md)\n", "doc_id": "ff9a9ad7-3150-4938-94a0-4171d8ebf334", "embedding": null, "doc_hash": "135ea0e7ac53906364822cb3e8151382cd6552e9a4e13fc4494a45fa01eb0154", "extra_info": {"file_path": "SUMMARY.md", "file_name": "SUMMARY.md"}, "node_info": {"start": 21206, "end": 21771, "_node_type": "1"}, "relationships": {"1": "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba", "2": "8f84a4bd-2e11-44e4-8855-0f46cf2e523d"}}, "__type__": "1"}, "f5fe57db-9df2-4f8a-8af2-1c4ba440767a": {"__data__": {"text": "---\ndescription: A guide to data curation with Flipside.\n---\n\n# Community Curation\n\n## Open Source Models\n\nFlipside Crypto is a data analytics and research firm that provides data-driven insights and analysis for the cryptocurrency market. Our data models are open source and available on GitHub, and anyone can contribute to them. We use [dbt](https://www.getdbt.com/), a command-line tool for working with data, to transform raw Blockchain data ingested through RPC nodes or an indexer into clean and easy-to-use data. These transformations are transparent to users, so they can see exactly how the data is being processed and can even contribute to the development of the models themselves. By making our data models open source and transparent, we are enabling our partners and users to collaborate with us and help improve the accuracy and reliability of our data.\n\nThe models for each chain that we offer can be reviewed and contributed to on our Github. Repositories follow the following naming convention for each blockchain: `<chain>-models`.\n\n{% embed url=\"https://github.com/orgs/FlipsideCrypto/repositories\" %}\n\n## Contribute&#x20;\n\n### Tags & Labels\n\nSee [How to Add Tags](../our-data/featured-tags-and-sql-examples/how-to-add-your-own-tags.md) on the address tags & labels data model page.\\\nAdd a label by submitting through our [label submission form](https://science.flipsidecrypto.xyz/add-a-label/).\n\n### SQL Models\n\nThe Flipside community uses [dbt](https://www.getdbt.com/) to model data in a [Snowflake](https://www.snowflake.com/) database. The following page on our [Analytics Stack for Community Curation](broken-reference) will go into further depth about the tech stack. If you are familiar with these tool, skip to [Getting Started](getting-started/) for instructions on access and setting up your dev environment.\n\n#### What and why?\n\nIn its most simple form, dbt allows for reproducible SQL in the form of data models where the queries are used to build tables. In the analyst workflow, there is likely a lot of data transformation required to parse transaction and event data down to the activity of interest. You likely factor this work out into one or many CTEs. Think of building a data model via dbt as simply one more abstraction, factoring that transform into a table analysts can select from, rather than a single-use CTE.\n\nIf you find yourself reproducing code, maybe you use the same set of CTEs to filter transactions down to just one DEX or marketplace, that could be a perfect example of a community-built model.&#x20;\n\nCommunity contributions do not need to be full-blown models. Protocols are constantly evolving and our models must adapt to these changes. If you spot something out-of-date or that needs attention, suggested revisions are welcome PRs.\n\n#### Note\n\nThis guide will be updated as the community curation process evolves. Please feel free to provide feedback to us on Discord!\n", "doc_id": "f5fe57db-9df2-4f8a-8af2-1c4ba440767a", "embedding": null, "doc_hash": "2d2913bb2dae8386f44febd9d3100eaad5a74284f1797170e940d016910fb00b", "extra_info": {"file_path": "contribute/contribute-to-flipside-data.md", "file_name": "contribute-to-flipside-data.md"}, "node_info": {"start": 0, "end": 2933, "_node_type": "1"}, "relationships": {"1": "1048dc86af97aa4f0ba98cdb25cee8e887231c29"}}, "__type__": "1"}, "b6ee48c8-5f86-4f00-8485-94339b35f43e": {"__data__": {"text": "# Getting Started\n\n## Access\n\n### **Snowflake**\n\nCommunity curators are granted access to a dev environment for testing and development of a data model. A member of Flipside's analytics team will need to grant you access, so please ask in the [# \ud83c\udf32 | community-curation](https://discord.com/channels/784442203187314689/1053086214615466095) channel on Discord something along the lines of:\n\n> Hi , I\u2019m interested in doing data curation for Flipside, could you give me snowflake access please? I\u2019d like my username to be:  `community_<insert_username>`\n\n{% hint style=\"warning\" %}\nAccess to Snowflake is granted for the sole purpose of community curation and testing your models. This password is not to be shared with anyone. If you know someone who would like to contribute as well, we will credential them separately. If you would like to work with Flipside data in a Snowflake environment, please see the section on [Data Shares](broken-reference) and reach out separately.\n{% endhint %}\n\n### **dbt cloud \\[Optional]**\n\nIf you are unfamiliar with dbt, we suggest creating a free account to [dbt Cloud](https://cloud.getdbt.com/). dbt Labs has built an IDE for developing dbt models. Once the environment is set up with the proper credentials, connect to a fork of the [model repository](https://github.com/orgs/FlipsideCrypto/repositories) to begin editing or building you own. The cloud environment includes the option to preview the compiled SQL models so you can see output as you work. Additionally, the command line for running dbt includes built-in autocomplete for common dbt commands.\n\n{% hint style=\"info\" %}\nNote: if you are using dbt Cloud, you will need to fork the main repository and link your dbt Cloud environment to the fork.\n{% endhint %}\n\n## **Software Setup**\n\n### git\n\nIf you don't already have it installed, install git to your machine. [Here](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) are [two guides](https://github.com/git-guides/install-git) that may assist you.\n\nYou will also need a [Github](https://github.com/) account to collaborate on the model repositories. Github also has an official command line tool, [`gh`](https://github.com/cli/cli#installation), that is useful for interacting with Github repositories.\n\nOnce set up, clone a copy of the repository of choice to your machine and checkout a branch to begin making your changes. Branch name should follow the convention:`community/<branch_name>`.\n\n* Ex:  `git checkout -b community/my-new-model`\n\n### Docker Environment\n\nWe have included a Dockerfile in eligible repositories to handle the installation of dbt on your behalf.&#x20;\n\n1. Clone a repository, like [`ethereum-models`](https://github.com/FlipsideCrypto/ethereum-models)&#x20;\n2. [Install Docker](https://docs.docker.com/get-docker/) to your machine.\n3. Copy the details of [`.env.sample`](https://github.com/FlipsideCrypto/ethereum-models/blob/main/.env.sample) to a `.env` file with your credentials. The environment details, like account and database, will be pre-filled for you. All you should need to replace is the below with your previously provided username and password.\n   * ```\n     SF_USERNAME=<YOUR SNOWFLAKE USERNAME>\n     SF_PASSWORD=<YOUR SNOWFLAKE PASSWORD>\n     ```\n4. Open a terminal window in the repository directory and run the command `make dbt-console`. If successful, a Docker", "doc_id": "b6ee48c8-5f86-4f00-8485-94339b35f43e", "embedding": null, "doc_hash": "74237b1f089715e7f34e7e33989de0c4bc462a0b419c3e056ad68a93e52a3629", "extra_info": {"file_path": "contribute/getting-started/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 3372, "_node_type": "1"}, "relationships": {"1": "9b7a00af9b35bb226152ad20c0bf27922b0e2653", "3": "77f35dc7-6e6b-405e-9ff6-66bdd6e381c6"}}, "__type__": "1"}, "77f35dc7-6e6b-405e-9ff6-66bdd6e381c6": {"__data__": {"text": "directory and run the command `make dbt-console`. If successful, a Docker container should spin up, install dbt, and open a console for you to run dbt commands. The container will read your `.env` file and should be connected to operate on the community curation database.\n5. Test your connection!\n   1. Run `dbt debug` to check installation.\n   2. Run `dbt deps` to install dependencies listed in the [`packages.yml`](https://github.com/FlipsideCrypto/ethereum-models/blob/main/packages.yml).\n   3. Run `dbt test -s core__fact_blocks` to run a set of tests on the `<chain>.core.fact_blocks` model in the community curation database to check your connection and credentials.\n   4. If you run into any errors, reach out for assistance in the [Discord channel](https://discord.com/channels/784442203187314689/1053086214615466095)!\n\n#### Docker on Windows\n\nMake is not recognized as a native command on Windows machines. As such, you will either need to install make for Windows, or use a Linux Terminal via [WSL2](https://learn.microsoft.com/en-us/windows/wsl/install).\n\n### Visual Studio Code\n\nYou can use any code editor, but [VS Code](https://code.visualstudio.com/) is our recommendation due to available extensions. All code that is to be suggested via PR must be formatted correctly using the [formatter linked here](https://marketplace.visualstudio.com/items?itemName=henriblancke.vscode-dbt-formatter).\n\nThe extension [dbt Power User](https://marketplace.visualstudio.com/items?itemName=innoverio.vscode-dbt-power-user) is also recommended.\n\n\n\nYou are now ready to create your first data contribution! Read on for an example contribution guide which includes some dbt basics, or review the [Model Standards](../model-standards/) for insight on how we structure our projects.\n", "doc_id": "77f35dc7-6e6b-405e-9ff6-66bdd6e381c6", "embedding": null, "doc_hash": "035acc45892420305c6ced37d536c5447dfdf5ffe37466a2ad300ec7bde179e7", "extra_info": {"file_path": "contribute/getting-started/README.md", "file_name": "README.md"}, "node_info": {"start": 3299, "end": 5080, "_node_type": "1"}, "relationships": {"1": "9b7a00af9b35bb226152ad20c0bf27922b0e2653", "2": "b6ee48c8-5f86-4f00-8485-94339b35f43e"}}, "__type__": "1"}, "9ca7fcd2-29dc-4473-a170-61b33efbb206": {"__data__": {"text": "# Contribution Workflow\n\n\\[ this workflow will be actively updated and enhanced as we receive feedback ]\n\n**Create and contribute your first model**\n\n1. Understand the modeling structure\n   * Data models iterate through different \u201clayers\u201d. Generally speaking these are bronze, silver, and core. How these layers interact is defined in [Model Standards](../model-standards/).\n2. Create model file within the proper layer and naming convention\n   * Naming convention for file is `<layer name>__<table name>.sql`\n   * Example for silver layer:  `./models/silver/silver__my_new_table.sql`\n3. Create a corresponding .yml file\n   * This should hold any model/column descriptions and tests for the model/columns\n   * Example for silver layer:  `./models/silver/silver__my_new_table.yml`\n4. Start writing SQL code\n   * Write code in Snowflake Web UI (Snowsight):  [https://app.snowflake.com/us-east-1/vna27887](https://app.snowflake.com/us-east-1/vna27887)\n   * Snowsight documentation:  [https://docs.snowflake.com/en/user-guide/ui-snowsight.html](https://docs.snowflake.com/en/user-guide/ui-snowsight.html)\n5. Turn SQL code into DBT SQL\n   * dbt combines sql with Jinja, see more:[ https://docs.getdbt.com/docs/building-a-dbt-project/jinja-macros](https://docs.getdbt.com/docs/building-a-dbt-project/jinja-macros)\n   * Copy sql code into the file created earlier\n   * Add config section\n     * See existing models for examples\n     * Dbt docs for available configurations [https://docs.getdbt.com/reference/resource-configs/snowflake-configs](https://docs.getdbt.com/reference/resource-configs/snowflake-configs)\n   * Convert SQL elements into Jinja\n     * Commonly this is changing table name to references and adding incremental loading logic\n     * Ref: [https://docs.getdbt.com/reference/dbt-jinja-functions/ref](https://docs.getdbt.com/reference/dbt-jinja-functions/ref)\n     * Incremental logic: [https://docs.getdbt.com/docs/building-a-dbt-project/building-models/configuring-incremental-models](https://docs.getdbt.com/docs/building-a-dbt-project/building-models/configuring-incremental-models)\n       1. See existing curated models for examples on how to implement incremental logic. `ethereum-models/models/silver/silver__transactions.sql`\n6. Run the dbt model to put it into the community dev database. You must run this command within the dbt-console. If you have exited the console run `make dbt-console` again\n   * `dbt run -s <path to model>`\n   * Run: [https://docs.getdbt.com/reference/commands/run](https://docs.getdbt.com/reference/commands/run)\n   * If this is your 1st time using `dbt run` in this docker container, you may need to run `dbt deps` command\n   * Models will be deployed to `<BLOCKCHAIN>_COMMUNITY_DEV` database within Snowflake.  This database refreshes daily at `04:00 AM UTC`, any non-production resources will be erased.\n7. Run the test file\n   * `dbt test -s <path to mode>`\n   * Tests:", "doc_id": "9ca7fcd2-29dc-4473-a170-61b33efbb206", "embedding": null, "doc_hash": "b86529d71a2aa040fe93ff06fb3e8980cf3f2517b5398722904db8609c449db2", "extra_info": {"file_path": "contribute/getting-started/contribution-workflow.md", "file_name": "contribution-workflow.md"}, "node_info": {"start": 0, "end": 2919, "_node_type": "1"}, "relationships": {"1": "c5f02be483026691c084a396003ad63ac26a6ad9", "3": "8aa0a039-174f-445c-b340-6c6822c202bf"}}, "__type__": "1"}, "8aa0a039-174f-445c-b340-6c6822c202bf": {"__data__": {"text": "* `dbt test -s <path to mode>`\n   * Tests: [https://docs.getdbt.com/docs/building-a-dbt-project/tests](https://docs.getdbt.com/docs/building-a-dbt-project/tests)\n8. Create GitHub Pull Request and write a summary on your updates/changes, as well as attaching passing test logs\n9. Request Reviewer from one of the GitHub handles below\n   * austinFlipside\n   * juls858\n   * James-Mission\n   * desmond-hui\n10. Fix Review Comments\n11. Re-Request Reviewer after fixing review comments\n12. If your PR has been approved, merge it to production\n13. **Congratulations! You\u2019ve successfully contributed a data model!**\n", "doc_id": "8aa0a039-174f-445c-b340-6c6822c202bf", "embedding": null, "doc_hash": "a09620791224ef1cdf429e925584165604c386f30d4521e275c188d306d1a698", "extra_info": {"file_path": "contribute/getting-started/contribution-workflow.md", "file_name": "contribution-workflow.md"}, "node_info": {"start": 2877, "end": 3484, "_node_type": "1"}, "relationships": {"1": "c5f02be483026691c084a396003ad63ac26a6ad9", "2": "9ca7fcd2-29dc-4473-a170-61b33efbb206"}}, "__type__": "1"}, "2f322d01-5534-4915-97ac-28cd8c44e1f5": {"__data__": {"text": "# Model Standards\n\n## Style Standards\n\nOur general model and style standards are derived from the best practices guide put forth by dbt Labs:\n\n{% embed url=\"https://github.com/dbt-labs/corp/blob/main/dbt_style_guide.md\" %}\n\nAll code that is submitted for a PR should be formatted according to [this dbt autoformatter](https://github.com/henriblancke/dbt-formatter), available as an extension on the VS Code extension marketplace.\n\nThe primary needs with a Flipside dbt model (will be explained in greater detail below):\n\n1. [Star schema](./#dimensional-modeling-and-star-schema)\n2. [Tests and full documentation](./#model-properties)\n3. [Appropriate materialization](./#materialization)\n4. [Consistent column names](./#column-names)\n\n## Dimensional Modeling & Star Schema\n\n### Table Layers\n\n#### Bronze\n\n1. Blockchain data that has been indexed and piped into Snowflake under `chainwalkers` schema. This includes all core data characterizing what occurs on a chain (e.g. blocks, transactions, function calls, state changes, etc). Chainwalkers 2.0 decodes log data, but does no other transformation.&#x20;\n2. The only data that has been added to this is `_inserted_timestamp`. This has been added a requirement for all blockchains for efficiency and data integrity reasons.\n3. Any ingested data should be in the bronze layer.\n4. This layer is a view on the source, as such it is the only layer where `{{ source() }}` should be called and no transformations shall happen in bronze.\n\n#### Silver\n\n1. Filtered, cleaned and transformed data.\n2. Silver models should de-duplicate bronze, as chainwalkers may re-ingest a block at a later date.\n3. The models in this layer are incremental as to reduce compute time and cost.\n4. Fact and dimension tables which are completely decoded (where we can), are additive (no replacing data), deduped, have not been joined to other tables. We can expose silver tables in the public facing app as a gold view.&#x20;\n5. Can be a combination of data sources.\n\n#### Gold (Core)\n\n1. Curated models exposed to the public front-end.\n2. [Fact and dimension](https://docs.google.com/document/d/1sdtchIcnkzMyP0HLQkA-c3BtE4AWgNFjiGFnhX3YzAs/edit#heading=h.snh3fvv82vz1) **tables should never be combined in tables ie: no joining transactions and labels**. They can be combined in views, where the logic is done in the underlying queries.&#x20;\n3. Views that can ease the burden for analysts. The wide array of data-users include some new to SQL, new to analytics, and/or new to blockchain technology. Incorporating off-chain metadata, and even aggregations (e.g. daily summaries of key transactions) can help new users understand the ecosystem as a whole.&#x20;\n   1. This also eases the burden on the underlying systems, and facilitates \u201cEasy\u201d bounty programs.&#x20;\n   2. Facilitates learning for new users.\n   3. Examples include: labels, transfers, event logs, swaps, liquidity provision/removal, daily balances of holders, prices and decimals, daily transfer summary.\n4. Models that accelerate analytics for a particular protocol (e.g. compound, uniswapv3, anchor, mirror schemas).\n\n### Core Naming Conventions\n\n#### 3 Primary Types of Views\n\nAll views should have a prefix of what type of data is within (based on [star", "doc_id": "2f322d01-5534-4915-97ac-28cd8c44e1f5", "embedding": null, "doc_hash": "d43aab7835526c42b508bc1c0a1f644ecf8b63ac97d625397cdf61aed75818f6", "extra_info": {"file_path": "contribute/model-standards/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 3246, "_node_type": "1"}, "relationships": {"1": "57bffcf6953ce2a179a01ba4d43b0cc92e1e3002", "3": "a502fcd4-da39-458f-9eee-351341bf8d9c"}}, "__type__": "1"}, "a502fcd4-da39-458f-9eee-351341bf8d9c": {"__data__": {"text": "views should have a prefix of what type of data is within (based on [star schema](https://docs.google.com/document/d/1GxWCUBkMB55h1Qb8-t42JW7s2yJWe57nsElzE4gMSyc/edit)).\n\nAll names should\\_be\\_snake\\_case. Abbreviations should be avoided when possible. Abbreviations should match an iso standard ie: currency or country names, etc.\n\n1. Facts (`fact_`)\n   1. Fact table contains measurements, metrics, and facts. Anything that is measurable, summing, averaging, anything over time.\n2. Dimensions (`dim_`)\n   1. Dimension table is a companion to the fact table which contains descriptive attributes to be used as query constraining.\n3. Convenience Views (`ez_`)\n   1. Convenience Views can combine facts and dimensions for reasons above. This should only be views in the gold layer.\n   2. Where curation is doing more of the \u201clift\u201d for the view.\n\n## Model Properties\n\nSQL models do not dance alone! Each `sql` file should have an accompanying `yml` of the same name. This is the model properties file and we use it, primarily, to document the model and columns and to test data in the model, at the column level.\n\n{% embed url=\"https://docs.getdbt.com/reference/model-properties\" %}\n\n### Testing\n\nThe model properties allow us to test the model output to ensure the data flowing through meets expectations. Some common [generic tests](https://docs.getdbt.com/docs/build/tests#generic-tests) we use are:\n\n* unique\n* not null\n* accepted values\n\nThere are also [packages](https://github.com/dbt-labs/dbt-utils) with utility functions that enhance the available tests to plug into a model, or you can write [custom tests](https://docs.getdbt.com/guides/best-practices/writing-custom-generic-tests) that apply to the model.\n\n### Documentation\n\nThe `yml` file is also where tables and columns are [documented](https://docs.getdbt.com/docs/collaborate/documentation#adding-descriptions-to-your-project). These should be clear and concise for users to understand what data the model contains. As several columns might be used across models, we utilize the [doc block](https://docs.getdbt.com/reference/dbt-jinja-functions/doc) to define the column in a markdown file, rather than in each individual model property file.\n\n## Materialization\n\ndbt Models can be configured to run using one of a number of strategies. The two most common materializations in our models are [incremental](https://docs.getdbt.com/docs/build/incremental-models) and [view](https://docs.getdbt.com/terms/view).\n\n### Incremental\n\nTrue to the name, incremental models load data based on some incremental filter. In silver, just about every model will be incrementally built, based on `_inserted_timestamp`.&#x20;\n\n### View\n\nViews persist as SQL transformations without actually storing data, like a table. Every `core` (gold) model is a view on a silver incremental model. This is done to:\n\n* drop any internal columns that need not be exposed to end users (like `_inserted_timestamp`)\n* rename the model to follow star schema\n\n{% embed url=\"https://docs.getdbt.com/docs/build/materializations\" %}\n\n## Column Names\n\nWhen building a model, be sure to check how columns are already named in the blockchain's data tables. Within a database, one model should not refer to `tx_id` while another `tx_hash`. A more comprehensive naming standard will be published soon\u2122\ufe0f.\n", "doc_id": "a502fcd4-da39-458f-9eee-351341bf8d9c", "embedding": null, "doc_hash": "f8c6c98c4b5c91c31149c1078468d1646f6056e11768730bdc309e9201302aff", "extra_info": {"file_path": "contribute/model-standards/README.md", "file_name": "README.md"}, "node_info": {"start": 3173, "end": 6500, "_node_type": "1"}, "relationships": {"1": "57bffcf6953ce2a179a01ba4d43b0cc92e1e3002", "2": "2f322d01-5534-4915-97ac-28cd8c44e1f5"}}, "__type__": "1"}, "67a9c5a0-d0b7-497d-95d8-b8baee490d92": {"__data__": {"text": "# dbt Tips\n\n## Naming Convention\n\nAs noted in the model standards, we segment steps into bronze/silver/core layers and these are organized via schemas within a database. The directory structure within `models/` is not what determines database structure! Our models include a pre-written macro that handles this database organization based on the model name! A double underscore in the file-name will be parsed as a schema break.\n\nSo, `silver__blocks` compiles to a table `blocks` in schema `silver`.\n\n## Table Materialization\n\nA table is materialized as incremental via the model config. Flipside does this in each model by using a config block. There are three properties in the config block to note for setting an incremental model.\n\n```\n{{ config(\n    materialized = 'incremental',\n    incremental_strategy = <strategy>,\n    unique_key = <unique_key_column>,\n    ...\n) }}\n```\n\n* [`materialized`](https://docs.getdbt.com/reference/resource-configs/materialized) sets the type of model\n* [`incremental_strategy`](https://docs.getdbt.com/docs/build/incremental-models#about-incremental\\_strategy) determines the build approach. On Snowflake, the default is `merge` but you may also see `delete+insert`\n* [`unique_key`](https://docs.getdbt.com/reference/resource-configs/unique\\_key) is a required parameter, regardless of incremental or table, but is used in the `incremental_strategy` to identify records.\n\nWhen creating models with incremental materialization, we need to write an incremental logic within the model. It is important for the incremental logic to be based on `_inserted_timestamp` and not on the `block_timestamp`_._ This is important especially when the data encounters gaps on certain dates. This enables the model to heal itself because gaps are associated with `block_timestamp` and when they get-inserted later, they get captured by _`_inserted_timestamp`._\n\n```sql\n {% raw %}\n{% if is_incremental() %}\nWHERE _inserted_timestamp >= (\n    SELECT\n        MAX(_inserted_timestamp) :: DATE - 1\n    FROM\n        {{ this }}\n)\n{% endif %}\n{% endraw %}\n```\n\n", "doc_id": "67a9c5a0-d0b7-497d-95d8-b8baee490d92", "embedding": null, "doc_hash": "49592cbd9bafba55dcfbc2f92be502a2721e08199218a76bf52f2777b87d9a6b", "extra_info": {"file_path": "contribute/model-standards/dbt-tips.md", "file_name": "dbt-tips.md"}, "node_info": {"start": 0, "end": 2072, "_node_type": "1"}, "relationships": {"1": "91a8da9adeafa9b8be4c9f9b0b57b3e2cac5ce34"}}, "__type__": "1"}, "ce637b4f-5ba4-49af-8fd2-70e22e2a04a7": {"__data__": {"text": "# PR Checklist\n\n## Checklist for Submitting a SQL Model PR <a href=\"#docs-internal-guid-73128d2e-7fff-b92b-1cf2-fe868168c9e9\" id=\"docs-internal-guid-73128d2e-7fff-b92b-1cf2-fe868168c9e9\"></a>\n\nWhen done with your work and you contribution is ready for review, open a PR for the Flipside team to review. A set of reminders is provided below.&#x20;\n\n{% hint style=\"info\" %}\nA `yml` file must accompany every `sql` model with tests and documentation for the additions. If updating an existing model, be sure to update tests and documentation, where applicable. Notes on model properties are available on the [Model Standards](model-standards/) page.\n{% endhint %}\n\n* [ ] Commit all changes of your working model to GitHub\n* [ ] Run `git merge main` to pull any changes that have been merged\n* [ ] Check for conflicts this may have caused, including up and down-stream dependencies.\n* [ ] Merge any and all final changes, ready for approval\n* [ ] Open a PR in GitHub with the following\n  * [ ] Description of what is changing or being added.\n  * [ ] The dbt command to run, default is likely `dbt run -s <model name>+`\n  * [ ] Output of the dbt run showing success.\n  * [ ] Output of a dbt test showing success.\n* [ ] Post in the Discord channel that your PR is ready for review and tag your Flipside contact to review.\n", "doc_id": "ce637b4f-5ba4-49af-8fd2-70e22e2a04a7", "embedding": null, "doc_hash": "3d38cf36084a5c4b8ccf86d360a3ee8c29a5701e202c827be936cdda6e8526db", "extra_info": {"file_path": "contribute/pr-checklist.md", "file_name": "pr-checklist.md"}, "node_info": {"start": 0, "end": 1316, "_node_type": "1"}, "relationships": {"1": "b998f7b93229b98d110af86ffa3cf41d8f9a827e"}}, "__type__": "1"}, "d1b48182-1402-45cc-8dab-618287fcd69c": {"__data__": {"text": "---\ndescription: >-\n  Archival & Real-time blockchain data without the hassle of managing nodes or\n  complex data pipelines\n---\n\n# Snowflake Data Shares\n\nSnowflake data shares give you access to the entirety of Flipside's on-chain databases in your own Snowflake environment.\n\nThis is the best option for teams that want to incorporate large amounts of historical data, near real-time data, or want to join Flipside's data with their own internal data, all without ever managing any nodes or complex data pipelines.\n\nFlipside covers the cost of the storage, and you only pay when you run a query (_via Snowflake compute costs_).&#x20;\n\n### **Data Shares Available**\n\nIf it happens on-chain, we've got it. We have related off-chain data, too.\n\nData include core tables (blocks, events, transactions) for every chain, with added 'easy' tables (nfts, swaps, prices, etc.) and project-specific tables modeled by the Flipside community.\n\n| [Crosschain Tables (prices, address tags)](../our-data/archive/tables/crosschain-tables/) | [MakerDAO](../our-data/archive/tables/ethereum-maker-dao-tables.md) |\n| ----------------------------------------------------------------------------------------- | ------------------------------------------------------------------- |\n| [Arbitrum](../our-data/archive/tables/arbitrum-tables.md)                                 | [NEAR ](../our-data/archive/tables/near-tables.md)                  |\n| [AAVE](../our-data/archive/tables/aave-tables/)                                           | [Optimism](../our-data/archive/tables/optimism-tables.md)           |\n| [Avalanche](../our-data/archive/tables/avalanche-tables.md)                               | [Osmosis](../our-data/archive/tables/osmosis-tables/)               |\n| [Algorand](../our-data/archive/tables/algorand-tables/)                                   | [Polygon](../our-data/archive/tables/polygon-2.0-tables.md)         |\n| [BSC](../our-data/archive/tables/bsc-tables.md)                                           | [Solana](../our-data/archive/tables/solana-tables.md)               |\n| [Compound](../our-data/archive/tables/compound-tables/)                                   | [Sushi](../our-data/archive/tables/ethereum-sushi-tables.md)        |\n| [Ethereum](../our-data/archive/tables/ethereum-tables.md)                                 | [FLOW](../our-data/archive/tables/flow-tables/) ", "doc_id": "d1b48182-1402-45cc-8dab-618287fcd69c", "embedding": null, "doc_hash": "f2fb527cac8a685c063152e047d191c2d873bb24d323c8036d632a16aaa8d261", "extra_info": {"file_path": "data-shares/snowflake-data-shares.md", "file_name": "snowflake-data-shares.md"}, "node_info": {"start": 0, "end": 2387, "_node_type": "1"}, "relationships": {"1": "9fc9fc4708360a6b514c19bd8aba2266228f78a3", "3": "c7137b7c-29a7-4d74-b26c-678e60cd7481"}}, "__type__": "1"}, "c7137b7c-29a7-4d74-b26c-678e60cd7481": {"__data__": {"text": "[FLOW](../our-data/archive/tables/flow-tables/)                     |\n| [THORChain](../our-data/archive/tables/thorchain-tables/thorchain-base-table/)            | [Gnosis](../our-data/archive/tables/flow-tables/)                   |\n| [Uniswap V3](../our-data/archive/tables/uniswap-v3-tables/)                               | [Terra](../our-data/archive/tables/terra-tables/)                   |\n| Base                                                                                      |                                                                     |\n\n### How do I request a data share?\n\nThe **fastest** way to get your data share up and running is to:\n\n* Login to your Snowflake account and request a share from our [Snowflake Marketplace listing](https://app.snowflake.com/marketplace/listings/Flipside%20Crypto).\n* Are you creating a new Snowflake account?  Choose the US East (N. Virginia) region 'us-east-1'.\n\nYou can also email your request to data-shares@flipsidecrypto.com with the subject Snowflake Data Share Request.  To expedite include your:\n\n* Snowflake account identifier (found in your URL e.g. shown in bold here: https://**vna23581**.us-east-1.snowflakecomputing.com...)\n* The name of your organization\n* How you anticipate you'll use our data (_we like to know our users and we may be able to recommend specific resources/tables_)\n\n### How much does this cost?\n\nTo learn more please [reach out to us](https://data.flipsidecrypto.xyz/)!&#x20;\n\n### **Questions?**\n\nReach out to data-shares@flipsidecrypto.com.\n\n\n\n", "doc_id": "c7137b7c-29a7-4d74-b26c-678e60cd7481", "embedding": null, "doc_hash": "58b995494b47ab304dc7d4218177838eaf7281f2e358ee85b026da0e00ca2821", "extra_info": {"file_path": "data-shares/snowflake-data-shares.md", "file_name": "snowflake-data-shares.md"}, "node_info": {"start": 2339, "end": 3880, "_node_type": "1"}, "relationships": {"1": "9fc9fc4708360a6b514c19bd8aba2266228f78a3", "2": "d1b48182-1402-45cc-8dab-618287fcd69c"}}, "__type__": "1"}, "570aa1da-769e-4908-97ba-c942a4c50f2c": {"__data__": {"text": "---\ndescription: Examples of projects people have built with the Flipside SDK!\n---\n\n# Community Showcase\n\n_Apps, data science, advanced analytics \u2014 the crypto space wants to see what you're creating._\n\n_Add your work by submitting a_ [_pull request_](https://github.com/FlipsideCrypto/gitbook/) _for this page, share in our_ [_Discord_](https://discord.gg/ZmU3jQuu6W) _SDK channels, and tag_ [_@flipsidecrypto_](https://twitter.com/flipsidecrypto/) _so we can_ \ud83d\udce3!\n\n## Apps\n\n| URL                                                                                                                | Description                                       | Builder/Analyst                                                                      | Source                                                                            |\n| ------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------- | ------------------------------------------------------------------------------------ | --------------------------------------------------------------------------------- |\n| [Flowverse NFT Stats](https://nft.flowverse.co/stats)                                                              | NFT statistics by Flowverse on Flow.              | [@flowverse\\_](https://twitter.com/flowverse\\_)                                      |                                                                                   |\n| [OpenBB Terminal](https://openbb.co/)                                                                              | Open source investment research terminal.         | [contributors](https://github.com/OpenBB-finance/OpenBBTerminal/graphs/contributors) | Python ([source](https://github.com/OpenBB-finance/OpenBBTerminal))               |\n| [Eth Activity Timecard](https://science.flipsidecrypto.xyz/eth-timecard/)                                          | Visualize your Ethereum on chain activity.        |", "doc_id": "570aa1da-769e-4908-97ba-c942a4c50f2c", "embedding": null, "doc_hash": "e184fc4132d546f8ee8ee8ea30bd55076567ac8eeff4ee3b493d2465088d41d8", "extra_info": {"file_path": "flipside-api/community-showcase.md", "file_name": "community-showcase.md"}, "node_info": {"start": 0, "end": 2012, "_node_type": "1"}, "relationships": {"1": "0dbdc2a5a515873e209178e05cf3484a5fed11e2", "3": "e0a074a6-e33a-4ff8-9d67-64463258e4e5"}}, "__type__": "1"}, "e0a074a6-e33a-4ff8-9d67-64463258e4e5": {"__data__": {"text": "  | Visualize your Ethereum on chain activity.        | [@charliemarketplace.eth](https://twitter.com/charliemktplace)                       | R ([source](https://github.com/FlipsideCrypto/eth\\_activity))                     |\n| [Gaia Governor](https://app.gaiagovernor.com/)                                                                     | Aggregated Snapshot voting dashboard.             | [@gaiagovernor](https://twitter.com/gaiagovernor)                                    |                                                                                   |\n| [AAVE Explorer](https://aave-explorer.vercel.app/)                                                                 | <p>AAVE stats and</p><p>transaction explorer.</p> | [@a\\_idria](https://twitter.com/a\\_idria)                                            | React ([source](https://github.com/akbaridria/aave-explorer))                     |\n| [Osmosis Liquidity Whales](https://jordiruspira-osmosis-liquidity-providers-osmosis-lprs-78acun.streamlitapp.com/) | Explore top liquidity providers and LP holdings.  | [@RuspiTorpi](https://twitter.com/RuspiTorpi/)                                       | Python ([source](https://github.com/jordiruspira/osmosis\\_liquidity\\_providers/)) |\n| [Thorsight](https://thorsight.playwo.de/)                                                                          | Track your ThorChain LP positions performance.    | [@Playwo](https://twitter.com/Playwo\\_)                                              | C# & Angular ([source](https://github.com/PoolPirate/Thorsight))                  |\n| [NFT OnChained Trading View](https://nft.onchained.com/tradingviewchartsALL)                                       | Compare", "doc_id": "e0a074a6-e33a-4ff8-9d67-64463258e4e5", "embedding": null, "doc_hash": "a7674ee4f306cabe172361c10ce44f4f7bd6da4b31ca1a7fe2a56f81d32349aa", "extra_info": {"file_path": "flipside-api/community-showcase.md", "file_name": "community-showcase.md"}, "node_info": {"start": 1974, "end": 3695, "_node_type": "1"}, "relationships": {"1": "0dbdc2a5a515873e209178e05cf3484a5fed11e2", "2": "570aa1da-769e-4908-97ba-c942a4c50f2c", "3": "78079402-6695-4a65-ba57-c76768c938e9"}}, "__type__": "1"}, "78079402-6695-4a65-ba57-c76768c938e9": {"__data__": {"text": "                  | Compare trading metrics for NFTs.                 | [@OnChainedCom](https://twitter.com/OnChainedCom)                                    |                                                                                   |\n| [CyberKongz Data](https://www.ckdata.xyz/)                                                                         | In-depth CyberKongz NFT and ecosystem analytics.  | [@banterlytics](https://twitter.com/banterlytics)                                    | Python                                                                            |\n\n## Data Science & Analytics\n\n| URL                                                                                                                                         | Description                                          | Builder/Analyst                         | Source                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------- | --------------------------------------- | --------------------------------------------------------- |\n| [NFL All Day Trends](https://jokersden-nflallday-app-j9b8l8.streamlitapp.com/)                                                              | Trends on NFL All Day.                               | [@0x70k3r](https://twitter.com/0x70k3r) | Python ([source](https://github.com/jokersden/nflallday)) |\n| [What's going on with Optimism?](https://mirror.xyz/0x6BA168A7cA20eC008F4332d196A2121e198663EA/lNK22UUkF1Dxz9FQKccbrDP9f0Fm73k7rnq2qLALEW0) | A deep dive on Optimism with network analysis plots. |", "doc_id": "78079402-6695-4a65-ba57-c76768c938e9", "embedding": null, "doc_hash": "34492547452d2cbd418f9746ea35bd32c4b3d1cdd91e4f1b64b85ae62ad95287", "extra_info": {"file_path": "flipside-api/community-showcase.md", "file_name": "community-showcase.md"}, "node_info": {"start": 3727, "end": 5443, "_node_type": "1"}, "relationships": {"1": "0dbdc2a5a515873e209178e05cf3484a5fed11e2", "2": "e0a074a6-e33a-4ff8-9d67-64463258e4e5", "3": "e6955ef4-b542-4044-9b72-8648cf13903b"}}, "__type__": "1"}, "e6955ef4-b542-4044-9b72-8648cf13903b": {"__data__": {"text": "| A deep dive on Optimism with network analysis plots. | [@0x70k3r](https://twitter.com/0x70k3r) |                                                           |\n", "doc_id": "e6955ef4-b542-4044-9b72-8648cf13903b", "embedding": null, "doc_hash": "2212fca76c591ce793f135ea382c6cb975a0c2913aaf4ec3ec9b10eaae513f26", "extra_info": {"file_path": "flipside-api/community-showcase.md", "file_name": "community-showcase.md"}, "node_info": {"start": 5395, "end": 5554, "_node_type": "1"}, "relationships": {"1": "0dbdc2a5a515873e209178e05cf3484a5fed11e2", "2": "78079402-6695-4a65-ba57-c76768c938e9"}}, "__type__": "1"}, "359e054b-0700-4bbc-b38f-efedb03628e0": {"__data__": {"text": "# Concepts & Examples\n\nThe following section covers topics from query execution, query result parsing, pagination, sorting, filtering, query seconds, caching (maxAgeMinutes), rate limits, and errors. Every topic includes code examples for each Flipside SDK.&#x20;\n", "doc_id": "359e054b-0700-4bbc-b38f-efedb03628e0", "embedding": null, "doc_hash": "eb517d0842710791eb96f12e7454bbceab1effc8101327ad537e4fb3200e260b", "extra_info": {"file_path": "flipside-api/get-started/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 264, "_node_type": "1"}, "relationships": {"1": "a426339330458ef60eba1eec8501ddc97477e7e2"}}, "__type__": "1"}, "3bf2bfa9-74f4-4b71-a7a4-8db90ae73646": {"__data__": {"text": "# Archive\n\n{% hint style=\"danger\" %}\n_**For legacy ShroomDK users:** in May of 2023 Flipside released V2 of its API that enables faster, and more reliable querying as you scale up usage. We are currently upgrading the existing SDKs to be compatible with the V2 API. Your existing SDK integrations will be forward-compatible with the updated SDKs. That means the only thing you will need to do is upgrade to the latest version._ The updated Python SDK is available today, with the JS/Typescript and R SDKs rolling out in the coming weeks.\n{% endhint %}\n", "doc_id": "3bf2bfa9-74f4-4b71-a7a4-8db90ae73646", "embedding": null, "doc_hash": "3fb79cdc683fdbb2c3d804d601b63abe20325e951e2263b89b6eb1c18e80a98b", "extra_info": {"file_path": "flipside-api/get-started/archive/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 552, "_node_type": "1"}, "relationships": {"1": "8e192908fc3eaf333f9b63dd23b2e3df6ab6f8e9"}}, "__type__": "1"}, "fe8e1c06-0553-427c-b770-5ce302431daa": {"__data__": {"text": "---\ndescription: The R programming language is a great fit for analysis of flipsidecrypto data!\n---\n\n# \\[LEGACY] R\n\n{% hint style=\"danger\" %}\n_The R SDK is currently undergoing an upgrade to be compatible with V2 of Flipside's API. Until that update rolls out, the R SDK can only be used by legacy ShroomDK users._\n\n_**For Legacy ShroomDK users:** once the upgrade is complete you will be able to seamlessly upgrade to the latest version of the SDK without any changes to your existing code._&#x20;\n{% endhint %}\n\n\n\n_**To skip the walkthrough and go straight to dedicated API Documentation,**_ [_**click here**_](https://api-docs.flipsidecrypto.xyz/)_**.**_\n\n### How to Install\n\n```\n# available on CRAN\ninstall.packages(\"shroomDK\")\nlibrary(shroomDK)\n\n# Latest developments available on Github\nlibrary(devtools) # install if you haven't already\ndevtools::install_github(repo = 'FlipsideCrypto/sdk', subdir = 'r/shroomDK')\nlibrary(shroomDK)\n```\n\n## Auto Paginate Query\n\n**auto\\_paginate\\_query()**\\\n\\\nThe easiest way to use shroomDK is to simply auto paginate a query to return (up to) 1 Million rows in 1 function call. This function will attempt to report useful errors and warnings; but if results are not as expected, follow the traditional create\\_query\\_token() %>% get\\_query\\_from\\_token() %>% clean\\_query() pipeline.\\\n\\\nDocumentation can be viewed within RStudio with `?auto_paginate_query` for new packages you may need to restart R to get to the documentation. It is summarized here:\n\n| Item        | Definition                                                                                                |\n| ----------- | --------------------------------------------------------------------------------------------------------- |\n| Description | Grabs up to `maxrows` in a query by going through each page 100k rows at a time.                          |\n| Usage       | auto\\_paginate\\_query(query, api\\_key)                                                                    |\n| query       | Flipside Crypto Snowflake SQL compatible query as a string.                                               |\n| api\\_key    | Flipside Crypto ShroomDK API Key                                                                          |\n| maxrows     | Flipside Crypto ShroomDK maximum rows in query, default 1,000,000                                         |\n| value       | <p>data frame of up to 1M rows, <br>see", "doc_id": "fe8e1c06-0553-427c-b770-5ce302431daa", "embedding": null, "doc_hash": "6c1c856547f55908c6ed404eb0fc2bd6d4800ae85759992922df4ba6f6c76a24", "extra_info": {"file_path": "flipside-api/get-started/archive/r.md", "file_name": "r.md"}, "node_info": {"start": 0, "end": 2418, "_node_type": "1"}, "relationships": {"1": "ae7815703ece62e71e528d348220551853bc9bd7", "3": "040eee72-37b9-4639-8abf-eda21d4c7c2b"}}, "__type__": "1"}, "040eee72-37b9-4639-8abf-eda21d4c7c2b": {"__data__": {"text": "   | <p>data frame of up to 1M rows, <br>see ?<code>clean_query</code> for more details on  column classes</p> |\n\nFor detailed examples using exclusively auto\\_paginate\\_query() see the [Examples](broken-reference).\n\n```\n# example\nauto_paginate_query(query = \"SELECT * FROM ethereum.core.fact_transactions LIMIT 1\", \n                    api_key = readLines(\"api_key.txt\")\n                    )\n\n```\n\n### Core Functions\n\n**create\\_query\\_token()**\n\nDocumentation can be viewed within RStudio with `?create_query_token` for new packages you may need to restart R to get to the documentation. It is summarized here:\n\n| Item        | Definition                                                                                                                                                                                                         |\n| ----------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| Description | Uses Flipside ShroomDK to create a Query Token to access Flipside Crypto data. The query token is cached up to ttl minutes allowing for pagination and multiple requests before expending more daily request uses. |\n| Usage       | create\\_query\\_token(query, api\\_key, ttl = 10, cache = TRUE)                                                                                                                                                      |\n| query       | Flipside Crypto Snowflake SQL compatible query as a string.                                                                                                                                                        |\n| api\\_key    | Flipside Crypto ShroomDK API Key                                                                                                         ", "doc_id": "040eee72-37b9-4639-8abf-eda21d4c7c2b", "embedding": null, "doc_hash": "334b3b091fdc814b7f4c254b8cad417c0daa5b16ecc87a6e6a97df52be1db1c3", "extra_info": {"file_path": "flipside-api/get-started/archive/r.md", "file_name": "r.md"}, "node_info": {"start": 2386, "end": 4298, "_node_type": "1"}, "relationships": {"1": "ae7815703ece62e71e528d348220551853bc9bd7", "2": "fe8e1c06-0553-427c-b770-5ce302431daa", "3": "5560e986-02eb-4d70-b1de-16b8cc1d489b"}}, "__type__": "1"}, "5560e986-02eb-4d70-b1de-16b8cc1d489b": {"__data__": {"text": "                                                                                             |\n| ttl         | time (in minutes) to keep query in cache.                                                                                                                                                                          |\n| cache       | Use cached results; set as FALSE to re-execute.                                                                                                                                                                    |\n| Value       | list of `token` and `cached` use `token` in `get_query_from_token()`                                                                                                                                               |\n\n```\n# example\ncreate_query_token(\nquery = \"SELECT * FROM ethereum.core.fact_transactions LIMIT 1\",\napi_key = readLines(\"api_key.txt\"), # gitignore your api_key! don't share!\nttl = 15,\ncache = TRUE)\n```\n\n\n\n\n\n**get\\_query\\_from\\_token()**\n\nDocumentation can be viewed within RStudio with `?get_query_from_token` for new packages you may need to restart R to get to the documentation. It is summarized here:\n\n| Item         | Definition                                                                                                                                                                                         ", "doc_id": "5560e986-02eb-4d70-b1de-16b8cc1d489b", "embedding": null, "doc_hash": "2a55e97a5a1361f92ce5806dd37d2eb6a0ee28f27c2a6289c520fd3eca58362c", "extra_info": {"file_path": "flipside-api/get-started/archive/r.md", "file_name": "r.md"}, "node_info": {"start": 4332, "end": 5733, "_node_type": "1"}, "relationships": {"1": "ae7815703ece62e71e528d348220551853bc9bd7", "2": "040eee72-37b9-4639-8abf-eda21d4c7c2b", "3": "f8db8c9f-ef24-4857-b30d-3622c8497575"}}, "__type__": "1"}, "f8db8c9f-ef24-4857-b30d-3622c8497575": {"__data__": {"text": "                                                                                                                                |\n| ------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Description  | Uses Flipside ShroomDK to access a Query Token. Query tokens are cached up to 'ttl' minutes for each 'query'. This function is for pagination and multiple requests while reducing your use of your daily rate limit. Note: To reduce payload it returns a list of outputs (separating column names from rows). |\n| Usage        | get\\_query\\_from\\_token(query\\_token, api\\_key, page\\_number = 1, page\\_size = 1e+05)                                                                                                                                                                                                                           |\n| query\\_token | token from 'create\\_query\\_token()'                                                                                                                                                                                                                                                                             |\n| api\\_key     | Flipside Crypto ShroomDK API Key                                                                                                                                                                                                   ", "doc_id": "f8db8c9f-ef24-4857-b30d-3622c8497575", "embedding": null, "doc_hash": "52acca8e1e447170005fd65da8f0b096d4261ee07ccbabba94f6c6261c5ed589", "extra_info": {"file_path": "flipside-api/get-started/archive/r.md", "file_name": "r.md"}, "node_info": {"start": 5734, "end": 7400, "_node_type": "1"}, "relationships": {"1": "ae7815703ece62e71e528d348220551853bc9bd7", "2": "5560e986-02eb-4d70-b1de-16b8cc1d489b", "3": "457e5441-1c28-4fb6-b4c4-374841e2c81f"}}, "__type__": "1"}, "457e5441-1c28-4fb6-b4c4-374841e2c81f": {"__data__": {"text": "                                                                                                |\n| page\\_number | Query tokens are cached and 100k rows max. Get up to 1M rows by going through pages.                                                                                                                                                                                                                            |\n| page\\_size   | Default 100,000. Paginate via page\\_number.                                                                                                                                                                                                                                                                     |\n| Value        | returns a request of length 8: `results`, `columnLabels`, `columnTypes`, `startedAt`, `endedAt`, `pageNumber`, `pageSize`, `status`                                                                                                                                                                             |\n\n```\n# example\nquery = create_query_token(\"SELECT * FROM ETHEREUM.CORE.FACT_TRANSACTIONS LIMIT 10000\", api_key) #gitignore your API key!\nget_query_from_token(query$token, api_key, 1, 10000)\n```\n\n\n\n**clean\\_query()**\n\nDocumentation can be viewed within RStudio with `?clean_query` for new packages you may need to restart R to get to the documentation. It is summarized here:\n\n| Item          | Definition", "doc_id": "457e5441-1c28-4fb6-b4c4-374841e2c81f", "embedding": null, "doc_hash": "4c103f214a7984270af1adc6f36a711438b08f7778e7974178811fecf77ac578", "extra_info": {"file_path": "flipside-api/get-started/archive/r.md", "file_name": "r.md"}, "node_info": {"start": 7401, "end": 8872, "_node_type": "1"}, "relationships": {"1": "ae7815703ece62e71e528d348220551853bc9bd7", "2": "f8db8c9f-ef24-4857-b30d-3622c8497575", "3": "cf63d282-d291-463e-802d-c93127c9a19e"}}, "__type__": "1"}, "cf63d282-d291-463e-802d-c93127c9a19e": {"__data__": {"text": "summarized here:\n\n| Item          | Definition                                                                                                                                                                                                                                                                                                                                                                                  |\n| ------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Description   | Cleans Query to be in Data Frame format                                                                                                                                                                                                                                                                                                                                                     |\n| Usage         | clean\\_query(request, try\\_simplify = TRUE)                                                                                                                                                                                                                 ", "doc_id": "cf63d282-d291-463e-802d-c93127c9a19e", "embedding": null, "doc_hash": "d7e888b5144f84f59c254ff2e95fcc450dc757f40a2b236d13c16f3eeb2a5cad", "extra_info": {"file_path": "flipside-api/get-started/archive/r.md", "file_name": "r.md"}, "node_info": {"start": 8840, "end": 10328, "_node_type": "1"}, "relationships": {"1": "ae7815703ece62e71e528d348220551853bc9bd7", "2": "457e5441-1c28-4fb6-b4c4-374841e2c81f", "3": "8c2a41ef-3bc0-411b-9eee-e9e5cb6a25f7"}}, "__type__": "1"}, "8c2a41ef-3bc0-411b-9eee-e9e5cb6a25f7": {"__data__": {"text": "                                                                                                                                                   |\n| `request`     | The request output from `get_query_from_token()`                                                                                                                                                                                                                                                                                                                                            |\n| try\\_simplify | because requests can return JSON and/or may not have the same length across values, they may not be data frame compliant (all columns having the same number of rows). A key example would be TX\\_JSON in EVM FACT\\_TRANSACTION tables which include 50+ extra details from transaction logs. But other examples like `NULL` values in TO\\_ADDRESS can have similar issues. Default `TRUE`. |\n| Value         | Always returns a data frame. If 'try\\_simplify' is `FALSE` OR if `try_simplify = TRUE` fails (columns having different number of rows) then the data frame is comprised of lists, where each column must be coerced to a desired class (e.g., with `as.numeric()`) to ensure each column has the same number of rows.                                                                       |\n\nNote: The vast majority (95%+) of queries will return a simple data frame with the classes coerced intelligently (e.g., Block\\_Number being numeric). But check the warnings and check your column classes, if the class is a list then try\\_simplify failed (i.e., not all columns have the same number of rows when coerced).\n\n```\n#example\nquery = create_query_token(\"SELECT * FROM ETHEREUM.CORE.FACT_TRANSACTIONS LIMIT 10000\", api_key)\nrequest = get_query_from_token(query$token, api_key, 1, 10000)\nclean_query(request, try_simplify = FALSE) # returns data frame of lists()\n```\n", "doc_id": "8c2a41ef-3bc0-411b-9eee-e9e5cb6a25f7", "embedding": null, "doc_hash": "7036874572386fe9edab4fce9606d3b363a8570069b30d89b3b4ebc4ab86b408", "extra_info": {"file_path": "flipside-api/get-started/archive/r.md", "file_name": "r.md"}, "node_info": {"start": 10342, "end": 12265, "_node_type": "1"}, "relationships": {"1": "ae7815703ece62e71e528d348220551853bc9bd7", "2": "cf63d282-d291-463e-802d-c93127c9a19e"}}, "__type__": "1"}, "b0fcfcd1-3dc7-4504-bd71-50d80136de9b": {"__data__": {"text": "# \\[ARCHIVED] JS/TS SDK\n\n![tests](https://github.com/flipsidecrypto/sdk/actions/workflows/ci\\_js.yml/badge.svg)\n\n_**To skip the walkthrough and go straight to dedicated API Documentation,**_ [_**click here**_](https://api-docs.flipsidecrypto.xyz/)_**.**_\n\n### \ud83d\udcbe Install the SDK\n\n```bash\nyarn add @flipsidecrypto/sdk\n```\n\nor if using npm\n\n```bash\nnpm install @flipsidecrypto/sdk\n```\n\n### \ud83e\uddbe Getting Started\n\n```typescript\nimport { Flipside, Query, QueryResultSet } from \"@flipsidecrypto/sdk\";\n\n// Initialize `Flipside` with your API key\nconst flipside = new Flipside(\n  \"<YOUR_API_KEY>\",\n  \"https://api-v2.flipsidecrypto.xyz\"\n);\n\n// Parameters can be passed into SQL statements via simple & native string interpolation\nconst myAddress = \"0x....\";\n\n// Create a query object for the `query.run` function to execute\nconst query: Query = {\n  sql: `select nft_address, mint_price_eth, mint_price_usd from flipside_prod_db.ethereum_core.ez_nft_mints where nft_to_address = LOWER('${myAddress}')`,\n  maxAgeMinutes: 30,\n};\n\n// Send the `Query` to Flipside's query engine and await the results\nconst result: QueryResultSet = await flipside.query.run(query);\n\n// Iterate over the results\nresult.records.map((record) => {\n  const nftAddress = record.nft_address\n  const mintPriceEth = record.mint_price_eth\n  const mintPriceUSD = = record.mint_price_usd\n  console.log(`address ${nftAddress} minted at a price of ${mintPrice} ETH or $${mintPriceUSD} USD`);\n});\n```\n\n### The Details\n\n#### The `Query` Object\n\nThe `Query` object contains both the sql and configuration you can send to the query engine for execution.\n\n```typescript\ntype Query = {\n  // SQL query to execute\n  sql: string;\n\n  // The number of minutes you are willing to accept cached\n  // result up to. If set to 30, if cached results exist within\n  // the last 30 minutes the api will return them.\n  maxAgeMinutes?: number;\n\n  // An override on the query result cahce.\n  // A value of false will re-execute the query and override\n  // maxAgeMinutes\n  cached?: boolean;\n\n  // The number of minutes until your query run times out\n  timeoutMinutes?: number;\n\n  // The number of records to return, defaults to 100000\n  pageSize?: number;\n\n  // The page number to return, defaults to 1\n  pageNumber?: number;\n\n  // The owner of the data source (defaults to 'flipside')\n  dataProvider?: string;\n\n  // The data source to execute the query against (defaults to 'snowflake-default')\n  dataSource?: string;\n};\n```\n\nLet's create a query to retrieve all NFTs minted by an address:\n\n```typescript\nconst yourAddress = \"<your_ethereum_address>\";\n\nconst query: Query = {\n  sql: `select nft_address, mint_price_eth, mint_price_usd from flipside_prod_db.ethereum_core.ez_nft_mints where nft_to_address = LOWER('${myAddress}')`,\n  maxAgeMinutes: 5,\n  cached: true,\n  timeoutMinutes: 15,\n  pageNumber: 1,\n  pageSize: 10,\n};\n```\n\nNow let's execute the query and retrieve the", "doc_id": "b0fcfcd1-3dc7-4504-bd71-50d80136de9b", "embedding": null, "doc_hash": "fece083595cf218e8f2fbdd9e4153ce7745d171f1f12f3b459d29f86a42eb500", "extra_info": {"file_path": "flipside-api/get-started/js-ts-sdk.md", "file_name": "js-ts-sdk.md"}, "node_info": {"start": 0, "end": 2903, "_node_type": "1"}, "relationships": {"1": "07b5167f18af19d2e106590f03673139d5fa0423", "3": "47bc01bb-a2f1-482f-96ad-9b7333797394"}}, "__type__": "1"}, "47bc01bb-a2f1-482f-96ad-9b7333797394": {"__data__": {"text": "10,\n};\n```\n\nNow let's execute the query and retrieve the results.\n\n```typescript\nconst result: QueryResultSet = await flipside.query.run(query);\n```\n\nThe results of this query will be cached for 60 minutes, given the `ttlMinutes` parameter.\n\n#### The `QueryResultSet` Object\n\nAfter executing a query the results are stored in a `QueryResultSet` object.\n\n```typescript\ninterface QueryResultSet {\n  // The server id of the query\n  queryId: string | null;\n\n  // The status of the query (`PENDING`, `FINISHED`, `ERROR`)\n  status: QueryStatus | null;\n\n  // The names of the columns in the result set\n  columns: string[] | null;\n\n  // The type of the columns in the result set\n  columnTypes: string[] | null;\n\n  // The results of the query\n  rows: any[] | null;\n\n  // Summary stats on the query run (i.e. the number of rows returned, the elapsed time, etc)\n  runStats: QueryRunStats | null;\n\n  // The results of the query transformed as an array of objects\n  records: QueryResultRecord[] | null;\n\n  // The page of results\n  page: PageStats | null;\n\n  // If the query failed, this will contain the error\n  error:\n    | ApiError\n    | QueryRunRateLimitError\n    | QueryRunTimeoutError\n    | QueryRunExecutionError\n    | ServerError\n    | UserError\n    | UnexpectedSDKError\n    | null;\n}\n```\n\nLet's iterate over the results from our query above.\\\n\\\nOur query selected `nft_address`, `mint_price_eth`, and `mint_price_usd`. We can access the returned data via the `records` parameter. The column names in our query are assigned as keys in each record object.\n\n```typescript\nresult.records.map((record) => {\n  const nftAddress = record.nft_address;\n  const mintPriceEth = record.mint_price_eth;\n  const mintPriceUSD = record.mint_price_usd;\n  console.log(\n    `address ${nftAddress} minted at a price of ${mintPriceEth} ETH or $${mintPriceUSD} USD`\n  );\n});\n```\n\n#### Pagination\n\nTo page over the results use the `getQueryResults` method.\n\n```typescript\n// what page are we starting on?\nlet currentPageNumber = 1\n\n// How many records do we want to return in the page?\nlet pageSize = 1000\n\n// set total pages to 1 higher than the `currentPageNumber` until\n// we receive the total pages from `getQueryResults` given the \n// provided `pageSize` (totalPages is dynamically determined by the API \n// based on the `pageSize` you provide)\nlet totalPages = 2\n\n// we'll store all the page results in `allRows`\nlet allRows = []\n\nwhile (currentPageNumber <= totalPages) {\n  results = await flipside.query.getQueryResults({\n    queryRunId: result.queryId,\n    pageNumber: currentPageNumber,\n    pageSize: pageSize\n  })\n  totalPages = results.page.totalPages\n  allRows = [...allRows, ...results.records]\n  currentPageNumber += 1\n}\n\n```\n\n#### Sort the Results\n\nLet's fetch the results sorted in descending order by `mint_price_usd`.\n\n```typescript\nresults = await flipside.query.getQueryResults({\n  queryRunId: result.queryId,\n  pageNumber: 1,\n  pageSize: 1000,\n  sortBy: [\n    {\n      column: 'mint_price_usd',\n      direction: 'desc'\n    }\n ", "doc_id": "47bc01bb-a2f1-482f-96ad-9b7333797394", "embedding": null, "doc_hash": "54c9c6f080579a233607c7c97cc2b18ef232f7dc15958e2f283849b8501c8365", "extra_info": {"file_path": "flipside-api/get-started/js-ts-sdk.md", "file_name": "js-ts-sdk.md"}, "node_info": {"start": 2855, "end": 5873, "_node_type": "1"}, "relationships": {"1": "07b5167f18af19d2e106590f03673139d5fa0423", "2": "b0fcfcd1-3dc7-4504-bd71-50d80136de9b", "3": "17f7eafd-68f1-4331-bf60-99df2fd7aaa0"}}, "__type__": "1"}, "17f7eafd-68f1-4331-bf60-99df2fd7aaa0": {"__data__": {"text": "     direction: 'desc'\n    }\n  ]\n})\n```\n\nValid directions include `desc` and `asc`. You may also sortBy multiple columns. The order you provide the sortBy objects determine which sortBy object takes precedence.\n\nThe following example will first sort results in descending order by `mint_price_usd` and then in ascending order by `nft_address`.\n\n```typescript\nresults = await flipside.query.getQueryResults({\n  queryRunId: result.queryId,\n  pageNumber: 1,\n  pageSize: 1000,\n  sortBy: [\n    {\n      column: 'mint_price_usd',\n      direction: 'desc'\n    },\n    {\n      column: 'nft_address',\n      direction: 'asc'\n    }\n  ]\n})\n```\n\nFor reference here is the `SortBy` type:\n\n```typescript\ninterface SortBy {\n  column: string;\n  direction: \"desc\" | \"asc\";\n}\n\n```\n\n#### Filter the results\n\nNow let's filter the results where `mint_price_usd` is greater than $10\n\n<pre class=\"language-typescript\"><code class=\"lang-typescript\"><strong>results = await flipside.query.getQueryResults({\n</strong>  queryRunId: result.queryId,\n  pageNumber: 1,\n  pageSize: 1000,\n  filters: [\n    {\n      gt: 10,\n      column: 'mint_price_usd'\n    }\n  ]\n})\n</code></pre>\n\nFilters can be applied for: equals, not equals, greater than, greater than or equals to, less than, less than or equals to, like, in, not in. All filters are executed server side over the entire result set.\n\nHere is the Filter type:\n\n```typescript\ninterface Filter {\n  column: string;\n  eq?: string | number | null;\n  neq?: string | number | null;\n  gt?: number | null;\n  gte?: number | null;\n  lt?: number | null;\n  lte?: number | null;\n  like?: string | number | null;\n  in?: any[] | null;\n  notIn?: any[] | null;\n}\n```\n\n#### Understanding MaxAgeMinutes (and caching of results)\n\nThe parameter `maxAgeMinutes` can be used to control whether a query will re-execute or return cached results. Let's talk thru an example.\n\nSet `maxAgeMinutes` to 30:\n\n```typescript\nconst query: Query = {\n  sql: `select nft_address, mint_price_eth, mint_price_usd from flipside_prod_db.ethereum_core.ez_nft_mints where nft_to_address = LOWER('${myAddress}')`,\n  maxAgeMinutes: 30\n};\n```\n\nBehind the scenes the Flipside API will hash the sql text and using that hash determine if results exist that were recorded within the last 30 minutes. If no results exist, or the results that exist are more than 30 minutes old the query will re-execute.\n\nIf you would like to force a cache bust and re-execute the query. You have two options, either set `maxAgeMinutes` to 0 or pass in `cache=false`. Setting `cache` to false effectively sets `maxAgeMinutes` to 0.\n\n```typescript\nconst query: Query = {\n  sql: `select nft_address, mint_price_eth, mint_price_usd from flipside_prod_db.ethereum_core.ez_nft_mints where nft_to_address = LOWER('${myAddress}')`,\n  maxAgeMinutes: 0\n};\n\n// or:\nconst query: Query = {\n  sql: `select", "doc_id": "17f7eafd-68f1-4331-bf60-99df2fd7aaa0", "embedding": null, "doc_hash": "88332e7f78de3b451ee9bb95cae525853c88b9c81193054d1f723400471e0538", "extra_info": {"file_path": "flipside-api/get-started/js-ts-sdk.md", "file_name": "js-ts-sdk.md"}, "node_info": {"start": 5904, "end": 8744, "_node_type": "1"}, "relationships": {"1": "07b5167f18af19d2e106590f03673139d5fa0423", "2": "47bc01bb-a2f1-482f-96ad-9b7333797394", "3": "ffaefd80-6526-46c4-9982-9029193f4f08"}}, "__type__": "1"}, "ffaefd80-6526-46c4-9982-9029193f4f08": {"__data__": {"text": "or:\nconst query: Query = {\n  sql: `select nft_address, mint_price_eth, mint_price_usd from flipside_prod_db.ethereum_core.ez_nft_mints where nft_to_address = LOWER('${myAddress}')`,\n  maxAgeMinutes: 30,\n  cache: false\n};\n```\n\n#### Understanding Query Seconds\n\nYou can determine how many execution seconds your query took by looking at the `runStats` object on the `QueryResultSet`.\n\n```typescript\nconst runStats = result.runStats\n```\n\nThere are a number of stats returned:\n\n```typescript\ntype QueryRunStats = {\n  startedAt: Date;\n  endedAt: Date;\n  elapsedSeconds: number;\n  queryExecStartedAt: Date;\n  queryExecEndedAt: Date;\n  streamingStartedAt: Date;\n  streamingEndedAt: Date;\n  queuedSeconds: number;\n  streamingSeconds: number;\n  queryExecSeconds: number;\n  bytes: number; // the number of bytes returned by the query\n  recordCount: number;\n};\n```\n\nYour account is only debited for `queryExecSeconds`. This is the number of computational seconds your query executes against Flipside's data warehouse.\n\n```typescript\nconst execSeconds = runStats.queryExecSeconds\n```\n\nYou are only debited when the query is executed. So if you set `maxAgeMinutes` to a value greater than 0, and the query does not re-execute then you will only be charged for the time it executes.\n\nFlipside does NOT charge for the number of bytes/records returned.\n\n#### Client Side Request Requirements\n\nAll API Keys correspond to a list of hostnames. Client-side requests that do not originate from the corresponding hostname will fail. You may configure hostnames [here](https://flipsidecrypto.xyz/account/api-keys).\n", "doc_id": "ffaefd80-6526-46c4-9982-9029193f4f08", "embedding": null, "doc_hash": "dccd4b3ed5f3424fd5d77e0c6fdae7615ed76b11a15588a25fbfb5f42a7ad6d9", "extra_info": {"file_path": "flipside-api/get-started/js-ts-sdk.md", "file_name": "js-ts-sdk.md"}, "node_info": {"start": 8722, "end": 10314, "_node_type": "1"}, "relationships": {"1": "07b5167f18af19d2e106590f03673139d5fa0423", "2": "17f7eafd-68f1-4331-bf60-99df2fd7aaa0"}}, "__type__": "1"}, "1c617377-1845-4e2b-b3bb-2f383fe0bfeb": {"__data__": {"text": "# Rate Limits\n\n**Max Concurrent Queries**\n\nEvery account has a limit of 15 concurrent query runs. This means you cannot run more than 15 queries at the same time across all your API keys. This rate limit is in place to protect query spamming (_whether accidental or intentional_) for the benefit of all API/SDK users.&#x20;\n\n**Query Execution Result Limits**\n\nQuery results are not limited by row size but by data size. All query results have a hard upper limit of 1GB. If you execute a query that returns more than 1GB of data you will receive an error message.\n\n**Query Page Result Limits**\n\nWhen requesting a page of a query result set the size of the result set cannot exceed 30mb. If you exceed 30mb an error will be thrown with a recommendation on the proper page size to use.\n\n{% hint style=\"info\" %}\n**Require higher limits?** Contact us about our Enterprise solutions by sending an email to data-shares@flipsidecrypto.com with the subject line \"_Enterprise API Inquiry_\"\n{% endhint %}\n", "doc_id": "1c617377-1845-4e2b-b3bb-2f383fe0bfeb", "embedding": null, "doc_hash": "bfa68c455669eb12960d4fb51e037ccbbb4537340f733e8dc0e7d88a379cb0f4", "extra_info": {"file_path": "flipside-api/get-started/rate-limits.md", "file_name": "rate-limits.md"}, "node_info": {"start": 0, "end": 994, "_node_type": "1"}, "relationships": {"1": "b164bda9a66ff9e49325a175cdd29093f733d809"}}, "__type__": "1"}, "199e5665-9076-41b2-aeb3-cc635274ddc6": {"__data__": {"text": "---\ndescription: Lower-level Direct HTTP Access\n---\n\n# API (JSON RPC)\n\n_**To skip the walkthrough and go straight to dedicated API Documentation,**_ [_**click here**_](https://api-docs.flipsidecrypto.xyz/)_**.**_\n\n{% hint style=\"info\" %}\nDon't see an SDK for your language of choice? Interact directly with the API endpoints below! If you're feeling adventurous feel free to build an SDK library -- we'd be happy to point the community to it.\n{% endhint %}\n\nThe Query API uses an RPC interface instead of REST for its client-server communication. This is because RPC can provide more efficient communication and support for batch/multi-calls, which is useful for dashboards that have lots of queries powering them. Future functionality will make use of the RPC architecture to enable more efficient/scalable application use cases.\n\n### Getting Started\n\nThere are three RPC methods you must interact with to execute a query:\n\n1. `createQueryRun`: used to queue up the execution of a query.\n2. `getQueryRun`: used to retrieve the status of a query run.\n3. `getQueryRunResults`: used to retrieve the results of the query run once it has completed executing.\n\n### Step 1: Create a Query\n\nThe following call to the API will queue up the execution of a query. If results already exist the query will not be executed. The endpoint returns a `token` that can be plugged into the `Get Query Results` endpoint to retrieve your data.\n\n{% tabs %}\n{% tab title=\"cURL Example\" %}\n\n\n```bash\ncurl --location -g 'https://api-v2.flipsidecrypto.xyz/json-rpc' \\\n--header 'Content-Type: application/json' \\\n--header 'x-api-key: {{api_key}}' \\\n--data '{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"createQueryRun\",\n    \"params\": [\n        {\n            \"resultTTLHours\": 1,\n            \"maxAgeMinutes\": 0,\n            \"sql\": \"SELECT date_trunc('\\''hour'\\'', block_timestamp) as hourly_datetime, count(distinct tx_hash) as tx_count from ethereum.core.fact_transactions where block_timestamp >= getdate() - interval'\\''1 month'\\'' group by 1 order by 1 desc\",\n            \"tags\": {\n                \"source\": \"postman-demo\",\n                \"env\": \"test\"\n            },\n            \"dataSource\": \"snowflake-default\",\n            \"dataProvider\": \"flipside\"\n        }\n    ],\n    \"id\": 1\n}'\n```\n{% endtab %}\n\n{% tab title=\"JS Example\" %}\n```javascript\nvar myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\nmyHeaders.append(\"x-api-key\", \"{{api_key}}\");\n\nvar raw = JSON.stringify({\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"createQueryRun\",\n  \"params\": [\n    {\n      \"resultTTLHours\": 1,\n      \"maxAgeMinutes\": 0,\n      \"sql\": \"SELECT date_trunc('hour', block_timestamp) as hourly_datetime, count(distinct tx_hash) as tx_count from", "doc_id": "199e5665-9076-41b2-aeb3-cc635274ddc6", "embedding": null, "doc_hash": "4c0ff83065fd8f689ef11493f121dc9ec7e465d8d8208f02e5232f67d1b78b29", "extra_info": {"file_path": "flipside-api/get-started/rest-api.md", "file_name": "rest-api.md"}, "node_info": {"start": 0, "end": 2716, "_node_type": "1"}, "relationships": {"1": "be526e5b79a8ae57956c136b596a262a813dc260", "3": "285a0340-493b-4522-8724-e467d375da1f"}}, "__type__": "1"}, "285a0340-493b-4522-8724-e467d375da1f": {"__data__": {"text": "as hourly_datetime, count(distinct tx_hash) as tx_count from ethereum.core.fact_transactions where block_timestamp >= getdate() - interval'1 month' group by 1 order by 1 desc\",\n      \"tags\": {\n        \"source\": \"postman-demo\",\n        \"env\": \"test\"\n      },\n      \"dataSource\": \"snowflake-default\",\n      \"dataProvider\": \"flipside\"\n    }\n  ],\n  \"id\": 1\n});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-v2.flipsidecrypto.xyz/json-rpc\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n```\n{% endtab %}\n\n{% tab title=\"Python Example\" %}\n```python\nimport requests\nimport json\n\nurl = \"https://api-v2.flipsidecrypto.xyz/json-rpc\"\n\npayload = json.dumps({\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"createQueryRun\",\n  \"params\": [\n    {\n      \"resultTTLHours\": 1,\n      \"maxAgeMinutes\": 0,\n      \"sql\": \"SELECT date_trunc('hour', block_timestamp) as hourly_datetime, count(distinct tx_hash) as tx_count from ethereum.core.fact_transactions where block_timestamp >= getdate() - interval'1 month' group by 1 order by 1 desc\",\n      \"tags\": {\n        \"source\": \"postman-demo\",\n        \"env\": \"test\"\n      },\n      \"dataSource\": \"snowflake-default\",\n      \"dataProvider\": \"flipside\"\n    }\n  ],\n  \"id\": 1\n})\nheaders = {\n  'Content-Type': 'application/json',\n  'x-api-key': '{{api_key}}'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)\n\n```\n{% endtab %}\n\n{% tab title=\"R Example\" %}\n<pre class=\"language-r\"><code class=\"lang-r\"><strong>library(shroomDK) # imports jsonlite and httr\n</strong>\nqtoken &#x3C;- create_query_token(\nquery = \"SELECT * FROM ethereum.core.fact_transactions LIMIT 33\",\napi_key = readLines(\"api_key.txt\"), #always gitignore your api keys \nttl = 1,\nmam = 5,\ndata_source = \"snowflake-default\",\ndata_provider = \"flipside\",\napi_url = \"https://api-v2.flipsidecrypto.xyz/json-rpc\"\n)\n\n# use body(create_query_token) to see how header and body are formed. \n\n</code></pre>\n{% endtab %}\n{% endtabs %}\n\n\n\n### Step 2: Poll for the Status of the Query Run\n\nThis endpoint takes as input a query run id returned by the `createQueryRun` rpc call.\n\n{% tabs %}\n{% tab title=\"cURL Example\" %}\n```bash\ncurl --location -g 'https://api-v2.flipsidecrypto.xyz/json-rpc' \\\n--header 'Content-Type: application/json' \\\n--header 'x-api-key: {{api_key}}' \\\n--data '{\n    \"jsonrpc\":", "doc_id": "285a0340-493b-4522-8724-e467d375da1f", "embedding": null, "doc_hash": "fe741429b74e99f091adcf06c37da9a15ceaa91ceb97a0833abb9ec19936231d", "extra_info": {"file_path": "flipside-api/get-started/rest-api.md", "file_name": "rest-api.md"}, "node_info": {"start": 2663, "end": 5130, "_node_type": "1"}, "relationships": {"1": "be526e5b79a8ae57956c136b596a262a813dc260", "2": "199e5665-9076-41b2-aeb3-cc635274ddc6", "3": "be458d20-f7ef-4536-893c-c7c40d08478a"}}, "__type__": "1"}, "be458d20-f7ef-4536-893c-c7c40d08478a": {"__data__": {"text": "\\\n--data '{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"getQueryRun\",\n    \"params\": [\n        {\n            \"queryRunId\": \"{{queryRunId}}\"\n        }\n    ],\n    \"id\": 1\n}'\n```\n{% endtab %}\n\n{% tab title=\"JS Example\" %}\n```javascript\nvar myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\nmyHeaders.append(\"x-api-key\", \"{{api_key}}\");\n\nvar raw = JSON.stringify({\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getQueryRun\",\n  \"params\": [\n    {\n      \"queryRunId\": \"{{queryRunId}}\"\n    }\n  ],\n  \"id\": 1\n});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-v2.flipsidecrypto.xyz/json-rpc\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n```\n{% endtab %}\n\n{% tab title=\"Python Example\" %}\n```python\nimport requests\nimport json\n\nurl = \"https://api-v2.flipsidecrypto.xyz/json-rpc\"\n\npayload = json.dumps({\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getQueryRun\",\n  \"params\": [\n    {\n      \"queryRunId\": \"{{queryRunId}}\"\n    }\n  ],\n  \"id\": 1\n})\nheaders = {\n  'Content-Type': 'application/json',\n  'x-api-key': '{{api_key}}'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)\n\n```\n{% endtab %}\n\n{% tab title=\"R Example\" %}\n```r\nlibrary(shroomDK) # imports jsonlite and httr\n# see above for qtoken <- create_query_token(...)\nquery_id <- qtoken$result$queryRequest$queryRunId\nquery_status <- get_query_status(query_id, api_key)\n\n# use body(get_query_status) to see how header and body are formed.\n```\n{% endtab %}\n{% endtabs %}\n\nOnce the `getQueryRun` has returned a state of `QUERY_STATE_SUCCESS` call the `getQueryRunResults` RPC method to retrieve the result set in Step3.\n\n### Step 3: Get the Query Run Results\n\nThis endpoint takes as input a query run id used in the previous two steps.\n\n{% tabs %}\n{% tab title=\"cURL Example\" %}\n```bash\ncurl --location -g 'https://api-v2.flipsidecrypto.xyz/json-rpc' \\\n--header 'Content-Type: application/json' \\\n--header 'x-api-key: {{api_key}}' \\\n--data '{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"getQueryRunResults\",\n    \"params\": [\n        {\n            \"queryRunId\": \"{{queryRunId}}\",\n            \"format\": \"csv\",\n            \"page\": {\n                \"number\": 1,\n               ", "doc_id": "be458d20-f7ef-4536-893c-c7c40d08478a", "embedding": null, "doc_hash": "2b08741b7d2ab50f147e278c79641fa0c5b79820162a7c883c90fcc9a2827cd1", "extra_info": {"file_path": "flipside-api/get-started/rest-api.md", "file_name": "rest-api.md"}, "node_info": {"start": 5164, "end": 7484, "_node_type": "1"}, "relationships": {"1": "be526e5b79a8ae57956c136b596a262a813dc260", "2": "285a0340-493b-4522-8724-e467d375da1f", "3": "15375105-0cdb-4666-bf83-f65e696a1660"}}, "__type__": "1"}, "15375105-0cdb-4666-bf83-f65e696a1660": {"__data__": {"text": "1,\n                \"size\": 1\n            }\n        }\n    ],\n    \"id\": 1\n}'\n```\n{% endtab %}\n\n{% tab title=\"JS Example\" %}\n```javascript\nvar myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\nmyHeaders.append(\"x-api-key\", \"{{api_key}}\");\n\nvar raw = JSON.stringify({\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getQueryRunResults\",\n  \"params\": [\n    {\n      \"queryRunId\": \"{{queryRunId}}\",\n      \"format\": \"csv\",\n      \"page\": {\n        \"number\": 1,\n        \"size\": 1\n      }\n    }\n  ],\n  \"id\": 1\n});\n\nvar requestOptions = {\n  method: 'POST',\n  headers: myHeaders,\n  body: raw,\n  redirect: 'follow'\n};\n\nfetch(\"https://api-v2.flipsidecrypto.xyz/json-rpc\", requestOptions)\n  .then(response => response.text())\n  .then(result => console.log(result))\n  .catch(error => console.log('error', error));\n```\n{% endtab %}\n\n{% tab title=\"Python Example\" %}\n```python\nimport requests\nimport json\n\nurl = \"https://api-v2.flipsidecrypto.xyz/json-rpc\"\n\npayload = json.dumps({\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"getQueryRunResults\",\n  \"params\": [\n    {\n      \"queryRunId\": \"{{queryRunId}}\",\n      \"format\": \"csv\",\n      \"page\": {\n        \"number\": 1,\n        \"size\": 1\n      }\n    }\n  ],\n  \"id\": 1\n})\nheaders = {\n  'Content-Type': 'application/json',\n  'x-api-key': '{{api_key}}'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)\n\n```\n{% endtab %}\n\n{% tab title=\"R Example\" %}\n<pre class=\"language-r\"><code class=\"lang-r\">library(shroomDK) # imports jsonlite and httr\n# see above for query_status &#x3C;- get_query_status(...)\n\n query_state &#x3C;- query_status$result$queryRun$state\n\n# this loop is inside get_query_from_token() \n\n status_check_done &#x3C;- FALSE\n  warn_flag &#x3C;- FALSE\n\n  while (!status_check_done) {\n\n    query_status &#x3C;- get_query_status(\n<strong>      query_run_id = query_id, \n</strong>      api_key = api_key, # gitignore your API key \n      api_url = \"https://api-v2.flipsidecrypto.xyz/json-rpc\"\n      ) # default \n    \nquery_state &#x3C;- query_status$result$queryRun$state\n\n    if(query_state == \"QUERY_STATE_SUCCESS\"){\n      status_check_done &#x3C;- TRUE\n      next()\n    } else if(query_state == \"QUERY_STATE_FAILED\"){\n      status_check_done", "doc_id": "15375105-0cdb-4666-bf83-f65e696a1660", "embedding": null, "doc_hash": "bfc6ba8b76cd7318c298c0a812f77eff9826661725b5dd38a01854956d788cf6", "extra_info": {"file_path": "flipside-api/get-started/rest-api.md", "file_name": "rest-api.md"}, "node_info": {"start": 7503, "end": 9727, "_node_type": "1"}, "relationships": {"1": "be526e5b79a8ae57956c136b596a262a813dc260", "2": "be458d20-f7ef-4536-893c-c7c40d08478a", "3": "5c8fdfb0-fda1-4918-b73b-9f921f038e9b"}}, "__type__": "1"}, "5c8fdfb0-fda1-4918-b73b-9f921f038e9b": {"__data__": {"text": "     status_check_done &#x3C;- TRUE\n      stop(query_status$result$queryRun$errorMessage)\n    } else if(query_state == \"QUERY_STATE_CANCELED\"){\n      status_check_done &#x3C;- TRUE\n      stop(\"This query was canceled, typically by cancel_query()\")\n    } else if(query_state != \"QUERY_STATE_SUCCESS\"){\n      warning(\"Query in process, checking again in 5 seconds, use cancel_query() if needed.\")\n      Sys.sleep(5)\n    }\n\n  }\n\n</code></pre>\n{% endtab %}\n{% endtabs %}\n\n{% hint style=\"info\" %}\nDetailed documentation on Flipside's RPC API can be [found by clicking here](https://api-docs.flipsidecrypto.xyz).\n{% endhint %}\n", "doc_id": "5c8fdfb0-fda1-4918-b73b-9f921f038e9b", "embedding": null, "doc_hash": "02998cc95635b5a780d013658be372f44ad429e5bc7f8573210a752fc9291c52", "extra_info": {"file_path": "flipside-api/get-started/rest-api.md", "file_name": "rest-api.md"}, "node_info": {"start": 9708, "end": 10329, "_node_type": "1"}, "relationships": {"1": "be526e5b79a8ae57956c136b596a262a813dc260", "2": "15375105-0cdb-4666-bf83-f65e696a1660"}}, "__type__": "1"}, "0430b3bb-5a3c-479e-a43e-5280dac7911c": {"__data__": {"text": "---\ndescription: >-\n  Your API key to the most comprehensive blockchain data in crypto for analysts,\n  developers, and data scientists.\n---\n\n# Get Started\n\n## Run your first query in under 2 minutes\n\n### 1. \ud83d\udd11 Get Your Key\n\nGo to the [Flipside Data Studio](https://flipsidecrypto.xyz/account/api-keys) and click \"API\" to generate your API key. Every account comes with 5000 free query seconds per month.\n\n### 2. \ud83d\udee0 Pick Your SDK and Install It\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```\npip install flipside\n```\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\n```\nyarn add @flipside/sdk\n```\n\n_or_\n\n```\nnpm install @flipside/sdk\n```\n{% endtab %}\n\n{% tab title=\"R SDK\" %}\n```\ninstall.packages(\"shroomDK\") # from CRAN\n```\n{% endtab %}\n{% endtabs %}\n\n### 3. \ud83c\udfc3\u200d\u2640\ufe0fExecute your First Query\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n<pre class=\"language-python\"><code class=\"lang-python\">from flipside import Flipside\n\n# Initialize `Flipside` with your API Key and API Url\nflipside = Flipside(\"&#x3C;YOUR_API_KEY>\", \"https://api-v2.flipsidecrypto.xyz\")\n\nsql = \"\"\"\nSELECT \n  date_trunc('hour', block_timestamp) as hour,\n  count(distinct tx_hash) as tx_count\nFROM ethereum.core.fact_transactions \nWHERE block_timestamp >= GETDATE() - interval'7 days'\nGROUP BY 1\n\"\"\"\n<strong>\n</strong># Run the query against Flipside's query engine and await the results\nquery_result_set = flipside.query(sql)\n</code></pre>\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\n<pre class=\"language-javascript\"><code class=\"lang-javascript\">const { Flipside } = require(\"@flipsidecrypto/sdk\");\n\n// Initialize `Flipside` with your API key\nconst flipside = new Flipside(\n  \"&#x3C;YOUR_API_KEY>\",\n  \"https://api-v2.flipsidecrypto.xyz\"\n);\n\n<strong>const sql = `\n</strong>SELECT \n  date_trunc('hour', block_timestamp) as hour,\n  count(distinct tx_hash) as tx_count\nFROM ethereum.core.fact_transactions \nWHERE block_timestamp >= GETDATE() - interval'7 days'\nGROUP BY 1\n`\n\n// Send the `Query` to Flipside's query engine and await the results\nconst queryResultSet = await flipside.query.run({sql: sql});\n</code></pre>\n{% endtab %}\n\n{% tab title=\"R SDK\" %}\n<pre><code><strong>library(shroomDK)\n</strong><strong>\n</strong><strong>api_key = readLines(\"api_key.txt\") # always gitignore your API keys!\n</strong>\nquery &#x3C;- { \n\"\nSELECT \n  date_trunc('hour', block_timestamp) as hour,\n  count(distinct tx_hash) as tx_count\nFROM ethereum.core.fact_transactions \nWHERE block_timestamp >= GETDATE() - interval'7 days'\nGROUP BY 1\n\"\n }\n\npull_data &#x3C;- auto_paginate_query(\nquery = query,\napi_key = api_key\n)\n</code></pre>\n\n\n{% endtab %}\n{% endtabs %}\n\n", "doc_id": "0430b3bb-5a3c-479e-a43e-5280dac7911c", "embedding": null, "doc_hash": "0698ded31bbf490544e7cb2b8c7f3ef4cea6c56d6afc9ff8be973a76747e5136", "extra_info": {"file_path": "flipside-api/getting-started.md", "file_name": "getting-started.md"}, "node_info": {"start": 0, "end": 2602, "_node_type": "1"}, "relationships": {"1": "9a7e916d43bf7afa9e09a8520dcfdee4dbbf0bb6"}}, "__type__": "1"}, "82024a48-806d-4d87-9d88-93c1d9059d7e": {"__data__": {"text": "---\ndescription: (aka support)\n---\n\n# Have Questions?\n\nIntroduce yourself in the SDK [Discord](https://discord.gg/ZmU3jQuu6W) channels, ask questions, and share what you're working on:\n\n<figure><img src=\"../.gitbook/assets/image (15).png\" alt=\"\"><figcaption><p>Dedicated SDK channels in our Discord host a vibrant community of creators.</p></figcaption></figure>\n\n", "doc_id": "82024a48-806d-4d87-9d88-93c1d9059d7e", "embedding": null, "doc_hash": "de979586be86d97bd6b603326d782e3e8f6a12fc484f2a5f45844b0ec515e896", "extra_info": {"file_path": "flipside-api/have-questions.md", "file_name": "have-questions.md"}, "node_info": {"start": 0, "end": 364, "_node_type": "1"}, "relationships": {"1": "412cc622609887de5c7b574701db63bd96b03466"}}, "__type__": "1"}, "9a30f933-e699-4b85-a354-5d24289d5efa": {"__data__": {"text": "# Caching (maxAgeMinutes)\n\nOften times we'll write a large query where the underlying results don't change much minute-to-minute or hour-to-hour. In these cases, we don't need to waste unnecessary computational resources (Query Seconds) to re-execute a query that might incur a cost. This is where `maxAgeMinutes` comes in handy.\n\nLet's use the following query as an example. In this example, we're asking for the address of an ENS domain. The results of this query are unlikely to change hour-to-hour.&#x20;\n\n```sql\nSELECT\n  origin_from_address\nFROM ethereum.core.fact_event_logs\nWHERE\n  contract_address = lower('0x283af0b28c62c092c9727f1ee09c02ca627eb7f5')\n  AND event_inputs:name = lower('{ens_domain}')\n  AND event_name = 'NameRegistered'\n  AND block_timestamp >= GETDATE() - interval'4 year'\n```\n\nThe first time this query is executed it will trigger a QueryRun. That initial QueryRun saves the results along with the timestamp of when those results were recorded.\n\n<figure><img src=\"../../.gitbook/assets/Untitled (7).png\" alt=\"\"><figcaption></figcaption></figure>\n\nNow let's attempt to re-run the query, with a `maxAgeMinutes` of 12 hours.&#x20;\n\n<figure><img src=\"../../.gitbook/assets/Untitled (5).png\" alt=\"\"><figcaption></figcaption></figure>\n\nSince the first query successfully executed and stored a result set within the last 12 hours a new QueryRun will not be triggered.\n\n{% hint style=\"info\" %}\nThe ceiling for `maxAgeMinutes` is 24 hours or 1440 minutes\n{% endhint %}\n\nUnder the hood, the API will return the queryRunId of the most recent successful execution. With this queryRunID in hand, the SDKs will call `getQueryRunResults` to retrieve the results for that QueryRun.\n\nLet's take a look at a demo with our SDKs:\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n<pre class=\"language-python\"><code class=\"lang-python\">from flipside import Flipside\n\n# Initialize `Flipside` with your API Key and API Url\nflipside = Flipside(\"&#x3C;YOUR_API_KEY>\", \"https://api-v2.flipsidecrypto.xyz\")\n\nsql = \"\"\"\nSELECT \n  date_trunc('hour', block_timestamp) as hour,\n  count(distinct tx_hash) as tx_count\nFROM ethereum.core.fact_transactions \nWHERE block_timestamp >= GETDATE() - interval'7 days'\nGROUP BY 1\n\"\"\"\n<strong>\n</strong># We set `maxAgeMinutes` to 0 to ensure the query re-executes\nquery_result_set = flipside.query(sql, max_age_minutes=0)\n\n# Now attempt to run the query again with a max age of 5 minutes\n# You will notice the first query took a little time to execute\n# while this query will return instantly!\nquery_result_set_cached = flipside.query(sql, max_age_minutes=5)\n</code></pre>\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\n<pre class=\"language-javascript\"><code class=\"lang-javascript\">const { Flipside } = require(\"@flipsidecrypto/sdk\")\n\n// Initialize `Flipside` with your API key\n<strong>const flipside = new Flipside(\n</strong>  \"&#x3C;YOUR_API_KEY>\",\n  \"https://api-v2.flipsidecrypto.xyz\"\n);\n\nconst sql = `\nSELECT \n  date_trunc('hour',", "doc_id": "9a30f933-e699-4b85-a354-5d24289d5efa", "embedding": null, "doc_hash": "8e6e0196041019d830ba49df6b2b79ffaa254af3c202aef38708447aac3fa8fd", "extra_info": {"file_path": "flipside-api/key-concepts/caching-maxageminutes.md", "file_name": "caching-maxageminutes.md"}, "node_info": {"start": 0, "end": 2960, "_node_type": "1"}, "relationships": {"1": "547138a76a4b1e0a985e96b9aae632dd0177c3ca", "3": "455839ff-2783-4a05-b5b8-3cef2944de16"}}, "__type__": "1"}, "455839ff-2783-4a05-b5b8-3cef2944de16": {"__data__": {"text": "sql = `\nSELECT \n  date_trunc('hour', block_timestamp) as hour,\n  count(distinct tx_hash) as tx_count\nFROM ethereum.core.fact_transactions \nWHERE block_timestamp >= GETDATE() - interval'7 days'\nGROUP BY 1\n`\n\n// We set `maxAgeMinutes` to 0 to ensure the query re-executes\nlet queryResultSet = await flipside.query.run({sql: sql, maxAgeMinutes: 0});\n\n// Now attempt to run the query again with a max age of 5 minutes\n// You will notice the first query took a little time to execute\n// while this query will return instantly!\nlet queryResultSetCached = await flipside.query.run({sql: sql, maxAgeMinutes: 5});\n</code></pre>\n{% endtab %}\n{% endtabs %}\n\n\n\n{% hint style=\"info\" %}\nIn the next section we'll talk about the billable metric, QuerySeconds.\n{% endhint %}\n", "doc_id": "455839ff-2783-4a05-b5b8-3cef2944de16", "embedding": null, "doc_hash": "05e7c7496c6821ecc7b07dbe993b6ec6ed4fd835558a706135cdf54704d13b18", "extra_info": {"file_path": "flipside-api/key-concepts/caching-maxageminutes.md", "file_name": "caching-maxageminutes.md"}, "node_info": {"start": 2924, "end": 3683, "_node_type": "1"}, "relationships": {"1": "547138a76a4b1e0a985e96b9aae632dd0177c3ca", "2": "9a30f933-e699-4b85-a354-5d24289d5efa"}}, "__type__": "1"}, "89baa666-e122-4143-a8f5-250e76f8e36c": {"__data__": {"text": "# Errors\n\nThe SDK implements the following errors that can be handled when calling the `query` method:\n\n### **Query RunTime Errors**\n\n**`QueryRunRateLimitError`**\n\nOccurs when you have exceeded the rate limit for creating/running new queries.&#x20;\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```python\nfrom flipside.errors import QueryRunRateLimitError\n\ntry:\n    sdk.query(sql)\nexcept QueryRunRateLimitError as e:\n    print(f\"you have been rate limited: {e.message}\")\n```\n{% endtab %}\n{% endtabs %}\n\n**`QueryRunTimeoutError`**\n\nOccurs when your query has exceeded the `timeout_minutes` parameter passed into the `query` method.&#x20;\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```python\nfrom flipside.errors import QueryRunTimeoutError\n\ntry:\n    sdk.query(sql, timeout_minutes=10)\nexcept QueryRunTimeoutError as e:\n    print(f\"your query has taken longer than 10 minutes to run: {e.message}\")\n```\n{% endtab %}\n{% endtabs %}\n\n**`QueryRunExecutionError`**\n\nOccurs when your query fails to compile/run due to malformed SQL statements.\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```python\nfrom flipside.errors import QueryRunExecutionError\n\ntry:\n    sdk.query(sql)\nexcept QueryRunExecutionError as e:\n    print(f\"your sql is malformed: {e.message}\")\n```\n{% endtab %}\n{% endtabs %}\n\n### **Server Error**\n\n`ServerError` - occurs when there is a server-side error that cannot be resolved. This typically indicates an issue with Flipside Crypto's query engine API. If the issue persists please contact support in the Flipside Crypto discord server.\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```python\nfrom flipside.errors import ServerError\n\ntry:\n    sdk.query(sql)\nexcept ServerError as e:\n    print(f\"a server-side error has occurred: {e.message}\")\n```\n{% endtab %}\n{% endtabs %}\n\n### **API Error**\n\n`ApiError` - this typically occurs when you, the user, submit a bad request to the API. This often occurs when an invalid API Key is used, or invalid object IDs are requested.\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```python\nfrom flipside.errors import ApiError\n\ntry:\n    sdk.query(sql)\nexcept ApiError as e:\n    print(f\"an api error has occurred: {e.message}\")\n```\n{% endtab %}\n{% endtabs %}\n\n### **SDK Error**\n\n`SDKError` - this error is raised when a generic client-side error occurs that cannot be accounted for by the other errors. SDK level errors should be reported [here](https://github.com/FlipsideCrypto/sdk/issues) as a Github Issue with a full stack-trace and detailed steps to reproduce.\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```python\nfrom flipside.errors import SDKError\n\ntry:\n    sdk.query(sql)\nexcept SDKError as e:\n    print(f\"a client-side SDK error has occurred: {e.message}\")\n```\n{% endtab %}\n{% endtabs %}\n", "doc_id": "89baa666-e122-4143-a8f5-250e76f8e36c", "embedding": null, "doc_hash": "60770e2c264c301bb39f4210a980e345d987376b3160676be97c08997dc92fb2", "extra_info": {"file_path": "flipside-api/key-concepts/errors.md", "file_name": "errors.md"}, "node_info": {"start": 0, "end": 2720, "_node_type": "1"}, "relationships": {"1": "a4375c718ab916778b56e40eb60f3c95296af965"}}, "__type__": "1"}, "7440b451-f1b1-40b1-b5c5-1c3dea8d5225": {"__data__": {"text": "# Filtering\n\nThe Query API allows you to filter the results of your Query Result Set. This is useful if you run a large query and want to retrieve subsets of the results without re-executing the entire query. It can also be useful if you're building a front-end application and want to allow your users to filter the result set without putting pressure on client-side resources.\n\n{% hint style=\"info\" %}\nFilters do NOT re-execute your query. They filter over the existing result set from a query. Due to some engineering ingenuity, these manipulations are able to be executed \"on the fly\" when requesting your query results.&#x20;\n{% endhint %}\n\nLet's build on the example from the list section and filter our results to only include the Moonbird NFT project.&#x20;\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```\nflipside.get_query_results(\n    query_result_set.query_id,\n    page_number=1,\n    page_size=10000,\n    filters=[\n      {\n        'eq': 'moonbirds',\n        'column': 'project_name'\n      }\n    ]\n)\n```\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\n```javascript\nawait flipside.query.getQueryResults({\n  queryRunId: result.queryId,\n  pageNumber: 1,\n  pageSize: 1000,\n  filters: [\n    {\n      eq: 'moonbirds',\n      column: 'project_name'\n    }\n  ]\n})\n```\n{% endtab %}\n{% endtabs %}\n\nNow let's imagine we only want MoonBirds sales greater than $5k USD. We'd add an additional filter using the greater than or equals to filter ('gte').\n\n{% hint style=\"info\" %}\nNote the order of your filters is important, they get applied in the order they are specified.\n{% endhint %}\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```python\nflipside.get_query_results(\n    query_result_set.query_id,\n    page_number=1,\n    page_size=10000,\n    filters=[\n      {\n        'eq': 'moonbirds',\n        'column': 'project_name'\n      },\n      {\n        'gte': 5000,\n        'column': 'price_usd'\n      }\n    ]\n)\n```\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\n```javascript\nawait flipside.query.getQueryResults({\n  queryRunId: result.queryId,\n  pageNumber: 1,\n  pageSize: 1000,\n  filters: [\n    {\n      eq: 'moonbirds',\n      column: 'project_name'\n    },\n    {\n      gte: 5000,\n      column: 'price_usd'\n    }\n  ]\n})\n```\n{% endtab %}\n{% endtabs %}\n\nLet's add one final filter to only include sales that occurred on OpenSea or Blur.\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```python\nflipside.get_query_results(\n    query_result_set.query_id,\n    page_number=1,\n    page_size=10000,\n    filters=[\n      {\n       ", "doc_id": "7440b451-f1b1-40b1-b5c5-1c3dea8d5225", "embedding": null, "doc_hash": "2e76057f142995f8104b2e96abad1cce4ce2936685f0806dd37d0ec651d98221", "extra_info": {"file_path": "flipside-api/key-concepts/filtering.md", "file_name": "filtering.md"}, "node_info": {"start": 0, "end": 2497, "_node_type": "1"}, "relationships": {"1": "028f42036ecd26fcb68e0f57d098aac30f28601b", "3": "53f2f7f3-87e2-4962-be75-273f711f7d20"}}, "__type__": "1"}, "53f2f7f3-87e2-4962-be75-273f711f7d20": {"__data__": {"text": "  filters=[\n      {\n        'eq': 'moonbirds',\n        'column': 'project_name'\n      },\n      {\n        'gte': 5000,\n        'column': 'price_usd'\n      },\n      {\n        'in': ['opensea', 'blur'],\n        'column': 'platform_name'\n      }\n    ]\n)\n```\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\n```javascript\nawait flipside.query.getQueryResults({\n  queryRunId: result.queryId,\n  pageNumber: 1,\n  pageSize: 1000,\n  filters: [\n    {\n      eq: 'moonbirds',\n      column: 'project_name'\n    },\n    {\n      gte: 5000,\n      column: 'price_usd'\n    },\n    {\n      in: ['opensea', 'blur'],\n      column: 'platform_name'\n    }\n  ]\n})\n```\n{% endtab %}\n{% endtabs %}\n\nHere is a table of all available filters:\n\n| Name                     | Operator (used in SDK) |\n| ------------------------ | ---------------------- |\n| Equals                   | `eq`                   |\n| Not Equals               | `neq`                  |\n| Greater Than             | `gt`                   |\n| Greater Than or Equal To | `gte`                  |\n| Less Than                | `lt`                   |\n| Less Than or Equal To    | `lte`                  |\n| Like                     | `like`                 |\n| In                       | `in`                   |\n| Not In                   | `notIn`                |\n\n{% hint style=\"info\" %}\nIn the next section, we'll discuss how you are debited/billed for a query's execution time using the billable metrics, Query Seconds.\n{% endhint %}\n", "doc_id": "53f2f7f3-87e2-4962-be75-273f711f7d20", "embedding": null, "doc_hash": "009b22b91d1a283a1e426b9b776055b9bdc5cf4167ffb32a9fa42db815ba0766", "extra_info": {"file_path": "flipside-api/key-concepts/filtering.md", "file_name": "filtering.md"}, "node_info": {"start": 2470, "end": 3945, "_node_type": "1"}, "relationships": {"1": "028f42036ecd26fcb68e0f57d098aac30f28601b", "2": "7440b451-f1b1-40b1-b5c5-1c3dea8d5225"}}, "__type__": "1"}, "dcec3764-ec7e-4665-bc92-b45410fb7520": {"__data__": {"text": "# Pagination\n\nThe SDK (and API) expose the ability to request a specific page of the result set by providing both a page number and a dynamically set page size (this means you control the page size).\n\n{% hint style=\"info\" %}\nBy default the page size is set to 100,000 rows and, the page number is set to 1. If you don't set the page size and just use the default, always remember to check page stats in case the number of rows in the entire query result set exceeds the default page size. In this case, you'd need to use the pagination examples on this page to gather your complete result set. Also, keep in mind that there is a byte limit on the amount of data that can be returned on a single page. There may be cases where 100,000 rows are too big and you will need to decrease the page size to a lower number. More details on [rate limits around page sizing here](../get-started/rate-limits.md).&#x20;\n{% endhint %}\n\nLet's start with the following query to return the last 50k NFT transfers on Ethereum:\n\n```sql\nSELECT\n  tx_hash,\n  nft_address,\n  tokenid,\n  block_timestamp,\n  seller_address,\n  buyer_address,\n  project_name,\n  token_metadata,\n  aggregator_name,\n  price_usd,\n  total_fees_usd,\n  platform_fee_usd,\n  platform_name,\n  creator_fee_usd\nFROM ethereum.core.ez_nft_sales\nWHERE \n  block_timestamp >= GETDATE() - interval'1 year'\n  AND project_name IS NOT NULL\nORDER BY block_timestamp DESC\nLIMIT 50000\n```\n\nFirst, we execute the query.\n\n{% hint style=\"info\" %}\nSince we know that we are going to page thru the result set after the execution of the query we set the page number and page size to 1 so that we don't attempt to return a very large data set all at once.\n{% endhint %}\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```python\nfrom flipside import Flipside\n\n# Initialize `Flipside` with your API Key and API Url\nflipside = Flipside(\"<YOUR_API_KEY>\", \"https://api-v2.flipsidecrypto.xyz\")\n\nsql = \"\"\"\nSELECT\n  tx_hash,\n  nft_address,\n  tokenid,\n  block_timestamp,\n  seller_address,\n  buyer_address,\n  project_name,\n  token_metadata,\n  aggregator_name,\n  price_usd,\n  total_fees_usd,\n  platform_fee_usd,\n  platform_name,\n  creator_fee_usd\nFROM ethereum.core.ez_nft_sales\nWHERE \n  block_timestamp >= GETDATE() - interval'1 year'\n  AND project_name IS NOT NULL\nORDER BY block_timestamp DESC\nLIMIT 50000\n\"\"\"\n\n# Run the query against Flipside's query engine and await the results\nquery_result_set = flipside.query(sql, page_number=1, page_size=1)\n```\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\n```javascript\nconst { Flipside } = require(\"@flipsidecrypto/sdk\")\n\n// Initialize `Flipside` with your API key\nconst flipside = new Flipside(\n  \"<YOUR_API_KEY>\",\n  \"https://api-v2.flipsidecrypto.xyz\"\n);\n\nconst sql = `\nSELECT\n  tx_hash,\n  nft_address,\n  tokenid,\n  block_timestamp,\n  seller_address,\n  buyer_address,\n  project_name,\n  token_metadata,\n  aggregator_name,\n ", "doc_id": "dcec3764-ec7e-4665-bc92-b45410fb7520", "embedding": null, "doc_hash": "16628e90c6d2d0065cd7397125ee6770b1c3f786b12767c8759c6c6bf96af370", "extra_info": {"file_path": "flipside-api/key-concepts/pagination.md", "file_name": "pagination.md"}, "node_info": {"start": 0, "end": 2876, "_node_type": "1"}, "relationships": {"1": "576313c1a0afa6bfab8fc0e3beb56c5c341b90cb", "3": "db72bf0f-ef9b-4258-bbf2-217fb6a5bb4b"}}, "__type__": "1"}, "db72bf0f-ef9b-4258-bbf2-217fb6a5bb4b": {"__data__": {"text": "project_name,\n  token_metadata,\n  aggregator_name,\n  price_usd,\n  total_fees_usd,\n  platform_fee_usd,\n  platform_name,\n  creator_fee_usd\nFROM ethereum.core.ez_nft_sales\nWHERE \n  block_timestamp >= GETDATE() - interval'1 year'\n  AND project_name IS NOT NULL\nORDER BY block_timestamp DESC\nLIMIT 50000\n`\n\n// Send the `Query` to Flipside's query engine and await the results\nconst queryResultSet = await flipside.query.run({\n  sql: sql,\n  pageNumber: 1,\n  pageSize: 1\n});\n```\n{% endtab %}\n{% endtabs %}\n\nAfter executing the query we can request pages of the results. In this example, we'll specify a page size of 10,000 rows per request.\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```python\n# what page are we starting on?\ncurrent_page_number = 1\n\n# How many records do we want to return in the page?\npage_size = 1000\n\n# set total pages to 1 higher than the `current_page_number` until\n# we receive the total pages from `get_query_results` given the \n# provided `page_size` (total_pages is dynamically determined by the API \n# based on the `page_size` you provide)\ntotal_pages = 2\n\n# we'll store all the page results in `all_rows`\nall_rows = []\n\nwhile current_page_number <= total_pages:\n  results = flipside.get_query_results(\n    query_result_set.query_id,\n    page_number=current_page_number,\n    page_size=page_size\n  )\n\n  total_pages = results.page.totalPages\n  if results.records:\n      all_rows = all_rows + results.records\n  \n  current_page_number += 1\n```\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\n```javascript\n// what page are we starting on?\nlet currentPageNumber = 1\n\n// How many records do we want to return in the page?\nlet pageSize = 1000\n\n// set total pages to 1 higher than the `currentPageNumber` until\n// we receive the total pages from `getQueryResults` given the \n// provided `pageSize` (totalPages is dynamically determined by the API \n// based on the `pageSize` you provide)\nlet totalPages = 2\n\n\n// we'll store all the page results in `allRows`\nlet allRows = [];\n\nwhile (currentPageNumber <= totalPages) {\n  let results = await flipside.query.getQueryResults({\n    queryRunId: queryResultSet.queryId,\n    pageNumber: currentPageNumber,\n    pageSize: pageSize,\n  });\n\n  if (results.error) {\n    throw results.error;\n  }\n\n  totalPages = results.page.totalPages;\n  allRows = [...allRows, ...results.records];\n  currentPageNumber += 1;\n}\n```\n{% endtab %}\n{% endtabs %}\n\nIn the above example, we use the `page` property of the query result set to determine how many pages exist given a page size of 1000 rows. While in this case, we know there is an upper limit of 50k rows, this is particularly useful when we don't know the total number of rows returned by a query in advance.\n\n{% hint style=\"info\" %}\nIn the next section, we'll walk thru how to sort your results.\n{% endhint %}\n", "doc_id": "db72bf0f-ef9b-4258-bbf2-217fb6a5bb4b", "embedding": null, "doc_hash": "cd30f1235165078343204411ed428778961cf7f1d9908ae864ef2c47693318d7", "extra_info": {"file_path": "flipside-api/key-concepts/pagination.md", "file_name": "pagination.md"}, "node_info": {"start": 2824, "end": 5623, "_node_type": "1"}, "relationships": {"1": "576313c1a0afa6bfab8fc0e3beb56c5c341b90cb", "2": "dcec3764-ec7e-4665-bc92-b45410fb7520"}}, "__type__": "1"}, "cc5cc4ac-92cc-46c3-b7f1-f6ac682d5859": {"__data__": {"text": "# Query Results\n\nAfter executing a query the query results can be accessed via the SDK in a query result set object.\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n\n\nQuery Results are stored in the `QueryResultSet` object. This object is returned by:\n\n* `Flipside.run`\n* `Flipside.get_query_results`\n\n```python\nclass QueryResultSet(BaseModel):\n    query_id: Union[str, None] = Field(None, description=\"The server id of the query\")\n\n    status: str = Field(\n        False, description=\"The status of the query (`PENDING`, `FINISHED`, `ERROR`)\"\n    )\n    columns: Union[List[str], None] = Field(\n        None, description=\"The names of the columns in the result set\"\n    )\n    column_types: Union[List[str], None] = Field(\n        None, description=\"The type of the columns in the result set\"\n    )\n    rows: Union[List[Any], None] = Field(None, description=\"The results of the query\")\n    run_stats: Union[QueryRunStats, None] = Field(\n        None,\n        description=\"Summary stats on the query run (i.e. the number of rows returned, the elapsed time, etc)\",\n    )\n    records: Union[List[Any], None] = Field(\n        None, description=\"The results of the query transformed as an array of objects\"\n    )\n    page: Union[PageStats, None] = Field(\n        None, description=\"Summary of page stats for this query result set\"\n    )\n    error: Any\n```\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\nQuery Results are stored in a `QueryResultSet` object. This object is returned by:\n\n* `Flipside.query.run`\n* `Flipside.query.getQueryResults`\n\n```typescript\ninterface QueryResultSet {\n  // The server id of the query\n  queryId: string | null;\n\n  // The status of the query (`PENDING`, `FINISHED`, `ERROR`)\n  status: QueryStatus | null;\n\n  // The names of the columns in the result set\n  columns: string[] | null;\n\n  // The type of the columns in the result set\n  columnTypes: string[] | null;\n\n  // The results of the query\n  rows: any[] | null;\n\n  // Summary stats on the query run (i.e. the number of rows returned, the elapsed time, etc)\n  runStats: QueryRunStats | null;\n\n  // The results of the query transformed as an array of objects\n  records: QueryResultRecord[] | null;\n\n  // The page of results\n  page: PageStats | null;\n\n  // If the query failed, this will contain the error\n  error:\n    | ApiError\n    | QueryRunRateLimitError\n    | QueryRunTimeoutError\n    | QueryRunExecutionError\n    | ServerError\n    | UserError\n    | UnexpectedSDKError\n    | null;\n}\n```\n{% endtab %}\n\n{% tab title=\"R SDK\" %}\n```\n# All results via subsetting qtoken\nqtoken$result # large print \n\n# You can also use get_query_status() for similar items to filter\n# The same terms in Python SDK & JS/TS/Node SDK apply to the result in R.\n\nq_id <- qtoken$result$queryRequest$queryRunId\n\nqstatus = get_query_status(q_id, api_key)\n\nnames(qstatus$result$queryRun) \n```\n\n```\n[1] \"id\"    ", "doc_id": "cc5cc4ac-92cc-46c3-b7f1-f6ac682d5859", "embedding": null, "doc_hash": "721cd435506d18af91f91683755f43824ac1b206a66aa8129216caa514ee228a", "extra_info": {"file_path": "flipside-api/key-concepts/query-results.md", "file_name": "query-results.md"}, "node_info": {"start": 0, "end": 2854, "_node_type": "1"}, "relationships": {"1": "44e003bf77822b76850b12a39919b761173ed899", "3": "2c5867db-778b-4410-b902-0436a0b9850d"}}, "__type__": "1"}, "2c5867db-778b-4410-b902-0436a0b9850d": {"__data__": {"text": "\n```\n\n```\n[1] \"id\"                    \"sqlStatementId\"        \"state\"                 \"path\"                  \"fileCount\"            \n [6] \"lastFileNumber\"        \"fileNames\"             \"errorName\"             \"errorMessage\"          \"errorData\"            \n[11] \"dataSourceQueryId\"     \"dataSourceSessionId\"   \"startedAt\"             \"queryRunningEndedAt\"   \"queryStreamingEndedAt\"\n[16] \"endedAt\"               \"rowCount\"              \"totalSize\"             \"tags\"                  \"dataSourceId\"         \n[21] \"userId\"                \"createdAt\"             \"updatedAt\"             \"archivedAt\"   \n```\n{% endtab %}\n{% endtabs %}\n\nResults are accessible via `rows` and `records`. Rows is an array of arrays (CSV format), while records are an array of objects where the keys are the column names.\n\n### Run Stats\n\nRun stats provide a summary of the entire result set from the number of rows returned, the number of bytes returned, and a breakdown of time spent on each part of the query run's lifecycle.\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\nPython QueryRunStats object, which can be accessed on the QueryResultSet via `run_stats`\n\n```python\nclass QueryRunStats(BaseModel):\n    started_at: datetime = Field(None, description=\"The start time of the query run.\")\n    ended_at: datetime = Field(None, description=\"The end time of the query run.\")\n    query_exec_started_at: datetime = Field(\n        None, description=\"The start time of query execution.\"\n    )\n    query_exec_ended_at: datetime = Field(\n        None, description=\"The end time of query execution.\"\n    )\n    streaming_started_at: datetime = Field(\n        None, description=\"The start time of streaming query results.\"\n    )\n    streaming_ended_at: datetime = Field(\n        None, description=\"The end time of streaming query results.\"\n    )\n    elapsed_seconds: int = Field(\n        None,\n        description=\"The number of seconds elapsed between the start and end times.\",\n    )\n    queued_seconds: int = Field(\n        None,\n        description=\"The number of seconds elapsed between when the query was created and when execution on the data source began.\",\n    )\n    streaming_seconds: int = Field(\n        None,\n        description=\"The number of seconds elapsed between when the query execution completed and results were fully streamed to Flipside's servers.\",\n    )\n    query_exec_seconds: int = Field(\n        None,\n        description=\"The number of seconds elapsed between when the query execution", "doc_id": "2c5867db-778b-4410-b902-0436a0b9850d", "embedding": null, "doc_hash": "1a5b1b9b840aecf048a0a9b0bd64e43c1684bed6b7594ed58a20033cfe3c0ef0", "extra_info": {"file_path": "flipside-api/key-concepts/query-results.md", "file_name": "query-results.md"}, "node_info": {"start": 2838, "end": 5315, "_node_type": "1"}, "relationships": {"1": "44e003bf77822b76850b12a39919b761173ed899", "2": "cc5cc4ac-92cc-46c3-b7f1-f6ac682d5859", "3": "936806b7-f771-4a5a-aa5a-091502e17afb"}}, "__type__": "1"}, "936806b7-f771-4a5a-aa5a-091502e17afb": {"__data__": {"text": "      description=\"The number of seconds elapsed between when the query execution started and when it completed on the data source.\",\n    )\n    record_count: int = Field(\n        None, description=\"The number of records returned by the query.\"\n    )\n    bytes: int = Field(None, description=\"The number of bytes returned by the query.\")\n```\n\n{% hint style=\"info\" %}\n`query_exec_seconds` represents the number of QuerySeconds used by the query that you will be billed/debited for. Note you are not billed/debited for queued, streaming, or total seconds, only execution seconds. For more information on QuerySeconds see the [QuerySeconds section here](query-seconds.md).\n{% endhint %}\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\nQueryRunStats which can be accessed on the QueryResultSet via `runStats`.\n\n```typescript\ntype QueryRunStats = {\n  startedAt: Date;\n  endedAt: Date;\n  elapsedSeconds: number;\n  queryExecStartedAt: Date;\n  queryExecEndedAt: Date;\n  streamingStartedAt: Date;\n  streamingEndedAt: Date;\n  queuedSeconds: number;\n  streamingSeconds: number;\n  queryExecSeconds: number;\n  bytes: number; // the number of bytes returned by the query\n  recordCount: number;\n};\n\n```\n\n{% hint style=\"info\" %}\nqueryExecSeconds represents the number of QuerySeconds used by the query that you will be billed/debited for. Note you are not billed/debited for queued, streaming, or total seconds, only execution seconds. For more information on QuerySeconds see the [QuerySeconds section here](query-seconds.md).\n{% endhint %}\n{% endtab %}\n{% endtabs %}\n\n### Page\n\nThe `page` object returns stats about the current page of results as well as the total available pages given the specified page size you provided when requesting the results.&#x20;\n\nFor example, if there are 1 million rows returned by a query and you request results with a page size of 10,000 rows, the total number of pages will be 100.\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```python\nclass PageStats(BaseModel):\n    currentPageNumber: int\n    currentPageSize: int\n    totalRows: int\n    totalPages: int\n\n```\n\nAssuming we have `query_result_set` variable you can access the total number of pages simply by calling:\n\n```\nprint(query_result_set.page.totalPages)\n```\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\n```typescript\ninterface PageStats {\n  currentPageNumber: number;\n  currentPageSize: number;\n  totalRows: number;\n  totalPages: number;\n}\n\n```\n\nAssuming we have `queryResultSet` variable you can access the total number of pages simply by calling:\n\n```\nconsole.log(queryResultSet.page.totalPages)\n```\n{% endtab %}\n{% endtabs %}\n\nIn the next example we'll show you how to use `PageStats` to iterate over a Query Result Set.\n", "doc_id": "936806b7-f771-4a5a-aa5a-091502e17afb", "embedding": null, "doc_hash": "5eee598e704350a5f8aedc25b5685659b0380dd7dfdb313ed4cc2aec6948e912", "extra_info": {"file_path": "flipside-api/key-concepts/query-results.md", "file_name": "query-results.md"}, "node_info": {"start": 5251, "end": 7950, "_node_type": "1"}, "relationships": {"1": "44e003bf77822b76850b12a39919b761173ed899", "2": "2c5867db-778b-4410-b902-0436a0b9850d"}}, "__type__": "1"}, "08a1b612-c4e1-476f-9193-23dd76109af2": {"__data__": {"text": "# Query Seconds\n\nQuery Seconds represent computational time against Flipside's data warehouse, canonically referred to as a DataSource. Every QueryRun has the following life cycle.&#x20;\n\n<figure><img src=\"../../.gitbook/assets/Untitled (4).png\" alt=\"\"><figcaption></figcaption></figure>\n\nA query run that is in the state `QUERY_STATE_READY` has been queued for execution. Once it begins execution it transitions to `QUERY_STATE_RUNNING`. From here it can transition to a number of states. If the query executes against the data source successfully it will transition to `QUERY_STATE_STREAMING_RESULTS` and begin downloading the query results for you to export.&#x20;\n\nIf the query failed for any reason (_syntax error, warehouse issue, etc._) the query will transition to a state of `QUERY_STATE_FAILED`. If the user decides to explicitly cancel the query the query run will be terminated and its state will transition to `QUERY_STATE_CANCELED`. Finally, if the QueryRun finishes downloading its results from the data source it will transition to `QUERY_STATE_SUCCESS` .\n\nGiven the above life-cycle for a QueryRun, let's walk thru a real example to determine how you might be billed for a query. Here is a query we're going to execute to find the address associated with an ENS domain.\n\n```sql\nSELECT\n  origin_from_address\nFROM ethereum.core.fact_event_logs\nWHERE\n  contract_address = lower('0x283af0b28c62c092c9727f1ee09c02ca627eb7f5')\n  AND event_inputs:name = lower('{ens_domain}')\n  AND event_name = 'NameRegistered'\n  AND block_timestamp >= GETDATE() - interval'4 year'\n```\n\nThis query will produce four different time stamps:\n\n1. **TotalElapsedSeconds** - the time difference between a terminal state (`QUERY_STATE_SUCCESS` , `QUERY_STATE_FAILED`  or `QUERY_STATE_CANCELED` ), and `QUERY_STATE_READY` .\n2. **StreamingSeconds** - the time difference between `QUERY_STATE_SUCCESS` and `QUERY_STATE_STREAMING_RESULTS`\n3. **ExecutionSeconds** - the time difference between `QUERY_STATE_STREAMING_RESULTS` and `QUERY_STATE_RUNNING`\n4. **QueuedSeconds** - the time difference between `QUERY_STATE_READY` and `QUERY_STATE_RUNNING`\n\n{% hint style=\"info\" %}\nYou are only debited/billed for ExecutionSeconds (#3) for a successfully run query. If your query fails or was canceled you are not billed for the ExecutionSeconds.\n{% endhint %}\n\nLet's assume this Query has never been executed, meaning no results exist, and as a result, a billable QueryRun is created.\n\nThis QueryRun executes successfully for a total of 18 seconds, here is the breakdown:\n\n| Breakdown        | Seconds |\n| ---------------- | ------- |\n| StreamingSeconds | 4       |\n| ExecutionSeconds | 12      |\n| QueuedSeconds    | 1       |\n\nSince you are only billed for ExecutionSeconds you would be debited for 12 seconds. At a rate of $0.02 per query second, you would be billed $0.24 (12 Execution Query Seconds \\* $0.02/query second).\n\n{% hint style=\"info\" %}\nIn the next section will discuss controlling query execution (and costs) by using the parameter `maxAgeMinutes`.\n{% endhint %}\n", "doc_id": "08a1b612-c4e1-476f-9193-23dd76109af2", "embedding": null, "doc_hash": "f0eb0bbe2e7a635481f80076cf212fbd5fbf693fc2a3ba472c845f97dfa86d55", "extra_info": {"file_path": "flipside-api/key-concepts/query-seconds.md", "file_name": "query-seconds.md"}, "node_info": {"start": 0, "end": 3055, "_node_type": "1"}, "relationships": {"1": "232cb84e428d7e1578ab630c80f9fb458d98d3b2"}}, "__type__": "1"}, "313267d4-c720-4f70-b870-d6239eb07fff": {"__data__": {"text": "# Run Your First Query\n\nThis tutorial assumes you have already signed up for a Flipside Account and generated an API key [here in Flipside's Data Studio](https://flipsidecrypto.xyz/account/api-keys).&#x20;\n\n### 1. Install the SDK (or skip to #2 if using the API directly)\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```\npip install flipside\n```\n\n{% hint style=\"info\" %}\n_Python 3.7 and above, is required to use `flipside`_\n{% endhint %}\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\n```\nyarn add @flipside/sdk\n```\n\n_or_\n\n```\nnpm install @flipside/sdk\n```\n{% endtab %}\n\n{% tab title=\"R SDK\" %}\n```\ninstall.packages(\"shroomDK\") # from CRAN\n```\n{% endtab %}\n{% endtabs %}\n\n### 2. Execute your Query\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n<pre class=\"language-python\"><code class=\"lang-python\">from flipside import Flipside\n\n# Initialize `Flipside` with your API Key and API Url\nflipside = Flipside(\"&#x3C;YOUR_API_KEY>\", \"https://api-v2.flipsidecrypto.xyz\")\n\nsql = \"\"\"\nSELECT \n  date_trunc('hour', block_timestamp) as hour,\n  count(distinct tx_hash) as tx_count\nFROM ethereum.core.fact_transactions \nWHERE block_timestamp >= GETDATE() - interval'7 days'\nGROUP BY 1\n\"\"\"\n<strong>\n</strong># Run the query against Flipside's query engine and await the results\nquery_result_set = flipside.query(sql)\n</code></pre>\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\n<pre class=\"language-javascript\"><code class=\"lang-javascript\">const { Flipside } = require(\"@flipsidecrypto/sdk\")\n\n// Initialize `Flipside` with your API key\nconst flipside = new Flipside(\n  \"&#x3C;YOUR_API_KEY>\",\n  \"https://api-v2.flipsidecrypto.xyz\"\n);\n\n<strong>const sql = `\n</strong>SELECT \n  date_trunc('hour', block_timestamp) as hour,\n  count(distinct tx_hash) as tx_count\nFROM ethereum.core.fact_transactions \nWHERE block_timestamp >= GETDATE() - interval'7 days'\nGROUP BY 1\n`\n\n// Send the `Query` to Flipside's query engine and await the results\nconst queryResultSet = await flipside.query.run({sql: sql});\n</code></pre>\n{% endtab %}\n\n{% tab title=\"R SDK\" %}\n<pre><code><strong>library(shroomDK)\n</strong><strong>\n</strong><strong>api_key = readLines(\"api_key.txt\") # always gitignore your API keys!\n</strong>\nquery &#x3C;- { \n\"\nSELECT \n  date_trunc('hour', block_timestamp) as hour,\n  count(distinct tx_hash) as tx_count\nFROM ethereum.core.fact_transactions \nWHERE block_timestamp >= GETDATE() - interval'7 days'\nGROUP BY 1\n\"\n }\n\n# auto_paginate_query is a wrapper to all other steps. \npull_data &#x3C;- auto_paginate_query(\nquery = query,\napi_key = api_key\n)\n\n# otherwise step 1 is to run the query and get a Run ID\nqtoken", "doc_id": "313267d4-c720-4f70-b870-d6239eb07fff", "embedding": null, "doc_hash": "9abebd6592015276c569dc582d6ff05b91bfcee4459935e92811e0ceae2b6e66", "extra_info": {"file_path": "flipside-api/key-concepts/run-your-first-query.md", "file_name": "run-your-first-query.md"}, "node_info": {"start": 0, "end": 2589, "_node_type": "1"}, "relationships": {"1": "6662a1019141825ca4130bb6868b1ed7989abf58", "3": "6a533f38-7677-4491-9664-2269cb42313d"}}, "__type__": "1"}, "6a533f38-7677-4491-9664-2269cb42313d": {"__data__": {"text": "otherwise step 1 is to run the query and get a Run ID\nqtoken &#x3C;- create_query_token(\nquery = query,\napi_key = api_key)\n</code></pre>\n{% endtab %}\n{% endtabs %}\n\n### 3. Paginate over the Results\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```python\n# what page are we starting on?\ncurrent_page_number = 1\n\n# How many records do we want to return in the page?\npage_size = 100\n\n# set total pages to 1 higher than the `current_page_number` until\n# we receive the total pages from `get_query_results` given the \n# provided `page_size` (total_pages is dynamically determined by the API \n# based on the `page_size` you provide)\ntotal_pages = 2\n\n# we'll store all the page results in `all_rows`\nall_rows = []\n\nwhile current_page_number <= total_pages:\n  results = flipside.get_query_results(\n    query_result_set.query_id,\n    page_number=current_page_number,\n    page_size=page_size\n  )\n\n  total_pages = results.page.totalPages\n  if results.records:\n      all_rows = all_rows + results.records\n  \n  current_page_number += 1\n```\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\n```javascript\n// what page are we starting on?\nlet currentPageNumber = 1\n\n// How many records do we want to return in the page?\nlet pageSize = 100\n\n// set total pages to 1 higher than the `currentPageNumber` until\n// we receive the total pages from `getQueryResults` given the \n// provided `pageSize` (totalPages is dynamically determined by the API \n// based on the `pageSize` you provide)\nlet totalPages = 2\n\n\n// we'll store all the page results in `allRows`\nlet allRows = [];\n\nwhile (currentPageNumber <= totalPages) {\n  let results = await flipside.query.getQueryResults({\n    queryRunId: queryResultSet.queryId,\n    pageNumber: currentPageNumber,\n    pageSize: pageSize,\n  });\n\n  if (results.error) {\n    throw results.error;\n  }\n\n  totalPages = results.page.totalPages;\n  allRows = [...allRows, ...results.records!];\n  currentPageNumber += 1;\n}\n```\n{% endtab %}\n\n{% tab title=\"R SDK\" %}\n```\nq_id <- qtoken$result$queryRequest$queryRunId\npage_size = 100\npage_count = 2\n\n# auto_paginate_query() overrides size & count to get all available data. \n\n# otherwise you can manually paginate with get_query_from_token()\n# ?get_query_from_token waits for query to finish via ?get_query_status\n\n results <- lapply(1:page_count, function(i){\n    temp_page <- get_query_from_token(q_id,\n                                api_key = api_key,\n                                page_number = i,\n                                page_size = page_size)\n\n    if(length(temp_page$result$rows) < 1){\n      df <- data.frame()\n    } else {\n  # See ?clean_query for conversion to a data", "doc_id": "6a533f38-7677-4491-9664-2269cb42313d", "embedding": null, "doc_hash": "866a4b70f37a58f16665bddffbf38075008094d7aac8f83685ea4c7953d9387c", "extra_info": {"file_path": "flipside-api/key-concepts/run-your-first-query.md", "file_name": "run-your-first-query.md"}, "node_info": {"start": 2542, "end": 5173, "_node_type": "1"}, "relationships": {"1": "6662a1019141825ca4130bb6868b1ed7989abf58", "2": "313267d4-c720-4f70-b870-d6239eb07fff", "3": "b09026e7-b7a1-47d6-8034-47277ff3f55d"}}, "__type__": "1"}, "b09026e7-b7a1-47d6-8034-47277ff3f55d": {"__data__": {"text": "   } else {\n  # See ?clean_query for conversion to a data frame.\n    df <- clean_query(temp_page)\n      }\n    return(df)\n  })\n\n # drop empty pages just in case.\n   results <- results[unlist(lapply(results, nrow)) > 0]\n\n# combine into a single data frame.\n   results <- do.call(rbind.data.frame, results)\n```\n\n\n{% endtab %}\n{% endtabs %}\n", "doc_id": "b09026e7-b7a1-47d6-8034-47277ff3f55d", "embedding": null, "doc_hash": "4f16afa20b609118f5b3d6d3061b231e2adedd3ca8f242345ceac157ace8a2c5", "extra_info": {"file_path": "flipside-api/key-concepts/run-your-first-query.md", "file_name": "run-your-first-query.md"}, "node_info": {"start": 5164, "end": 5501, "_node_type": "1"}, "relationships": {"1": "6662a1019141825ca4130bb6868b1ed7989abf58", "2": "6a533f38-7677-4491-9664-2269cb42313d"}}, "__type__": "1"}, "e8f3c2e5-5284-4a9a-8dc8-a02afc24cdac": {"__data__": {"text": "# Sorting\n\nIn this section, we'll explore how to use server-side sorting to sort your query result set. All sorting is done over the entire query result set, server-side by the Flipside Query Engine.\n\nServer-side result sorting is especially useful for large result sets where your client-side environment may be memory/resource constrained.\n\nBuilding off the example from the previous section let's sort our results in descending order by `price_usd` descending. &#x20;\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```python\nflipside.get_query_results(\n    query_result_set.query_id,\n    page_number=1,\n    page_size=10000,\n    sort_by=[\n      {\n        'column': 'price_usd',\n        'direction': 'desc'\n      }\n    ]\n)\n```\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\n```javascript\nawait flipside.query.getQueryResults({\n  queryRunId: queryResultSet.queryId,\n  pageNumber: 1,\n  pageSize: 10000,\n  sortBy: [\n    {\n      column: 'price_usd',\n      direction: 'desc'\n    }\n  ]\n})\n```\n{% endtab %}\n{% endtabs %}\n\nValid directions include `desc` and `asc`. You may also sort by multiple columns. The order you provide the sort by objects determines which sort by object takes precedence.\n\nThe following example will first sort results in descending order by `price_usd` and then in ascending order by `project_name`.\n\n{% tabs %}\n{% tab title=\"Python SDK\" %}\n```python\nflipside.get_query_results(\n    query_result_set.query_id,\n    page_number=1,\n    page_size=10000,\n    sort_by=[\n      {\n        'column': 'price_usd',\n        'direction': 'desc'\n      },\n      {\n        'column': 'project_name',\n        'direction': 'asc'\n      }\n    ]\n)\n```\n{% endtab %}\n\n{% tab title=\"JS/TS/Node SDK\" %}\n```javascript\nawait flipside.query.getQueryResults({\n  queryRunId: queryResultSet.queryId,\n  pageNumber: 1,\n  pageSize: 10000,\n  sortBy: [\n    {\n      column: 'price_usd',\n      direction: 'desc'\n    },\n    {\n      column: 'project_name',\n      direction: 'asc'\n    }\n  ]\n})\n```\n{% endtab %}\n{% endtabs %}\n\n{% hint style=\"info\" %}\nIn the next section, we'll walk thru how to perform server-side filtering of your query result set.\n{% endhint %}\n", "doc_id": "e8f3c2e5-5284-4a9a-8dc8-a02afc24cdac", "embedding": null, "doc_hash": "8cdf0691a76094b80c297ae25a6d95b96cfe9020a58fbee772153ae7e7ecb6d7", "extra_info": {"file_path": "flipside-api/key-concepts/sorting.md", "file_name": "sorting.md"}, "node_info": {"start": 0, "end": 2134, "_node_type": "1"}, "relationships": {"1": "84acf0f72688c789cced0fef1472f68b5b2256c4"}}, "__type__": "1"}, "4d89d41b-5940-4587-a004-a13d6d151d23": {"__data__": {"text": "# SDKs\n\nFlipside makes available the following SDKs as higher-level, more developer-friendly wrappers over the API. Examples for each SDK are available throughout the [Concepts & Examples Section here](get-started/).&#x20;\n\n<table><thead><tr><th width=\"255\">Language</th><th width=\"143\">Version</th><th>Source Code (Github)</th></tr></thead><tbody><tr><td>\u2705 Python</td><td>2.0.7</td><td><a href=\"https://github.com/FlipsideCrypto/sdk/tree/main/python\">Source Code</a></td></tr><tr><td>\u2705 JS/TypeScript</td><td>2.0.0</td><td><a href=\"https://github.com/FlipsideCrypto/sdk/tree/main/js\">Source Code</a></td></tr><tr><td>\u2705 R</td><td>0.2.1</td><td><a href=\"https://github.com/FlipsideCrypto/sdk/tree/main/r/shroomDK\">Source Code</a></td></tr></tbody></table>\n\nWant an SDK for another language? Or want to create your own SDK? Please reach out in [Discord](https://discord.gg/ZmU3jQuu6W)!&#x20;\n\n{% hint style=\"info\" %}\n_**Prefer to hit the API directly? You can skip the SDKs and query data directly from our**_[ _**API**_](get-started/rest-api.md)_**.**_\n{% endhint %}\n\n{% hint style=\"warning\" %}\n_**For legacy ShroomDK users:** in May of 2023 Flipside released V2 of its API that enables faster, and more reliable querying as you scale up usage. We are currently upgrading the existing SDKs to be compatible with the V2 API. Your existing SDK integrations will be forward-compatible with the updated SDKs. That means the only thing you will need to do is upgrade to the latest version._ The updated Python SDK is available today, with the JS/Typescript and R SDKs rolling out in the coming weeks.\n{% endhint %}\n\n\n\n", "doc_id": "4d89d41b-5940-4587-a004-a13d6d151d23", "embedding": null, "doc_hash": "223447e71f91ce2a307ec4151c38cf9db9e2276a945b83b04a167095e4a2448d", "extra_info": {"file_path": "flipside-api/sdks.md", "file_name": "sdks.md"}, "node_info": {"start": 0, "end": 1611, "_node_type": "1"}, "relationships": {"1": "40b80c69ba02aa45e159c01363d87cab6f4a5f7a"}}, "__type__": "1"}, "744c97ad-d03f-4d9f-bb99-83e025461860": {"__data__": {"text": "# ShroomDK Migration Guide\n\n## Migration Guide: ShroomDK to API v2\n\nAs we continue to innovate, we're transitioning from our legacy API/SDK, ShroomDK, to our new and improved API v2. This upgraded API enables users to execute complex SQL queries on Flipside's Blockchain Data Sets and provides enhanced scalability and performance.\n\nFor additional details and guidance, visit our [API Documentation](https://docs.flipsidecrypto.com/flipside-api/getting-started).&#x20;\n\nIf you need to generate new API keys or want to monitor your usage, visit your [account page](https://flipsidecrypto.xyz/account/api-keys).\n\n### **Migrating to API v2: Key Steps**\n\nHere are the key steps for migrating to API v2:\n\n1. [Updating SDKs ](shroomdk-migration-guide.md#1.-updating-sdks)\n2. [Modifying API Endpoint URLs ](shroomdk-migration-guide.md#2.-modifying-api-endpoint-urls)\n3. [Handling Changes in JSON Responses](shroomdk-migration-guide.md#3.-handling-changes-in-json-responses)\n\n#### 1. Updating SDKs\n\nFor Python or JavaScript SDK users, please update to the latest versions:\n\n{% tabs %}\n{% tab title=\"Python\" %}\n```\npip install flipside\n```\n\nThen, create a new Flipside instance with your API key and the new API endpoint:\n\n```python\nflipside = Flipside(\"<YOUR_API_KEY>\", \"https://api-v2.flipsidecrypto.xyz\")\n```\n{% endtab %}\n\n{% tab title=\"JavaScript\" %}\n```\nnpm install @flipsidecrypto/sdk\n```\n\nSubsequently, instantiate a new Flipside object using your API key and the new API endpoint:\n\n```javascript\nconst flipside = new Flipside(\"<YOUR_API_KEY>\", \"https://api-v2.flipsidecrypto.xyz\");\n```\n{% endtab %}\n\n{% tab title=\"R\" %}\n```\n# Current CRAN version: 0.2.1\npackageVersion(\"shroomDK\") == '0.2.1'\ninstall.packages(\"shroomDK\") \nlibrary(shroomDK) \n\nfile.exists(\"api_key.txt\") # always gitignore your API keys!\n\napi_key <- ReadLines(\"api_key.txt\")\n\nquery <- { \n\"\nSELECT \n  date_trunc('hour', block_timestamp) as hour,\n  count(distinct tx_hash) as tx_count\nFROM ethereum.core.fact_transactions \nWHERE block_timestamp >= GETDATE() - interval'7 days'\nGROUP BY 1\n\"\n }\n\n# auto_paginate_query \"just works\" similar to 0.1.1 behavior \n# use ?auto_paginate_query to see new detailed parameters. \npull_data <- auto_paginate_query(\nquery = query,\napi_key = api_key\n)\n```\n{% endtab %}\n{% endtabs %}\n\nThe updated SDKs will automatically target the new API v2 endpoints.\n\n#### 2. Modifying API Endpoint URLs\n\nIf you're directly accessing the API, replace all ShroomDK API URLs in your codebase with the new v2 API URL: `https://api-v2.flipsidecrypto.xyz`.\n\n#### 3. Handling Changes in JSON Responses\n\nAPI v2 introduces changes to JSON responses. Adjust your response handling code to match these new specifications. Detailed information on the new JSON responses is available on our [API documentation page](https://api-docs.flipsidecrypto.xyz/).\n\nAfter making these changes, be sure to thoroughly", "doc_id": "744c97ad-d03f-4d9f-bb99-83e025461860", "embedding": null, "doc_hash": "2a7577048113e19ba4ac6b9b15d43b371c3fdd77253316681d397c90f022f342", "extra_info": {"file_path": "flipside-api/shroomdk-migration-guide.md", "file_name": "shroomdk-migration-guide.md"}, "node_info": {"start": 0, "end": 2874, "_node_type": "1"}, "relationships": {"1": "6b5d4322455ac11d2e96fdf25fd22186ff990a42", "3": "ad032309-5dc0-4104-9215-12073262e210"}}, "__type__": "1"}, "ad032309-5dc0-4104-9215-12073262e210": {"__data__": {"text": "making these changes, be sure to thoroughly test your applications to confirm smooth functionality with API v2. For any issues encountered during the migration, please reach out to our support team.\\\n\\\n", "doc_id": "ad032309-5dc0-4104-9215-12073262e210", "embedding": null, "doc_hash": "bd1bd426bdadfe8f4b0ae696e4a73e34f80923cc7490c320d400785e55e71a84", "extra_info": {"file_path": "flipside-api/shroomdk-migration-guide.md", "file_name": "shroomdk-migration-guide.md"}, "node_info": {"start": 2831, "end": 3033, "_node_type": "1"}, "relationships": {"1": "6b5d4322455ac11d2e96fdf25fd22186ff990a42", "2": "744c97ad-d03f-4d9f-bb99-83e025461860"}}, "__type__": "1"}, "3aee61f4-0553-45ba-983f-9af0985f1285": {"__data__": {"text": "---\ndescription: Example apps and templates to help you get started quickly.\n---\n\n# More Examples\n\n* [Basic React App](https://github.com/FlipsideCrypto/sdk/tree/main/examples/js/react-app)\n* [Python Notebook - SDK Intro & Features](https://github.com/FlipsideCrypto/sdk/tree/main/examples/python/notebooks)\n* [R Markdown Repo](https://github.com/FlipsideCrypto/sdk/tree/main/examples/r) | [A Real Bored Ape Yacht Club Analysis](https://science.flipsidecrypto.xyz/content/cde48707-2e25-45e8-bd1f-451482c4efed/shroomDK\\_BAYC\\_example.html)\n\n", "doc_id": "3aee61f4-0553-45ba-983f-9af0985f1285", "embedding": null, "doc_hash": "61b3e1db8b31c3eabb52d25d386f3b98741c0a2243030e3108eff94624a66ea8", "extra_info": {"file_path": "flipside-api/templates-and-walkthroughs.md", "file_name": "templates-and-walkthroughs.md"}, "node_info": {"start": 0, "end": 540, "_node_type": "1"}, "relationships": {"1": "327b05363a335a0a4daa90e894db3c48177fc544"}}, "__type__": "1"}, "6ae15227-a4d8-4bf2-8f69-5a9b7d878cc5": {"__data__": {"text": "---\ndescription: Get paid for your work.\n---\n\n# Analyst Rewards\n\n### Flipside has rewarded analysts with more than $3.3 million dollars for their Web3 expertise. And we\u2019re just getting started.&#x20;\n\nWe\u2019re dedicated to paying analysts, not charging them. Build your brand while building your stacks.&#x20;\n\nExplore fun, new ways to earn some dough - now available at your fingertips.\n\n\n\n**Revenue streams for Flipside analysts:**\n\n* [Bounties](./#bounties)\n* [Scavenger Hunts](./#scavenger-hunts)&#x20;\n* [Top 8](./#top-8)&#x20;\n* [Ambassador Program ](./#ambassador-program)\n* [Direct to Analyst Commissions](./#direct-to-analyst-commissions)&#x20;\n* [Introducing: Analysts Tournaments](./#introducing-analyst-tournaments)&#x20;\n\n\n\n### **Bounties**\n\nMore than $3.3 million has been rewarded to analysts through bounties. Want to earn on your own terms? By completing bounties, you can build your portfolio while you build your bag \u2014 it\u2019s not #passiveincome, but it\u2019s a great way to thrive as an independent analyst.\n\n_**How to get started:**_&#x20;\n\nFind new bounties every week on the [Metrics App](https://metricsdao.xyz/app/challenges).\n\n\n\n### Scavenger Hunts\n\nFor the curious, puzzle-addicted analysts that play as seriously as they work, scavenger hunts are a fun way to earn. Analysts have earned $620,000 through hunts. Game on, and get that bread!\n\n_**How to get started:**_\n\nFind new hunts on the [Metrics App](https://metricsdao.xyz/app/challenges).\n\n\n\n### Top 8&#x20;\n\nAlways aiming for the top? The Top 8 is like a weekly bonus check for the best of the best in social analytics. For every hour your dashboard spends in a Top 8 slot, you\u2019re earning that #passiveincome. Plus, $500 best-in-ecosystem prizes sweeten the pot.\n\n_**How to get started:**_\n\nGreat work is rewarded by your peers. [Dashboards](https://flipsidecrypto.xyz/) are ranked by likes and social media engagement. Create and share dashboards that your peers value, and it will happen organically. [Learn more](top-8-dashboard-rewards.md)&#x20;\n\n\n\n### Ambassador Program\n\nAmbassadors are data storytellers who specialize in one or more chains, and serve those chain\u2019s communities with relevant data created on Flipside. You\u2019ll become a trusted and helpful source of insight in your community, giving you the chance to spread the word about the importance and accessibility of data to your ecosystem.\n\n_**How to get started:**_\n\nSubmit stellar dashboards. And get to know our team in our [Discord](https://discord.gg/ZmU3jQuu6W) so we can get to know you. We\u2019ll reach out when we see you\u2019re a go-to ecosystem expert.\n\n\n\n### Direct to Analyst Commissions\n\nWhen specific questions, problems or projects pop up, we ask the community for help. These are big, one-off challenges with a big pay-off. Just keep honing your craft, and we\u2019ll help you with the connections.\n\n_**How to get started:**_\n\nMake great work. Our team is always scanning dashboards to find hidden talent. Drop us a message in [Discord](https://discord.gg/ZmU3jQuu6W), let us know what chain you\u2019re an expert in.\n\n\n\n### Introducing: Analyst Tournaments\n\nTournaments are March-Madness-style bracket", "doc_id": "6ae15227-a4d8-4bf2-8f69-5a9b7d878cc5", "embedding": null, "doc_hash": "7bba2db55d8257c00be5f30508465af22bfea902e6224f70dd91cfa677119106", "extra_info": {"file_path": "our-app/analyst-rewards/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 3140, "_node_type": "1"}, "relationships": {"1": "b66858711eb5c50841b37ae15e00d7e7ac3857db", "3": "d7b17a6c-511d-4990-870f-0e4afada7a45"}}, "__type__": "1"}, "d7b17a6c-511d-4990-870f-0e4afada7a45": {"__data__": {"text": "Introducing: Analyst Tournaments\n\nTournaments are March-Madness-style bracket tournaments. Go head to head with other analysts - the best dashboards move on in the competition. Tens of thousands of dollars are up for grabs in each tournament.\n\n_**How to get started:**_\n\nFollow us on [Twitter](https://twitter.com/flipsidecrypto) for tournament announcements and registration. Pro tip: we may start whitelisting tournaments, with a priority given to analysts who have had dashboards ranked in the Top 40 on Flipside. Happy querying.\n\n", "doc_id": "d7b17a6c-511d-4990-870f-0e4afada7a45", "embedding": null, "doc_hash": "dab1171697ab6918c533932c8f1a7b93452e34ea25217db6aaec51c47e152bf7", "extra_info": {"file_path": "our-app/analyst-rewards/README.md", "file_name": "README.md"}, "node_info": {"start": 3063, "end": 3597, "_node_type": "1"}, "relationships": {"1": "b66858711eb5c50841b37ae15e00d7e7ac3857db", "2": "6ae15227-a4d8-4bf2-8f69-5a9b7d878cc5"}}, "__type__": "1"}, "02232173-6cc6-4592-8466-2d92f17d4e54": {"__data__": {"text": "# \u2728Top 8\u2728 Dashboard Rewards\n\nTop 8 is Flipside's dashboard rewards program. **Please note: this program is in Beta testing, and is subject to change!** [Read the announcement](https://twitter.com/flipsidecrypto/status/1636035565803155457?s=20) for more details_._\n\nTLDR; make dashboards in our app, publish and promote them, and if your dashboard spends time in the Top 8 (the first eight spots on our [homepage](https://flipsidecrypto.xyz/)) you get paid.&#x20;\n\nHere's how it works:\n\nThe trending dashboard rankings on our [homepage](https://flipsidecrypto.xyz/) are based on:\n\n\ud83d\udc4d likes on our website\\\n\ud83d\udcc8 social media engagement and shares across various platforms\\\n\ud83d\udc40 views/website engagement\\\n\ud83c\udf10 shares across the web\\\n\ud83e\udd2b other factors\n\nBasically, If you make a dashboard that resonates with people, it has a chance to rise to the Top 8 trending dashboards on the site. When that happens we keep track of it, and every Wednesday, we tally up time-spent in the Top 8 per dashboard, and dole out the rewards accordingly.\n\nRewards are currently pegged at: $1 for every hour your board is in the Top 8.&#x20;\n\nFlipside staff will reach out to winners directly. Please feel free to reach out in [Discord](https://discord.gg/ZmU3jQuu6W) if you have any questions.\n\nWe will continue to evolve this program over time \u2014 to keep up with the latest developments, or if you're looking for more ways to earn, level up, or build a following, follow us on Twitter: [@flipsidecrypto](https://twitter.com/flipsidecrypto).\n", "doc_id": "02232173-6cc6-4592-8466-2d92f17d4e54", "embedding": null, "doc_hash": "c36e709f3e0cadc2f2aec64a829ad4a28d10f82d71f3676e10c7b72464aa1dad", "extra_info": {"file_path": "our-app/analyst-rewards/top-8-dashboard-rewards.md", "file_name": "top-8-dashboard-rewards.md"}, "node_info": {"start": 0, "end": 1505, "_node_type": "1"}, "relationships": {"1": "5de73531b22bf0f24cc0f50507addbf41b93dfac"}}, "__type__": "1"}, "7a7b61ad-fb99-48a6-9798-7e5333a15597": {"__data__": {"text": "---\ndescription: >-\n  Our data Studio is the easiest place to get started working with blockchain\n  data.\n---\n\n# Getting Around the App\n\nWith a little bit of SQL knowledge, the Flipside Studio makes it incredibly easy to access the best blockchain data in the world. To get started, we recommend stepping through our [walkthrough](../getting-started.md) \u2014 it's designed to get you up to speed on the basics of the app as quickly as possible.\n\nThe app has a few basic components, here's how they fit together:\n\n* [**Discover**](discover.md) \u2014\u00a0the homepage of the app, and the best way to keep your finger on the pulse of what's happening in crypto data. Here you can see what dashboards are trending for different chains and projects, fav ones you like, keyword search for specific topics, and see which analysts are consistently topping the charts.\n* [**My Work**](my-work.md) \u2014 where the work lives: get here by clicking on the folder icon in the side nav. Keyword search to open any work you've done in the past. Group files by creating collections and nesting collections. Organize by using features like multi-select and drag & drop.&#x20;\n* [**Query Editor**](query-editor.md)\u00a0\u2014 where the work happens: get here by navigating to the Studio in the top nav. Run SQL queries, get results, visualize them, and publish them on a dashboard, all from one place in the app. Seamlessly switch between any of your queries and dashboards with our tabs system, and use the Data Explorer to preview data tables, and add table names directly to your queries.&#x20;\n* [**Dashboard Editor**](dashboard-editor.md)\u00a0\u2014 where you share your findings with the world: add charts, results tables, text and images to your dashboards, send them to your friends with our copy link feature, or tweet the link directly from the dashboard. Organize your findings with dashboard tabs, and let people customize or update your dashboard with parameters.\n* [**Profiles**](profiles.md) \u2014\u00a0your profile is the place where people can find all your best work, search and filter it, and see how to get get in touch with you if that's something you want! Update your avatar and background image, and add social contact details for Twitter, Telegram, and Discord.\n\nWe're adding more documentation for the app over time \u2014 if you have questions or suggestions for things to add, please let us know in [Discord](https://discord.gg/ZmU3jQuu6W).\n\n#### References\n\n* [Query Editor Keyboard Shortcuts](../keyboard-shortcuts.md)\n* [Dashboard Markdown Reference](../markdown-reference.md)\n\n", "doc_id": "7a7b61ad-fb99-48a6-9798-7e5333a15597", "embedding": null, "doc_hash": "77428d93af99d7beea5ec6773cc263a0a262bcbf19994d289c40d604f6887a18", "extra_info": {"file_path": "our-app/getting-around-the-app/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 2544, "_node_type": "1"}, "relationships": {"1": "f669e7cf2b772462b69e60a6dd11796e7fb73906"}}, "__type__": "1"}, "96be5e89-4eab-4dee-979c-c84fcae0c5d7": {"__data__": {"text": "---\ndescription: >-\n  Where you share your findings with the world: add charts, results tables,\n  text, and images to your dashboards.\n---\n\n# Dashboard Editor\n\nThis section will cover:\n\n* [What can you add to a dashboard?](dashboard-editor.md#overview-of-dashboard-components)\n* [How to add content to a dashboard?](dashboard-editor.md#building-a-dashboard)\n* [How to publish a dashboard?](dashboard-editor.md#publishing-a-dashboard)\n\n### Overview of Dashboard Components\n\nBefore we go over how to populate a dashboard, we'll go over the different components of a dashboard.&#x20;\n\n<figure><img src=\"../../.gitbook/assets/Screenshot 2023-03-10 at 1.16.16 PM.png\" alt=\"\"><figcaption></figcaption></figure>\n\nIn the example dashboard above, we get a glimpse of how different components look on a dashboard. Starting from the top of the screen, and moving down, we see an example of each of the following:\n\n* **Dashboard Title and Description:** be sure to update these! They help people understand what to expect from your dashboards, and make them easier to find in search.\n* **Tabs:** use these as \"pages\" of a dashboard, that readers can flip through. Analysts often use tabs to organize information by topic.&#x20;\n*   **Headings:** are header components that can be styled using the **\\[A]** in the top right corner of the header box. You can choose the text color, background, text size, and alignment.&#x20;\n\n\n\n    <figure><img src=\"../../.gitbook/assets/Screenshot 2023-03-14 at 10.06.20 AM.png\" alt=\"\"><figcaption><p>Heading styles. </p></figcaption></figure>\n* **Text boxes:** these are regular text boxes that are best suited for paragraphs. The style of these text boxes can be adjusted using [markdown](https://www.markdownguide.org/basic-syntax/).&#x20;\n* **Images:** this helps bring your story to life. You can upload a PNG, SVG, GIF, or JPEG.\n* **Charts and Tables:** the star of the show, you can add charts and tables from your queries to the dashboard.&#x20;\n\n\n\n### **Building A Dashboard**\n\nNow that we have the basics covered, we'll introduce three different ways you can add content to your dashboard.&#x20;\n\n*   **From the query editor:** to add tables and charts from the editor, click the \"Add to Dashboard\" button in the top right corner of each panel. From there, you can select a dashboard, search for a dashboard, or create a new dashboard.\n\n    <figure><img src=\"../../.gitbook/assets/Screenshot 2023-03-12 at 6.26.59 PM.png\" alt=\"\"><figcaption><p>Add tables and charts to a dashboard from the editor. </p></figcaption></figure>\n*   **From the action bar:** this is the floating bar at the bottom of the dashboard builder. It is accessible via a dashboard tab that you open in the editor. Click on any component to add a block of that type, or drag any component onto the board directly to add it exactly where you want it to go:\n\n    ![Action Bar from the Dashboard Editor. ](<../../.gitbook/assets/Screenshot 2023-03-10 at 2.03.30 PM (1).png>)\n*   **From My Work \ud83d\ude2e:** drag and drop any table and chart from My Work directly into your dashboard. Click on the little caret to the left of a query's name to see all the tables and charts associated with it:\n\n    ![Expanded query item under My Work.](<../../.gitbook/assets/Screenshot 2023-03-10 at 2.38.47", "doc_id": "96be5e89-4eab-4dee-979c-c84fcae0c5d7", "embedding": null, "doc_hash": "d442ae1bc8be7a3df2f63dd4c17b3edf462723f28300c3cf3251020cb2aeb3c4", "extra_info": {"file_path": "our-app/getting-around-the-app/dashboard-editor.md", "file_name": "dashboard-editor.md"}, "node_info": {"start": 0, "end": 3282, "_node_type": "1"}, "relationships": {"1": "4ac5b4fe2583a41853803d7a3a757e4c7457065a", "3": "ddd73c22-acc4-41d1-95c9-9ca053dc3241"}}, "__type__": "1"}, "ddd73c22-acc4-41d1-95c9-9ca053dc3241": {"__data__": {"text": "2023-03-10 at 2.38.47 PM.png>)\n\n\n\n**Move and Resizing Components**\n\nOnce, the components are added to the dashboard, they can be repositioned and resized!\n\n* Reposition a component by dragging and dropping them into blank spaces on the dashboard.&#x20;\n* Resize a component by clicking and dragging on the \" **\u2e25** \" in the bottom right corner of the container.\n\n\n\n### Publishing a Dashboard\n\nOnce you complete a dashboard, publish it to make it publicly accessible! You can do that by clicking on the \"Publish\" button in the top right corner of the screen (don't worry this process is irreversible! More on that later). A published dashboard can be accessed by anyone through the Discover page, your analyst profile, and if they have the URL, directly.&#x20;\n\n<figure><img src=\"../../.gitbook/assets/share.png\" alt=\"\"><figcaption></figcaption></figure>\n\n**Un-publishing / Editing a dashboard**\n\nDon't worry: if you made a mistake in your dashboard, you can easily make changes, then click the the Update button >> Publish Updates to make those changes live.\\\n\\\nYou can also Unpublish here, which will make your dashboard disappear \u2014 people visiting the link will see a 404 error until you publish it again.\n", "doc_id": "ddd73c22-acc4-41d1-95c9-9ca053dc3241", "embedding": null, "doc_hash": "59dad3e5fc4348d3152615a358489f0b8814cd2bdc2c4a8371755f04deda742a", "extra_info": {"file_path": "our-app/getting-around-the-app/dashboard-editor.md", "file_name": "dashboard-editor.md"}, "node_info": {"start": 3261, "end": 4468, "_node_type": "1"}, "relationships": {"1": "4ac5b4fe2583a41853803d7a3a757e4c7457065a", "2": "96be5e89-4eab-4dee-979c-c84fcae0c5d7"}}, "__type__": "1"}, "1cbb27d8-dee7-4568-911d-52b240184373": {"__data__": {"text": "---\ndescription: >-\n  The homepage of the app, and the best way to keep your finger on the pulse of\n  what's happening in crypto data. Here you can see what dashboards are trending\n  for different chains and projects.\n---\n\n# Discover\n\nThis section will cover:\n\n* [How does ranking work on the discover page?](discover.md#ranking-on-the-discover-page)\n* [How to find a dashboard I'm interested in?](discover.md#searching-on-the-discover-page)\n* [How to find an analyst I know?](discover.md#analyst-view)\n* [How to interact with a dashboard?](discover.md#interacting-with-a-dashboard)\n\n### &#x20;Rankings and the \"Top 8\" on the Discover page\n\n\"Top 8\" refers to the first 8 dashboards listed on the [discover page](http://flipsidecrypto.xyz). These are the dashboards that fill the landing page, primed for maximum exposure to alpha-seekers.&#x20;\n\n<figure><img src=\"../../.gitbook/assets/Screenshot 2023-03-09 at 1.57.18 PM.png\" alt=\"\"><figcaption><p>Top 8 </p></figcaption></figure>\n\nBeing in the top 8 also increases your ranking as an analyst on Flipside. In fact, the longer your work occupies a Top 8 slot, the higher your ranking climbs.&#x20;\n\n**So, How do you get your work into a Top 8 slot?**\n\nThat's a bit of \ud83e\uddea a l c h e m y \u2728 that will stay a secret. But we can tell you that it's a mix of traffic, likes, and social media engagement \u2014 the better your content and the more you share it, the higher chance you have of ranking. Here are a few best practices to raise your chances:\n\n* Focus your dashboard on one relevant, interesting insight. Make it easy for viewers to answer, _\"Why is this data important?\"_\n* Title your board simply and clearly, centered on what a person will learn through it.\n* Tweet your board, tagging relevant people for exposure.\n\n\n\n### Finding things from the Discover page\n\nThere are 100K+ dashboards on Flipside \ud83e\udd2f Here's how to find the ones you're interested in!&#x20;\n\n<figure><img src=\"../../.gitbook/assets/Group 2149.png\" alt=\"\"><figcaption><p>Ways to browse dashboards on Flipside. </p></figcaption></figure>\n\n* **Search for a topic:** if you have a topic in mind (like: \"impermanent loss osmosis\"), type it into the search bar to see all the relevant dashboards.&#x20;\n* **Find an analyst:** if you have someone in mind, you can search for them from the [\"Analyst View\"](discover.md#analyst-view)\n* **Focus on a project:** if you have a project you're interested in, simply use the filter on the right-hand side to only see dashboards relevant to that project.&#x20;\n\n\n\n### Analyst View\n\nTo search for an analyst, all you have to do is turn the toggle in the hero section from **\"Dashboards\"** to **\"Analysts\"**. Similar to how dashboards are ranked on the Discover page, analysts are also ranked in this view. Analysts closer to the top of the page are those who have created impactful and influential dashboards.&#x20;\n\nFrom [this view](https://flipsidecrypto.xyz/analysts), you can type an analyst's name into the search bar to find their profile, or explore different analyst profiles by going down the page.&#x20;\n\n<figure><img src=\"../../.gitbook/assets/Screenshot 2023-05-30 at 8.57.42 PM.png\" alt=\"\"><figcaption></figcaption></figure>\n\nOnce you find the analyst you're looking for, you can click on their profile to find their top dashboards, and potentially a few ways to get in", "doc_id": "1cbb27d8-dee7-4568-911d-52b240184373", "embedding": null, "doc_hash": "dc37a4dd655cb8430d5f45fb9eca391ed32b5bf8cfe901e630b7d6965b8d8bcf", "extra_info": {"file_path": "our-app/getting-around-the-app/discover.md", "file_name": "discover.md"}, "node_info": {"start": 0, "end": 3332, "_node_type": "1"}, "relationships": {"1": "fa213065788801d25a41ccbb6494762ea6b60786", "3": "395e7aab-3a2b-4aa9-9fc6-471631cbb8fb"}}, "__type__": "1"}, "395e7aab-3a2b-4aa9-9fc6-471631cbb8fb": {"__data__": {"text": "click on their profile to find their top dashboards, and potentially a few ways to get in touch with them. This is a great way to connect with other analysts in the space so make sure you build out your own [profile](profiles.md) too!\n\n<figure><img src=\"../../.gitbook/assets/Screenshot 2023-05-30 at 9.05.49 PM.png\" alt=\"\"><figcaption></figcaption></figure>\n\n\n\n### Interacting with a dashboard\n\nNow, that you've found a dashboard you're interested in. Let's cover some tips to get the most out of this experience.\n\n<figure><img src=\"../../.gitbook/assets/dash.png\" alt=\"\"><figcaption><p>Ways to interact with a Flipside dashboard.</p></figcaption></figure>\n\nHere are some ways you can interact with a dashboard:\n\n* **Sort:** sort a result table by clicking on the column header. &#x20;\n* **Apply parameters:** if you're viewing a dashboard with parameters available, you can adjust those to see the data you care about. For example, you can set date ranges to narrow in on a time period you're interested in.\n* **View a different tab:** Click on the different tabs to see the different \"pages\" of a dashboard.\n* **Check the query:** if you're curious about a query behind a chart, simply click on the chart title to view it.\n*   **Fork a query:** build on any query you find interesting by copying it into your workspace.&#x20;\n\n\n\n    <figure><img src=\"../../.gitbook/assets/Screenshot 2023-05-05 at 11.34.31 AM.png\" alt=\"\"><figcaption><p>Click \"Fork\" to make a copy of the query. </p></figcaption></figure>\n* **Refresh:** Click the \ud83d\udd01 button on the top right corner to run all the queries powering this dashboard to see the latest information.\n* **Like:** if you liked what you saw, hit the \u2764\ufe0f button \u2014 \"likes\" impact the rankings and you'll help more people see good work by voting for things you enjoy.\n* **Share:** found something interesting, share it with your community on Twitter!\n", "doc_id": "395e7aab-3a2b-4aa9-9fc6-471631cbb8fb", "embedding": null, "doc_hash": "f0e2b367193c14f7eac7fe05a10b0b4d05db075eed5c8ef72f9d048b78fadda8", "extra_info": {"file_path": "our-app/getting-around-the-app/discover.md", "file_name": "discover.md"}, "node_info": {"start": 3243, "end": 5132, "_node_type": "1"}, "relationships": {"1": "fa213065788801d25a41ccbb6494762ea6b60786", "2": "1cbb27d8-dee7-4568-911d-52b240184373"}}, "__type__": "1"}, "8f732e1e-0ff6-4372-bb79-b30dd663be03": {"__data__": {"text": "---\ndescription: >-\n  This is where your files live -- organize them by creating collection and\n  nesting collections.\n---\n\n# My Work\n\nThis section will cover:\n\n* [What can I do in my work?](my-work.md#my-work-features)\n* [How to organize my work?](my-work.md#organize-my-work)\n\n### My Work features\n\nThe list of files under \"My Work\" can grow very quickly as you create test queries and new dashboards. For this reason, we have incorporated some features like search and sort to help you quickly find and access past work.&#x20;\n\n* **Search:** You can use the search bar in my work to look for any **queries** and **dashboards** you have created. Note, that Collections will not return in search results.&#x20;\n*   **Sort:** You can also sort my work using the three dots next to the search bar.\n\n\n\n    <figure><img src=\"../../.gitbook/assets/Screenshot 2023-05-31 at 10.33.32 AM.png\" alt=\"\"><figcaption></figcaption></figure>\n\n\n\n### Organize My Work\n\nAs the list of files grows in my work, here are some tips and tricks to help you stay organized. We will go over the images below from left to right.\n\n<figure><img src=\"../../.gitbook/assets/Group 2150.png\" alt=\"\"><figcaption></figcaption></figure>\n\n1. **File Types:** To start, there are 3 types of objects that you can create under my work: _collections_, _queries_, and _dashboards_.&#x20;\n2. **Collections:** To organize files by topic, you can create collections! To do that, click the \"+\" button and give your collection a name. Collections will always live on the top of \"My Work\".\n3. **Drag and Drop:** To move a file you have created, simply drag and drop that file to the desired location in the files tree.&#x20;\n4. **Multi-Select:** To move multiple files at once, ctrl+shift (cmd+shift on mac) and click to select the files you want to move, then drag and drop them to the desired location in the file tree.&#x20;\n", "doc_id": "8f732e1e-0ff6-4372-bb79-b30dd663be03", "embedding": null, "doc_hash": "6f9227303d484663bc8a289b774410dd87939fb739c570d38264244468659cc7", "extra_info": {"file_path": "our-app/getting-around-the-app/my-work.md", "file_name": "my-work.md"}, "node_info": {"start": 0, "end": 1880, "_node_type": "1"}, "relationships": {"1": "e2ca1341c20ea9cb5f854bea7e836b867dbcf5df"}}, "__type__": "1"}, "dfe2b914-9e18-422b-8cfa-a86855f19b04": {"__data__": {"text": "---\ndescription: >-\n  Where people can find all your best work, search and filter it, and see how to\n  get get in touch with you (if that's something you want)!\n---\n\n# Profiles\n\nThis section will cover:\n\n* [How to update my profile?](profiles.md#building-your-profile)\n\n### Building a Profile&#x20;\n\nFrom this example profile page, we can see the analyst's social accounts as well as all of their published dashboard.&#x20;\n\n<figure><img src=\"../../.gitbook/assets/Group 28.png\" alt=\"\"><figcaption></figcaption></figure>\n\nIf you'd like to connect with other analysts and crypto enthusiasts in the space, we encourage you to build out your profile page too. To edit your profile, click on your avatar image in the bottom left corner of the screen and select \"Edit Profile\".&#x20;\n\n![](<../../.gitbook/assets/Screenshot 2023-06-01 at 4.37.12 PM.png>)\n\nBelow is the edit profile page. This is where you can update all of your information.&#x20;\n\n<figure><img src=\"../../.gitbook/assets/Screenshot 2023-03-14 at 1.31.22 PM.png\" alt=\"\"><figcaption></figcaption></figure>\n\nHere are a few tips on how to fill this out:\n\n* The avatar and the background image will be what people see on the Analyst page as well. This is a great avenue to build and highlight your personal branding. To update those images, click on the \ud83d\udcf7 icon on the page and upload your own.&#x20;\n* The username field refers to your profile name for the Flipside data app. This is how other people will you on the [Analyst page](https://flipsidecrypto.xyz/analysts).\n* The social contact detail fields for twitter, discord, and telegram are completely optional. You can fill these out only if you're open to others contacting you via these platforms.&#x20;\n", "doc_id": "dfe2b914-9e18-422b-8cfa-a86855f19b04", "embedding": null, "doc_hash": "b45d9f31a2b9e261974162f0fe956eab71c09975133fd1d27406ef751a12aa83", "extra_info": {"file_path": "our-app/getting-around-the-app/profiles.md", "file_name": "profiles.md"}, "node_info": {"start": 0, "end": 1717, "_node_type": "1"}, "relationships": {"1": "86ad20318217bfb7e66e1c40738eddad04e75ab6"}}, "__type__": "1"}, "c7b02284-a446-47b4-be28-811cbe3504c5": {"__data__": {"text": "---\ndescription: >-\n  Where the work happens: run SQL queries, get results, visualize them, and\n  publish them on a dashboard, all from one place in the app\n---\n\n# Query Editor\n\nThis section will cover:\n\n* [How to customize the editor?](query-editor.md#the-editor)\n* [How to get started with the query panel?](query-editor.md#the-query-panel)\n* [How to get started with the results panel? ](query-editor.md#the-results-panel)\n* [How to get started with the charts panel?](query-editor.md#the-charts-panel)\n\n### Overview of the Editor\n\nThe editor is composed of three main panels - query, results, and charts. To the left of these panels, you have access to My Work or the Data Explorer. To the top, you can see all the queries and dashboards you've opened in tabs.&#x20;\n\n<figure><img src=\"../../.gitbook/assets/Group 27.png\" alt=\"\"><figcaption><p>Work interface. </p></figcaption></figure>\n\n**Configure your Interface.**\n\nFocus on different panels as you go through your workflow by expanding/collapsing panels. Here are three ways you can do that:\n\n* **Click & Drag:** click and drag the dividers between panels.&#x20;\n* **Double-click to maximize:** double click on the header of each panel to maximize that panel. &#x20;\n* **Expand/Collapse button:** click on the expand/collapse button on the top-right corner of each panel to expand or minimize it.&#x20;\n\n\n\n### The Query Panel&#x20;\n\nThis is where you input your SQL + Run it. Here are some features of the query panel.&#x20;\n\n<figure><img src=\"../../.gitbook/assets/Screenshot 2023-03-12 at 7.54.53 PM.png\" alt=\"\"><figcaption></figcaption></figure>\n\n* **Auto-Complete:** start typing and the auto-complete feature will bring up Snowflake SQL keywords as well as database, schema, and table names.&#x20;\n* **Select & Run:** select and highlight any part of your code to only run that snippet to see the \"Selection Result\" in the results panel.&#x20;\n*   **Parameterized Queries:** implement variables in certain parts of your code instead of hard-coding values like contract addresses, symbols, or date ranges. These values are also adjustable from the dashboard, letting readers interact with your dashboard by entering values they care about.&#x20;\n\n    * To insert a parameter, you can click the \"+ Parameter\" button or simply type `{{parameter_name}}` and manage your parameters at the bottom of the query panel.&#x20;\n    * To add a select list of values for your end user to choose from, include a comma-separated list in the default values. This will show up as a dropdown list on your dashboard. See an example below:\n\n    <figure><img src=\"../../.gitbook/assets/Screenshot 2023-05-09 at 10.28.39 AM.png\" alt=\"\"><figcaption><p>Comma-separated list as a dropdown in your dashboard.</p></figcaption></figure>\n* **Auto-Format:** make your query more readable by using the auto-format button!\n\n\n\n### The Results Panel&#x20;\n\nThis is where you'll see the data you queried. To get results, write your SQL in the query panel and hit the blue play button in the top right corner. Or, you can run a query using your keyboard shortcut: `cmd + enter (mac)` or `ctrl + enter (windows/linux)`.&#x20;\n\n<figure><img src=\"../../.gitbook/assets/Screenshot 2023-03-12 at 7.56.38 PM.png\" alt=\"\"><figcaption></figcaption></figure>\n\nThe results", "doc_id": "c7b02284-a446-47b4-be28-811cbe3504c5", "embedding": null, "doc_hash": "e21680c9cc825d4feeb2fcddfa6b31a539be0a54db9be303bee6652fc88bb5fb", "extra_info": {"file_path": "our-app/getting-around-the-app/query-editor.md", "file_name": "query-editor.md"}, "node_info": {"start": 0, "end": 3288, "_node_type": "1"}, "relationships": {"1": "13edba9825e5f0b434d6eb6d10d9a2549f9398a0", "3": "bc07890a-3a50-450f-b596-50a0e01466e4"}}, "__type__": "1"}, "bc07890a-3a50-450f-b596-50a0e01466e4": {"__data__": {"text": "alt=\"\"><figcaption></figcaption></figure>\n\nThe results panel is also where you'll see an error message if your query fails. There will be detailed feedback that will give you an idea of how to update your query. Here are a couple more things you can do through the results panel.&#x20;\n\n* **Rotate a table:** if your table is super wide, you may want to rotate it to get a better sense of the columns in it.&#x20;\n* **Download results as CSV:** download queried results and analyze them in your preferred tool.&#x20;\n* **Add to Dashboard:** add the results table to your dashboard.&#x20;\n\n\n\n### The Charts Panel&#x20;\n\nThis is where you visualize your data. Using the Flipside App, you can create a **Bar**, **Area**, **Line**, **Scatter**, **Big Number**, or **Donut chart**.\n\n<figure><img src=\"../../.gitbook/assets/Screenshot 2023-03-12 at 8.00.44 PM.png\" alt=\"\"><figcaption><p>The chart editor will give you some initial guidance on how to get started.</p></figcaption></figure>\n\nHere's a quick reference on when to choose which chart:\n\n* **Bar**\u00a0\u2014 when comparing quantities across categories, and / or over time.\n* **Area** \u2014 when comparing quantities over time (or proportions of a whole over time, if you choose stack + normalize).\n* **Line** \u2014 when you want to visualize a trend, or movement in some measure, over time, and especially when the dimension measures are evenly spaced (like: a value exists for every week, day or hour \u2014 price charts or rates are good examples of this, vs. transactions which are more sporadic).\n* **Scatter** \u2014\u00a0when comparing independent variables or sets of numbers, and when you think there's likely to be some relationship between them (e.g., time vs. nft sale prices vs gas prices); a great choice for exploring complex or multi-dimensional data before committing to an approach.\n* **Big Number** \u2014 quite simply: when you want to show just one number.\n* **Donut** \u2014\u00a0when you need to show the share of a set of constituent parts relative to the whole, and only then (e.g., % of NFTs minted in a collection that have been held vs. sold).&#x20;\n", "doc_id": "bc07890a-3a50-450f-b596-50a0e01466e4", "embedding": null, "doc_hash": "65dd7d599e86b4644e7db89a04f829c0230cb963f796e842254ece148856147b", "extra_info": {"file_path": "our-app/getting-around-the-app/query-editor.md", "file_name": "query-editor.md"}, "node_info": {"start": 3234, "end": 5318, "_node_type": "1"}, "relationships": {"1": "13edba9825e5f0b434d6eb6d10d9a2549f9398a0", "2": "c7b02284-a446-47b4-be28-811cbe3504c5"}}, "__type__": "1"}, "3d2345f3-2d36-4a97-aebb-8490094b36d5": {"__data__": {"text": "---\ndescription: How to get started querying data with the Flipside Studio.\n---\n\n# Getting Started\n\n### Step 1: Create an account.\n\nTo get started, create an account on our app \u2014\u00a0you can sign up using an email address, ETH address, or your discord account.&#x20;\n\n<figure><img src=\"../.gitbook/assets/Screenshot 2023-05-30 at 8.10.31 PM.png\" alt=\"\"><figcaption><p>The account sign-up link is in the bottom left-hand corner of the page.</p></figcaption></figure>\n\n\n\n### Step 2: **Create a new query.**\n\nNavigate to the \"**Studio\"** from the top nav, then you can create a new query by clicking the big blue \"+\" button in the side bar, then selecting \"Query\".\n\n<figure><img src=\"../.gitbook/assets/Screenshot 2023-05-31 at 10.36.35 AM.png\" alt=\"\"><figcaption><p>Easiest way to create a new query is to click the big blue button.</p></figcaption></figure>\n\nYou can also create new queries in a few other ways:\n\n* from My Work, with the + button.\n* from the query tab bar with the + button there.\n* by entering [flipside.new](https://flipside.new) into your browser's URL bar.\n\nDoing this will drop you into the Studio, with your new query open:\n\n<figure><img src=\"../.gitbook/assets/Screenshot 2023-05-30 at 8.27.17 PM.png\" alt=\"\"><figcaption><p>Brand new query, ready for SQL.</p></figcaption></figure>\n\nA few things to note here:\n\n* By default, your query is named the date and time it was created. You can rename it by clicking on its name in the query task bar (above the code editor and below the tabs).\n* The \"My Work\" menu will be expanded in the left sidebar, and a new line representing your query will be added to it. Here you can organize your queries, search them by title, and navigate between them. More on that later.\n* When you create a fresh query, your cursor will be focused in the code editor. Here you can enter SQL to query the various blockchain databases on offer. How do you know which databases to query, though? Well...\n\n\n\n### Step 3: **Explore Flipside's data.**&#x20;\n\nFrom the side menu, navigate to the Data Explorer to see all the databases, schemas and tables available to you \u2014 there is typically one database dedicated to each blockchain we cover. For now, let's take a look at one of our Ethereum core tables: so click Ethereum, then Core, then \"ez\\_token\\_transfers\" to expand that table's details.\n\nPro tips for data exploration:\n\n* **Column details:** click on the table name to see a list of it's columns, and a data type for each.\n* **Table details:** hover over a table name to see the table description and access direct link to documentation.&#x20;\n* **Table preview**: see sample data without writing any SQL by clicking the Preview icon.\n* **Add to query**: enter any table name into your SQL with a single mouse click.&#x20;\n* **View docs:** hover over a database name and click the \"book\" icon to go direct to docs.\n\n<div data-full-width=\"false\">\n\n<figure><img src=\"../.gitbook/assets/Group 2145.png\" alt=\"\"><figcaption><p>The data explorer is the easiest way to find tables, check out their contents, and add them to your query.</p></figcaption></figure>\n\n</div>\n\n\n\n### Step 4: **Write your query \u2192 Run it \u2192 See results**  &#x20;\n\nNow let's run a query from ethereum.core.ez\\_nft\\_sales. Here's one you can use, that gets the top 8 NFT platforms on Ethereum by total sales in the past 30 days:\n\n```sql\nselect\n  platform_name,\n ", "doc_id": "3d2345f3-2d36-4a97-aebb-8490094b36d5", "embedding": null, "doc_hash": "edece69da612527f2e6a2a9602b828872add298ac738bd256bbda4496eb9f334", "extra_info": {"file_path": "our-app/getting-started.md", "file_name": "getting-started.md"}, "node_info": {"start": 0, "end": 3373, "_node_type": "1"}, "relationships": {"1": "909bd63cbecdc122c31000fcd3507b4a694cd472", "3": "0f05c84b-3e9a-45bb-9018-a4a33ba6586c"}}, "__type__": "1"}, "0f05c84b-3e9a-45bb-9018-a4a33ba6586c": {"__data__": {"text": "the past 30 days:\n\n```sql\nselect\n  platform_name,\n  count(*) as sales_count\nfrom ethereum.core.ez_nft_sales\nwhere block_timestamp > current_date - interval '30 days'\ngroup by platform_name\norder by sales_count desc\nlimit 8\n```\n\nPaste that into the code editor (and modify it if you like: maybe change the \"limit\" and get top 10 instead of 8, or change the \"interval\" to get total sales from the past week instead of month?) and you're ready to go.\n\nTo run your query, you can hit the big blue \"play\" button in the top right-hand corner, or use a keyboard shortcut:\n\n* Mac: CMD + ENTER\n* PC or Linux: CTRL + ENTER\n\nAfter a few moments, you should see your results appear in the Results Panel \u2014 you've got data!\n\n<figure><img src=\"../.gitbook/assets/Screenshot 2023-05-30 at 8.47.04 PM.png\" alt=\"\"><figcaption><p>Your screen should look something like this at this point.</p></figcaption></figure>\n\n###\n\n### Step 5: **Visualize the data!**\n\nLet's take a look at what the table above is telling us! Click **\"Add Chart\"** on the bottom of the screen to fire up the chart builder. For this example, we'll choose **Bar** chart from the chart type menu, then set a few options to get started:\n\n* for X Axis, select \"PLATFORM\\_NAME\"\n* for Y Axis (Bar), select \"SALES\\_COUNT\"\n* for Group By Value, select \"PLATFORM\\_NAME\"\n\nYour screen should look something like this:\n\n<figure><img src=\"../.gitbook/assets/Screenshot 2023-05-30 at 8.48.11 PM.png\" alt=\"\"><figcaption><p>You've got a chart!</p></figcaption></figure>\n\n###\n\n### Step 6: **Create a dashboard and publish.**\n\nNow that you have your results and a basic chart, you can tie everything together by creating a dashboard. Click the \"add to dashboard\" icon in the chart panel, then click \"+ New Dashboard\" to get started:\n\n<figure><img src=\"../.gitbook/assets/Screenshot 2023-05-05 at 10.58.57 AM.png\" alt=\"\"><figcaption><p>\"Add to dashboard\" is the quickest way to get a new chart into a dashboard.</p></figcaption></figure>\n\n<figure><img src=\"../.gitbook/assets/Screenshot 2023-02-15 at 8.16.45 PM.png\" alt=\"\"><figcaption><p>This interface lets you find an existing dashboard to add your chart to, or instantly create a new one.</p></figcaption></figure>\n\n<figure><img src=\"../.gitbook/assets/Screenshot 2023-05-05 at 11.06.13 AM.png\" alt=\"\"><figcaption><p>Your new dashboard is ready to edit! It should look something like this.</p></figcaption></figure>\n\n###\n\n### Step 7: **Publish and Share!**\n\nThere are many ways to customize a dashboard \u2014\u00a0you can add text boxes, charts, tables, and images to your dashboard to showcase what you've discovered, resize and arrange them as you see fit, and even organize them in tabs.&#x20;\n\nFor now, we'll stick to the basics \u2014 let's give this dashboard a name! Click the default assigned name (the date and time the dashboard was created) and name it something appropriate like \"NFT Platform Sales Walkthrough\".\n\n<figure><img src=\"../.gitbook/assets/Screenshot 2023-05-05 at 11.07.51 AM (1).png\" alt=\"\"><figcaption><p>Click the big timestamp and name it something appropriate.</p></figcaption></figure>\n\nMake any other changes you see fit:\n\n* **Action Bar**: you can add text, images, or charts from the action bar at the bottom of the page.\n* **My Work**: you can also", "doc_id": "0f05c84b-3e9a-45bb-9018-a4a33ba6586c", "embedding": null, "doc_hash": "867fb82f3cda203c9868e940ca9d2312844bf8fa1e37a99a72040565770f4b8f", "extra_info": {"file_path": "our-app/getting-started.md", "file_name": "getting-started.md"}, "node_info": {"start": 3329, "end": 6584, "_node_type": "1"}, "relationships": {"1": "909bd63cbecdc122c31000fcd3507b4a694cd472", "2": "3d2345f3-2d36-4a97-aebb-8490094b36d5", "3": "51cd63d2-c243-490e-85a7-1e60d0709b2a"}}, "__type__": "1"}, "51cd63d2-c243-490e-85a7-1e60d0709b2a": {"__data__": {"text": "the action bar at the bottom of the page.\n* **My Work**: you can also drag charts and results tables onto the dashboard from My Work.\n* **Tabs**: finally you can create additional pages or \"tabs\" in your dashboard to help organize your work by clicking the \"Activate Tab Mode\" box, and then adding tabs with the + button, and editing or removing them with the gear icon.\n\nOnce you're happy with your dashboard, hit the publish button on the top right corner \u2014\u00a0after a short delay, you should see a confirmation like this:\n\n<figure><img src=\"../.gitbook/assets/Screenshot 2023-05-30 at 8.49.19 PM.png\" alt=\"\"><figcaption><p>Your dashboard publish confirmation shows you a preview of how your dashboard will appear when shared on the web.</p></figcaption></figure>\n\n###\n\n### Step 8: **Find it in Discover.**&#x20;\n\nNow that your dashboard is published, you can find it in Discover:\n\n<figure><img src=\"../.gitbook/assets/Screenshot 2023-05-30 at 8.53.59 PM.png\" alt=\"\"><figcaption><p>Click that Discover link!</p></figcaption></figure>\n\nThere are a few ways to find your dashboard in discover, here's the easiest one:\n\n1. Click \"Analysts\" to find your account in the Analyst Leaderboard.\n2. Click \"Search\" and enter your username to find your profile.\n3. Click your profile card to go to your profile page.\n4. Your dashboard should show up near the top!\n\n<figure><img src=\"../.gitbook/assets/Screenshot 2023-02-15 at 8.43.16 PM.png\" alt=\"\"><figcaption><p>Get to the analysts section and search for your profile to find your dashboard.</p></figcaption></figure>\n\nCongrats \u2014 you've published!\n\n### Next Steps:\n\n* **Edit your profile** \u2014 add contact information, customize your avatar and background image.\n* **Get inspired** \u2014\u00a0go back to Discover and scope out the trending work: filter by a project you're interested in, and see what the best analysts in crypto are making on Flipside. Oh, and if you see something you like, be sure to hit that \u2764\ufe0f button \u2014 \"likes\" impact the rankings and you'll help more people see good work by voting for things you enjoy.\n* **Check out bounties** \u2014 there are a few [Flipside bounties](http://localhost:5000/s/q3ZsciVeKRUUcuezp6ax/rpc/data-types/sqlstatement) left, but the new stuff is mostly at [MetricsDAO](https://metricsdao.xyz/)\u00a0\u2014\u00a0check it out, accept a challenge, submit your work, and get paid!\n", "doc_id": "51cd63d2-c243-490e-85a7-1e60d0709b2a", "embedding": null, "doc_hash": "211f6dbbaa81b3939fc90f2412b8a845860cc3c8dbeca08b90a5d0f654bf6a07", "extra_info": {"file_path": "our-app/getting-started.md", "file_name": "getting-started.md"}, "node_info": {"start": 6560, "end": 8895, "_node_type": "1"}, "relationships": {"1": "909bd63cbecdc122c31000fcd3507b4a694cd472", "2": "0f05c84b-3e9a-45bb-9018-a4a33ba6586c"}}, "__type__": "1"}, "acac4f0a-6448-452a-af0b-61b3eed20610": {"__data__": {"text": "---\ndescription: >-\n  These are the default shortcuts available via our open-source code editor\n  component CodeMirror\n---\n\n# Keyboard Shortcuts\n\nNote: not _all_ of these have been tested, so please use with caution. If you notice something not working as expected, or out of place, please let us know in [Discord](https://discord.gg/ZmU3jQuu6W).\n\n| Function                                         | Windows                               | Linux                                 | Mac                                   | Notes                                                                                                                |\n| ------------------------------------------------ | ------------------------------------- | ------------------------------------- | ------------------------------------- | -------------------------------------------------------------------------------------------------------------------- |\n| Delete Line                                      | ctrl + shift + k                      | ctrl + shift + k                      | cmd + shift + k                       |                                                                                                                      |\n| Move Line Up / Down                              | alt + up or down                      | alt + up or down                      | option + up or down                   |                                                                                                                      |\n| Duplicate Line Above / Below                     | shift + alt + up or down              | shift + alt + up or down              | shift + option + up or down           |                                                        ", "doc_id": "acac4f0a-6448-452a-af0b-61b3eed20610", "embedding": null, "doc_hash": "5b071666019f13061126581ab80a06968cb83c087fa4d52b5fb2e26d054752a8", "extra_info": {"file_path": "our-app/keyboard-shortcuts.md", "file_name": "keyboard-shortcuts.md"}, "node_info": {"start": 0, "end": 1744, "_node_type": "1"}, "relationships": {"1": "bdd297247ca7c547115fe4685765adaf58a951e0", "3": "14b14eb9-fe72-405d-920e-75da033b5697"}}, "__type__": "1"}, "14b14eb9-fe72-405d-920e-75da033b5697": {"__data__": {"text": "                                                                                 |\n| Cut line                                         | ctrl + x                              | N/A                                   | cmd + x                               |                                                                                                                      |\n| Cut selection                                    | ctrl + x                              | ctrl + x                              | cmd + x                               |                                                                                                                      |\n| Copy line (nothing selected)                     | ctrl + c                              | N/A                                   | cmd + c                               |                                                                                                                      |\n| Copy selection                                   | ctrl + c                              | ctrl + c                              | cmd + c                            ", "doc_id": "14b14eb9-fe72-405d-920e-75da033b5697", "embedding": null, "doc_hash": "0b83fb4b18e5a8cc1e16a612369044dd86677d9521f275ad09951dcfe74b73c1", "extra_info": {"file_path": "our-app/keyboard-shortcuts.md", "file_name": "keyboard-shortcuts.md"}, "node_info": {"start": 1745, "end": 2872, "_node_type": "1"}, "relationships": {"1": "bdd297247ca7c547115fe4685765adaf58a951e0", "2": "acac4f0a-6448-452a-af0b-61b3eed20610", "3": "fa5fb075-0582-4265-9863-95c3a3aff23e"}}, "__type__": "1"}, "fa5fb075-0582-4265-9863-95c3a3aff23e": {"__data__": {"text": "                      |                                                                                                                      |\n| Paste                                            | ctrl + v                              | ctrl + v                              | cmd + v                               |                                                                                                                      |\n| Select rest of line from cursor                  | ctrl + shift + down                   | ctrl + shift + down                   | ctrl + shift + e                      |                                                                                                                      |\n| Delete next character                            | del                                   | del                                   | ctrl + d                              |                                                                                                                      |\n| Backspace whole word                             | ctrl + backspace                      | ctrl + backspace                      | option + backspace                    | ", "doc_id": "fa5fb075-0582-4265-9863-95c3a3aff23e", "embedding": null, "doc_hash": "4caa93c9a0860446514527388533f6755aef070e4f8216bc3fd8affdc4d9e08a", "extra_info": {"file_path": "our-app/keyboard-shortcuts.md", "file_name": "keyboard-shortcuts.md"}, "node_info": {"start": 2873, "end": 4065, "_node_type": "1"}, "relationships": {"1": "bdd297247ca7c547115fe4685765adaf58a951e0", "2": "14b14eb9-fe72-405d-920e-75da033b5697", "3": "191adc4a-aff3-4750-8e1d-fff87993f89e"}}, "__type__": "1"}, "191adc4a-aff3-4750-8e1d-fff87993f89e": {"__data__": {"text": "                  |                                                                                                                      |\n| Delete line from cursor                          | N/A                                   | N/A                                   | ctrl + k                              | Deletes to end of line from current cursor location.                                                                 |\n| Select current line                              | alt + l                               | alt + l                               | ctrl + l                              | Continuing to press will select the next line down                                                                   |\n| Move single char forward                         | N/A                                   | N/A                                   | ctrl + t                              | This will take the character directly behind the cursor and move it forward 1 spot for each press. Useful for typos. |\n| Select single line above starting from cursor    | N/A                                   | N/A                                   | ctrl + shift + p                      |                                                                                                                      |\n| Select single line below starting from cursor    | N/A       ", "doc_id": "191adc4a-aff3-4750-8e1d-fff87993f89e", "embedding": null, "doc_hash": "8453394a9cb5d3b3819a5d124d3e66cacfad4ab81cb520ef02b386039ee7c804", "extra_info": {"file_path": "our-app/keyboard-shortcuts.md", "file_name": "keyboard-shortcuts.md"}, "node_info": {"start": 4065, "end": 5435, "_node_type": "1"}, "relationships": {"1": "bdd297247ca7c547115fe4685765adaf58a951e0", "2": "fa5fb075-0582-4265-9863-95c3a3aff23e", "3": "732ea6af-806d-469b-a6a2-978944f00660"}}, "__type__": "1"}, "732ea6af-806d-469b-a6a2-978944f00660": {"__data__": {"text": "line below starting from cursor    | N/A                                   | N/A                                   | ctrl + shift + n                      |                                                                                                                      |\n| Backspace line from cursor                       | N/A                                   | ctrl + shift + backspace              | cmd + delete                          |                                                                                                                      |\n| Delete only commented text                       | alt + backspace                       | N/A                                   | N/A                                   | This will leave uncommented text untouched                                                                           |\n| Toggle line comment                              | ctrl + /                              | ctrl + /                              | cmd + /                               |                                                                                                                      |\n| Toggle block comment                             | shift + alt + a                  ", "doc_id": "732ea6af-806d-469b-a6a2-978944f00660", "embedding": null, "doc_hash": "5437f193a586cfc11e940596827cc48fbdc93f37a4dade9442fb01f85f168c70", "extra_info": {"file_path": "our-app/keyboard-shortcuts.md", "file_name": "keyboard-shortcuts.md"}, "node_info": {"start": 5406, "end": 6644, "_node_type": "1"}, "relationships": {"1": "bdd297247ca7c547115fe4685765adaf58a951e0", "2": "191adc4a-aff3-4750-8e1d-fff87993f89e", "3": "74c67aae-9ddb-4d64-863f-4e016eae99ae"}}, "__type__": "1"}, "74c67aae-9ddb-4d64-863f-4e016eae99ae": {"__data__": {"text": "+ a                       | shift + alt + a                       | shift + option + a                    |                                                                                                                      |\n| Open suggestion dropdown                         | ctrl + space                          | ctrl + space                          | ctrl + space                          |                                                                                                                      |\n| Move sidebar to other side of editor             | ctrl + shift + x                      | ctrl + shift + x                      | N/A                                   |                                                                                                                      |\n| Escape button                                    | Esc                                   | Esc                                   | Esc                                   |                                                                                                                      |\n| Run Query                                        | ctrl + enter                ", "doc_id": "74c67aae-9ddb-4d64-863f-4e016eae99ae", "embedding": null, "doc_hash": "da6a1890a8b7e875a6db4cbdfa35036053c6867f93edf9ae66b239f34a0c5d40", "extra_info": {"file_path": "our-app/keyboard-shortcuts.md", "file_name": "keyboard-shortcuts.md"}, "node_info": {"start": 6674, "end": 7858, "_node_type": "1"}, "relationships": {"1": "bdd297247ca7c547115fe4685765adaf58a951e0", "2": "732ea6af-806d-469b-a6a2-978944f00660", "3": "5edf6218-b0d4-46a4-a235-b7fa63bc78b4"}}, "__type__": "1"}, "5edf6218-b0d4-46a4-a235-b7fa63bc78b4": {"__data__": {"text": "| ctrl + enter                          | ctrl + enter                          | cmd + return                          |                                                                                                                      |\n| Create new line above                            | N/A                                   | N/A                                   | ctrl + o                              |                                                                                                                      |\n| Indent / outdent line                            | ctrl + ] or \\[                        | ctrl + ] or \\[                        | cmd + ] or \\[                         |                                                                                                                      |\n| Go to matching bracket                           | ctrl + shift + \\\\                     | ctrl + shift + \\\\                     | cmd + shift + \\\\                      | When cursor is on an open or close bracket (Velocity will show it as green/lightly highlighted)                      |\n| Go to beginning of line                          | Home                                  | Home                                  | fn + left               ", "doc_id": "5edf6218-b0d4-46a4-a235-b7fa63bc78b4", "embedding": null, "doc_hash": "3bf963b15479c74d65dcd4bdf50afcd55b0f8a8d25eb7d47eb580271083002d7", "extra_info": {"file_path": "our-app/keyboard-shortcuts.md", "file_name": "keyboard-shortcuts.md"}, "node_info": {"start": 7850, "end": 9124, "_node_type": "1"}, "relationships": {"1": "bdd297247ca7c547115fe4685765adaf58a951e0", "2": "74c67aae-9ddb-4d64-863f-4e016eae99ae", "3": "ea429702-f75f-4ac9-8e05-94b82dde72a3"}}, "__type__": "1"}, "ea429702-f75f-4ac9-8e05-94b82dde72a3": {"__data__": {"text": " | fn + left                             |                                                                                                                      |\n| Go to end of line                                | End                                   | End                                   | fn + right                            |                                                                                                                      |\n| Go to beginning of file                          | ctrl + Home                           | ctrl + Home                           | shift + option + <                    |                                                                                                                      |\n| Go to end of file                                | ctrl + End                            | ctrl + End                            | shift + option + >                    |                                                                                                                      |\n| Collapse / uncollapse region                     | ctrl + shift + \\[ or ]                | ctrl + shift + \\[ or ]                | cmd + option + \\[ or ]                | When", "doc_id": "ea429702-f75f-4ac9-8e05-94b82dde72a3", "embedding": null, "doc_hash": "d53d76fd90775ce671202874e1ef71e26356577a3ca36e059f34feb2698eefd2", "extra_info": {"file_path": "our-app/keyboard-shortcuts.md", "file_name": "keyboard-shortcuts.md"}, "node_info": {"start": 9128, "end": 10343, "_node_type": "1"}, "relationships": {"1": "bdd297247ca7c547115fe4685765adaf58a951e0", "2": "5edf6218-b0d4-46a4-a235-b7fa63bc78b4", "3": "a14d302a-5326-4c19-b8eb-45b91cf2ed22"}}, "__type__": "1"}, "a14d302a-5326-4c19-b8eb-45b91cf2ed22": {"__data__": {"text": "or ]                | When a \\\\/ carrot appears next to the line number, the related query lines can be collapsed                          |\n| Search and Replace                               | ctrl + f                              | ctrl + f                              | cmd + f                               | If user has text highlighted when using this command, it will search for the selection.                              |\n| Search for next                                  | ctrl + g                              | ctrl + g                              | cmd + g                               | If user has nothing selected, search bar will pop up. If user has a selection, cursor will jump to next instance.    |\n| Undo cursor move                                 | ctrl + u                              | ctrl + u                              | cmd + u                               | If user clicks somewhere else, this will bring the cursor back to where it just was                                  |\n| Select next character / grow or shrink selection | shift + right or left                 | shift + right or left                 | shift + right or left                 | User can start a selection or use this shortcut to expand a current selection                                        |\n| Select next word / block                         | shift + (ctrl OR alt) + right or left | shift + (ctrl OR alt) + right or left | shift + (ctrl OR alt) + right or left | User can start a selection or use this shortcut to expand a current selection                                        |\n| Select all                                       | ctrl + a                              | ctrl + a                              | cmd + a          ", "doc_id": "a14d302a-5326-4c19-b8eb-45b91cf2ed22", "embedding": null, "doc_hash": "711a9cdb08faf2c656a8a604446d194cad649b6cefe784691e7db59dc8d26b8b", "extra_info": {"file_path": "our-app/keyboard-shortcuts.md", "file_name": "keyboard-shortcuts.md"}, "node_info": {"start": 10344, "end": 12095, "_node_type": "1"}, "relationships": {"1": "bdd297247ca7c547115fe4685765adaf58a951e0", "2": "ea429702-f75f-4ac9-8e05-94b82dde72a3", "3": "38975513-7900-4b99-a0df-fb4423b7e5cb"}}, "__type__": "1"}, "38975513-7900-4b99-a0df-fb4423b7e5cb": {"__data__": {"text": "      | cmd + a                               |                                                                                                                      |\n| Go to line prompt                                | alt + g                               | alt + g                               | option + g                            |                                                                                                                      |\n| Move cursor full word / block                    | ctrl + left or right                  | ctrl + left or right                  | option + left or right                |                                                                                                                      |\n\n\\\n", "doc_id": "38975513-7900-4b99-a0df-fb4423b7e5cb", "embedding": null, "doc_hash": "ada4485a044c02de9958a868ff3c585cc6fce7e573e841ef7a67749df8a4aeba", "extra_info": {"file_path": "our-app/keyboard-shortcuts.md", "file_name": "keyboard-shortcuts.md"}, "node_info": {"start": 12078, "end": 12832, "_node_type": "1"}, "relationships": {"1": "bdd297247ca7c547115fe4685765adaf58a951e0", "2": "a14d302a-5326-4c19-b8eb-45b91cf2ed22"}}, "__type__": "1"}, "4b56411a-4ce7-4fa2-ab97-b7222cd50a84": {"__data__": {"text": "---\ndescription: For styling and organizing text blocks on your dashboards.\n---\n\n# Markdown Reference\n\n|                 |                                                               |\n| --------------- | ------------------------------------------------------------- |\n| Bold            | \\*\\*text\\*\\*                                                  |\n| Italic          | \\_text\\_                                                      |\n| Heading 1       | # Text                                                        |\n| Heading 2       | ## Text                                                       |\n| Heading 3       | ### Text                                                      |\n| Link            | \\[Link text]\\(https://flipsidecrypto.xyz)                     |\n| Image or Gif    | !\\[alt text]\\(http://url/to/img.png)                          |\n| Inline Code     | \\`code\\`                                                      |\n| Code Block      | \\`\\`\\`code block\\`\\`\\`                                        |\n| Horizontal Rule | ---                                                           |\n| Ordered List    | <p>1. First item</p><p>2. Second Item</p><p>3. Third Item</p> |\n| Unordered List  | <p>- First item</p><p>- Second Item</p><p>- Third Item</p>    |\n", "doc_id": "4b56411a-4ce7-4fa2-ab97-b7222cd50a84", "embedding": null, "doc_hash": "e4e7b3dc0a7fd8982fc0f34e54c68cc005f831301f33c2596c67669af65b0ee2", "extra_info": {"file_path": "our-app/markdown-reference.md", "file_name": "markdown-reference.md"}, "node_info": {"start": 0, "end": 1279, "_node_type": "1"}, "relationships": {"1": "6ea498b6e459e0faaac7f8e693b37454c92586e6"}}, "__type__": "1"}, "f99b825f-cdb8-4028-b5e5-1881fea12873": {"__data__": {"text": "---\ndescription: Legacy documentation, for reference only.\n---\n\n# Archive\n\nPlease assume documents in this area are not up to date \u2014 they're available for reference only \u2014 and refer to [data-table-documentation.md](../data-table-documentation.md \"mention\") for the latest information. Thanks!\n", "doc_id": "f99b825f-cdb8-4028-b5e5-1881fea12873", "embedding": null, "doc_hash": "fe8cf1c4aafacfec616c44627169621ea97a84182a35a700b7ff07a90b76c050", "extra_info": {"file_path": "our-data/archive/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 293, "_node_type": "1"}, "relationships": {"1": "e429f20687887c64d4e376a37ec4bccf4b0df019"}}, "__type__": "1"}, "953240f7-f207-4bc6-90b3-a73696c75f62": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Algorand Tutorials\n\n{% embed url=\"https://www.youtube.com/watch?v=WOsrxrcdy88\" %}\n", "doc_id": "953240f7-f207-4bc6-90b3-a73696c75f62", "embedding": null, "doc_hash": "52ba94cd243b69d483acbeae94bcf1a27a382fb5fa96047b073627b13d7047fa", "extra_info": {"file_path": "our-data/archive/algorand-tutorials.md", "file_name": "algorand-tutorials.md"}, "node_info": {"start": 0, "end": 167, "_node_type": "1"}, "relationships": {"1": "dd83ec26522a6ed986440ced4000688c6d2830aa"}}, "__type__": "1"}, "5549255e-e7de-4f3f-97ea-ed5a311bab81": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Data Updates\n\n**Join our** [**Discord**](https://discord.gg/ZmU3jQuu6W) **for recent data updates.**&#x20;\n\nThis page is used for major occasional changes that may impact existing queries (e.g. moving refactoring schemas).\n\n### **September 2022: Ethereum & EVM changes**\n\nflipside\\_prod\\_db.aave -->ethereum.aave\\\nflipside\\_prod\\_db.compound -->ethereum.compound\\\nfipside\\_prod\\_db.ethereum --> ethereum.core\\\nflipside\\_prod\\_db.polygon --> polygon.core\\\nflipside\\_prod\\_db.uniswapv3-->  ethereum.uniswapv3\n\nAll queries above should be moved to the new corresponding databases. Dashboards will still populate, but there will be no new data coming into those tables. The legacy flipside\\_prod\\_db tables will not be seen in the Flipside query editor after September 13, 2022.&#x20;\n\n### **June 2022: Solana Schema**\n\nSolana will be have its own database starting early June 2022! We will move it from\n\nflipside\\_prod\\_db --> solana\n\nYour queries and dashboards will continue to work for a period of time. To future proof your dashboards, you should move over **all work** to the three part naming convention in the new solana database.&#x20;\n\n### **May 2022: Three Part Naming**\n\nFor more information on new databases and three part naming, please see [this document](https://docs.google.com/document/d/1swYTBHYNoY27Mz5FB2Ru0KNTLRhwX6imWQtlyW5F-7Q/edit).\n\n### **May 2022: Ethereum Schema**\n\nEthereum will have its own database starting May 25, 2022! flipside\\_prod\\_db.ethereum\\_core will still be supported until June. We are actively making infrastructure upgrades and it will replace both flipside\\_prod\\_db.ethereum and ethereum\\_core.&#x20;\n\nNew Ethereum tables will be released in April 2022!\n\nThe new Ethereum schema will be **ethereum\\_core**. Ethereum was one of the first blockchains that was developed within Flipside and there have been upgrades to infrastructure, warehousing, model building, etc. The Flipside developers have been working on what is being called the Ethereum facelift where many of the tables have been re-built from the ground up taking into account user feedback, usage, and lessons learned.&#x20;\n\nTimeline:\\\n\\- April 18, 2022 - Eth Week! New Schema exposed for all users. All bounties will have to use ethereum\\_core schema.\\\n\\\n\n\n", "doc_id": "5549255e-e7de-4f3f-97ea-ed5a311bab81", "embedding": null, "doc_hash": "8de7ae21ef452bbd2d8b244d7895c8592cef26f6e47f340a95b1d78fb75e7d6e", "extra_info": {"file_path": "our-data/archive/data-updates.md", "file_name": "data-updates.md"}, "node_info": {"start": 0, "end": 2349, "_node_type": "1"}, "relationships": {"1": "13c0ddb27ed5c3c0175599a769632ae5a8bd4ec9"}}, "__type__": "1"}, "779e272f-e34a-4904-859d-eb1dd2e0b24c": {"__data__": {"text": "---\ndescription: >-\n  [Legacy Documentation, Not Maintained, For Reference Only] This section\n  provides documentation on the schemas and design decisions behind every\n  queryable table.\n---\n\n# Legacy Table Documentation\n\n\\-- **ARCHIVED -- FOR REFERENCE ONLY --**&#x20;\n\nTable level guides are organized by schema for every blockchain or blockchain project. \\\n\\\nEach table guide has:\n\n* column descriptions and/or links to DBT docs w/ column descriptions and model lineage graphs.\n* links to public Github repos.\\\n\n\nFlipside community data include schemas for:\n\n| Schema                                                         |                                                     |\n| -------------------------------------------------------------- | --------------------------------------------------- |\n| [Crosschain Tables (prices, address tags)](crosschain-tables/) | [MakerDAO](ethereum-maker-dao-tables.md)            |\n| [Arbitrum](arbitrum-tables.md)                                 | [NEAR ](near-tables.md)                             |\n| [AAVE](aave-tables/)                                           | [Optimism](optimism-tables.md)                      |\n| [Avalanche](avalanche-tables.md)                               | [Osmosis](osmosis-tables/)                          |\n| [Algorand](algorand-tables/)                                   | [Polygon (legacy tables)](polygon-tables/)          |\n| [Astroport](astroport-tables/)                                 | [Polygon 2.0](polygon-2.0-tables.md)                |\n| [BSC](bsc-tables.md)                                           | [Solana](solana-tables.md)                          |\n| [Compound](compound-tables/)                                   | [Sushi](ethereum-sushi-tables.md)                   |\n| [Ethereum (legacy tables)](broken-reference)                   | [Terra](terra-tables/)                 ", "doc_id": "779e272f-e34a-4904-859d-eb1dd2e0b24c", "embedding": null, "doc_hash": "9bc218eb7ff8432b6646e7732ca9be6d8c232ee812ab0761e2f775c379b252ea", "extra_info": {"file_path": "our-data/archive/tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 1878, "_node_type": "1"}, "relationships": {"1": "5db6055c8bd5228db9762934c61003dbd1125b1a", "3": "c10a940e-e5cf-42ff-a204-ed16dc3f4377"}}, "__type__": "1"}, "c10a940e-e5cf-42ff-a204-ed16dc3f4377": {"__data__": {"text": "                             |\n| [Ethereum Core](ethereum-tables.md)                            | [Terraswap](terraswap-tables/)                      |\n| [FLOW](flow-tables/)                                           | [THORChain](thorchain-tables/thorchain-base-table/) |\n| [Gnosis](flow-tables/)                                         | [Uniswap V3](uniswap-v3-tables/)                    |\n| [Axelar](axelar-tables.md)                                     |                                                     |\n\n\n\n{% hint style=\"info\" %}\nNew blockchains/blockchain projects are added regularly.&#x20;\n{% endhint %}\n\n", "doc_id": "c10a940e-e5cf-42ff-a204-ed16dc3f4377", "embedding": null, "doc_hash": "33e826784328cae1f6e2de31b4ec48a1067a6a39aa5532dd169281d64d8dbb82", "extra_info": {"file_path": "our-data/archive/tables/README.md", "file_name": "README.md"}, "node_info": {"start": 1862, "end": 2482, "_node_type": "1"}, "relationships": {"1": "5db6055c8bd5228db9762934c61003dbd1125b1a", "2": "779e272f-e34a-4904-859d-eb1dd2e0b24c"}}, "__type__": "1"}, "a48db3e7-da77-4111-94b4-55ecc4a2c986": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# AAVE Tables\n\nAAVE is a lending platform, somewhat similar in scope and design to Compound. As a result we have a similar design schema for this project. Feedback remains very welcome as much of this data remains very beta!\n\n### New Tables (Compared to Compound)\n\nUnlike for Compound there are three further tables:\n\n* _Aave votes and proposals:_ Governance actions do exist on Compound and in fact can even be found within the events data, however with AAVE we've begun to opt to give these their own tables. These come as a pair -- proposals tracks all ongoing proposals and their current status, votes tracks votes for and against their proposals. The two can be joined on proposal ID.\n* _Flashloans:_ AAVE has explicit support for flashloans -- loans taken and repaid within the same transaction. Once again on Compound this is technically possible but AAVE has flashloans built in as their own set of functions.\n\n### Variable and Stable Debts\n\nAdditionally a key feature of AAVE's lending markets is that each market (i.e. USDC) supports two types of loans, one at a stable borrow rate and another at a variable rate. Both V1 and V2 (and AMM), support these but V2 and up has an additional feature aimed direct at these types of loans -- debt tokens.\n\nDebt tokens tokenize debt in the same way aTokens (or Compounds' cTokens) tokenize amounts supplied to the market. aTokens are given to suppliers proportionally based on how much they supply to that market. Stable Debt Tokens are given to borrowers based on how much debt at a stable borrow rate they have from that market. Identically Variable Debt Tokens are given to borrowers based on how much variable debt they hold\n\n### What about the Version columns (and blockchain)?\n\n![](<../../../../.gitbook/assets/Screen Shot 2021-08-16 at 3.22.45 PM.png>)\n\nAave a few different subsets of markets, shown above.&#x20;\n\nAAVE V1: Debt tokens do not exist and more technically, (though less significantly for our data) all interactions are done through the Lending Pool. aTokens do exist and stable/variable borrow rates are still available\n\nAAVE V2: Debt tokens exist to more easily track outstanding debt. Direct interactions are split among a Lending Pool and a Data Provider contract (though not necessary for anyone not planning to interact with the protocol directly on chain, i.e. app developers)\n\nAAVE AMM: Identical in design to AAVE V2 though it uses its own set of contracts. Designed for pool tokens.\n\nAAVE Polygon: Also shares a design with V2, with the key difference is that it is on the Polygon chain (whereas all others are Ethereum only)\n\n### General\n\n{% content-ref url=\"market-stats.md\" %}\n[market-stats.md](market-stats.md)\n{% endcontent-ref %}\n\n### Governance\n\n{% content-ref url=\"votes.md\" %}\n[votes.md](votes.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"proposals.md\" %}\n[proposals.md](proposals.md)\n{% endcontent-ref %}\n\n### Supplying\n\n{% content-ref url=\"withdraws.md\" %}\n[withdraws.md](withdraws.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"deposits.md\" %}\n[deposits.md](deposits.md)\n{% endcontent-ref %}\n\n### Liquidations\n\n{% content-ref url=\"liquidations.md\" %}\n[liquidations.md](liquidations.md)\n{% endcontent-ref %}\n\n### Borrowing\n\n{%", "doc_id": "a48db3e7-da77-4111-94b4-55ecc4a2c986", "embedding": null, "doc_hash": "a32bd2553e64c13a76c7fb3a6b372d88cf430ee8869dae88005bdd237a4b3823", "extra_info": {"file_path": "our-data/archive/tables/aave-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 3301, "_node_type": "1"}, "relationships": {"1": "a39ee3df8e1c7a73eb305a5213b293a9c53bf468", "3": "b8cc6672-3615-4635-972b-6cfe971ea76e"}}, "__type__": "1"}, "b8cc6672-3615-4635-972b-6cfe971ea76e": {"__data__": {"text": "endcontent-ref %}\n\n### Borrowing\n\n{% content-ref url=\"borrows.md\" %}\n[borrows.md](borrows.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"repayments.md\" %}\n[repayments.md](repayments.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"flashloans.md\" %}\n[flashloans.md](flashloans.md)\n{% endcontent-ref %}\n\n", "doc_id": "b8cc6672-3615-4635-972b-6cfe971ea76e", "embedding": null, "doc_hash": "bd7dd506a38fba8898a5c2dbd98ef51dca8d39becd319da4f28c1357955979dc", "extra_info": {"file_path": "our-data/archive/tables/aave-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 3265, "end": 3563, "_node_type": "1"}, "relationships": {"1": "a39ee3df8e1c7a73eb305a5213b293a9c53bf468", "2": "a48db3e7-da77-4111-94b4-55ecc4a2c986"}}, "__type__": "1"}, "c6eadab4-5716-410e-8c95-b877c1f3a0b8": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Borrows\n\n\n\nBorrows exist within the `aave` schema, as `aave.borrows`\n\n| Field                   | Type      | Description                                   |\n| ----------------------- | --------- | --------------------------------------------- |\n| `tx_id`                 | string    | Transaction ID for this liquidation           |\n| `block_id`              | number    | The block height this event was recorded at   |\n| `block_timestamp`       | timestamp | UTC timestamp for this transaction            |\n| `event_index`           | number    | Index of this event within the transaction    |\n| `aave_market`           | address   | Address of the token                          |\n| `aave_token`            | address   | Address of the aToken                         |\n| `borrowed_tokens`       | number    | Amount of tokens borrowed                     |\n| `borrowed_usd`          | number    | USD amount borrowed                           |\n| `borrower_address`      | address   | Address of the borrower                       |\n| `borrow_rate_mode`      | string    | Either variable or stable                     |\n| `lending_pool_contract` | address   | Address of the lending pool contract          |\n| `aave_version`          | string    | AAVE version (V1, V2, or AMM for Ethereum)    |\n| `token_price`           | number    | Price of the token being borrowed             |\n| `symbol`                | string    | Symbol of the token being borrowed            |\n| `blockchain`            | string    | Ethereum or Polygon (presently only Ethereum) |\n\n\n\n", "doc_id": "c6eadab4-5716-410e-8c95-b877c1f3a0b8", "embedding": null, "doc_hash": "b8b555f2ac16fea1f40f6dcc0c8d38c8334a7285b0b7ab939f2f5efe7272b961", "extra_info": {"file_path": "our-data/archive/tables/aave-tables/borrows.md", "file_name": "borrows.md"}, "node_info": {"start": 0, "end": 1654, "_node_type": "1"}, "relationships": {"1": "0d1f5c86014c82126c40bc2aac449407dd1480cb"}}, "__type__": "1"}, "8cca72b8-62ad-42d7-bf6a-1e3f92288bc2": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Deposits\n\n\n\nDeposits exist within the `aave` schema, as `aave.deposits`\n\n| Field                   | Type      | Description                                                    |\n| ----------------------- | --------- | -------------------------------------------------------------- |\n| `tx_id`                 | string    | Transaction ID for this supply                                 |\n| `block_id`              | number    | The block height this event was recorded at                    |\n| `block_timestamp`       | timestamp | UTC timestamp for this transaction                             |\n| `aave_market`           | address   | Address of the AAVE market/underlying contract                 |\n| `aave_token`            | address   | aToken address                                                 |\n| `issued_tokens`         | number    | Amount of tokens issued for providing liquidity                |\n| `supplied_usd`          | number    | USD amount provided as liquidity (decimal adjusted)            |\n| `depositor_address`     | address   | Address of liquidity provider                                  |\n| `lending_pool_contract` | address   | Address of the lending pool contract used for this transaction |\n| `aave_version`          | string    | AAVE version (V1, V2, or AMM for Ethereum)                     |\n| `token_price`           | number    | Current price of the market token                              |\n| `symbol`                | string    | Symbol of the market asset                                     |\n| `blockchain`            | string    | Ethereum or Polygon (presently only Ethereum)                  |\n\n", "doc_id": "8cca72b8-62ad-42d7-bf6a-1e3f92288bc2", "embedding": null, "doc_hash": "1df0b76444d29728b2292a7338e082aceb87ffd4a7478237ec1bc7cf86effdbe", "extra_info": {"file_path": "our-data/archive/tables/aave-tables/deposits.md", "file_name": "deposits.md"}, "node_info": {"start": 0, "end": 1734, "_node_type": "1"}, "relationships": {"1": "d3a88cf206b46f53b0e6321c62306b0d818555ca"}}, "__type__": "1"}, "df9a3d05-ba11-4c3d-a6dc-55c765d17010": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Flashloans\n\n\n\nFlashloans exist within the `aave` schema, as `aave.flashloans`\n\n| Field                   | Type      | Description                                   |\n| ----------------------- | --------- | --------------------------------------------- |\n| `tx_id`                 | string    | Transaction ID for this liquidation           |\n| `block_id`              | number    | The block height this event was recorded at   |\n| `block_timestamp`       | timestamp | UTC timestamp for this transaction            |\n| `event_index`           | number    | Index of this event within the transaction    |\n| `aave_market`           | address   | Address of the token                          |\n| `aave_token`            | address   | Address of the aToken                         |\n| `flashloan_amount`      | number    | Amount of tokens borrowed                     |\n| `flashloan_amount_usd`  | number    | USD amount borrowed                           |\n| `premium_amount`        | number    | Premium paid on the loan                      |\n| `premium_amount_usd`    | number    | USD premium paid on the loan                  |\n| `initiator_address`     | address   | Address of the initiator of the loan          |\n| `target_address`        | address   | Address of the target of the loan             |\n| `lending_pool_contract` | address   | Address of the lending pool contract          |\n| `aave_version`          | string    | AAVE version (V1, V2, or AMM for Ethereum)    |\n| `token_price`           | number    | Price of the token being borrowed             |\n| `symbol`                | string    | Symbol of the token being borrowed            |\n| `blockchain`            | string    | Ethereum or Polygon (presently only Ethereum) |\n\n\n\n", "doc_id": "df9a3d05-ba11-4c3d-a6dc-55c765d17010", "embedding": null, "doc_hash": "53fd318470dfb186a52483673b9b615dcc38ea52ce967b422a184256d415ba11", "extra_info": {"file_path": "our-data/archive/tables/aave-tables/flashloans.md", "file_name": "flashloans.md"}, "node_info": {"start": 0, "end": 1839, "_node_type": "1"}, "relationships": {"1": "29f97cf4f9b01220262d8e219f24b526d09f85bd"}}, "__type__": "1"}, "4ff793da-73bd-4ca9-92fa-a57557abf2ab": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Liquidations\n\n\n\nLiquidations exist within the `aave` schema, as `aave.liquidations`\n\n| Field                      | Type      | Description                                   |\n| -------------------------- | --------- | --------------------------------------------- |\n| `tx_id`                    | string    | Transaction ID for this liquidation           |\n| `block_id`                 | number    | The block height this event was recorded at   |\n| `block_timestamp`          | timestamp | UTC timestamp for this transaction            |\n| `event_index`              | number    | Index of this event within the transaction    |\n| `collateral_asset`         | address   | Address of the collateral asset               |\n| `collateral_aave_token`    | address   | Address of the collateral aToken              |\n| `liquidated_amount`        | number    | Amount liquidated (decimal adjusted)          |\n| `liquidated_amount_usd`    | number    | USD amount liquidated (decimal adjusted)      |\n| `debt_asset`               | address   | Address of the debt asset                     |\n| `debt_aave_token`          | address   | Address of the debt aToken                    |\n| `debt_to_cover_amount`     | number    | Amount of debt to cover                       |\n| `debt_to_cover_amount_usd` | number    | USD amount of debt to cover                   |\n| `liquidator`               | address   | Address of the liquidator                     |\n| `borrower`                 | address   | Address of the borrower                       |\n| `aave_version`             | string    | AAVE version (V1, V2, or AMM for Ethereum)    |\n| `collateral_token_price`   | number    | Price of the collateral token                 |\n| `collateral_token_symbol`  | string    | Symbol of the collateral token                |\n| `debt_token_price`         | number    | Price of the debt token                       |\n| `debt_token_symbol`        | string    | Symbol of the debt token           ", "doc_id": "4ff793da-73bd-4ca9-92fa-a57557abf2ab", "embedding": null, "doc_hash": "be26199c12b0c86f45ba1ed734bd1f1c5fdd4067e9ccc2804cddb5cb573a0ce6", "extra_info": {"file_path": "our-data/archive/tables/aave-tables/liquidations.md", "file_name": "liquidations.md"}, "node_info": {"start": 0, "end": 2068, "_node_type": "1"}, "relationships": {"1": "1d96d9eefe184039b50daf7aeafa77e222b1ec3a", "3": "7d1e41e9-6f72-4ef8-907f-da8f3f75e5ee"}}, "__type__": "1"}, "7d1e41e9-6f72-4ef8-907f-da8f3f75e5ee": {"__data__": {"text": " | Symbol of the debt token                      |\n| `blockchain`               | string    | Ethereum or Polygon (presently only Ethereum) |\n\n", "doc_id": "7d1e41e9-6f72-4ef8-907f-da8f3f75e5ee", "embedding": null, "doc_hash": "ce8665b7ffc7a25815dc4edab95f794ae69f486ed75e126c5a8df3792b6f1f5b", "extra_info": {"file_path": "our-data/archive/tables/aave-tables/liquidations.md", "file_name": "liquidations.md"}, "node_info": {"start": 2030, "end": 2173, "_node_type": "1"}, "relationships": {"1": "1d96d9eefe184039b50daf7aeafa77e222b1ec3a", "2": "4ff793da-73bd-4ca9-92fa-a57557abf2ab"}}, "__type__": "1"}, "08611e4b-a323-4ab7-9b1f-58238d0bf440": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Market Stats\n\n\n\nMarket Stats exists within the `aave` schema, as `aave.market_stats`\n\n| **Field**                        | **Type** | Description                                                                                                                                                  |\n| -------------------------------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `block_hour`                     | string   | Market stats are aggregated by hour in UTC. `date_trunc(\u2018hour\u2019,block_timestamp)` for joins on other tables                                                   |\n| `lending_pool_add`               | string   | Lending pool contract associated with the AAVE market (used for interacting with on-chain)                                                                   |\n| `data_provider`                  | string   | Data Provider contract associated with the AAVE market (used for interacting with on-chain)                                                                  |\n| `reserve_name`                   | string   | Name/symbol of the underlying contract (i.e. USDT)                                                                                                           |\n| `atoken_address`                 | address  | Address of the atoken the market serves (i.e. aUSDC). Given to suppliers proportional to how much they supply to this market                                 |\n| `stable_debt_token_address`      | address  | Address of the stable debt token the market serves. Given to borrowers proportional to how much debt of this type from this market they hold                 |\n| `variable_debt_token_address`    | address  | Address of the variable debt token the market serves. Given to borrowers proportional to how much debt of this type from this market they hold               |\n|", "doc_id": "08611e4b-a323-4ab7-9b1f-58238d0bf440", "embedding": null, "doc_hash": "78c65b198341d644d5d04c0425bd6c662e351f63f8636e4a9927fae0c6df3cac", "extra_info": {"file_path": "our-data/archive/tables/aave-tables/market-stats.md", "file_name": "market-stats.md"}, "node_info": {"start": 0, "end": 2035, "_node_type": "1"}, "relationships": {"1": "a71a2036432cf3478d17a508356356160cb0a1e5", "3": "d446911b-a426-44cf-a0fa-17f6d44bec51"}}, "__type__": "1"}, "d446911b-a426-44cf-a0fa-17f6d44bec51": {"__data__": {"text": "market they hold               |\n| `underlying_contract`            | address  | Address of the underlying contract, i.e. USDC's address                                                                                                      |\n| `reserve_price`                  | number   | Price of the underlying token contract                                                                                                                       |\n| `atoken_price`                   | number   | Price of the aToken the market uses                                                                                                                          |\n| `total_liquidity_token`          | number   | Total liquidity/total supplied. Includes amounts currently out on loans                                                                                      |\n| `total_liquidity_usd`            | number   | Total liquidity converted to USD values as of the hour recorded                                                                                              |\n| `total_stable_debt_token`        | number   | Total debt out at a stable borrow rate from this market                                                                                                      |\n| `total_stable_debt_usd`          | number   | Total Stable Debt converted to USD values as of the hour recorded                                                                        ", "doc_id": "d446911b-a426-44cf-a0fa-17f6d44bec51", "embedding": null, "doc_hash": "799fa7557d2739beef6c4a6949887e8ca3251aa3e9b94213d9c831c171bbfcc1", "extra_info": {"file_path": "our-data/archive/tables/aave-tables/market-stats.md", "file_name": "market-stats.md"}, "node_info": {"start": 2019, "end": 3479, "_node_type": "1"}, "relationships": {"1": "a71a2036432cf3478d17a508356356160cb0a1e5", "2": "08611e4b-a323-4ab7-9b1f-58238d0bf440", "3": "9df8dfb7-a2e8-4d33-bbb2-0e12af70e2a7"}}, "__type__": "1"}, "9df8dfb7-a2e8-4d33-bbb2-0e12af70e2a7": {"__data__": {"text": "                                       |\n| `total_variable_debt_token`      | number   | Total debt out at a variable borrow rate from this market                                                                                                    |\n| `total_variable_debt_usd`        | number   | Total Variable Debt converted to USD values as of the hour recorded                                                                                          |\n| `utilization_rate`               | number   | The percentage of the reserve\u2019s total capital which is borrowed at any given time, calculated as total borrows divided by total liquidity                    |\n| `supply_rate`                    | number   | The supplier's APY. It depends on the current 'utilization rate', the proportion borrowed from/supplied to the market.                                       |\n| `borrow_rate_stable`             | number   | The borrower's stable APY. It depends on the current 'utilization rate', the proportion borrowed from/supplied to the market.                                |\n| `borrow_rate_variable`           | number   | The borrower's variable APY. It depends on the current 'utilization rate', the proportion borrowed from/supplied to the market.                              |\n| `aave_price`                     | number   | The current price of the AAVE governance token                                                                                                               |\n| `aave_version`                   | string   | The version of the AAVE market (can be V1, V2 or AMM for Ethereum)                                                                                           |\n| `blockchain`                ", "doc_id": "9df8dfb7-a2e8-4d33-bbb2-0e12af70e2a7", "embedding": null, "doc_hash": "82368d6952f1621070306c7e644dbc8cacc3fd81e610843d2dd5c55ebc0b7d43", "extra_info": {"file_path": "our-data/archive/tables/aave-tables/market-stats.md", "file_name": "market-stats.md"}, "node_info": {"start": 3497, "end": 5224, "_node_type": "1"}, "relationships": {"1": "a71a2036432cf3478d17a508356356160cb0a1e5", "2": "d446911b-a426-44cf-a0fa-17f6d44bec51", "3": "56c86989-cf36-480d-a410-0a20acaaa5f8"}}, "__type__": "1"}, "56c86989-cf36-480d-a410-0a20acaaa5f8": {"__data__": {"text": "`blockchain`                     | string   | Ethereum or Polygon (presently only Ethereum)                                                                                                                |\n| `stkaave_rate_supply`\\*          | number   | The APR for liquidity mining distributions. Calculated as pool emissions per second times seconds per year times AAVE price divided by total pool liquidity. |\n| `stkaave_rate_variable_borrow`\\* | number   | The APR for liquidity mining distributions. Calculated as pool emissions per second times seconds per year times AAVE price divided by total pool liquidity. |\n\n\\*AAVE price and total pool liquidity values used are USD equivalents instead of ETH, and therefore some small differences may exist vs. current rates on AAVE v2.\n\n", "doc_id": "56c86989-cf36-480d-a410-0a20acaaa5f8", "embedding": null, "doc_hash": "818b5be6891983f7049815d035417b2cdda09fbae98d36a98a6f52c9fb8463a8", "extra_info": {"file_path": "our-data/archive/tables/aave-tables/market-stats.md", "file_name": "market-stats.md"}, "node_info": {"start": 5196, "end": 5980, "_node_type": "1"}, "relationships": {"1": "a71a2036432cf3478d17a508356356160cb0a1e5", "2": "9df8dfb7-a2e8-4d33-bbb2-0e12af70e2a7"}}, "__type__": "1"}, "63fbccd9-5022-4c02-a295-4847c3540339": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Proposals\n\n\n\nVotes exists within the `aave` schema, as `aave.proposals`\n\n| **Field**             | **Type** | Description                                                                  |\n| --------------------- | -------- | ---------------------------------------------------------------------------- |\n| `block_id`            | number   | Block number in which the proposal was created                               |\n| `start_voting_period` | number   | Block number in which voting may start                                       |\n| `end_voting_period`   | number   | Block number in which voting must conclude                                   |\n| `block_timestamp`     | string   | Timestamp of the proposal's creation                                         |\n| `governance_contract` | address  | Governance contract used in this vote                                        |\n| `proposal_id`         | number   | ID of the proposal, which can be used to join in votes from the voting table |\n| `status`              | string   | Current status of the proposal -- Created, Queued, Executed or Failed        |\n| `targets`             | array    | Markets that are the target of the vote                                      |\n| `proposer`            | address  | Address of the user which issued the proposal                                |\n| `proposal_tx`         | string   | Transaction of the initial proposal creation                                 |\n| `blockchain`          | string   | Ethereum or Polygon (presently only Ethereum)                                |\n", "doc_id": "63fbccd9-5022-4c02-a295-4847c3540339", "embedding": null, "doc_hash": "d2993186db52dfa412de7c80f9a18aaebaafa23815f90a713d5c6cf23bd6ca05", "extra_info": {"file_path": "our-data/archive/tables/aave-tables/proposals.md", "file_name": "proposals.md"}, "node_info": {"start": 0, "end": 1666, "_node_type": "1"}, "relationships": {"1": "8e0987329cf58537518bc026a28ffa98d73becf3"}}, "__type__": "1"}, "150ac9b8-8ad3-4b79-a2e0-cb385cd755e5": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Repayments\n\n\n\nRepayments exist within the `aave` schema, as `aave.repayments`\n\n| Field                   | Type      | Description                                   |\n| ----------------------- | --------- | --------------------------------------------- |\n| `tx_id`                 | string    | Transaction ID for this liquidation           |\n| `block_id`              | number    | The block height this event was recorded at   |\n| `block_timestamp`       | timestamp | UTC timestamp for this transaction            |\n| `event_index`           | number    | Index of this event within the transaction    |\n| `aave_market`           | address   | Address of the token                          |\n| `aave_token`            | address   | Address of the aToken                         |\n| `repayed_tokens`        | number    | Amount of tokens repayed                      |\n| `repayed_usd`           | number    | USD amount repayed                            |\n| `payer`                 | address   | Address of the payer                          |\n| `borrower`              | address   | Address of the borrower                       |\n| `lending_pool_contract` | address   | Address of the lending pool contract          |\n| `aave_version`          | string    | AAVE version (V1, V2, or AMM for Ethereum)    |\n| `token_price`           | number    | Price of the token being borrowed             |\n| `symbol`                | string    | Symbol of the token being borrowed            |\n| `blockchain`            | string    | Ethereum or Polygon (presently only Ethereum) |\n\n\n\n", "doc_id": "150ac9b8-8ad3-4b79-a2e0-cb385cd755e5", "embedding": null, "doc_hash": "897375dd9a7b89ffb8317a234d57bf169a38650a2cb65412578933b8b3763d28", "extra_info": {"file_path": "our-data/archive/tables/aave-tables/repayments.md", "file_name": "repayments.md"}, "node_info": {"start": 0, "end": 1663, "_node_type": "1"}, "relationships": {"1": "d06377c27833acafc0095782f7797cc65f9797fb"}}, "__type__": "1"}, "22c9e9cf-68f0-4eb1-b60a-85e4f832278c": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Votes\n\n\n\nVotes exists within the `aave` schema, as `aave.votes`\n\n| **Field**             | **Type** | Description                                                                  |\n| --------------------- | -------- | ---------------------------------------------------------------------------- |\n| `block_timestamp`     | string   | Block timestamp of the vote                                                  |\n| `governance_contract` | address  | Governance contract used in this vote                                        |\n| `proposal_id`         | number   | ID of the proposal, which can be used to join in votes from the voting table |\n| `support`             | string   | Does the voter support the proposal? True/False                              |\n| `voting_power`        | number   | Voting power, which depends on the voter's AAVE and stkAAVE balances         |\n| `voter`               | address  | voter's address                                                              |\n| `tx_id`               | string   | Transaction of the vote                                                      |\n| `blockchain`          | string   | Ethereum or Polygon (presently only Ethereum)                                |\n", "doc_id": "22c9e9cf-68f0-4eb1-b60a-85e4f832278c", "embedding": null, "doc_hash": "9061129a175058ed058610dd1a2a9f27d01e036d630dee78ab0ce8bbca944461", "extra_info": {"file_path": "our-data/archive/tables/aave-tables/votes.md", "file_name": "votes.md"}, "node_info": {"start": 0, "end": 1310, "_node_type": "1"}, "relationships": {"1": "13e69dae2f8596b73e57f1a576218d3b37dd6a70"}}, "__type__": "1"}, "d92a7ad8-be9b-4883-aaf9-edcd0167b00c": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Withdraws\n\n\n\nWithdraws exist within the `aave` schema, as `aave.withdraws`\n\n| Field               | Type      | Description                                   |\n| ------------------- | --------- | --------------------------------------------- |\n| `tx_id`             | string    | Transaction ID for this liquidation           |\n| `block_id`          | number    | The block height this event was recorded at   |\n| `block_timestamp`   | timestamp | UTC timestamp for this transaction            |\n| `event_index`       | number    | Index of this event within the transaction    |\n| `aave_market`       | address   | Address of the token                          |\n| `aave_token`        | address   | Address of the aToken                         |\n| `withdrawn_tokens`  | number    | Amount of tokens withdrawn                    |\n| `withdrawn_usd`     | number    | USD amount withdrawn                          |\n| `depositor_address` | address   | Address of the depositor                      |\n| `aave_version`      | string    | AAVE version (V1, V2, or AMM for Ethereum)    |\n| `token_price`       | number    | Price of the token being borrowed             |\n| `symbol`            | string    | Symbol of the token being borrowed            |\n| `blockchain`        | string    | Ethereum or Polygon (presently only Ethereum) |\n\n\n\n", "doc_id": "d92a7ad8-be9b-4883-aaf9-edcd0167b00c", "embedding": null, "doc_hash": "40d36e5835e763ade60ea3b3dd391dff935361a85ef43232e625ebcebfcd74cf", "extra_info": {"file_path": "our-data/archive/tables/aave-tables/withdraws.md", "file_name": "withdraws.md"}, "node_info": {"start": 0, "end": 1424, "_node_type": "1"}, "relationships": {"1": "4ab73fcb20b09856d03bf626e32106ee32077fa5"}}, "__type__": "1"}, "fa9965ff-45aa-4aab-abc9-723f219792f2": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Algorand Tables\n\nThe Algorand tables schema are based on the [Algorand indexer](https://github.com/algorand/indexer/releases/tag/2.8.0). Algorand tables are available in [the Flipside app](https://app.flipsidecrypto.com/velocity) as the `algorand` schema. The tables are built based on the algorand asset, app, account,  block, and transaction information.\n\nAt Flipside, we currently offer raw tables based on the Algorand indexer with the exception of transactions broken into separate tables based on transaction type. Click the following link to learn more about the tables. We will be continuing to add further curated tables of Algorand data so check back intermittently to learn about the additional tables that have been added.\n\nCheck out [the complete docs for our Algorand Base Tables](algorand-base-tables/) or watch this video overview:\n\n{% embed url=\"https://www.youtube.com/watch?v=WOsrxrcdy88\" %}\n\n\n\n", "doc_id": "fa9965ff-45aa-4aab-abc9-723f219792f2", "embedding": null, "doc_hash": "302d3dbb78b9049aba54f9c00d99d92e02959cdacbd7b9026eec85df38c5b323", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 999, "_node_type": "1"}, "relationships": {"1": "8518cfd1f76784a901468ff5c2f06835c6139157"}}, "__type__": "1"}, "5002195e-c7ac-49b2-a1be-b1bb795eab31": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Algorand Base Tables\n\nThe Algorand base tables contains data directly from the Algorand indexer with the exception of the transaction tables which are broken out into the different types of transactions that can be performed on the Algorand blockchain.\n", "doc_id": "5002195e-c7ac-49b2-a1be-b1bb795eab31", "embedding": null, "doc_hash": "eb1ba815ee1080e1ff78fbd9f253c9d93d4bc05b23d78e897dd4834a80b41bfb", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 338, "_node_type": "1"}, "relationships": {"1": "5bc19aea672cc6bfa27b66cf7c30c88caf6bb381"}}, "__type__": "1"}, "f2320b23-8eb1-4aa1-ada9-c07acf33f349": {"__data__": {"text": "# Account App\n\nThe account app table  contains all apps within the Algorand Ecosystem and an app ID and other information about the app, such as whether it's currently active.\n\n## Table Schema\n\n| Field        | Type    | Description                                                                                  |\n| ------------ | ------- | -------------------------------------------------------------------------------------------- |\n| `ADDRESS`    | text    | Wallet address tied to app                                                                   |\n| `APP_ID`     | number  | App ID, tied to index in the app table                                                       |\n| `APP_CLOSED` | boolean | Has this app been deleted?                                                                   |\n| `CLOSED_AT`  | number  | block that the account\\_app was last removed from the account                                |\n| `CREATED_AT` | number  | block that the app was added to an account                                                   |\n| `APP_INFO`   | array   | Is the app currently deleted from the account? if not it will have json about current status |\n", "doc_id": "f2320b23-8eb1-4aa1-ada9-c07acf33f349", "embedding": null, "doc_hash": "a079c187259a8dde6f01a60e63487b2ea3ca38bcd6112f313d5aff19a655b057", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/account-app.md", "file_name": "account-app.md"}, "node_info": {"start": 0, "end": 1170, "_node_type": "1"}, "relationships": {"1": "15f8cd140ad774cb2642b47b16c296ac46df7b93"}}, "__type__": "1"}, "eb364c4a-e1a5-40f4-b36f-3a989fe71e39": {"__data__": {"text": "# Account Asset\n\nThe account asset table is contains a current list of all the address that hold the existing assets on the algorand network.\n\n## Table Schema\n\n| field                | Type    | Description                                            |\n| -------------------- | ------- | ------------------------------------------------------ |\n| `ADDRESS`            | text    | Wallet Address that is holding the asset               |\n| `ASSET_ID`           | number  | Asset ID, same as index identifier in asset table      |\n| `ASSET_NAME`         | text    | Name of the asset                                      |\n| `AMOUNT`             | number  | Amount of asset the wallet currently holds             |\n| `ASSET_ADDED_AT`     | number  | Block that the asset was added to an account           |\n| `ASSET_LAST_REMOVED` | number  | block that the asset was last removed from the account |\n| `ASSET_CLOSED`       | boolean | whether or not the asset is currently deleted          |\n| `FROZEN`             | boolean | whether or not the holding is frozen.                  |\n", "doc_id": "eb364c4a-e1a5-40f4-b36f-3a989fe71e39", "embedding": null, "doc_hash": "271a2fb2ed9e2a8b721407547d4102b66d75bbc1dc3d9dc67044fe2002159d5d", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/account-asset.md", "file_name": "account-asset.md"}, "node_info": {"start": 0, "end": 1080, "_node_type": "1"}, "relationships": {"1": "591844078c04a37d3ba3d7f3d88debd74a5805f3"}}, "__type__": "1"}, "18059084-82e5-48b6-bd0c-34472e162218": {"__data__": {"text": "# Account\n\nThe account table contains all address within the Algorand Ecosystem.\n\n## Table Schema\n\n\n\n| Field            | Type   | Description                                                                                    |\n| ---------------- | ------ | ---------------------------------------------------------------------------------------------- |\n| `ADDRESS`        | text   | The account public key                                                                         |\n| `ACCOUNT_CLOSED` | number | Whether or not the account is currently closed                                                 |\n| `REWARDSBASE`    | number | Used as part of the rewards computation. Only applicable to accounts which are participating.  |\n| `BALANCE`        | number | Total number of ALGOs in the account                                                           |\n| `CLOSED_AT`      | number | Block during which this account was most recently closed                                       |\n| `CREATED_AT`     | number | Block which account was created                                                                |\n| `WALLET_TYPE`    | text   | Wallet type: sig(single signature), msig(multi-signature), lsig(programmatic-signature)        |\n| `ACCOUNT_DATA`   | array  | Optional Account data                                                                          |\n", "doc_id": "18059084-82e5-48b6-bd0c-34472e162218", "embedding": null, "doc_hash": "9596de4985c8c711dbb4b1e29a5244b0974a967855c1a751b854a99e12169b81", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/account.md", "file_name": "account.md"}, "node_info": {"start": 0, "end": 1371, "_node_type": "1"}, "relationships": {"1": "b9468f4d72616c425e15082ef9ebe2f91148480e"}}, "__type__": "1"}, "8c0701a1-f866-4b1c-802d-48355bb592e4": {"__data__": {"text": "# App\n\nThe app table is contains a current list of all the apps with their app\\_id and current status.\n\n## Table Schema\n\n| Field             | Type    | Description                                 |\n| ----------------- | ------- | ------------------------------------------- |\n| `APP_ID`          | number  | App ID                                      |\n| `CREATOR_ADDRESS` | text    | wallet creator account address              |\n| `APP_CLOSED`      | boolean | whether or not the app is currently deleted |\n| `CLOSED_AT`       | number  | block that the app was deleted              |\n| `CREATED_AT`      | number  | block that the app was created              |\n| `PARAMS`          | array   |                                             |\n\n", "doc_id": "8c0701a1-f866-4b1c-802d-48355bb592e4", "embedding": null, "doc_hash": "d9150d3fddb4d85323fac194bcffc1e4c6ebaa62aaffa1306b7599d9fac81f01", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/app.md", "file_name": "app.md"}, "node_info": {"start": 0, "end": 746, "_node_type": "1"}, "relationships": {"1": "0a9253dc121628d5972511eb49970e3f10396287"}}, "__type__": "1"}, "7875326d-16d2-44a1-9d3d-6eab5ae27a20": {"__data__": {"text": "# Application Call Transaction\n\nThis is a table for all transactions whose type is application call transactions. For more details on application call transactions. Visit here: [https://developer.algorand.org/docs/get-details/transactions/transactions/#application-call-transaction](https://developer.algorand.org/docs/get-details/transactions/transactions/#application-call-transaction)&#x20;\n\n## Table Schema\n\nAll transactions have a distinct intra and block\\_id combination. The intra is the transaction # into the block where the transaction was confirmed. Inner transactions(flagged with the inner tx flag) share the tx id of their parent application transactions so you can tie inner transaction to a parent transaction via a tx id. The inner transactions are seen as distinct transactions on the Algorand blockchain, which is signified by their intra and block id combination. One other note on the parent transactions, the parent transaction of inner transaction do not summarize the inner transactions and are seen as their own distinct transaction, which is usually an application call transaction.&#x20;\n\n| Field          | Type    | Description                                                                                                                                                              |\n| -------------- | ------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `INTRA`        | number  | Transaction # into the block where this transaction was confirmed.                                                                                                       |\n| `BLOCK_ID`     | number  | Block in which the transaction was confirmed                                                                                                                             |\n| `TX_GROUP_ID`  | text    | Transaction group ID, can be NULL. Exists when a group of transactions are tied together                                                                                 |\n| `TX_ID`        | text    | The ID of this transaction                                                                                            ", "doc_id": "7875326d-16d2-44a1-9d3d-6eab5ae27a20", "embedding": null, "doc_hash": "52aae7a53d9907afd437650f321f4904d0bec3116b0a13b252d92e82c2bcf3bb", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/application-call-transaction.md", "file_name": "application-call-transaction.md"}, "node_info": {"start": 0, "end": 2263, "_node_type": "1"}, "relationships": {"1": "79a7aa39830e71c7be7f4ca3e2e226c9a8c1fb9f", "3": "883b2e93-7933-4703-afae-5f2a9563a751"}}, "__type__": "1"}, "883b2e93-7933-4703-afae-5f2a9563a751": {"__data__": {"text": "                                                                      |\n| `INNER_TX`     | boolean | A boolean true or false on whether or not this transaction has a parent transaction. The TX\\_ID will be the same as the parent transaction but will have it's own intra. |\n| `SENDER`       | text    | The address of the creator of this transaction                                                                                                                           |\n| `FEE`          | number  | Fee associated with the transaction, in ALGOs                                                                                                                            |\n| `APP_ID`       | number  | App ID associated with this application call transaction                                                                                                                 |\n| `TX_TYPE`      | number  | Number associated with transaction type                                                                                                                                  |\n| `TX_TYPE_NAME` | text    | transaction type name                                                                                                                                                    |\n| `GENISIS_HASH` | text    | The hash of the genesis block of the network for which the transaction is valid                                              ", "doc_id": "883b2e93-7933-4703-afae-5f2a9563a751", "embedding": null, "doc_hash": "c188001341114735f9b229d368e5d3467b3868acd56b830a4106bad3d6e15acf", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/application-call-transaction.md", "file_name": "application-call-transaction.md"}, "node_info": {"start": 2264, "end": 3690, "_node_type": "1"}, "relationships": {"1": "79a7aa39830e71c7be7f4ca3e2e226c9a8c1fb9f", "2": "7875326d-16d2-44a1-9d3d-6eab5ae27a20", "3": "0457c0cd-809d-4c59-8803-0fb4ae746b01"}}, "__type__": "1"}, "0457c0cd-809d-4c59-8803-0fb4ae746b01": {"__data__": {"text": "                                                               |\n| `TX_MESSAGE`   | array   | Encoded JSON message associated with the transaction                                                                                                                     |\n| `EXTRA`        | array   | Extra json associated with transaction                                                                                                                                   |\n\n", "doc_id": "0457c0cd-809d-4c59-8803-0fb4ae746b01", "embedding": null, "doc_hash": "359a536620b530e24034c4b6aa74665a352ca8326673197d4fa9ec6e7d374438", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/application-call-transaction.md", "file_name": "application-call-transaction.md"}, "node_info": {"start": 3671, "end": 4137, "_node_type": "1"}, "relationships": {"1": "79a7aa39830e71c7be7f4ca3e2e226c9a8c1fb9f", "2": "883b2e93-7933-4703-afae-5f2a9563a751"}}, "__type__": "1"}, "cd1a9c1a-6b0a-4927-b434-1ad7cfb97541": {"__data__": {"text": "# Asset Configuration Transaction\n\nThis is a table for all transactions whose type is Asset Configuration. These transactions are to create, configure and destroy an asset depending on which fields are set. For more details on asset configuration transactions. Visit here: [ ](https://developer.algorand.org/docs/get-details/transactions/transactions/#asset-configuration-transaction)[https://developer.algorand.org/docs/get-details/transactions/transactions/#asset-configuration-transaction](https://developer.algorand.org/docs/get-details/transactions/transactions/#asset-configuration-transaction)\n\n## Table Schema\n\nAll transactions have a distinct intra and block\\_id combination. The intra is the transaction # into the block where the transaction was confirmed. Inner transactions(flagged with the inner tx flag) share the tx id of their parent application transactions so you can tie inner transaction to a parent transaction via a tx id. The inner transactions are seen as distinct transactions on the Algorand blockchain, which is signified by their intra and block id combination. One other note on the parent transactions, the parent transaction of inner transaction do not summarize the inner transactions and are seen as their own distinct transaction, which is usually an application call transaction.&#x20;\n\n| Field              | Type    | Description                                                                                                                                                                                                                                                                              |\n| ------------------ | ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `INTRA`            | number  | Transaction # into the block where this transaction was confirmed.                                                                                                                                                                                                                       |\n| `BLOCK_ID`         | number  | Block the transaction was confirmed                                                                    ", "doc_id": "cd1a9c1a-6b0a-4927-b434-1ad7cfb97541", "embedding": null, "doc_hash": "77f5b0b06db7ed6906b68f00dd5eb3d5aadd146ae93b3d7fd281a81f53344548", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-configuration-transaction.md", "file_name": "asset-configuration-transaction.md"}, "node_info": {"start": 0, "end": 2407, "_node_type": "1"}, "relationships": {"1": "376b2dcdf8a1d40c202f191c801b9a847441e216", "3": "d289cf4a-1ca2-4782-bd38-99db14076d4e"}}, "__type__": "1"}, "d289cf4a-1ca2-4782-bd38-99db14076d4e": {"__data__": {"text": "                                                                                                                                                                                                     |\n| `TX_GROUP_ID`      | text    | Transaction group ID, can be NULL. Exists when a group of transactions are tied together                                                                                                                                                                                                 |\n| `TX_ID`            | text    | Transaction ID of the transaction                                                                                                                                                                                                                                                        |\n| `INNER_TX`         | boolean | A boolean true or false on whether or not this transaction has a parent transaction. The TX\\_ID will be the same as the parent transaction but will have it's own intra.                                                                                                                 |\n| `ASSET_ID`         | number  | ID of Asset involved in the transaction                                                         ", "doc_id": "d289cf4a-1ca2-4782-bd38-99db14076d4e", "embedding": null, "doc_hash": "f62c3e4130b4acf2f59df79a0dbe9944e73dd175a107f6ef51a243161c5e37fe", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-configuration-transaction.md", "file_name": "asset-configuration-transaction.md"}, "node_info": {"start": 2408, "end": 3684, "_node_type": "1"}, "relationships": {"1": "376b2dcdf8a1d40c202f191c801b9a847441e216", "2": "cd1a9c1a-6b0a-4927-b434-1ad7cfb97541", "3": "a5304b49-d3db-448d-8b18-57ba2a0c3a48"}}, "__type__": "1"}, "a5304b49-d3db-448d-8b18-57ba2a0c3a48": {"__data__": {"text": "                                                                                                                                                                                                            |\n| `ASSET_SUPPLY`     | number  | The total number of base units of the asset to create. This number cannot be changed.                                                                                                                                                                                                    |\n| `SENDER`           | text    | Address of the wallet creating the transaction                                                                                                                                                                                                                                           |\n| `FEE`              | number  | Fee associated with the transaction, in ALGOs                                                                                                                                                                                                                                    ", "doc_id": "a5304b49-d3db-448d-8b18-57ba2a0c3a48", "embedding": null, "doc_hash": "a40316ba25bbcbd035cd8c34d47bf97e1ea7ba1116ce0ed673844f84d767b72c", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-configuration-transaction.md", "file_name": "asset-configuration-transaction.md"}, "node_info": {"start": 3685, "end": 4829, "_node_type": "1"}, "relationships": {"1": "376b2dcdf8a1d40c202f191c801b9a847441e216", "2": "d289cf4a-1ca2-4782-bd38-99db14076d4e", "3": "b6f6a248-7177-43d5-9a93-96a1a0dfb638"}}, "__type__": "1"}, "b6f6a248-7177-43d5-9a93-96a1a0dfb638": {"__data__": {"text": "                           |\n| `ASSET_PARAMETERS` | array   | All parameters involved with the asset being created, modified or destroyed in the transaction[https://developer.algorand.org/docs/get-details/transactions/transactions/#asset-parameters](https://developer.algorand.org/docs/get-details/transactions/transactions/#asset-parameters) |\n| `TX_TYPE`          | number  | Number associated with transaction type                                                                                                                                                                                                                                                  |\n| `TX_TYPE_NAME`     | text    | transaction type name                                                                                                                                                                                                                                                                    |\n| `GENISIS_HASH`     | text    | The hash of the genesis block of the network for which the transaction is valid                                                                                                                                                                                                          |\n| `TX_MESSAGE`       | array   | Encoded JSON message associated with the transaction                           ", "doc_id": "b6f6a248-7177-43d5-9a93-96a1a0dfb638", "embedding": null, "doc_hash": "1c3946038eb7f437beab0021a55f0e7eb4d951c8477f51755637a45d3027b0b1", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-configuration-transaction.md", "file_name": "asset-configuration-transaction.md"}, "node_info": {"start": 4830, "end": 6235, "_node_type": "1"}, "relationships": {"1": "376b2dcdf8a1d40c202f191c801b9a847441e216", "2": "a5304b49-d3db-448d-8b18-57ba2a0c3a48", "3": "6af1b234-a0d3-4dac-8b99-64f8fac7bb80"}}, "__type__": "1"}, "6af1b234-a0d3-4dac-8b99-64f8fac7bb80": {"__data__": {"text": "                                                                                                                                                                                                                             |\n| `EXTRA`            | array   | Extra json associated with transaction                                                                                                                                                                                                                                                   |\n", "doc_id": "6af1b234-a0d3-4dac-8b99-64f8fac7bb80", "embedding": null, "doc_hash": "b81672f95f55869b574c9a4e489818743ee7d3b5facb56496ba8f3beb1dffe96", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-configuration-transaction.md", "file_name": "asset-configuration-transaction.md"}, "node_info": {"start": 6216, "end": 6755, "_node_type": "1"}, "relationships": {"1": "376b2dcdf8a1d40c202f191c801b9a847441e216", "2": "b6f6a248-7177-43d5-9a93-96a1a0dfb638"}}, "__type__": "1"}, "fa1f2600-69fa-47d9-a0a0-4f9067168c73": {"__data__": {"text": "# Asset Freeze Transaction\n\nThis is a table for all transactions whose type is Asset Freeze. As the name implies these transactions are made to freeze transactions. Visit here: [ ](https://developer.algorand.org/docs/get-details/transactions/transactions/#asset-configuration-transaction)[https://developer.algorand.org/docs/get-details/transactions/transactions/#asset-freeze-transaction](https://developer.algorand.org/docs/get-details/transactions/transactions/#asset-freeze-transaction)\n\n## Table Schema\n\nAll transactions have a distinct intra and block\\_id combination. The intra is the transaction # into the block where the transaction was confirmed. Inner transactions(flagged with the inner tx flag) share the tx id of their parent application transactions so you can tie inner transaction to a parent transaction via a tx id. The inner transactions are seen as distinct transactions on the Algorand blockchain, which is signified by their intra and block id combination. One other note on the parent transactions, the parent transaction of inner transaction do not summarize the inner transactions and are seen as their own distinct transaction, which is usually an application call transaction.&#x20;\n\n| Field           | Type    | Description                                                                                                                                                              |\n| --------------- | ------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `INTRA`         | number  | Transaction # into the block where this transaction was confirmed.                                                                                                       |\n| `BLOCK_ID`      | number  | Block the transaction was confirmed                                                                                                                                      |\n| `TX_GROUP_ID`   | text    | Transaction group ID, can be NULL. Exists when a group of transactions are tied together                                                                                 |\n| `TX_ID`         | text    | Transaction ID of the transaction                                      ", "doc_id": "fa1f2600-69fa-47d9-a0a0-4f9067168c73", "embedding": null, "doc_hash": "3f13aa90b3484fbd50fdbde4767f12f1480b4052566fef294f446135e036ee3c", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-freeze-transaction.md", "file_name": "asset-freeze-transaction.md"}, "node_info": {"start": 0, "end": 2319, "_node_type": "1"}, "relationships": {"1": "324f96d84022e9ecba771c6d7c5ec48dab86f08b", "3": "ac80fc3d-4ed7-44c2-9ea5-1c77acc0bba4"}}, "__type__": "1"}, "ac80fc3d-4ed7-44c2-9ea5-1c77acc0bba4": {"__data__": {"text": "                                                                                                                     |\n| `INNER_TX`      | boolean | A boolean true or false on whether or not this transaction has a parent transaction. The TX\\_ID will be the same as the parent transaction but will have it's own intra. |\n| `ASSET_ID`      | number  | The asset ID being frozen or unfrozen.                                                                                                                                   |\n| `ASSET_ADDRESS` | text    | The address of the account whose asset is being frozen or unfrozen.                                                                                                      |\n| `ASSET_FREEZE`  | boolean | True to freeze the asset, otherwise null or false                                                                                                                        |\n| `SENDER`        | text    | Address of the wallet creating the transaction                                                                                                                           |\n| `FEE`           | number  | Fee associated with the transaction, in ALGOs                                                                                                                            |\n| `TX_TYPE`       | number  | Number associated with transaction type                  ", "doc_id": "ac80fc3d-4ed7-44c2-9ea5-1c77acc0bba4", "embedding": null, "doc_hash": "0f389a393b5e91d9b2d66062e9e63a54bafbe339157f0553ba5a235deb980afe", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-freeze-transaction.md", "file_name": "asset-freeze-transaction.md"}, "node_info": {"start": 2320, "end": 3732, "_node_type": "1"}, "relationships": {"1": "324f96d84022e9ecba771c6d7c5ec48dab86f08b", "2": "fa1f2600-69fa-47d9-a0a0-4f9067168c73", "3": "9fde9241-0d2a-41f3-ba45-61fd6982d43e"}}, "__type__": "1"}, "9fde9241-0d2a-41f3-ba45-61fd6982d43e": {"__data__": {"text": "type                                                                                                                                  |\n| `TX_TYPE_NAME`  | text    | transaction type name                                                                                                                                                    |\n| `GENISIS_HASH`  | text    | The hash of the genesis block of the network for which the transaction is valid                                                                                          |\n| `TX_MESSAGE`    | array   | Encoded JSON message associated with the transaction                                                                                                                     |\n| `EXTRA`         | array   | Extra json associated with transaction                                                                                                                                   |\n", "doc_id": "9fde9241-0d2a-41f3-ba45-61fd6982d43e", "embedding": null, "doc_hash": "994ebeeb35750d971c0bd31ecc3f09e527cf43df6cf96fba5e42b2700cd5c26c", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-freeze-transaction.md", "file_name": "asset-freeze-transaction.md"}, "node_info": {"start": 3710, "end": 4650, "_node_type": "1"}, "relationships": {"1": "324f96d84022e9ecba771c6d7c5ec48dab86f08b", "2": "ac80fc3d-4ed7-44c2-9ea5-1c77acc0bba4"}}, "__type__": "1"}, "1aa0ca54-10f9-4fe7-af50-3c076e027a4b": {"__data__": {"text": "# Asset Transfer Transaction\n\nThis is a table for all transactions whose type is Asset Transfer. This is when an asset is transferred from one wallet to another. Visit here for more details: [ ](https://developer.algorand.org/docs/get-details/transactions/transactions/#asset-configuration-transaction)[https://developer.algorand.org/docs/get-details/transactions/transactions/#asset-transfer-transaction](https://developer.algorand.org/docs/get-details/transactions/transactions/#asset-transfer-transaction)\n\n## Table Schema\n\nAll transactions have a distinct intra and block\\_id combination. The intra is the transaction # into the block where the transaction was confirmed. Inner transactions(flagged with the inner tx flag) share the tx id of their parent application transactions so you can tie inner transaction to a parent transaction via a tx id. The inner transactions are seen as distinct transactions on the Algorand blockchain, which is signified by their intra and block id combination. One other note on the parent transactions, the parent transaction of inner transaction do not summarize the inner transactions and are seen as their own distinct transaction, which is usually an application call transaction.&#x20;\n\n| Field               | Type    | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| ------------------- | ------- ||\n| `INTRA`             | number  | Transaction # into the block where this transaction was confirmed.                                                                                                      ", "doc_id": "1aa0ca54-10f9-4fe7-af50-3c076e027a4b", "embedding": null, "doc_hash": "d4dec7adb72b98f89ef70e91ca52c1e3fc403d7e401bc2b0bfcfb063335890a2", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-transfer-transaction.md", "file_name": "asset-transfer-transaction.md"}, "node_info": {"start": 0, "end": 2505, "_node_type": "1"}, "relationships": {"1": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853", "3": "a1f95481-ba9f-4ddd-8c93-4eef611cf674"}}, "__type__": "1"}, "a1f95481-ba9f-4ddd-8c93-4eef611cf674": {"__data__": {"text": "                                                                                                                                                                                                                                                                                                                                                               |\n| `BLOCK_ID`          | number  | Block the transaction was confirmed                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| `TX_GROUP_ID`       | text    | Transaction group ID, can be NULL. Exists when a group of transactions are tied together                                                                                      ", "doc_id": "a1f95481-ba9f-4ddd-8c93-4eef611cf674", "embedding": null, "doc_hash": "4ca66d3f8794e52c5f16ec85b43c301d82f3e85de6de041e5a7d8d5f780579f7", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-transfer-transaction.md", "file_name": "asset-transfer-transaction.md"}, "node_info": {"start": 2506, "end": 3603, "_node_type": "1"}, "relationships": {"1": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853", "2": "1aa0ca54-10f9-4fe7-af50-3c076e027a4b", "3": "17126fb4-386c-4426-8fb3-db85edf4773c"}}, "__type__": "1"}, "17126fb4-386c-4426-8fb3-db85edf4773c": {"__data__": {"text": "                                                                                                                                                                                                                                                                                                                                                         |\n| `TX_ID`             | text    | Transaction ID of the transaction                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| `INNER_TX`          | boolean | A boolean true or false on whether or not this transaction has a parent transaction. The TX\\_ID will be the same as the parent transaction but will have it's own intra.                                                                ", "doc_id": "17126fb4-386c-4426-8fb3-db85edf4773c", "embedding": null, "doc_hash": "cf010ac370f73d2469a40978520392afdcc62cc265017e84d195f97311d9296a", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-transfer-transaction.md", "file_name": "asset-transfer-transaction.md"}, "node_info": {"start": 3604, "end": 4753, "_node_type": "1"}, "relationships": {"1": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853", "2": "a1f95481-ba9f-4ddd-8c93-4eef611cf674", "3": "cf217b6d-3ce2-4aad-94fb-85aeababda78"}}, "__type__": "1"}, "cf217b6d-3ce2-4aad-94fb-85aeababda78": {"__data__": {"text": "                                                                                                                                                                                                                                                                                               |\n| `ASSET_ID`          | number  | The asset ID of the asset being transferred                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| `SENDER`            | text    | Address of the wallet creating the transaction                                                                                                                                                                 ", "doc_id": "cf217b6d-3ce2-4aad-94fb-85aeababda78", "embedding": null, "doc_hash": "fbf31ab3151fa7b737b878cbf560be81b75dbadf644d45601f2363563b085c6d", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-transfer-transaction.md", "file_name": "asset-transfer-transaction.md"}, "node_info": {"start": 4754, "end": 5820, "_node_type": "1"}, "relationships": {"1": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853", "2": "17126fb4-386c-4426-8fb3-db85edf4773c", "3": "0aad59c5-2320-45c5-b4a6-beb03b1271d9"}}, "__type__": "1"}, "0aad59c5-2320-45c5-b4a6-beb03b1271d9": {"__data__": {"text": "                                                                                                                                                                                                                                                                                                                        |\n| `FEE`               | number  | Fee associated with the transaction, in ALGOs                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| `ASSET_SENDER`      | text    | The sender of the transfer. The regular [sender](https://developer.algorand.org/docs/get-details/transactions/transactions/#sender) field should be used and this one set to the zero value for regular transfers between accounts. If this value is nonzero, it indicates a clawback transaction where the [sender](https://developer.algorand.org/docs/get-details/transactions/transactions/#sender) is the asset's clawback address and the asset sender is the address from which the funds will be withdrawn. |\n| `ASSET_RECEIVER` ", "doc_id": "0aad59c5-2320-45c5-b4a6-beb03b1271d9", "embedding": null, "doc_hash": "daed9bd211358ea34630ae6fdc5e9cf7d2219e53509c83a2c964571a34fdad66", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-transfer-transaction.md", "file_name": "asset-transfer-transaction.md"}, "node_info": {"start": 5821, "end": 7226, "_node_type": "1"}, "relationships": {"1": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853", "2": "cf217b6d-3ce2-4aad-94fb-85aeababda78", "3": "6adda8b7-050a-45c3-a228-75214ba66bb5"}}, "__type__": "1"}, "6adda8b7-050a-45c3-a228-75214ba66bb5": {"__data__": {"text": "the funds will be withdrawn. |\n| `ASSET_RECEIVER`    | text    | The recipient of the asset transfer.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| `ASSET_AMOUNT`      | number  | The amount of the asset to be transferred. A zero amount transferred to self allocates that asset in the account's Asset map.                                                                                                                                                                                                                                                                                                                                                                                       |\n| `ASSET_TRANSFERRED` | number  | The Asset ID of the asset transferred in the asset transfer transaction.               ", "doc_id": "6adda8b7-050a-45c3-a228-75214ba66bb5", "embedding": null, "doc_hash": "5ab211c2377dfd36e603255fa9e5d692d03a60b8785c93995de707c28175eb94", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-transfer-transaction.md", "file_name": "asset-transfer-transaction.md"}, "node_info": {"start": 7184, "end": 8408, "_node_type": "1"}, "relationships": {"1": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853", "2": "0aad59c5-2320-45c5-b4a6-beb03b1271d9", "3": "35fe1c58-8cee-492b-9b30-df0362960a4f"}}, "__type__": "1"}, "35fe1c58-8cee-492b-9b30-df0362960a4f": {"__data__": {"text": "transfer transaction.                                                                                                                                                                                                                                                                                                                                                                                                                                            |\n| `TX_TYPE`           | number  | Number associated with transaction type                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| `TX_TYPE_NAME`      | text    | transaction type name                           ", "doc_id": "35fe1c58-8cee-492b-9b30-df0362960a4f", "embedding": null, "doc_hash": "e2f752e3632c7f84ab5f6adac94a07eae5ad26a605b795c48d8a29815ad9dae5", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-transfer-transaction.md", "file_name": "asset-transfer-transaction.md"}, "node_info": {"start": 8432, "end": 9501, "_node_type": "1"}, "relationships": {"1": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853", "2": "6adda8b7-050a-45c3-a228-75214ba66bb5", "3": "a38dd0b2-341c-41e5-b251-e509ef9ec5ed"}}, "__type__": "1"}, "a38dd0b2-341c-41e5-b251-e509ef9ec5ed": {"__data__": {"text": "                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| `GENISIS_HASH`      | text    | The hash of the genesis block of the network for which the transaction is valid                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n| `TX_MESSAGE`        | array   | Encoded JSON message associated with the transaction          ", "doc_id": "a38dd0b2-341c-41e5-b251-e509ef9ec5ed", "embedding": null, "doc_hash": "31a1eb7b778dc089ba451d01793840447e9318daff3e6b0fa6ef84aa32aba9cb", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-transfer-transaction.md", "file_name": "asset-transfer-transaction.md"}, "node_info": {"start": 9522, "end": 10627, "_node_type": "1"}, "relationships": {"1": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853", "2": "35fe1c58-8cee-492b-9b30-df0362960a4f", "3": "ae42c0a4-3a98-4abd-bf6e-6ed480fdae69"}}, "__type__": "1"}, "ae42c0a4-3a98-4abd-bf6e-6ed480fdae69": {"__data__": {"text": "| Encoded JSON message associated with the transaction                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| `EXTRA`             | array   | Extra json associated with transaction                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n", "doc_id": "ae42c0a4-3a98-4abd-bf6e-6ed480fdae69", "embedding": null, "doc_hash": "ae9e2daf46384737d4bdfeb8b4e06bc8acb6c7f1e2e985f29e4dc08f3915357b", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-transfer-transaction.md", "file_name": "asset-transfer-transaction.md"}, "node_info": {"start": 10563, "end": 11603, "_node_type": "1"}, "relationships": {"1": "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853", "2": "a38dd0b2-341c-41e5-b251-e509ef9ec5ed"}}, "__type__": "1"}, "8a638264-6ed5-4794-b05d-a5c01537eb85": {"__data__": {"text": "# Asset\n\nThe asset table is contains a current list of all the assets with their asset\\_id, current status and other info.\n\n## Table Schema\n\n| Field             | Type    | Description                                   |\n| ----------------- | ------- | --------------------------------------------- |\n| `ASSET_ID`        | number  | Asset ID                                      |\n| `CREATOR_ADDRESS` | text    | Address of the asset creator                  |\n| `TOTAL_SUPPLY`    | number  | Total supply of the asset                     |\n| `ASSET_NAME`      | text    | Name of the asset                             |\n| `ASSET_URL`       | text    | The url to the asset website                  |\n| `DECIMALS`        | number  | Number of decimals this asset has             |\n| `ASSET_DELETED`   | boolean | whether or not the asset is currently deleted |\n| `CLOSED_AT`       | number  | block that the asset was closed               |\n| `CREATED_AT`      | number  | block that the asset was created              |\n", "doc_id": "8a638264-6ed5-4794-b05d-a5c01537eb85", "embedding": null, "doc_hash": "8975e81406b6bd023ad4aa0f99a3f92d747405a1301ee047269f99112d1d29b0", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset.md", "file_name": "asset.md"}, "node_info": {"start": 0, "end": 1021, "_node_type": "1"}, "relationships": {"1": "005cc71ba7456739c278c9cfac95e4dcfa205bca"}}, "__type__": "1"}, "539b56d4-99a3-4e31-867d-9725bc972783": {"__data__": {"text": "# Block\n\nThis table displays block\\_ids, rewards associated with a block, and the time a block was minted and confirmed. In the Algorand ecosystem a block is also known as a round.\n\n## Table Schema\n\n| Field             | Type      | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| ----------------- | --------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `BLOCK_ID`        | number    | The block                                                                                                                                                                                                                                                                                                                                                                                                                                      ", "doc_id": "539b56d4-99a3-4e31-867d-9725bc972783", "embedding": null, "doc_hash": "894a61a5d10da0075ca73e55a52ce33115847f9ed0bc39c15a3d00b4b6ba48b5", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/block.md", "file_name": "block.md"}, "node_info": {"start": 0, "end": 1642, "_node_type": "1"}, "relationships": {"1": "446d587e2f2b75067338c233622229db4bf9567f", "3": "ae4396a5-9295-4291-a0ec-c80ce6eaceb9"}}, "__type__": "1"}, "ae4396a5-9295-4291-a0ec-c80ce6eaceb9": {"__data__": {"text": "                                         |\n| `BLOCK_TIMESTAMP` | timestamp | Timestamp of block minting(without a timezone)                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| `REWARDSLEVEL`    | number    | How many rewards, in MicroAlgos, have been distributed to each RewardUnit of MicroAlgos since genesis. Link: https://algorand.github.io/java-algorand-sdk/com/algorand/algosdk/v2/client/model/BlockRewards.html                                                                                                                                                                                                                                                     |\n| `NETWORK`         | text      | Signifying whether the block is from mainnet or testnet                                                                                                                                          ", "doc_id": "ae4396a5-9295-4291-a0ec-c80ce6eaceb9", "embedding": null, "doc_hash": "efae97e8309b86ea3fbc86f236f9d4913f6aecbed25e14dbbd9c03be146da390", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/block.md", "file_name": "block.md"}, "node_info": {"start": 1643, "end": 2891, "_node_type": "1"}, "relationships": {"1": "446d587e2f2b75067338c233622229db4bf9567f", "2": "539b56d4-99a3-4e31-867d-9725bc972783", "3": "bd3ed8b3-9531-417f-9b8d-00916d4a97ef"}}, "__type__": "1"}, "bd3ed8b3-9531-417f-9b8d-00916d4a97ef": {"__data__": {"text": "                                                                                                                                                                                                                                                                                       |\n| `GENISIS_HASH`    | text      | ID to which this block belongs                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| `PREV_BLOCK_HASH` | number    | ID to which the block before this belongs                                                                                                                                                                                                                                 ", "doc_id": "bd3ed8b3-9531-417f-9b8d-00916d4a97ef", "embedding": null, "doc_hash": "e534ec7fb70372f0f84c948ddb3f5d1bb61b39104c4ffc60a4ed3f454d013ca5", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/block.md", "file_name": "block.md"}, "node_info": {"start": 2892, "end": 3962, "_node_type": "1"}, "relationships": {"1": "446d587e2f2b75067338c233622229db4bf9567f", "2": "ae4396a5-9295-4291-a0ec-c80ce6eaceb9", "3": "0cc71f5a-6ba8-4a30-b629-0e9f5cb3351a"}}, "__type__": "1"}, "0cc71f5a-6ba8-4a30-b629-0e9f5cb3351a": {"__data__": {"text": "                                                                                                                                                                                                              |\n| `TXN_ROOT`        | boolean   | TransactionsRoot authenticates the set of transactions appearing in the block. More specifically, it's the root of a merkle tree whose leaves are the block's Txids, in lexicographic order. For the empty block, it's 0. Note that the TxnRoot does not authenticate the signatures on the transactions, only the transactions themselves. Two blocks with the same transactions but in a different order and with different signatures will have the same TxnRoot. |\n| `HEADER`          | array     | Block details, see rules below- for more message details https://developer.algorand.org/docs/rest-apis/indexer/#blockrewards                                                                                                                                                                                                                                                                                                                                         |\n", "doc_id": "0cc71f5a-6ba8-4a30-b629-0e9f5cb3351a", "embedding": null, "doc_hash": "80987604f1848488ae41e94f627c3e564aafee523f1c812fedd8d4bf328e1fdd", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/block.md", "file_name": "block.md"}, "node_info": {"start": 3943, "end": 5129, "_node_type": "1"}, "relationships": {"1": "446d587e2f2b75067338c233622229db4bf9567f", "2": "bd3ed8b3-9531-417f-9b8d-00916d4a97ef"}}, "__type__": "1"}, "31cd10da-6d6c-4e5d-a95f-0ef238531512": {"__data__": {"text": "---\ndescription: The end of day balance of ALGOs for an address.\n---\n\n# Daily Balances\n\n\n\n| Field     | Type    | Description                           |\n| --------- | ------- | ------------------------------------- |\n| `DATE`    | date    | The date time for this balance record |\n| `ADDRESS` | address | The balance address                   |\n| `BALANCE` | number  | The amount of the balance             |\n", "doc_id": "31cd10da-6d6c-4e5d-a95f-0ef238531512", "embedding": null, "doc_hash": "03d1368902220a26cecb19e4f603ada84fc230f84d8400216643a09b59655008", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/daily-balances.md", "file_name": "daily-balances.md"}, "node_info": {"start": 0, "end": 410, "_node_type": "1"}, "relationships": {"1": "5ce30e894eda7c8062d3e25699c98c5edecfdcb6"}}, "__type__": "1"}, "da1478ff-4f8d-4ee7-becd-40b8d6dbaab1": {"__data__": {"text": "# Key Registration Transaction\n\nThis is a table for all transactions whose type is Key Registration. A key registration signifies whether or not a wallet is participating in rewards. To learn more about key registration transactions visit here: [https://developer.algorand.org/docs/get-details/transactions/transactions/#key-registration-transaction](https://developer.algorand.org/docs/get-details/transactions/transactions/#key-registration-transaction)\n\n## Table Schema\n\nAll transactions have a distinct intra and block\\_id combination. The intra is the transaction # into the block where the transaction was confirmed. Inner transactions(flagged with the inner tx flag) share the tx id of their parent application transactions so you can tie inner transaction to a parent transaction via a tx id. The inner transactions are seen as distinct transactions on the Algorand blockchain, which is signified by their intra and block id combination. One other note on the parent transactions, the parent transaction of inner transaction do not summarize the inner transactions and are seen as their own distinct transaction, which is usually an application call transaction.&#x20;\n\n| Field               | Type    | Description                                                                                                                                                              |\n| ------------------- | ------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `INTRA`             | number  | Transaction # into the block where this transaction was confirmed.                                                                                                       |\n| `BLOCK_ID`          | number  | Block the transaction was confirmed                                                                                                                                      |\n| `TX_GROUP_ID`       | text    | Transaction group ID, can be NULL. Exists when a group of transactions are tied together                                                                                 |\n| `TX_ID`             | text    | Transaction ID of the transaction                                           ", "doc_id": "da1478ff-4f8d-4ee7-becd-40b8d6dbaab1", "embedding": null, "doc_hash": "d8e7795840b442f217c88231f73bc38d61bb5caf36117324e9d03aa5c38852e8", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/key-registration-transaction.md", "file_name": "key-registration-transaction.md"}, "node_info": {"start": 0, "end": 2313, "_node_type": "1"}, "relationships": {"1": "d2a26a5d0953bc9ff20458bee861510b4ccc24b8", "3": "5337bb93-2847-46ba-89d7-aed1760b70a6"}}, "__type__": "1"}, "5337bb93-2847-46ba-89d7-aed1760b70a6": {"__data__": {"text": "                                                                                                                |\n| `INNER_TX`          | boolean | A boolean true or false on whether or not this transaction has a parent transaction. The TX\\_ID will be the same as the parent transaction but will have it's own intra. |\n| `ASSET_ID`          | number  | The asset ID of the asset associated with the key registration                                                                                                           |\n| `SENDER`            | text    | Address of the wallet creating the transaction                                                                                                                           |\n| `FEE`               | number  | Fee associated with the transaction, in ALGOs                                                                                                                            |\n| `PARTICIPATION_KEY` | text    | The root participation public key.                                                                                                                                       |\n| `VRF_PUBLIC_KEY`    | text    | The VRF public key.                                                                                                                                                     ", "doc_id": "5337bb93-2847-46ba-89d7-aed1760b70a6", "embedding": null, "doc_hash": "ec88b04567a558441de5ad003dc5c3de2cfc97fa3e7a2165b7ead6afd48fa2a2", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/key-registration-transaction.md", "file_name": "key-registration-transaction.md"}, "node_info": {"start": 2314, "end": 3655, "_node_type": "1"}, "relationships": {"1": "d2a26a5d0953bc9ff20458bee861510b4ccc24b8", "2": "da1478ff-4f8d-4ee7-becd-40b8d6dbaab1", "3": "de481e5e-6a05-47d1-b53c-e14abed079e7"}}, "__type__": "1"}, "de481e5e-6a05-47d1-b53c-e14abed079e7": {"__data__": {"text": "                    |\n| `VOTE_FIRST`        | number  | The first round that the participation key is valid. Not to be confused with the FirstValid round of the keyreg transaction.                                             |\n| `VOTE_LAST`         | number  | The last round that the participation key is valid. Not to be confused with the LastValid round of the keyreg transaction.                                               |\n| `VOTE_KEYDILUTION`  | number  | This is the dilution for the 2-level participation key.                                                                                                                  |\n| `TX_TYPE`           | number  | Number associated with transaction type                                                                                                                                  |\n| `TX_TYPE_NAME`      | text    | transaction type name                                                                                                                                                    |\n| `GENISIS_HASH`      | text    | The hash of the genesis block of the network for which the transaction is valid                                                                                          |\n| `TX_MESSAGE`        | array   | Encoded JSON message associated with the transaction                                                                                                                     |\n| `EXTRA`     ", "doc_id": "de481e5e-6a05-47d1-b53c-e14abed079e7", "embedding": null, "doc_hash": "aaff2cc27ae19d74a6a4f996828a608d13b2fef10a5d8a556b85f73444f664c3", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/key-registration-transaction.md", "file_name": "key-registration-transaction.md"}, "node_info": {"start": 3656, "end": 5127, "_node_type": "1"}, "relationships": {"1": "d2a26a5d0953bc9ff20458bee861510b4ccc24b8", "2": "5337bb93-2847-46ba-89d7-aed1760b70a6", "3": "b62469b3-e58f-476e-b6c1-2b92b804c11d"}}, "__type__": "1"}, "b62469b3-e58f-476e-b6c1-2b92b804c11d": {"__data__": {"text": "        |\n| `EXTRA`             | array   | Extra json associated with transaction                                                                                                                                   |\n", "doc_id": "b62469b3-e58f-476e-b6c1-2b92b804c11d", "embedding": null, "doc_hash": "399ff0294b82e209894653d35ce334eb4f6f7575cd41523b2624c6e0e5c7ae6e", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/key-registration-transaction.md", "file_name": "key-registration-transaction.md"}, "node_info": {"start": 5103, "end": 5318, "_node_type": "1"}, "relationships": {"1": "d2a26a5d0953bc9ff20458bee861510b4ccc24b8", "2": "de481e5e-6a05-47d1-b53c-e14abed079e7"}}, "__type__": "1"}, "9a393ceb-c7ce-49df-ad48-d6a7c27a5a34": {"__data__": {"text": "# Payment Transaction\n\nThis is a table for all transactions whose type is Payment. This is when a user send a payment and can also be used to send the remainder of an account so it can be closed. To learn more visit: [https://developer.algorand.org/docs/get-details/transactions/transactions/#payment-transaction](https://developer.algorand.org/docs/get-details/transactions/transactions/#payment-transaction)\n\n## Table Schema\n\nAll transactions have a distinct intra and block\\_id combination. The intra is the transaction # into the block where the transaction was confirmed. Inner transactions(flagged with the inner tx flag) share the tx id of their parent application transactions so you can tie inner transaction to a parent transaction via a tx id. The inner transactions are seen as distinct transactions on the Algorand blockchain, which is signified by their intra and block id combination. One other note on the parent transactions, the parent transaction of inner transaction do not summarize the inner transactions and are seen as their own distinct transaction, which is usually an application call transaction.&#x20;\n\n| Field          | Type    | Description                                                                                                                                                              |\n| -------------- | ------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `INTRA`        | number  | Transaction # into the block where this transaction was confirmed.                                                                                                       |\n| `BLOCK_ID`     | number  | Block the transaction was confirmed                                                                                                                                      |\n| `TX_GROUP_ID`  | text    | Transaction group ID, can be NULL. Exists when a group of transactions are tied together                                                                                 |\n| `TX_ID`        | text    | Transaction ID of the transaction                                                                              ", "doc_id": "9a393ceb-c7ce-49df-ad48-d6a7c27a5a34", "embedding": null, "doc_hash": "5b124ee5dce7c5902672de502c81cefbd871704bbc94c4a493c50cbb92f6b453", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/payment-transaction.md", "file_name": "payment-transaction.md"}, "node_info": {"start": 0, "end": 2272, "_node_type": "1"}, "relationships": {"1": "1266a2a5da0b60940fc25f7fef24b29033d87c27", "3": "da71588b-e2ca-4e36-8371-fa375bc9e405"}}, "__type__": "1"}, "da71588b-e2ca-4e36-8371-fa375bc9e405": {"__data__": {"text": "                                                                             |\n| `INNER_TX`     | boolean | A boolean true or false on whether or not this transaction has a parent transaction. The TX\\_ID will be the same as the parent transaction but will have it's own intra. |\n| `ASSET_ID`     | number  | The asset ID of the asset being sent                                                                                                                                     |\n| `SENDER`       | text    | Address of the wallet creating the transaction                                                                                                                           |\n| `RECEIVER`     | text    | Address of the wallet receiving the payment                                                                                                                              |\n| `AMOUNT`       | number  | Amount of the asset being sent to the receiver                                                                                                                           |\n| `FEE`          | number  | Fee associated with the transaction, in ALGOs                                                                                                                            |\n| `TX_TYPE`      | number  | Number associated with transaction type                                                  ", "doc_id": "da71588b-e2ca-4e36-8371-fa375bc9e405", "embedding": null, "doc_hash": "634551230900c4493c9f8c65d77ec4327a3e2071e253c170a2c17c42515b7346", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/payment-transaction.md", "file_name": "payment-transaction.md"}, "node_info": {"start": 2273, "end": 3670, "_node_type": "1"}, "relationships": {"1": "1266a2a5da0b60940fc25f7fef24b29033d87c27", "2": "9a393ceb-c7ce-49df-ad48-d6a7c27a5a34", "3": "05bdf6d0-3fbf-40e2-abf9-cce1be51e0ec"}}, "__type__": "1"}, "05bdf6d0-3fbf-40e2-abf9-cce1be51e0ec": {"__data__": {"text": "                                                                                                   |\n| `TX_TYPE_NAME` | text    | transaction type name                                                                                                                                                    |\n| `GENISIS_HASH` | text    | The hash of the genesis block of the network for which the transaction is valid                                                                                          |\n| `TX_MESSAGE`   | array   | Encoded JSON message associated with the transaction                                                                                                                     |\n| `EXTRA`        | array   | Extra json associated with transaction                                                                                                                                   |\n", "doc_id": "05bdf6d0-3fbf-40e2-abf9-cce1be51e0ec", "embedding": null, "doc_hash": "324ddecef5df3fa35a5cbe95607d84c7fb1013517bd2f3d456cb4007d0ba856c", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/payment-transaction.md", "file_name": "payment-transaction.md"}, "node_info": {"start": 3651, "end": 4552, "_node_type": "1"}, "relationships": {"1": "1266a2a5da0b60940fc25f7fef24b29033d87c27", "2": "da71588b-e2ca-4e36-8371-fa375bc9e405"}}, "__type__": "1"}, "bc9da2ca-294f-486c-9982-c1b43e00a928": {"__data__": {"text": "# Prices Pool Balances\n\nThis table can be used to price assets within the Algorand blockchain using on-chain liquidity pool. Price is calculated by end-of-hour pool balances on tinyman for Algo base pairs, then using the coinmarketcap/coingiecko ALGO price to calculate the price of the other asset\n\n<table><thead><tr><th>Field</th><th width=\"150\">Type</th><th>Description</th></tr></thead><tbody><tr><td>BLOCK_HOUR</td><td>timestamp</td><td>The hour for which the price is valid</td></tr><tr><td>ASSET_ID</td><td>numeric</td><td>ID associated with the asset</td></tr><tr><td>ASSET_NAME</td><td>string</td><td>Name of the asset</td></tr><tr><td>PRICE_USD</td><td>numeric</td><td>The USD price of the asset at the end of the hour. ALGO price pulled from coinmarketcap/coingiecko</td></tr><tr><td>ALGO_BALANCE</td><td>numeric</td><td>The balance of ALGO tokens in the pool at the end of the hour. NULL for ALGO</td></tr><tr><td>NON_ALGO_BALANCE</td><td>numeric</td><td>The balance of other (non-ALGO) tokens in the pool at the end of the hour. NULL for ALGO</td></tr><tr><td>POOL_NAME</td><td>string</td><td>The name of the pool used for the price calculation. NULL for ALGO</td></tr><tr><td>POOL_ADDRESS</td><td>string</td><td>The address of the pool used for the price calculation. NULL for ALGO</td></tr></tbody></table>\n", "doc_id": "bc9da2ca-294f-486c-9982-c1b43e00a928", "embedding": null, "doc_hash": "d337aa258145d65c3db5a68204bb11c5379d2e6c5bba1bc7ad7c22221f32b5aa", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/prices-pool-balances.md", "file_name": "prices-pool-balances.md"}, "node_info": {"start": 0, "end": 1322, "_node_type": "1"}, "relationships": {"1": "5b7341d7ff661baa4f1128ff3a183c73301bb67c"}}, "__type__": "1"}, "ad09c87e-505b-4a5a-854f-7c7147786a92": {"__data__": {"text": "# Prices Swap\n\nThis table can be used to price assets within the Algorand blockchain using on-chain swaps. Price is calculated by using all swaps within two standard deviations from the hour average price, calculating the average price at the dex level, then weighting the dex price by the previous day's volume to create a weighted average across all dexes.\n\n\n\n<table><thead><tr><th>Field</th><th width=\"150\">Type</th><th>Description</th></tr></thead><tbody><tr><td>BLOCK_HOUR</td><td>timestamp</td><td>The hour for which the price is valid</td></tr><tr><td>ASSET_ID</td><td>numeric</td><td>ID associated with the asset</td></tr><tr><td>ASSET_NAME</td><td>string</td><td>Name of the asset</td></tr><tr><td>PRICE_USD</td><td>numeric</td><td>This table can be used to price assets within the Algorand blockchain using on-chain swaps. Price is calculated by using all swaps within two standard deviations from the hour average price, calculating the average price at the dex level, then weighting the dex price by the previous day's volume to create a weighted average across all dexes.</td></tr><tr><td>MIN_PRICE_USD_HOUR</td><td>numeric</td><td>The lowest price found in a swap in the hour in USD</td></tr><tr><td>MAX_PRICE_USD_HOUR</td><td>numeric</td><td>The highest price found in a swap in the hour in USD</td></tr><tr><td>VOLATILITY_MEASURE</td><td>numeric</td><td>The difference between the min and max price for the hour</td></tr><tr><td>SWAPS_IN_HOUR</td><td>integer</td><td>The number of swap transactions in the hour that involved this asset</td></tr><tr><td>VOLUME_USD_IN_HOUR</td><td>numeric</td><td>The volume of swap transactions (in USD) in the hour for this asset</td></tr></tbody></table>\n", "doc_id": "ad09c87e-505b-4a5a-854f-7c7147786a92", "embedding": null, "doc_hash": "2d4493a2673da6cbe919c934f2b1f4420ea6bd708faf238204992b232b5df05d", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/prices-swap.md", "file_name": "prices-swap.md"}, "node_info": {"start": 0, "end": 1706, "_node_type": "1"}, "relationships": {"1": "e72cf32b5d70fef836a13b62b9c3e45b573ff8c2"}}, "__type__": "1"}, "a30eec9b-e6c7-4875-99e4-9ea62b69b7af": {"__data__": {"text": "# Swaps\n\nThe swaps table compiles the swaps from the DEXes(decentralized exchanges) throughout the Algorand ecosystem. This table includes the Tinyman, AlgoFi, PactFi, and Wagmiswap DEX. \\\n\\\n**Important Note**: When looking at volume we will look at all rows for swaps. However, when looking at the number of swaps we should only count the number of swaps where swaps have a swap\\_from_\\__amount > 0. This is due to slippage payouts where a users signs an additional swap transaction to receive additional asset due to a change in price during the swap.\\\n\n\n| Field                   | Type      | Description                                                |\n| ----------------------- | --------- | ---------------------------------------------------------- |\n| swap\\_program           | string    | The DEX or program used to make the swap                   |\n| block\\_timestamp        | timestamp | The time the block began                                   |\n| block\\_id               | integer   | Unique sequential number that identifies the current block |\n| tx\\_id                  | string    | A unique key that identifies a transaction                 |\n| swapper                 | string    | Address that initiated the swap                            |\n| swap\\_from_\\__amount    | integer   | Total amount of the token sent in to initiate the swap     |\n| swap\\__from\\_asset\\_id_ | string    | Token being sent or swapped from                           |\n| pool\\_address           | string    | Address of the pool the swap is coming from                |\n| swap\\_to_\\__amount      | integer   | Total amount of the token received in the swap             |\n| swap\\_to_\\_asset\\_id_   | string    | Token being received or swapped for                        |\n", "doc_id": "a30eec9b-e6c7-4875-99e4-9ea62b69b7af", "embedding": null, "doc_hash": "57640e9ddc0952798268eace59edb5447efebdea09b285fbea42000177ffbc6a", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/swaps.md", "file_name": "swaps.md"}, "node_info": {"start": 0, "end": 1769, "_node_type": "1"}, "relationships": {"1": "9c019c16a40827d306dbf598780a0ae12b1ae666"}}, "__type__": "1"}, "a1c6cecf-6503-4661-b83b-90ba49452be0": {"__data__": {"text": "# Transactions Participation\n\nThis is a transaction participation table which lists the addresses involved in a transaction within a block and what intra the address was involved in.\n\n## Table Schema\n\n| Field      | Type   | Description                                                |\n| ---------- | ------ | ---------------------------------------------------------- |\n| `INTRA`    | number | Offset into the block where this transaction was confirmed |\n| `BLOCK_ID` | number | Block                                                      |\n| `ADDRESS`  | text   | Wallet address associated with intra and block             |\n\n", "doc_id": "a1c6cecf-6503-4661-b83b-90ba49452be0", "embedding": null, "doc_hash": "63a256406d4b1366426c2a0bace4ab8efd91c90c0b4fa1cad5690d635228dff9", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/transactions-participation.md", "file_name": "transactions-participation.md"}, "node_info": {"start": 0, "end": 627, "_node_type": "1"}, "relationships": {"1": "9f019c104f22fc94c596b644cee8190c0e29463b"}}, "__type__": "1"}, "4f7b3d62-da0d-427f-a7f6-5084c662261a": {"__data__": {"text": "# Transactions\n\nThis is a table that includes and transactions andout transactions on the Algorand network, visit here: [https://developer.algorand.org/docs/get-details/transactions/transactions/#common-fields-header-and-type](https://developer.algorand.org/docs/get-details/transactions/transactions/#common-fields-header-and-type) .&#x20;\n\n## Table Schema\n\nThe structure of all transaction tables follow the structure of the overarching transaction table. Each transaction table besides the overarching transaction table are a collection of all the transaction of one of the 6 types. \\\nAll transactions have a distinct intra and block\\_id combination. The intra is the transaction # into the block where the transaction was confirmed. Inner transactions(flagged with the inner tx flag) share the tx id of their parent application transactions so you can tie inner transaction to a parent transaction via a tx id. The inner transactions are seen as distinct transactions on the Algorand blockchain, which is signified by their intra and block id combination. One other note on the parent transactions, the parent transaction of inner transaction do not summarize the inner transactions and are seen as their own distinct transaction, which is usually an application call transaction.&#x20;\n\n| Field             | Type     | Description                                                                                                                                                              |\n| ----------------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `BLOCK_TIMESTAMP` | datetime | Timestamp of block minting(without a timezone)                                                                                                                           |\n| `INTRA`           | number   | Transaction # into the block where this transaction was confirmed.                                                                                                       |\n| `BLOCK_ID`        | number   | Block the transaction was confirmed                                                                                                                                      |\n| `TX_GROUP_ID`     | text     | Transaction group", "doc_id": "4f7b3d62-da0d-427f-a7f6-5084c662261a", "embedding": null, "doc_hash": "f5f9336ac7fbe6cd1cd99e7fc8a048a992c9e2c40fff5bbd70d76bbe74ffb1b5", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/transactions.md", "file_name": "transactions.md"}, "node_info": {"start": 0, "end": 2362, "_node_type": "1"}, "relationships": {"1": "a53cf3fdf072a51064754e415f84894a4927e334", "3": "c059ad8d-d8f4-40af-9ce5-ec0155682764"}}, "__type__": "1"}, "c059ad8d-d8f4-40af-9ce5-ec0155682764": {"__data__": {"text": "`TX_GROUP_ID`     | text     | Transaction group ID, can be NULL. Exists when a group of transactions are tied together for things like a dex swap.                                                     |\n| `TX_ID`           | text     | Transaction ID of the transaction                                                                                                                                        |\n| INNER\\_TX         | boolean  | A boolean true or false on whether or not this transaction has a parent transaction. The TX\\_ID will be the same as the parent transaction but will have it's own intra. |\n| `ASSET_ID`        | number   | The asset ID of the asset involved in the transaction. (This will be null for Application call transactions.)                                                            |\n| `SENDER`          | text     | Address of the wallet creating the transaction                                                                                                                           |\n| `FEE`             | number   | Fee associated with the transaction, in ALGOs                                                                                                                            |\n| `TX_TYPE`         | number   | Number associated with transaction type                                                                                                                                  |\n| `TX_TYPE_NAME`    | text     | transaction type name                                                      ", "doc_id": "c059ad8d-d8f4-40af-9ce5-ec0155682764", "embedding": null, "doc_hash": "ddefc8234b6522d64500193111082ca2b3268116937a03741ad509aa5f39a5a9", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/transactions.md", "file_name": "transactions.md"}, "node_info": {"start": 2328, "end": 3862, "_node_type": "1"}, "relationships": {"1": "a53cf3fdf072a51064754e415f84894a4927e334", "2": "4f7b3d62-da0d-427f-a7f6-5084c662261a", "3": "314266b8-15ed-401a-aaba-cfd7fd8e2176"}}, "__type__": "1"}, "314266b8-15ed-401a-aaba-cfd7fd8e2176": {"__data__": {"text": "                                                                                                                 |\n| `GENISIS_HASH`    | text     | The hash of the genesis block of the network for which the transaction is valid                                                                                          |\n| `TX_MESSAGE`      | array    | Encoded JSON message associated with the transaction                                                                                                                     |\n| `EXTRA`           | array    | Extra json associated with transaction                                                                                                                                   |\n", "doc_id": "314266b8-15ed-401a-aaba-cfd7fd8e2176", "embedding": null, "doc_hash": "b1e22a1c044251eaf35286b83da220abe8ed69bd5bb631d5e57e639d26661593", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/transactions.md", "file_name": "transactions.md"}, "node_info": {"start": 3878, "end": 4605, "_node_type": "1"}, "relationships": {"1": "a53cf3fdf072a51064754e415f84894a4927e334", "2": "c059ad8d-d8f4-40af-9ce5-ec0155682764"}}, "__type__": "1"}, "cf381bfa-3c0a-489c-9b9f-ea290bc26632": {"__data__": {"text": "# Transfers\n\nThis tables aims to simply the Algorand tables by combining the Payment Transaction Table and the Asset Transfer Transaction table and decimal adjusting all amounts from both of these tables.&#x20;\n\nThis means both payment transaction(\"pay\") and asset transfer transaction(\"axfer\") types will be included in the table. While the payment table was previously decimal adjusted we are now decimal adjusting all amounts for assets out side of ALGO(asset\\_id = 0) as well.&#x20;\n\nWe have also broken out sender into **asset\\_sender** which is the wallet from which the asset is sent from and **tx\\_sender** which is the wallet which initiates the transaction. 99% of transactions these values are the same - however, this now gives us an easier way to look at clawback transactions([https://developer.algorand.org/docs/get-details/transactions/transactions/#asset-transfer-transaction](https://developer.algorand.org/docs/get-details/transactions/transactions/#asset-transfer-transaction)) which are detailed here. For most purposes we can use **asset\\_sender** unless we want to look asset clawback transactions for the asset transfer transactions.\n\n## Table Schema\n\nAll transactions have a distinct intra and block\\_id combination. The intra is the transaction # into the block where the transaction was confirmed. Inner transactions(flagged with the inner tx flag) share the tx id of their parent application transactions so you can tie inner transaction to a parent transaction via a tx id. The inner transactions are seen as distinct transactions on the Algorand blockchain, which is signified by their intra and block id combination.\n\n| Field               | Type     | Description                                                                                                                                                                                                                                                                                          |\n| ------------------- | -------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `BLOCK_TIMESTAMP`   | datetime | Timestamp of block minting(without a timezone)                                                                                                                                                                                                         ", "doc_id": "cf381bfa-3c0a-489c-9b9f-ea290bc26632", "embedding": null, "doc_hash": "882fd23684ddbb5f1f9ee5b0ab27f778c198a8ac6a96b022991401915c3c822e", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/transfers.md", "file_name": "transfers.md"}, "node_info": {"start": 0, "end": 2591, "_node_type": "1"}, "relationships": {"1": "44386bbf7e260a70bae158b25f9144aa8615cd0d", "3": "e4e7fabf-cd72-4ab5-b12e-ff22cb21021f"}}, "__type__": "1"}, "e4e7fabf-cd72-4ab5-b12e-ff22cb21021f": {"__data__": {"text": "                                                                 |\n| `INTRA`             | number   | Transaction # into the block where this transaction was confirmed                                                                                                                                                                                                                                    |\n| `BLOCK_ID`          | number   | Block the transaction was confirmed                                                                                                                                                                                                                                                                  |\n| `TX_GROUP_ID`       | text     | Transaction group ID, can be NULL. Exists when a group of transactions are tied together                                                                                                                                                                                                             |\n| `TX_ID`             | text     | An identifier tied to a transaction and its inner transactions.                                                                              ", "doc_id": "e4e7fabf-cd72-4ab5-b12e-ff22cb21021f", "embedding": null, "doc_hash": "39aa7b8684489894740045be3ce193d3fc6a8fc918a5995b44eb64bd99df9c9a", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/transfers.md", "file_name": "transfers.md"}, "node_info": {"start": 2592, "end": 3825, "_node_type": "1"}, "relationships": {"1": "44386bbf7e260a70bae158b25f9144aa8615cd0d", "2": "cf381bfa-3c0a-489c-9b9f-ea290bc26632", "3": "7aa95aeb-0940-4d49-86b0-b8b103407b1a"}}, "__type__": "1"}, "7aa95aeb-0940-4d49-86b0-b8b103407b1a": {"__data__": {"text": "                                                                                                                                                                           |\n| `INNER_TX`          | boolean  | A boolean true or false on whether or not this transaction has a parent transaction. The TX\\_ID will be the same as the parent transaction but will have it's own intra.                                                                                                                             |\n| `ASSET_SENDER`      | text     | The wallet address from which the asset is transferred from. This can be different from the asset\\_sender if a wallet has opted in to allow another address to send an asset from its wallet(https://developer.algorand.org/docs/get-details/transactions/transactions/#asset-transfer-transaction). |\n| `TX_SENDER`         | text     | The wallet address from which the transaction is initiated from and pays the fee. The tx\\_sender can send assets from a different asset\\_sender address if the asset\\_sender has opted into this action. This relates to clawback transactions: see asset\\_sender for more details.                  |\n| `RECEIVER`          | text     | The recipient of the transfer.                                                                                                                                                                                                                                                                       |\n| `ASSET_ID`          | number   | ID associated with the asset                                                                                      ", "doc_id": "7aa95aeb-0940-4d49-86b0-b8b103407b1a", "embedding": null, "doc_hash": "5d0985b3ce71206de6fb2b09bf4c4e0eb229a8d6d37cf1e3ac1631933add953d", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/transfers.md", "file_name": "transfers.md"}, "node_info": {"start": 3826, "end": 5468, "_node_type": "1"}, "relationships": {"1": "44386bbf7e260a70bae158b25f9144aa8615cd0d", "2": "e4e7fabf-cd72-4ab5-b12e-ff22cb21021f", "3": "aa28339a-4aa7-4f62-86c5-29c1c4181b00"}}, "__type__": "1"}, "aa28339a-4aa7-4f62-86c5-29c1c4181b00": {"__data__": {"text": "                                                                                                                                                                                                      |\n| `AMOUNT`            | number   | The amount of the asset to be transferred. Can be 0.                                                                                                                                                                                                                                                 |\n| `FEE`               | number   | Fee associated with the transaction, in ALGOs                                                                                                                                                                                                                                                        |\n| `ASSET_TRANSFERRED` | number   | The Asset ID of the asset transferred in the asset transfer transaction.                                                                                                                                                                                         ", "doc_id": "aa28339a-4aa7-4f62-86c5-29c1c4181b00", "embedding": null, "doc_hash": "addbafef22233488835ecdf13b93a87fe5eac67144394f97de4319af02207cee", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/transfers.md", "file_name": "transfers.md"}, "node_info": {"start": 5469, "end": 6621, "_node_type": "1"}, "relationships": {"1": "44386bbf7e260a70bae158b25f9144aa8615cd0d", "2": "7aa95aeb-0940-4d49-86b0-b8b103407b1a", "3": "79d64c95-8066-4dbf-9142-fffbe169ca24"}}, "__type__": "1"}, "79d64c95-8066-4dbf-9142-fffbe169ca24": {"__data__": {"text": "                                                       |\n| `TX_TYPE`           | number   | Number associated with transaction type                                                                                                                                                                                                                                                              |\n| `TX_TYPE_NAME`      | text     | transaction type name                                                                                                                                                                                                                                                                                |\n| `GENISIS_HASH`      | text     | The hash of the genesis block of the network for which the transaction is valid                                                                                                                                                                                                                      |\n| `TX_MESSAGE`        | array    | Encoded JSON message associated with the transaction                                                             ", "doc_id": "79d64c95-8066-4dbf-9142-fffbe169ca24", "embedding": null, "doc_hash": "dd1fff0e7ee5d720df1ce14de6214dc20e847374b45a84867ffd3094b1bbcfd5", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/transfers.md", "file_name": "transfers.md"}, "node_info": {"start": 6622, "end": 7817, "_node_type": "1"}, "relationships": {"1": "44386bbf7e260a70bae158b25f9144aa8615cd0d", "2": "aa28339a-4aa7-4f62-86c5-29c1c4181b00", "3": "37827c02-d662-4807-94dd-5521bf292480"}}, "__type__": "1"}, "37827c02-d662-4807-94dd-5521bf292480": {"__data__": {"text": "                                                                                                                                                                                                       |\n| `EXTRA`             | array    | Extra json associated with transaction                                                                                                                                                                                                                                                               |\n", "doc_id": "37827c02-d662-4807-94dd-5521bf292480", "embedding": null, "doc_hash": "adfe07668fed6e31d02a5b373cd0e09487bfe19f04753c8950282e7ad3f229c1", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/transfers.md", "file_name": "transfers.md"}, "node_info": {"start": 7798, "end": 8329, "_node_type": "1"}, "relationships": {"1": "44386bbf7e260a70bae158b25f9144aa8615cd0d", "2": "79d64c95-8066-4dbf-9142-fffbe169ca24"}}, "__type__": "1"}, "17d9c497-1c95-4964-9bbd-cd60cc7c49d8": {"__data__": {"text": "# Core Tables\n\nDocumentation for Core tables can be found [here](https://flipsidecrypto.github.io/algorand-models/#!/overview).&#x20;\n\nThe public Github repo with model source code is [here](https://github.com/FlipsideCrypto/algorand-models).\n\nOverview of Fact Dimensional model with Primary & Foreign Key relationships:\n\n<figure><img src=\"../../../../.gitbook/assets/Algorand - FACT- DIM (1).png\" alt=\"\"><figcaption></figcaption></figure>\n\nQuick Links to Table Docs:\n\n* [dim\\_account](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_dim\\_account)\n* [dim\\_application](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_dim\\_application)\n* [dim\\_asset](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_dim\\_asset)\n* [dim\\_block](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_dim\\_block)\n* [dim\\_label](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_dim\\_label)\n* [dim\\_transaction\\_type](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_dim\\_transaction\\_type)\n* [dim\\_wallet\\_type](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_dim\\_wallet\\_type)\n* [fact\\_account\\_application](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_fact\\_account\\_application)\n* [fact\\_account\\_asset](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_fact\\_account\\_asset)\n* [fact\\_account\\_current\\_balance](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_fact\\_account\\_current\\_balance)\n* [fact\\_block](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_fact\\_block)\n* [fact\\_daily\\_balances](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_fact\\_daily\\_balances)\n* [fact\\_nft\\_sales](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_fact\\_nft\\_sales)\n* [fact\\_swap](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_fact\\_swap)\n* [fact\\_transaction](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_fact\\_transaction)\n*", "doc_id": "17d9c497-1c95-4964-9bbd-cd60cc7c49d8", "embedding": null, "doc_hash": "3807f19b2f51194645b0d85ae3c3e221e0abc85462538ca77b7a363d42e696eb", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/core-tables.md", "file_name": "core-tables.md"}, "node_info": {"start": 0, "end": 2408, "_node_type": "1"}, "relationships": {"1": "9ca98193fe2d281925d030ad540cca94df6e0d29", "3": "71e2de1d-46fd-4932-bf93-a764081d0f02"}}, "__type__": "1"}, "71e2de1d-46fd-4932-bf93-a764081d0f02": {"__data__": {"text": "[fact\\_transaction\\_close](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_fact\\_transaction\\_close)\n* [fact\\_transaction\\_participation](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_fact\\_transaction\\_participation)\n* [fact\\_transaction\\_reward](https://flipsidecrypto.github.io/algorand-models/#!/model/model.algorand\\_models.core\\_\\_fact\\_transaction\\_reward)\n\n", "doc_id": "71e2de1d-46fd-4932-bf93-a764081d0f02", "embedding": null, "doc_hash": "ace2d91cfc4e35be9141b1c63118e586ada8cec3d2bc1b610751ec4b67f91600", "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/core-tables.md", "file_name": "core-tables.md"}, "node_info": {"start": 2409, "end": 2858, "_node_type": "1"}, "relationships": {"1": "9ca98193fe2d281925d030ad540cca94df6e0d29", "2": "17d9c497-1c95-4964-9bbd-cd60cc7c49d8"}}, "__type__": "1"}, "073ae137-b55c-478e-8ae7-9bac2d5970cd": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Arbitrum Tables\n\nDocumentation for \\`arbitrum\\` tables can be found [here](https://flipsidecrypto.github.io/arbitrum-models/#!/overview).\n\nThe public Github repo with Arbitrum model source code is [here](https://github.com/FlipsideCrypto/arbitrum-models).\n\nPlease note, data is in 'lite mode' - meaning, historical data has not yet been backfilled. Please see the `min(block`\\_`timestamp)`.&#x20;\n\nQuick Links to Table Docs:\n\n* [`fact_event_logs`](https://flipsidecrypto.github.io/arbitrum-models/#!/model/model.arbitrum\\_models.core\\_\\_fact\\_event\\_logs)\n* [`fact_transactions`](https://flipsidecrypto.github.io/arbitrum-models/#!/model/model.arbitrum\\_models.core\\_\\_fact\\_transactions)\n* [`fact_blocks`](https://flipsidecrypto.github.io/arbitrum-models/#!/model/model.arbitrum\\_models.core\\_\\_fact\\_blocks)\n* [`fact_traces`](https://flipsidecrypto.github.io/arbitrum-models/#!/model/model.arbitrum\\_models.core\\_\\_fact\\_traces)\n* [`fact_token_transfers`](https://flipsidecrypto.github.io/arbitrum-models/#!/model/model.arbitrum\\_models.core\\_\\_fact\\_token\\_transfers)\n* [`dim_labels`](https://flipsidecrypto.github.io/arbitrum-models/#!/model/model.arbitrum\\_models.core\\_\\_dim\\_labels)\n* [`ez_eth_transfers`](https://flipsidecrypto.github.io/arbitrum-models/#!/model/model.arbitrum\\_models.core\\_\\_ez\\_eth\\_transfers)\n* [`dim_contracts`](https://flipsidecrypto.github.io/arbitrum-models/#!/model/model.arbitrum\\_models.core\\_\\_dim\\_contracts)\n\nArbitrum sushi tables\n\n* [sushi\\_\\__dim\\_dex\\__pools](https://cloud.getdbt.com/accounts/1258/runs/68372630/docs/#!/model/model.arbitrum\\_models.sushi\\_\\_dim\\_dex\\_pools)\n* [sush\\_\\__dim\\_kashi\\_pairs_ ](https://cloud.getdbt.com/accounts/1258/runs/68372630/docs/#!/model/model.arbitrum\\_models.sushi\\_\\_dim\\_kashi\\_pairs)\n* [_sushi\\_\\_ez\\_swaps_](https://cloud.getdbt.com/accounts/1258/runs/68372630/docs/#!/model/model.arbitrum\\_models.sushi\\_\\_ez\\_swaps)\n* [_sushi\\_\\_ez\\_borrowing_](https://flipsidecrypto.github.io/arbitrum-models/#!/model/model.arbitrum\\_models.sushi\\_\\_ez\\_borrowing)\n* [_sushi\\_\\_ez\\_lending_](https://flipsidecrypto.github.io/arbitrum-models/#!/model/model.arbitrum\\_models.sushi\\_\\_ez\\_lending)\n\n\n\nNote: when working with the `fact_transactions` and `fact_event_logs` tables, you may find it useful to use the [ethereum.public.hex\\_to\\_int()", "doc_id": "073ae137-b55c-478e-8ae7-9bac2d5970cd", "embedding": null, "doc_hash": "27ca40506db1f4eb6198acf7cb2f5db7d6de30a9827c5dc2195ee64ff37f293f", "extra_info": {"file_path": "our-data/archive/tables/arbitrum-tables.md", "file_name": "arbitrum-tables.md"}, "node_info": {"start": 0, "end": 2399, "_node_type": "1"}, "relationships": {"1": "982fd276bd9e7b9db20d2813160b9e53260604bf", "3": "833d62f8-0787-4bbe-b769-41e61b4a9ecf"}}, "__type__": "1"}, "833d62f8-0787-4bbe-b769-41e61b4a9ecf": {"__data__": {"text": "useful to use the [ethereum.public.hex\\_to\\_int() function](../../hex-to-integer-function.md).\n", "doc_id": "833d62f8-0787-4bbe-b769-41e61b4a9ecf", "embedding": null, "doc_hash": "8224cadb41b96e44395225394fa71c611b4e38ad55cb083132dfba861305d1d3", "extra_info": {"file_path": "our-data/archive/tables/arbitrum-tables.md", "file_name": "arbitrum-tables.md"}, "node_info": {"start": 2350, "end": 2445, "_node_type": "1"}, "relationships": {"1": "982fd276bd9e7b9db20d2813160b9e53260604bf", "2": "073ae137-b55c-478e-8ae7-9bac2d5970cd"}}, "__type__": "1"}, "cadf7575-09ab-4dc4-8600-0c4d39981039": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Astroport Tables\n\nAstroport is an automated market-maker (AMM) protocol on the Terra blockchain.&#x20;\n\nFrom [Astroport's docs](https://docs.astroport.fi/astroport/astroport-onboarding/the-impact) : \"Astroport is a next-generation AMM for Terra that was built to improve pricing and trade efficiency. Better pricing and efficiency should help Astroport attract more liquidity, further improving pricing and efficiency in a self-reinforcing loop. That is key, as trade efficiency is what ultimately drives adoption and integration with other protocols.\"\n\n", "doc_id": "cadf7575-09ab-4dc4-8600-0c4d39981039", "embedding": null, "doc_hash": "0b03b05e8298b4c859060f0fb9986072e6151aba54458e6ee7547bd809186e94", "extra_info": {"file_path": "our-data/archive/tables/astroport-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 639, "_node_type": "1"}, "relationships": {"1": "20be0b89273b007bb12c397f0a7ff3976fae0378"}}, "__type__": "1"}, "a645b406-6994-4b1d-a7c2-8bdecfad39f1": {"__data__": {"text": "---\ndescription: astroport.pool_reserves\n---\n\n# Astroport Pool Reserves\n\nThis table provides block by block pool reserve information including total pool shares, pool currencies, and token amounts in Astroport pools.&#x20;\n\n<table data-header-hidden><thead><tr><th width=\"227.33333333333331\">Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>Field</td><td>Type</td><td>Description</td></tr><tr><td><code>blockchain</code></td><td>text</td><td>The blockchain this pool was created on.</td></tr><tr><td><code>chain_id</code></td><td>text</td><td>ID of blockchain to connect to, it can be <em>columbus-3, columbus-4, columbus-5, etc.</em></td></tr><tr><td><code>block_id</code></td><td>number</td><td>The block number that this pool reserve was recorded</td></tr><tr><td><code>block_timestamp</code></td><td>timestamp</td><td>The block timestamp that this pool reserve was recorded</td></tr><tr><td><code>contract_address</code></td><td>address</td><td>The address of the liquidity pool</td></tr><tr><td><code>total_share</code></td><td>number</td><td>The total amount of shares  in a pool</td></tr><tr><td><code>token_0_currency</code></td><td>text</td><td>Token 0 currency</td></tr><tr><td><code>token_0_amount</code></td><td>number</td><td>Token 0 amount in pool</td></tr><tr><td><code>token_1_currency</code></td><td>text</td><td>Token 1 currency</td></tr><tr><td><code>token_1_amount</code></td><td>number</td><td>Token 1 amount in pool</td></tr></tbody></table>\n", "doc_id": "a645b406-6994-4b1d-a7c2-8bdecfad39f1", "embedding": null, "doc_hash": "14e108c1e27b37c595e31e9b3017d5e56d4d8510982f8a041cf4dde915e83e68", "extra_info": {"file_path": "our-data/archive/tables/astroport-tables/lp-actions.md", "file_name": "lp-actions.md"}, "node_info": {"start": 0, "end": 1486, "_node_type": "1"}, "relationships": {"1": "c9a1d8aa0857ba1ec03eb203c6a86facd038ff32"}}, "__type__": "1"}, "d80f6669-1dd2-497b-ae66-23c3c00d42a6": {"__data__": {"text": "---\ndescription: astroport.swaps\n---\n\n# Astroport Swaps\n\nThis swaps table contains the information for swap behavior, it involves the sender (trader) and the liquidity pool where the swap takes place.&#x20;\n\n\n\n## Table Schema\n\n\n\n| Field               | Type      | Description                                                                          |\n| ------------------- | --------- | ------------------------------------------------------------------------------------ |\n| `BLOCKCHAIN`        | text      | The blockchain this swap was created on (Terra)                                      |\n| `CHAIN_ID`          | text      | ID of blockchain to connect to, it can be _columbus-3, columbus-4, columbus-5, etc._ |\n| `BLOCK_ID`          | number    | The block number that this swap was recorded                                         |\n| `MSG_INDEX`         | number    | The message index for this swap                                                      |\n| `TX_INDEX`          | number    | The transaction index for this swap, some transactions contain multiple swaps        |\n| `BLOCK_TIMESTAMP`   | timestamp | The block timestamp that this swap was recorded                                      |\n| `TX_ID`             | text      | The transaction that contained this swap                                             |\n| `SENDER`            | address   | Sender (trader) address for this swap                                                |\n| `OFFER_AMOUNT`      | number    | Amount to offer for this swap                                                        |\n| `OFFER_AMOUNT_USD`  | number    | USD Amount to offer for this swap                                                    |\n| `OFFER_CURRENCY`    | text      | Currency to offer for this swap                                                     ", "doc_id": "d80f6669-1dd2-497b-ae66-23c3c00d42a6", "embedding": null, "doc_hash": "0ffb0309864cc484df6d2f61572449936677220457d46499eed1f15db8d067c6", "extra_info": {"file_path": "our-data/archive/tables/astroport-tables/swap.md", "file_name": "swap.md"}, "node_info": {"start": 0, "end": 1825, "_node_type": "1"}, "relationships": {"1": "eb9aec2cf1be4db88d7461e976bd55bbb2dc3c13", "3": "3286d537-476a-495c-b1ab-e43f6140de74"}}, "__type__": "1"}, "3286d537-476a-495c-b1ab-e43f6140de74": {"__data__": {"text": "                    |\n| `RETURN_AMOUNT`     | number    | Amount returned for this swap                                                        |\n| `RETURN_AMOUNT_USD` | number    | USD Amount returned for this swap                                                    |\n| `RETURN_CURRENCY`   | text      |  The currency returned for the swap                                                  |\n| `POOL_ADDRESS`      | text      | The address for the pool where the currencies were swapped                           |\n| `POOL_NAME`         | text      | The name of the pool where the currencies were swapped                               |\n", "doc_id": "3286d537-476a-495c-b1ab-e43f6140de74", "embedding": null, "doc_hash": "062a2726fae70f43365cfacda9fb77d71c366909bc1ba88b4e472b6f53a2677d", "extra_info": {"file_path": "our-data/archive/tables/astroport-tables/swap.md", "file_name": "swap.md"}, "node_info": {"start": 1806, "end": 2443, "_node_type": "1"}, "relationships": {"1": "eb9aec2cf1be4db88d7461e976bd55bbb2dc3c13", "2": "d80f6669-1dd2-497b-ae66-23c3c00d42a6"}}, "__type__": "1"}, "e474bc31-d3c1-4ef5-b243-da9de180741f": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Avalanche Tables\n\nDocumentation for \\`avalanche\\` tables can be found [here](https://flipsidecrypto.github.io/avalanche-models/#!/overview).\n\nThe public Github repo with Avalanche model source code is [here](https://github.com/FlipsideCrypto/avalanche-models).\n\nPlease note, data is in 'lite mode' - meaning, historical data has not yet been backfilled. Please see the `min(block`\\_`timestamp)`.&#x20;\n\nQuick Links to Table Docs:\n\n* [`fact_event_logs`](https://flipsidecrypto.github.io/avalanche-models/#!/model/model.avalanche\\_models.core\\_\\_fact\\_event\\_logs)\n* [`fact_transactions`](https://flipsidecrypto.github.io/avalanche-models/#!/model/model.avalanche\\_models.core\\_\\_fact\\_transactions)\n* [`fact_blocks`](https://flipsidecrypto.github.io/avalanche-models/#!/model/model.avalanche\\_models.core\\_\\_fact\\_blocks)\n* [`fact_traces`](https://flipsidecrypto.github.io/avalanche-models/#!/model/model.avalanche\\_models.core\\_\\_fact\\_traces)\n* &#x20;[`fact_token_transfers`](https://flipsidecrypto.github.io/avalanche-models/#!/model/model.avalanche\\_models.core\\_\\_fact\\_token\\_transfers)\n* [`dim_labels`](https://flipsidecrypto.github.io/avalanche-models/#!/model/model.avalanche\\_models.core\\_\\_dim\\_labels)\n* [`ez_avax_transfers`](https://flipsidecrypto.github.io/avalanche-models/#!/model/model.avalanche\\_models.core\\_\\_ez\\_avax\\_transfers)\n* [`dim_contracts`](https://flipsidecrypto.github.io/avalanche-models/#!/model/model.avalanche\\_models.core\\_\\_dim\\_contracts)\n\n`Sushi specific tables:`\n\n* [sushi\\_\\_dim\\_dex\\_pools](https://flipsidecrypto.github.io/avalanche-models/#!/model/model.avalanche\\_models.sushi\\_\\_dim\\_dex\\_pools)\n* [sushi\\_\\_dim\\_kashi\\_pairs](https://flipsidecrypto.github.io/avalanche-models/#!/model/model.avalanche\\_models.sushi\\_\\_dim\\_kashi\\_pairs)\n* [sushi\\_\\_ez\\_swaps](https://flipsidecrypto.github.io/avalanche-models/#!/model/model.avalanche\\_models.sushi\\_\\_ez\\_swaps)&#x20;\n* [sushi\\_\\_ez\\_borrowing](https://flipsidecrypto.github.io/avalanche-models/#!/model/model.avalanche\\_models.sushi\\_\\_ez\\_borrowing)\n* [sushi\\_\\_ez\\_lending](https://flipsidecrypto.github.io/avalanche-models/#!/model/model.avalanche\\_models.sushi\\_\\_ez\\_lending)\n\n\n\nNote: when working with the `fact_transactions` and `fact_event_logs` tables, you may find it useful to use the [ethereum.public.hex\\_to\\_int() function](../../hex-to-integer-function.md).\n", "doc_id": "e474bc31-d3c1-4ef5-b243-da9de180741f", "embedding": null, "doc_hash": "75d9a610a66f7cedb6677ba7fe77f10046fbb73844c194d949717a25611ecd86", "extra_info": {"file_path": "our-data/archive/tables/avalanche-tables.md", "file_name": "avalanche-tables.md"}, "node_info": {"start": 0, "end": 2456, "_node_type": "1"}, "relationships": {"1": "5a1a8541e63ec2351d35af239d793c8515fd6f18"}}, "__type__": "1"}, "c1a82d61-7ce4-4385-8a66-dc478528dbda": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Axelar Tables\n\n## Current Axelar Tables\n\n**Blockchain:** [Axelar](https://axelar.network/)\n\nThe Axelar tables are currently in lite mode. All transaction and message data is available back to the genesis block. However, no curated tables are currently available. \\\n\\\n[Dim Labels](https://flipsidecrypto.github.io/axelar-models/#!/model/model.axelar.core\\_\\_dim\\_labels)\n\n[Dim Tokens](https://flipsidecrypto.github.io/axelar-models/#!/model/model.axelar.core\\_\\_dim\\_tokens)\n\n[Fact Blocks](https://flipsidecrypto.github.io/axelar-models/#!/model/model.axelar.core\\_\\_fact\\_blocks)\n\n[Fact Msg Attributes](https://flipsidecrypto.github.io/axelar-models/#!/model/model.axelar.core\\_\\_fact\\_msg\\_attributes)\n\n[Fact Msgs](https://flipsidecrypto.github.io/axelar-models/#!/model/model.axelar.core\\_\\_fact\\_msgs)\n\n[Fact Transactions](https://flipsidecrypto.github.io/axelar-models/#!/model/model.axelar.core\\_\\_fact\\_transactions)\n\n[Fact Transfers](https://flipsidecrypto.github.io/axelar-models/#!/model/model.axelar.core\\_\\_fact\\_transfers)\n\n[Fact Validators](https://flipsidecrypto.github.io/axelar-models/#!/model/model.axelar.core\\_\\_fact\\_validators)\n\n[Fact Staking](https://flipsidecrypto.github.io/axelar-models/#!/model/model.axelar.core\\_\\_fact\\_staking)\n\n[Fact Staking Rewards](https://flipsidecrypto.github.io/axelar-models/#!/model/model.axelar.core\\_\\_fact\\_staking\\_rewards)\n\n[Fact Governance Proposal Deposits](https://flipsidecrypto.github.io/axelar-models/#!/model/model.axelar.core\\_\\_fact\\_governance\\_proposal\\_deposits)\n\n[Fact Governance Submit Proposal](https://flipsidecrypto.github.io/axelar-models/#!/model/model.axelar.core\\_\\_fact\\_governance\\_submit\\_proposal)\n\n[Fact Governance Votes](https://flipsidecrypto.github.io/axelar-models/#!/model/model.axelar.core\\_\\_fact\\_governance\\_votes)\n", "doc_id": "c1a82d61-7ce4-4385-8a66-dc478528dbda", "embedding": null, "doc_hash": "b5a245bfde21b0d1f7bde112bcb92918c2a22ab7eb3741a718f43fccb413f0b5", "extra_info": {"file_path": "our-data/archive/tables/axelar-tables.md", "file_name": "axelar-tables.md"}, "node_info": {"start": 0, "end": 1894, "_node_type": "1"}, "relationships": {"1": "c5d7a6b8d8f879b7dc32bdc4bbf11bc13d5768f8"}}, "__type__": "1"}, "65d90634-15cf-4b4c-ac12-9f3061e0fb1d": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# BSC Tables\n\nDocumentation for \\`bsc\\` tables can be found [`here`](https://flipsidecrypto.github.io/bsc-models/#!/overview).\n\nThe public Github repo with BSC model source code is [here](https://github.com/FlipsideCrypto/bsc-models).\n\nPlease note, data is in 'lite mode' - meaning, historical data has not yet been backfilled. Please see the `min(block`\\_`timestamp)`.&#x20;\n\nQuick Links to Table Docs:\n\n* [`fact_event_logs`](https://flipsidecrypto.github.io/bsc-models/#!/model/model.bsc\\_models.core\\_\\_fact\\_event\\_logs)\n* [`fact_transactions`](https://flipsidecrypto.github.io/bsc-models/#!/model/model.bsc\\_models.core\\_\\_fact\\_transactions)\n* [`fact_blocks`](https://flipsidecrypto.github.io/bsc-models/#!/model/model.bsc\\_models.core\\_\\_fact\\_blocks)\n* [`fact_traces`](https://flipsidecrypto.github.io/bsc-models/#!/model/model.bsc\\_models.core\\_\\_fact\\_traces)\n* [`fact_token_transfers`](https://flipsidecrypto.github.io/bsc-models/#!/model/model.bsc\\_models.core\\_\\_fact\\_token\\_transfers)\n* [`dim_labels`](https://flipsidecrypto.github.io/bsc-models/#!/model/model.bsc\\_models.core\\_\\_dim\\_labels)\n* [`ez_bnb_transfers`](https://flipsidecrypto.github.io/bsc-models/#!/model/model.bsc\\_models.core\\_\\_ez\\_bnb\\_transfers)\n\n`Sushi specific tables:`\n\n* [`dim_dex_pools`](https://flipsidecrypto.github.io/bsc-models/#!/model/model.bsc\\_models.sushi\\_\\_dim\\_dex\\_pools)\n* [`dim_kashi_pairs`](https://cloud.getdbt.com/accounts/1258/runs/77461492/docs/#!/model/model.bsc\\_models.sushi\\_\\_dim\\_kashi\\_pairs)\n* [`ez_swaps`](https://flipsidecrypto.github.io/bsc-models/#!/model/model.bsc\\_models.sushi\\_\\_ez\\_swaps)\n* [`ez_borrowing`](https://cloud.getdbt.com/accounts/1258/runs/77461492/docs/#!/model/model.bsc\\_models.sushi\\_\\_ez\\_borrowing)\n* [`ez_lending`](https://cloud.getdbt.com/accounts/1258/runs/77461492/docs/#!/model/model.bsc\\_models.sushi\\_\\_ez\\_lending)\n\n\n\nNote: when working with the `fact_transactions` and `fact_event_logs` tables, you may find it useful to use the [ethereum.public.hex\\_to\\_int() function](../../hex-to-integer-function.md).\n", "doc_id": "65d90634-15cf-4b4c-ac12-9f3061e0fb1d", "embedding": null, "doc_hash": "019acdebf9297501f7e39f344380a8da20d1296994d01abee0fc036f294ba5bf", "extra_info": {"file_path": "our-data/archive/tables/bsc-tables.md", "file_name": "bsc-tables.md"}, "node_info": {"start": 0, "end": 2143, "_node_type": "1"}, "relationships": {"1": "31a1d1d54ce3f810b57221bd364569cb5e5946d8"}}, "__type__": "1"}, "f0ffaf41-8ff6-484f-819b-4500fa27284d": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Compound Tables\n\n**Blockchain:** [Ethereum](https://ethereum.org/en/)\n\nThe Compound table schemas build on the concepts laid out in [Flipside's event data model](broken-reference). Below is a visual overview of the Compound protocol's primary functions of decentralized borrowing and lending.&#x20;\n\n![](<../../../../.gitbook/assets/Screen Shot 2021-04-20 at 11.44.31 AM.png>)\n\nWe have tables for most major events within the Compound ecosystem, though the data is still early. The tables are intended to be as easy to work with as possible and paint as complete a picture of Compound as possible.  Here are [sample Compound queries](https://velocity-app.flipsidecrypto.com/velocity/collections/d54dd195-163c-4153-8595-50b22f629b08).\n\n**What we have:**&#x20;\n\n* A table for summarizing major metrics by market: `compound.market_stats.` This table aggregates by the hour, and should have all available markets/cTokens listed here [https://compound.finance/markets](https://compound.finance/markets)\n* Tables for key events for suppliers: `compound.redemptions` and `compound.deposits.` In the diagram above these events correspond to both interactions between suppliers and the lending markets.\n* Tables for key events for borrowers: `compound.borrows`, `compound.repayments` and `compound.liquidations`. These correspond to the three interactions between lending markets, borrowers, and liquidators in the diagram above.\n* The data goes back only as far as October 2020, with more to come.\n\n**What we don't have:**\n\nWe did choose, for now to omit tables for governance actions, such as proposals and voting. This decision was mostly due to the very different levels of activity on the two sides. There is significantly greater activity centered around the markets and what seemed to be of the greatest interest to users. However, governance actions can still be parsed from `ethereum.events`.\n\n**Feedback and Improvements:**\n\nAll feedback and criticism remain very much appreciated! Send a ping in [our discord](https://discord.gg/uW5jK2jRTg)! (@connorH) or send us an email at _hello@flipsidecrypto.com._\n\n**General Tips**:\n\n* &#x20;Using marketstats as a starting point is often an excellent idea, as it tends to connect to each of the other tables and is very centrally located. This table aggregates by hour, so join on `market_stats.date_trunc('hour',block_hour) = block_timestamp AND market_stats.ctoken_address = ctoken`\n* As mentioned we only have data going back to October, but we are in the process of completing a backfill of our data!&#x20;\n* Governance actions may not have their own tables but they are still available. If you find the appropriate event you can locate it within the table ethereum.events\\_emitted . If you think you'd be using this routinely let us know, and we'll create more views for these events.\n\nFor instance new proposals to vote on are created using ProposalCreated, so you could list all created proposals with\n\n```\nSELECT \n        block_timestamp,\n        tx_id,\n        event_name, \n        CASE WHEN contract_address = '0xc0da01a04c3f3e0be433606045bb7017a7323e38' THEN 'Alpha' ELSE 'Bravo' \n          END AS governor_contract,\n     ", "doc_id": "f0ffaf41-8ff6-484f-819b-4500fa27284d", "embedding": null, "doc_hash": "5506d9b5a7e59e90953c9b6cd63ee5a42427b359f2b43ca60786d4c2cbf82398", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 3261, "_node_type": "1"}, "relationships": {"1": "1483727ba2bd53e2b455a3eba6bba299978843f9", "3": "9e761934-e34e-400c-9d14-2df5180dd58d"}}, "__type__": "1"}, "9e761934-e34e-400c-9d14-2df5180dd58d": {"__data__": {"text": "       END AS governor_contract,\n            event_inputs:id AS proposal_id,\n            REGEXP_REPLACE(event_inputs:proposer,'\\\"','') AS proposer,\n            REGEXP_REPLACE(event_inputs:targets,'\\\"','') AS targets,\n            REGEXP_REPLACE(event_inputs:description,'\\\"','') AS description\nFROM ethereum.events_emitted\nWHERE \ncontract_address IN ('0xc0da01a04c3f3e0be433606045bb7017a7323e38', -- governance contracts\n                    '0xc0da02939e1441f497fd74f78ce7decb17b66529')\nAND \nblock_timestamp >= CURRENT_DATE - 120\nAND event_name  = 'ProposalCreated' -- the event\n```\n\n**Pro Tip for advanced users:**\n\n* The documentation for compound combines excellently with the events\\_emitted table. If you can find an event in the docs there, you can find it in the link below or [here](https://compound.finance/docs/ctokens#key-events)!&#x20;\n\n&#x20;                                 [https://compound.finance/docs/ctokens#key-events](https://compound.finance/docs/ctokens#key-events)\n", "doc_id": "9e761934-e34e-400c-9d14-2df5180dd58d", "embedding": null, "doc_hash": "d8de4fc36660711cc928347609186b8e38af43a4380683983d24d0244bbd4138", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 3223, "end": 4211, "_node_type": "1"}, "relationships": {"1": "1483727ba2bd53e2b455a3eba6bba299978843f9", "2": "f0ffaf41-8ff6-484f-819b-4500fa27284d"}}, "__type__": "1"}, "41c60496-ef67-4d4d-9fa6-5fd4dd39581a": {"__data__": {"text": "# Borrows\n\nBorrows exist within the `compound` schema, as `compound.borrows`\n\n| Field                      | Type      | Description                                                                                                                   |\n| -------------------------- | --------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| `block_id`                 | number    | The block height this event was recorded at                                                                                   |\n| `block_timestamp`          | timestamp | UTC block timestamp for parent block                                                                                          |\n| `borrower`                 | address   | Address that initiated a borrow event                                                                                         |\n| `borrows_contract_address` | address   | Address of borrowed token                                                                                                     |\n| `borrows_contract_symbol`  | string    | Symbol of borrowed token                                                                                                      |\n| `ctoken`                   | address   | Respective cToken address to the borrowed token                                                                               |\n| `ctoken_symbol`            | string    | Respective cToken symbol to the borrowed token                                ", "doc_id": "41c60496-ef67-4d4d-9fa6-5fd4dd39581a", "embedding": null, "doc_hash": "346a41e1961432dcfc71779104b6121139b5d3a5c8362c5ce6b673d45cb980cf", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/borrows.md", "file_name": "borrows.md"}, "node_info": {"start": 0, "end": 1567, "_node_type": "1"}, "relationships": {"1": "b5544972b74efdf701adc6d8a7e4f76547e8a904", "3": "d29cb4d6-96eb-4975-8d00-7c04307f437f"}}, "__type__": "1"}, "d29cb4d6-96eb-4975-8d00-7c04307f437f": {"__data__": {"text": "                                                                   |\n| `loan_amount`              | number    | Native amount of borrow (decimal adjusted)                                                                                    |\n| `loan_amount_usd`          | number    | The equivalent borrow amount in USD. Note this is computed by taking the average hourly price around the time of the tx event |\n| `tx_id`                    | string    | Transaction id for this borrow                                                                                                |\n\n", "doc_id": "d29cb4d6-96eb-4975-8d00-7c04307f437f", "embedding": null, "doc_hash": "9d4ba0d41af48ddfeb2fba4b3dfac4d52eabcb9b0652810ce1fd55ce27c49263", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/borrows.md", "file_name": "borrows.md"}, "node_info": {"start": 1548, "end": 2131, "_node_type": "1"}, "relationships": {"1": "b5544972b74efdf701adc6d8a7e4f76547e8a904", "2": "41c60496-ef67-4d4d-9fa6-5fd4dd39581a"}}, "__type__": "1"}, "b9355f0c-181a-49a8-8cb1-da224d125cdf": {"__data__": {"text": "# Liquidations\n\nLiquidations exist within the `compound` schema, as `compound.liquidations`\n\n| Field                          | Type      | Description                                                                                                                        |\n| ------------------------------ | --------- | ---------------------------------------------------------------------------------------------------------------------------------- |\n| `block_id`                     | number    | The block height this event was recorded at.                                                                                       |\n| `block_timestamp`              | timestamp | UTC block timestamp for parent block                                                                                               |\n| `ctoken`                       | address   | Address of cToken                                                                                                                  |\n| `ctoken_symbol`                | string    | Symbol of cToken                                                                                                                   |\n| `liquidator`                   | address   | Address that initiated the liquidation                                                                                             |\n| `ctokens_seized`               | number    | cToken collateral held by the insolvent borrower that is taken by the liquidator                                                   |\n| `liquidation_amount`", "doc_id": "b9355f0c-181a-49a8-8cb1-da224d125cdf", "embedding": null, "doc_hash": "238fea01ba93118c7fcaab4412c8812b4674d5e6f81b848a3512513f539ec547", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/liquidations.md", "file_name": "liquidations.md"}, "node_info": {"start": 0, "end": 1555, "_node_type": "1"}, "relationships": {"1": "677f28359a2fd7c95a49afdd42c1952335245f52", "3": "b5327000-e158-4f93-83bd-1cbf816cac40"}}, "__type__": "1"}, "b5327000-e158-4f93-83bd-1cbf816cac40": {"__data__": {"text": "           |\n| `liquidation_amount`           | number    | Native amount liquidated (decimal adjusted)                                                                                        |\n| `liquidation_amount_usd`       | number    | The equivalent liquidated amount in USD. Note this is computed by taking the average hourly price around the time of the tx event. |\n| `liquidation_contract_address` | address   | Address of liquidated token                                                                                                        |\n| `liquidation_contract_symbol`  | string    | Symbol of liquidated token                                                                                                         |\n| `tx_id`                        | string    | Transaction id for this liquidation                                                                                                |\n", "doc_id": "b5327000-e158-4f93-83bd-1cbf816cac40", "embedding": null, "doc_hash": "a49c010f944d0c44510da923d39c7881d0d2f957f0a2fcd19f988196cfc3bc79", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/liquidations.md", "file_name": "liquidations.md"}, "node_info": {"start": 1520, "end": 2433, "_node_type": "1"}, "relationships": {"1": "677f28359a2fd7c95a49afdd42c1952335245f52", "2": "b9355f0c-181a-49a8-8cb1-da224d125cdf"}}, "__type__": "1"}, "a8cb5761-78a3-4779-873d-d9eea6302ff0": {"__data__": {"text": "# Market Stats\n\nMarket Stats exist within the `compound` schema, as `compound.market_stats`\n\n| **Field**               | **Type** | Description                                                                                                                                                                                                                                                                               |\n| ----------------------- | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `block_hour`            | string   | Market stats are aggregated by hour in UTC. `date_trunc(\u2018hour\u2019,block_timestamp)` for joins on other tables                                                                                                                                                                                |\n| `contract_name`         | string   | market/cToken name                                                                                                                                                                                                                                                                        |\n| `ctoken_address`        | address  | market/cToken address (i.e. cUSDC)                                                                                              ", "doc_id": "a8cb5761-78a3-4779-873d-d9eea6302ff0", "embedding": null, "doc_hash": "987a421cd967f3e15ecc7e5be246c4d9b565441d7359b561c6bcddbc235aa8bd", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/market-stats.md", "file_name": "market-stats.md"}, "node_info": {"start": 0, "end": 1552, "_node_type": "1"}, "relationships": {"1": "be4324cda7377c447b675c8ff3cf662068474790", "3": "c542380a-3987-425c-a1cf-e2c9cae8e072"}}, "__type__": "1"}, "c542380a-3987-425c-a1cf-e2c9cae8e072": {"__data__": {"text": "                                                                                                                                                                             |\n| `underlying_contract`   | address  | Address of the underlying token the market serves (i.e. USDC)                                                                                                                                                                                                                             |\n| `underlying_symbol`     | string   | Symbol of the underlying token the market serves                                                                                                                                                                                                                                          |\n| `token_price`           | number   | Price of the underlying token (i.e. USDC)                                                                                                                                                                                                                                                 |\n| `ctoken_price`          | number  ", "doc_id": "c542380a-3987-425c-a1cf-e2c9cae8e072", "embedding": null, "doc_hash": "afaa6d23bb48c26b54e0095db2ed50d2e9302ebfc79b2949ff558b5a83a191c3", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/market-stats.md", "file_name": "market-stats.md"}, "node_info": {"start": 1553, "end": 2733, "_node_type": "1"}, "relationships": {"1": "be4324cda7377c447b675c8ff3cf662068474790", "2": "a8cb5761-78a3-4779-873d-d9eea6302ff0", "3": "d3023ba3-eaab-4424-8ffb-e25903de83ca"}}, "__type__": "1"}, "d3023ba3-eaab-4424-8ffb-e25903de83ca": {"__data__": {"text": "`ctoken_price`          | number   | Price of the cToken (i.e. cUSDC)                                                                                                                                                                                                                                                          |\n| `reserves_token_amount` | number   | Reserves are amounts set aside by the market that can be used/affected by governance actions through proposals voted on by COMP holders                                                                                                                                                   |\n| `borrows_token_amount`  | number   | Amount borrowed from the market                                                                                                                                                                                                                                                           |\n| `supply_token_amount`   | number   | Amount (in terms of the cToken) supplied to the market through suppliers                                                                                                                                                                                                         ", "doc_id": "d3023ba3-eaab-4424-8ffb-e25903de83ca", "embedding": null, "doc_hash": "84f507b272490bfac1f2506d10d916c7b6011a5b89ac209410c703272b00c3a0", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/market-stats.md", "file_name": "market-stats.md"}, "node_info": {"start": 2713, "end": 3992, "_node_type": "1"}, "relationships": {"1": "be4324cda7377c447b675c8ff3cf662068474790", "2": "c542380a-3987-425c-a1cf-e2c9cae8e072", "3": "b8c16a29-f3be-4956-ae9d-c0d282344293"}}, "__type__": "1"}, "b8c16a29-f3be-4956-ae9d-c0d282344293": {"__data__": {"text": "                            |\n| `supply_usd`            | number   | Supply converted to USD values as of the hour recorded                                                                                                                                                                                                                                    |\n| `reserves_usd`          | number   | Reserves converted to USD values as of the hour recorded                                                                                                                                                                                                                                  |\n| `borrows_usd`           | number   | Borrows converted to USD values as of the hour recorded                                                                                                                                                                                                                                   |\n| `comp_speed`            | number   | COMP is a governance token distributed equally to both suppliers and borrowers (the idea being the users of the protocol are also the ones who should be able to vote on governance actions). Comp speed controls the rate at which comp is distributed to users of the market, per block |\n| `supply_apy`            | number   | The supplier\u2019s APY in terms of the underlying asset. It depends on the exchange rate between the cToken/underlying token (cUSDC/USDC). This is interest paid to the supplier for their stake  ", "doc_id": "b8c16a29-f3be-4956-ae9d-c0d282344293", "embedding": null, "doc_hash": "a4a583b0c723036239ecda8177353b2c3134a632c9b88cee35948ee0412ab7dc", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/market-stats.md", "file_name": "market-stats.md"}, "node_info": {"start": 4014, "end": 5565, "_node_type": "1"}, "relationships": {"1": "be4324cda7377c447b675c8ff3cf662068474790", "2": "d3023ba3-eaab-4424-8ffb-e25903de83ca", "3": "6a9c59c7-d91a-4fee-9e38-8487a72383ee"}}, "__type__": "1"}, "6a9c59c7-d91a-4fee-9e38-8487a72383ee": {"__data__": {"text": "This is interest paid to the supplier for their stake                                                                                              |\n| `borrow_apy`            | number   | The borrower\u2019s APY in terms of the underlying asset. It depends on the exchange rate between the cToken/underlying token (cUSDC/USDC). This is interest paid by the borrower on their loan                                                                                                |\n| `comp_price`            | number   | The price of the COMP governance token                                                                                                                                                                                                                                                    |\n| `comp_speed_usd`        | number   | Comp distributed to markets converted to USD                                                                                                                                                                                                                                              |\n| `comp_apy_borrow`       | number   | The APY one can expect based on COMP governance tokens distributed (which in turn can be staked elsewhere, or used in voting)                                                                                                            ", "doc_id": "6a9c59c7-d91a-4fee-9e38-8487a72383ee", "embedding": null, "doc_hash": "f88d93630ad54f6f5aa9c1d5e999a73c686b6f874a2be840de61caf97db6f9f0", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/market-stats.md", "file_name": "market-stats.md"}, "node_info": {"start": 5522, "end": 6912, "_node_type": "1"}, "relationships": {"1": "be4324cda7377c447b675c8ff3cf662068474790", "2": "b8c16a29-f3be-4956-ae9d-c0d282344293", "3": "7edc6125-3324-49b4-b26e-14f82691a5ab"}}, "__type__": "1"}, "7edc6125-3324-49b4-b26e-14f82691a5ab": {"__data__": {"text": "                                                                    |\n| `comp_apy_supply`       | number   | The APY one can expect based on COMP governance tokens distributed (which in turn can be staked elsewhere, or used in voting)                                                                                                                                                             |\n\n", "doc_id": "7edc6125-3324-49b4-b26e-14f82691a5ab", "embedding": null, "doc_hash": "cf243b893be11ade074a7559e0c9a061c884539511d80b9752ae82fd2c4a7e77", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/market-stats.md", "file_name": "market-stats.md"}, "node_info": {"start": 6937, "end": 7331, "_node_type": "1"}, "relationships": {"1": "be4324cda7377c447b675c8ff3cf662068474790", "2": "6a9c59c7-d91a-4fee-9e38-8487a72383ee"}}, "__type__": "1"}, "0645608d-7fd3-4c2c-b128-b0e769704df2": {"__data__": {"text": "# Deposits\n\nDeposits exist within the `compound` schema, as `compound.deposits`\n\n| Field                       | Type      | Description                                                                                                                      |\n| --------------------------- | --------- | -------------------------------------------------------------------------------------------------------------------------------- |\n| `block_id`                  | number    | The block height this event was recorded at                                                                                      |\n| `block_timestamp`           | timestamp | UTC block timestamp for parent block                                                                                             |\n| `ctoken`                    | address   | cToken address                                                                                                                   |\n| `ctoken_symbol`             | string    | cToken symbol                                                                                                                    |\n| `issued_tokens`             | number    | Amount of cToken issued for providing liquidity                                                                                  |\n| `supplied_base_assets`      | number    | Native amount provided as liquidity (decimal adjusted)                                                                           |\n| `supplied_base_assets_usd`  | number    | The equivalent liquidity amount in USD. Note this is", "doc_id": "0645608d-7fd3-4c2c-b128-b0e769704df2", "embedding": null, "doc_hash": "1dc118ca0c7eb2bf82190ddd701a8604ca740bb2bae1d32804ad47c06ef6fe3f", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/mints.md", "file_name": "mints.md"}, "node_info": {"start": 0, "end": 1577, "_node_type": "1"}, "relationships": {"1": "b662b9e24236821fb28deb121c7aa594dd24a17f", "3": "8dc6c554-2585-4dce-8ebc-ea181075b972"}}, "__type__": "1"}, "8dc6c554-2585-4dce-8ebc-ea181075b972": {"__data__": {"text": " | number    | The equivalent liquidity amount in USD. Note this is computed by taking the average hourly price around the time of the tx event |\n| `supplied_contract_address` | address   | Address of token provided liquidity for                                                                                          |\n| `supplied_symbol`           | string    | Symbol of token provided liquidity for                                                                                           |\n| `supplier`                  | address   | Address of liquidity provider                                                                                                    |\n| `tx_id`                     | string    | Transaction id for this mint                                                                                                     |\n\n", "doc_id": "8dc6c554-2585-4dce-8ebc-ea181075b972", "embedding": null, "doc_hash": "291521e2b73389ab29cf229620bb9e948f55277769026e36e85c4efae5e85476", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/mints.md", "file_name": "mints.md"}, "node_info": {"start": 1510, "end": 2357, "_node_type": "1"}, "relationships": {"1": "b662b9e24236821fb28deb121c7aa594dd24a17f", "2": "0645608d-7fd3-4c2c-b128-b0e769704df2"}}, "__type__": "1"}, "e33f14c3-7de4-4f9d-b59f-48891656acfe": {"__data__": {"text": "# Redemptions\n\nRedemptions exist within the `compound` schema, as `compound.redemptions`\n\n| Field                       | Type      | Description                                                                                                                      |\n| --------------------------- | --------- | -------------------------------------------------------------------------------------------------------------------------------- |\n| `block_id`                  | number    | The block height this event was recorded at                                                                                      |\n| `block_timestamp`           | timestamp | UTC block timestamp for parent block                                                                                             |\n| `ctoken`                    | address   | cToken address                                                                                                                   |\n| `ctoken_symbol`             | string    | cToken symbol                                                                                                                    |\n| `received_amount`           | number    | Native amount provided as liquidity (decimal adjusted)                                                                           |\n| `received_amount_usd`       | number    | The equivalent liquidity amount in USD. Note this is computed by taking the average hourly price around the time of the tx event |\n| `received_contract_address` | address   | Address of token refunded as part of the redemption                                                                      ", "doc_id": "e33f14c3-7de4-4f9d-b59f-48891656acfe", "embedding": null, "doc_hash": "8855c26a7daccc43d5cd0a33ab2c3f88d3f9fedc25a20e075203987a7426ee79", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/redemptions.md", "file_name": "redemptions.md"}, "node_info": {"start": 0, "end": 1655, "_node_type": "1"}, "relationships": {"1": "ff6620c7c48cdcbbc3a38dae9349381f29fb2707", "3": "df7f38b6-633a-4b0c-ac3f-a9f612767ed3"}}, "__type__": "1"}, "df7f38b6-633a-4b0c-ac3f-a9f612767ed3": {"__data__": {"text": "                           |\n| `received_contract_symbol`  | string    | Symbol of token refunded as part of the redemption                                                                               |\n| `redeemed_ctoken`           | number    | cToken deposited to redeem                                                                                                       |\n| `supplier`                  | address   | Address of liquidity provider                                                                                                    |\n| `tx_id`                     | string    | Transaction id for the redemption(s)                                                                                             |\n", "doc_id": "df7f38b6-633a-4b0c-ac3f-a9f612767ed3", "embedding": null, "doc_hash": "32aa3f6d0169d5e858966a8a95ac0e3ef69fb0c710210c78d87ca2b3fe6cd75a", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/redemptions.md", "file_name": "redemptions.md"}, "node_info": {"start": 1636, "end": 2365, "_node_type": "1"}, "relationships": {"1": "ff6620c7c48cdcbbc3a38dae9349381f29fb2707", "2": "e33f14c3-7de4-4f9d-b59f-48891656acfe"}}, "__type__": "1"}, "47aca423-4c34-4a56-8e93-feb8d60229d1": {"__data__": {"text": "# Repayments\n\n\n\nRepayments exist within the `compound` schema, as `compound.repayments`\n\n| Field                    | Type      | Description                                                                                                                   |\n| ------------------------ | --------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| `block_id`               | number    | The block height this event was recorded at                                                                                   |\n| `block_timestamp`        | timestamp | UTC block timestamp for parent block                                                                                          |\n| `borrower`               | address   | Address of initial borrower                                                                                                   |\n| `ctoken`                 | address   | cToken address                                                                                                                |\n| `ctoken_symbol`          | string    | cToken symbol                                                                                                                 |\n| `payer`                  | address   | Address of user that paid out the loan                                                                                        |\n| `repay_contract_address` | address   | Address of token refunded as part of the redemption      ", "doc_id": "47aca423-4c34-4a56-8e93-feb8d60229d1", "embedding": null, "doc_hash": "b9bb0a6cdefaf5b98598a5bf75892c9abe9a9c50be7ef3b63918a1062abb4336", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/repayments.md", "file_name": "repayments.md"}, "node_info": {"start": 0, "end": 1539, "_node_type": "1"}, "relationships": {"1": "440e043f3280a01e56f48bf2df9ce8f088163c1c", "3": "4e148d4d-d81a-4291-8de8-3547de8eeeb4"}}, "__type__": "1"}, "4e148d4d-d81a-4291-8de8-3547de8eeeb4": {"__data__": {"text": " | Address of token refunded as part of the redemption                                                                           |\n| `repay_contract_symbol`  | string    | Symbol of token refunded as part of the redemption                                                                            |\n| `repayed_amount`         | number    | Native amount repaid on loan  (decimal adjusted)                                                                              |\n| `repayed_amount_usd`     | number    | The equivalent repaid amount in USD. Note this is computed by taking the average hourly price around the time of the tx event |\n| `tx_id`                  | string    | Transaction id for this repayment                                                                                             |\n", "doc_id": "4e148d4d-d81a-4291-8de8-3547de8eeeb4", "embedding": null, "doc_hash": "4c9681f48f304ae41e51d4d6821d846df9ff3606b12fe296736c2a49f4c014bd", "extra_info": {"file_path": "our-data/archive/tables/compound-tables/repayments.md", "file_name": "repayments.md"}, "node_info": {"start": 1479, "end": 2286, "_node_type": "1"}, "relationships": {"1": "440e043f3280a01e56f48bf2df9ce8f088163c1c", "2": "47aca423-4c34-4a56-8e93-feb8d60229d1"}}, "__type__": "1"}, "a812ef1c-22c2-4d57-a4b4-1f3d0368fe4d": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Cosmos Tables\n\n### **Current Cosmos Tables**\n\n**Blockchain:** [Cosmos](https://cosmos.network/)\n\nThe Cosmos schema is currently in lite mode. All block, transaction, and message data is available back to the genesis block. However, no easy or curated tables are currently available.&#x20;\n\n[Dim Labels](https://flipsidecrypto.github.io/cosmos-models/#!/model/model.cosmos\\_models.core\\_\\_dim\\_labels)\n\n[Dim Tokens](https://flipsidecrypto.github.io/cosmos-models/#!/model/model.cosmos\\_models.core\\_\\_dim\\_tokens)\n\n[Fact Blocks](https://flipsidecrypto.github.io/cosmos-models/#!/model/model.cosmos\\_models.core\\_\\_fact\\_blocks)\n\n[Fact Transactions](https://flipsidecrypto.github.io/cosmos-models/#!/model/model.cosmos\\_models.core\\_\\_fact\\_transactions)\n\n[Fact Msgs](https://flipsidecrypto.github.io/cosmos-models/#!/model/model.cosmos\\_models.core\\_\\_fact\\_msgs)\n\n[Fact Msg Attributes](https://flipsidecrypto.github.io/cosmos-models/#!/model/model.cosmos\\_models.core\\_\\_fact\\_msg\\_attributes)\n\n[Fact Transfers](https://flipsidecrypto.github.io/cosmos-models/#!/model/model.cosmos\\_models.core\\_\\_fact\\_transfers)\n\n[Fact Validators](https://flipsidecrypto.github.io/cosmos-models/#!/model/model.cosmos\\_models.core\\_\\_fact\\_validators)\n\n[Fact Governance Votes](https://flipsidecrypto.github.io/cosmos-models/#!/model/model.cosmos\\_models.core\\_\\_fact\\_governance\\_votes)\n\n[Fact Governance Submit Proposal](https://flipsidecrypto.github.io/cosmos-models/#!/model/model.cosmos\\_models.core\\_\\_fact\\_governance\\_submit\\_proposal)\n\n[Fact Governance Proposal Deposits](https://flipsidecrypto.github.io/cosmos-models/#!/model/model.cosmos\\_models.core\\_\\_fact\\_governance\\_proposal\\_deposits)\n\n[Dim Vote Options](https://flipsidecrypto.github.io/cosmos-models/#!/model/model.cosmos\\_models.core\\_\\_dim\\_vote\\_options)\n", "doc_id": "a812ef1c-22c2-4d57-a4b4-1f3d0368fe4d", "embedding": null, "doc_hash": "e18fe543ae1a540a340ecb451f0ca6072f42a0315f1682e72e3254ffe5c7ed5e", "extra_info": {"file_path": "our-data/archive/tables/cosmos-tables.md", "file_name": "cosmos-tables.md"}, "node_info": {"start": 0, "end": 1897, "_node_type": "1"}, "relationships": {"1": "8edab9f0301edf7764cc4ce9145977a5f7ad118b"}}, "__type__": "1"}, "fcd2994f-6434-4745-b20c-ceb196838d0f": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Crosschain Tables\n\nThese tables contain data from multiple blockchains. The following tables are available in the Crosschain schema:\\\n\\\n[Address Labels](crosschain-address-labels.md)\\\n\\\n[Address Tags](crosschain-address-tags.md)\n\n[Dim Dates](dim-dates.md)\n\n\n\nAlso see docs for legacy crosschain tables here:\n\n[Crosschain EZ\\_Borrowing](https://flipsidecrypto.github.io/sql\\_models/#!/model/model.sql\\_models.crosschain\\_\\_ez\\_borrowing)\\\n[Crosschain EZ\\_Lending](https://flipsidecrypto.github.io/sql\\_models/#!/model/model.sql\\_models.crosschain\\_\\_ez\\_lending)\\\n[Crosschain EZ\\_Swaps](https://flipsidecrypto.github.io/sql\\_models/#!/model/model.sql\\_models.crosschain\\_\\_ez\\_swaps)\\\n[Crosschain NFT Fair Market Value](https://flipsidecrypto.github.io/sql\\_models/#!/model/model.sql\\_models.crosschain\\_\\_nft\\_fair\\_market\\_value)\\\n[Crosschain Address Labels](https://flipsidecrypto.github.io/sql\\_models/#!/model/model.sql\\_models.crosschain\\_\\_address\\_labels)\n\n", "doc_id": "fcd2994f-6434-4745-b20c-ceb196838d0f", "embedding": null, "doc_hash": "c43b28a0513d4b89b9d572ba9e259ca2f39082e04d003bdca84eec06a8492216", "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 1049, "_node_type": "1"}, "relationships": {"1": "fe01a8a0f4fb57f38afb9213e68df66a4415a0fd"}}, "__type__": "1"}, "455f408b-8e76-4fc9-b2a9-e607cfbeabe5": {"__data__": {"text": "# Crosschain Address Labels\n\n### Table Schema\n\n`crosschain.address_labels`\n\nAlso learn more about labels [here](broken-reference).\n\n| Field               | Type      | Description                                                                |\n| ------------------- | --------- | -------------------------------------------------------------------------- |\n| system\\_created\\_at | timestamp | The time when the label was sent to the table.                             |\n| insert\\_date        | timestamp | The date the label was inserted into the table.                            |\n| blockchain          | string    | The name of the blockchain.                                                |\n| creator             | string    | The name of the creator of the label.                                      |\n| address             | string    | The address the label belongs to. Use this to join to other tables.        |\n| label\\_type         | string    | A high-level category describing the addresses main function or ownership. |\n| label\\_subtype      | string    | A sub-category nested within label type providing further detail.          |\n| address\\_name       | string    | Name of the address or the label.                                          |\n| project\\_name       | string    | Name of the controlling entity of the address.                             |\n", "doc_id": "455f408b-8e76-4fc9-b2a9-e607cfbeabe5", "embedding": null, "doc_hash": "6e2e5097a248ab57bfe3178b7901ce559ea54a47d2d295e2fe70827745ef01bc", "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/crosschain-address-labels.md", "file_name": "crosschain-address-labels.md"}, "node_info": {"start": 0, "end": 1375, "_node_type": "1"}, "relationships": {"1": "f027f24c299c94df415c9b0046a69dbda7b512ff"}}, "__type__": "1"}, "1b9e4fb1-0407-4ef8-a9a8-0919cf91bbe4": {"__data__": {"text": "# Crosschain Address Tags\n\n### Table Schema\n\n`crosschain.core.address_tags`\n\nAlso learn more about tags [here](broken-reference).\n\n| Field       | Type      | Description                                                            |\n| ----------- | --------- | ---------------------------------------------------------------------- |\n| blockchain  | string    | The name of the blockchain.                                            |\n| creator     | string    | The name of the creator of the tag.                                    |\n| address     | string    | The address that the tag belongs to. Use this to join to other tables. |\n| tag\\_name   | string    | The name of the tag or the tag itself.                                 |\n| tag\\_type   | string    | The type of the tag.                                                   |\n| start\\_date | timestamp | The starting date that the tag is valid for.                           |\n| end\\_date   | timestamp | The ending date of the tag's validity.                                 |\n", "doc_id": "1b9e4fb1-0407-4ef8-a9a8-0919cf91bbe4", "embedding": null, "doc_hash": "ce1c0fe6dfc06b056f886677865ded0955a243e916fdc97bbf010dafa58e339d", "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/crosschain-address-tags.md", "file_name": "crosschain-address-tags.md"}, "node_info": {"start": 0, "end": 1040, "_node_type": "1"}, "relationships": {"1": "62dccc9f85f546c1ea67355de28a95fdd4fc8a77"}}, "__type__": "1"}, "712f17d6-e5b6-4093-8831-b2a2ade4c6db": {"__data__": {"text": "# Dim Asset Metadata\n\n### Table Schema\n\nA dimension table holding provider specific asset metadata\n\n`crosschain.dim_asset_metadata`\n\n| Field          | Type   | Description                                                    |\n| -------------- | ------ | -------------------------------------------------------------- |\n| PROVIDER       | STRING | provider of the data                                           |\n| ID             | STRING | unique identifier representing the asset                       |\n| NAME           | STRING | name of asset                                                  |\n| SYMBOL         | STRING | symbol of asset                                                |\n| TOKEN\\_ADDRESS | STRING | specific address representing the asset in a specific platform |\n| PLATFORM       | STRING | platform where this asset has a token address                  |\n", "doc_id": "712f17d6-e5b6-4093-8831-b2a2ade4c6db", "embedding": null, "doc_hash": "36c4f8b96973fc3f0a70e87969b6b81dae1e42d0a664adb9e3c2ea7fc1ee269a", "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/dim-asset-metadata.md", "file_name": "dim-asset-metadata.md"}, "node_info": {"start": 0, "end": 877, "_node_type": "1"}, "relationships": {"1": "4d3c6e9f185ef43ba9cdbfb48fa54ec7295746b5"}}, "__type__": "1"}, "1ceb8d6c-6c7c-4fff-a56f-b4daa12b1e5b": {"__data__": {"text": "# Dim Date Hours\n\n### Table Schema\n\nHold rows for each hour from 2017 to current timestamp (UTC)\n\n`crosschain.dim_date_hours`\n\n| Field      | Type      | Description                   |\n| ---------- | --------- | ----------------------------- |\n| DATE\\_HOUR | timestamp | Specific hour of a given date |\n", "doc_id": "1ceb8d6c-6c7c-4fff-a56f-b4daa12b1e5b", "embedding": null, "doc_hash": "e1af8662d0413bd73229c21265e8092982d9244c0ed48c116acc1ef65ba3c4af", "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/dim-date-hours.md", "file_name": "dim-date-hours.md"}, "node_info": {"start": 0, "end": 304, "_node_type": "1"}, "relationships": {"1": "f406dc10ba4157fa95613d1cf4d93c34f8275438"}}, "__type__": "1"}, "02d208f3-1849-4e29-8e5a-7d1d18dd9e24": {"__data__": {"text": "# Dim Dates\n\n### Table Schema\n\nA utility table of common date constructs.\n\n`crosschain.dim_dates`\n\n| Field                               | Type   | Description                                                             |\n| ----------------------------------- | ------ | ----------------------------------------------------------------------- |\n| DATE\\_DAY                           | DATE   | date for the row                                                        |\n| PRIOR\\_DATE\\_DAY                    | DATE   | date before DATE\\_DAY                                                   |\n| NEXT\\_DATE\\_DAY                     | DATE   | date after DATE\\_DAY                                                    |\n| PRIOR\\_YEAR\\_DATE\\_DAY              | DATE   | date exactly 1 year before DATE\\_DAY                                    |\n| PRIOR\\_YEAR\\_OVER\\_YEAR\\_DATE\\_DAY  | DATE   | date exactly 1 year after DATE\\_DAY                                     |\n| DAY\\_OF\\_WEEK                       | NUMBER | number representing day of week for DATE\\_DAY where 1=Sunday            |\n| DAY\\_OF\\_WEEK\\_ISO                  | NUMBER | number representing day of week for DATE\\_DAY where 1=Monday            |\n| DAY\\_OF\\_WEEK\\_NAME                 | STRING | day of week name for DATE\\_DAY                                          |\n| DAY\\_OF\\_WEEK\\_NAME\\_SHORT          | STRING | day of week abbreviation for DATE\\_DAY                                  |\n| DAY\\_OF\\_MONTH                      | NUMBER | day of month for DATE\\_DAY                                              |\n| DAY\\_OF\\_YEAR           ", "doc_id": "02d208f3-1849-4e29-8e5a-7d1d18dd9e24", "embedding": null, "doc_hash": "1e57e377888f4ec0238ea30934335d4e5b6c0ccde232583362d7744a80baa0be", "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/dim-dates.md", "file_name": "dim-dates.md"}, "node_info": {"start": 0, "end": 1601, "_node_type": "1"}, "relationships": {"1": "6ee1313c5949b0a55dd66de4f383cb05662e4488", "3": "a2b0e393-ad31-48b7-b357-ffed60a0ad58"}}, "__type__": "1"}, "a2b0e393-ad31-48b7-b357-ffed60a0ad58": {"__data__": {"text": "DAY\\_OF\\_YEAR                       | NUMBER | day of year for DATE\\_DAY                                               |\n| WEEK\\_START\\_DATE                   | DATE   | date representing the start of the week for DATE\\_DAY                   |\n| WEEK\\_END\\_DATE                     | DATE   | date representing the end of the week for DATE\\_DAY                     |\n| PRIOR\\_YEAR\\_WEEK\\_START\\_DATE      | DATE   | date representing the start of the week for PRIOR\\_YEAR\\_DATE\\_DAY      |\n| PRIOR\\_YEAR\\_WEEK\\_END\\_DATE        | DATE   | date representing the end of the week for PRIOR\\_YEAR\\_DATE\\_DAY        |\n| WEEK\\_OF\\_YEAR                      | NUMBER | number representing the week of the year for DATE\\_DAY                  |\n| ISO\\_WEEK\\_START\\_DATE              | DATE   | ISO date representing the start of the week for DATE\\_DAY               |\n| ISO\\_WEEK\\_END\\_DATE                | DATE   | ISO date representing the end of the week for DATE\\_DAY                 |\n| PRIOR\\_YEAR\\_ISO\\_WEEK\\_START\\_DATE | DATE   | ISO date representing the start of the week for PRIOR\\_YEAR\\_DATE\\_DAY  |\n| PRIOR\\_YEAR\\_ISO\\_WEEK\\_END\\_DATE   | DATE   | ISO date representing the end of the week for PRIOR\\_YEAR\\_DATE\\_DAY    |\n| ISO\\_WEEK\\_OF\\_YEAR                 | NUMBER | number representing the ISO week of the year for DATE\\_DAY              |\n| PRIOR\\_YEAR\\_WEEK\\_OF\\_YEAR         | NUMBER | number representing the week of the year for PRIOR\\_YEAR\\_DATE\\_DAY     |\n| PRIOR\\_YEAR\\_ISO\\_WEEK\\_OF\\_YEAR    | NUMBER | number representing the ISO week of the year for PRIOR\\_YEAR\\_DATE\\_DAY |\n| MONTH\\_OF\\_YEAR                     | NUMBER | number representing the month of the year for DATE\\_DAY                 |\n| MONTH\\_NAME                         | STRING | month of year name for DATE\\_DAY                                       ", "doc_id": "a2b0e393-ad31-48b7-b357-ffed60a0ad58", "embedding": null, "doc_hash": "86c0a863483f45ee047bf8b7eeb1417e6235fa481cba89ce2d0ba7d5e704d4e8", "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/dim-dates.md", "file_name": "dim-dates.md"}, "node_info": {"start": 1589, "end": 3429, "_node_type": "1"}, "relationships": {"1": "6ee1313c5949b0a55dd66de4f383cb05662e4488", "2": "02d208f3-1849-4e29-8e5a-7d1d18dd9e24", "3": "bcffecae-9a4c-4ba4-b48f-cdd1d77fe0be"}}, "__type__": "1"}, "bcffecae-9a4c-4ba4-b48f-cdd1d77fe0be": {"__data__": {"text": "                    |\n| MONTH\\_NAME\\_SHORT                  | STRING | month of year abbreviation for DATE\\_DAY                                |\n| MONTH\\_START\\_DATE                  | DATE   | first date of month for DATE\\_DAY                                       |\n| MONTH\\_END\\_DATE                    | DATE   | last date of month for DATE\\_DAY                                        |\n| PRIOR\\_YEAR\\_MONTH\\_START\\_DATE     | DATE   | first date of month for PRIOR\\_YEAR\\_DATE\\_DAY                          |\n| PRIOR\\_YEAR\\_MONTH\\_END\\_DATE       | DATE   | last date of month for PRIOR\\_YEAR\\_DATE\\_DAY                           |\n| QUARTER\\_OF\\_YEAR                   | NUMBER | number representing quarter for DATE\\_DAY                               |\n| QUARTER\\_START\\_DATE                | DATE   | first date of quarter for DATE\\_DAY                                     |\n| QUARTER\\_END\\_DATE                  | DATE   | last date of quarter for DATE\\_DAY                                      |\n| YEAR\\_NUMBER                        | NUMBER | number presenting the year for DATE\\_DAY                                |\n| YEAR\\_START\\_DATE                   | DATE   | first date of year for DATE\\_DAY                                        |\n| YEAR\\_END\\_DATE                     | DATE   | last date of year for DATE\\_DAY                                         |\n", "doc_id": "bcffecae-9a4c-4ba4-b48f-cdd1d77fe0be", "embedding": null, "doc_hash": "2aeecc1afd2eb1f16f2455fb7980314f8161c1f7c83442065bd3cb4074c8a8b1", "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/dim-dates.md", "file_name": "dim-dates.md"}, "node_info": {"start": 3423, "end": 4798, "_node_type": "1"}, "relationships": {"1": "6ee1313c5949b0a55dd66de4f383cb05662e4488", "2": "a2b0e393-ad31-48b7-b357-ffed60a0ad58"}}, "__type__": "1"}, "090e4302-f60c-400d-b839-3116a242830e": {"__data__": {"text": "# Fact Hourly Prices\n\n### Table Schema\n\nA fact table holding provider asset prices\n\n`crosschain.fact_hourly_prices`\n\n| Field          | Type      | Description                              |\n| -------------- | --------- | ---------------------------------------- |\n| PROVIDER       | STRING    | provider of the data                     |\n| ID             | STRING    | unique identifier representing the asset |\n| RECORDED\\_HOUR | TIMESTAMP | opening hour of price data               |\n| OPEN           | FLOAT     | open price of asset for hour             |\n| HIGH           | FLOAT     | high price of asset for hour             |\n| LOW            | FLOAT     | low price of asset for hour              |\n| COSE           | FLOAT     | close price of asset for hour            |\n", "doc_id": "090e4302-f60c-400d-b839-3116a242830e", "embedding": null, "doc_hash": "4e80bfd84d5ccd69aeb276745474dd2133e4db0a9f1987453cb5b48aa6ad27a4", "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/fact-hourly-prices.md", "file_name": "fact-hourly-prices.md"}, "node_info": {"start": 0, "end": 783, "_node_type": "1"}, "relationships": {"1": "6529d9f84d9b6a9242c8219794abe434c572f18e"}}, "__type__": "1"}, "b164050c-55c2-4ad3-864a-fe528db9a086": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Ethereum Beacon Chain Tables\n\nDocumentation for Ethereum.Beacon\\_chain tables can be found [here](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.beacon\\_chain\\_\\_fact\\_attestations).\n\nThe public Github repo with source code is [here](https://github.com/FlipsideCrypto/ethereum-models/tree/main/models/beacon\\_chain).\n\nQuick Links to Table Docs:\n\n* [`fact_blocks`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.beacon\\_chain\\_\\_fact\\_blocks)\n* [`fact_deposits`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.beacon\\_chain\\_\\_fact\\_deposits)\n* [`fact_attestations`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.beacon\\_chain\\_\\_fact\\_attestations)\n", "doc_id": "b164050c-55c2-4ad3-864a-fe528db9a086", "embedding": null, "doc_hash": "bda8d4f7b26ef7f9d55ab923fe2e1807731de451641f09f76f0b85ae024a379c", "extra_info": {"file_path": "our-data/archive/tables/ethereum-beacon-chain-tables.md", "file_name": "ethereum-beacon-chain-tables.md"}, "node_info": {"start": 0, "end": 871, "_node_type": "1"}, "relationships": {"1": "26292db1ec5b48c49ed995f49aa5f9f1c98432a1"}}, "__type__": "1"}, "cdb4803e-789e-48e3-9be6-e653fc8c5e03": {"__data__": {"text": "---\ndescription: >-\n  [Legacy Documentation, Not Maintained, For Reference Only] These tables are\n  subject to change without notice! Do not use these for dashboards or important\n  analysis.\n---\n\n# Ethereum Beta Tables\n\nPlease report bugs in discord as you find them, and know we are already working on many of the issues you find, including coverage of popular contracts such as Uni v3 pools and Blur exchange.\n\nLinks to the `ethereum.beta` tables can be found here:\n\n[`beta.fact_decoded_logs`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.beta\\_\\_fact\\_decoded\\_logs)\n", "doc_id": "cdb4803e-789e-48e3-9be6-e653fc8c5e03", "embedding": null, "doc_hash": "cb1f44e3d1692065027a1b09e79221356389b5e0f15f7593c22c8ebf54fb1093", "extra_info": {"file_path": "our-data/archive/tables/ethereum-beta-tables.md", "file_name": "ethereum-beta-tables.md"}, "node_info": {"start": 0, "end": 606, "_node_type": "1"}, "relationships": {"1": "fc797cb72efeb0ca1b9a94e09e09149ac87dbc95"}}, "__type__": "1"}, "64a6c0f5-2b3b-4e6b-af52-157fecc78afb": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Ethereum Chainlink Tables\n\nDocumentation for `ethereum.chainlink` tables can be found here:\n\n* [`dim_oracle_feeds`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.chainlink\\_\\_dim\\_oracle\\_feeds)\n* [`fact_oracle_feeds`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.chainlink\\_\\_fact\\_oracle\\_feeds)\n* [`ez_oracle_feeds`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.chainlink\\_\\_ez\\_oracle\\_feeds)\n\nPublic github repo available [here](https://github.com/FlipsideCrypto/ethereum-models/tree/main/models/chainlink).&#x20;\n", "doc_id": "64a6c0f5-2b3b-4e6b-af52-157fecc78afb", "embedding": null, "doc_hash": "90839ba98c37431d540390efaff7b3c83dfb5487e3fd26d640341f1d7a89e19c", "extra_info": {"file_path": "our-data/archive/tables/ethereum-chainlink-tables.md", "file_name": "ethereum-chainlink-tables.md"}, "node_info": {"start": 0, "end": 711, "_node_type": "1"}, "relationships": {"1": "93f820e7b654eef754c17f738c882465b7a53a7b"}}, "__type__": "1"}, "b5f858b5-91fa-48d6-ac51-d1bb62562a6e": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Ethereum Maker DAO Tables\n\nDocumentation for the curated Ethereum Maker DAO Tables are included in [the Ethereum Core DBT documentation](https://flipsidecrypto.github.io/ethereum-models/#!/overview/ethereum\\_models) under the following path in the sidebar: Projects/Ethereum\\_models/models/gold/maker\n\nThe public Github repo with Ethereum Maker DAO model source code is similarly in the Ethereum Core repo [here](https://github.com/FlipsideCrypto/ethereum-models).\\\n\\\nQuick Links to Table Docs:\\\n\\\n[Maker EZ Delegations](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.maker\\_\\_ez\\_delegations)\n\n[Maker EZ Deposits](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.maker\\_\\_ez\\_deposits)\n\n[Maker EZ Flash Loans](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.maker\\_\\_ez\\_flash\\_loans)\n\n[Maker EZ Governance Votes](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.maker\\_\\_ez\\_governance\\_votes)\n\n[Maker EZ Liquidations](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.maker\\_\\_ez\\_liquidations)\n\n[Maker EZ Repayments](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.maker\\_\\_ez\\_repayments)\n\n[Maker EZ Vault Creation](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.maker\\_\\_ez\\_vault\\_creation)\n\n[Maker EZ Withdrawals](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.maker\\_\\_ez\\_withdrawals)\n", "doc_id": "b5f858b5-91fa-48d6-ac51-d1bb62562a6e", "embedding": null, "doc_hash": "2c7bdb30c78d274978a4a3e2ca31bf17c9ba7802e03a295df98cd87f30784670", "extra_info": {"file_path": "our-data/archive/tables/ethereum-maker-dao-tables.md", "file_name": "ethereum-maker-dao-tables.md"}, "node_info": {"start": 0, "end": 1643, "_node_type": "1"}, "relationships": {"1": "b6f7547f3b71b9d63ce3be5feb3ac987d110679a"}}, "__type__": "1"}, "00f332d4-aa84-4a1c-8d8e-26166ef9edcf": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Ethereum Sushi Tables\n\nDocumentation for the curated Ethereum Sushi Tables are included in [the Ethereum Core DBT documentation](https://flipsidecrypto.github.io/ethereum-models/#!/overview/ethereum\\_models) under the following path in the sidebar: Projects/Ethereum\\_models/models/sushi\n\nThe public Github repo with Ethereum Maker DAO model source code is similarly in the Ethereum Core repo [here](https://github.com/FlipsideCrypto/ethereum-models).\\\n\\\nQuick Links to Table Docs:\n\n* [`ez_swaps`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.sushi\\_\\_ez\\_swaps)\n* &#x20; [ez\\_lending](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.sushi\\_\\_ez\\_lending)\n* &#x20; [ez\\_borrowing](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.sushi\\_\\_ez\\_borrowing)\n", "doc_id": "00f332d4-aa84-4a1c-8d8e-26166ef9edcf", "embedding": null, "doc_hash": "9803a968a64018e9e29cd075d2fa668166d90500c7ede0fc19e4219e62f8c052", "extra_info": {"file_path": "our-data/archive/tables/ethereum-sushi-tables.md", "file_name": "ethereum-sushi-tables.md"}, "node_info": {"start": 0, "end": 940, "_node_type": "1"}, "relationships": {"1": "fcafa4124add3d8927846deee874f43d3b99bbf7"}}, "__type__": "1"}, "98010a80-c7f4-4e33-92d8-af7b3764f6b8": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Ethereum Tables\n\nDocumentation for `Ethereum_core` tables can be found [here](https://flipsidecrypto.github.io/ethereum-models/#!/overview).&#x20;\n\nThe public Github repo with Ethereum Core model source code is [here](https://github.com/FlipsideCrypto/ethereum-models).\\\n\\\nQuick Links to Table Docs:\\\n\n\n* [`fact_event_logs`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_fact\\_event\\_logs)\n* [`fact_hourly_token_prices`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_fact\\_hourly\\_token\\_prices)\n* [`fact_token_transfers`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_fact\\_token\\_transfers)\n* [`fact_transactions`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_fact\\_transactions)\n* [`fact_blocks`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_fact\\_blocks)\n* [`fact_decoded_event_logs`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_fact\\_decoded\\_event\\_logs)\n* [`ez_dex_swaps`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_ez\\_dex\\_swaps)\n* [`ez_token_transfers`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_ez\\_token\\_transfers)\n* [`ez_snapshot`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_ez\\_snapshot)\n* [`dim_contracts`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_dim\\_contracts)\n* [`dim_contract_abis`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_dim\\_contract\\_abis)\n* [`dim_labels`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_dim\\_labels)\n* [`dim_dex_liquidity_pools`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_dim\\_dex\\_liquidity\\_pools)\n* [`dim_function_signatures`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_dim\\_function\\_signatures)\n* [`dim_event_signatures`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_dim\\_event\\_signatures)\n*", "doc_id": "98010a80-c7f4-4e33-92d8-af7b3764f6b8", "embedding": null, "doc_hash": "9cfcebd4ea6df8e56d66c9586d09fc04e0c9ff9131b17bb0676c90226d863194", "extra_info": {"file_path": "our-data/archive/tables/ethereum-tables.md", "file_name": "ethereum-tables.md"}, "node_info": {"start": 0, "end": 2401, "_node_type": "1"}, "relationships": {"1": "272c6a7a4ec979b65763c3ee27028c3adc2562f0", "3": "a600ca5e-6eb4-44ad-8113-912bbb03d499"}}, "__type__": "1"}, "a600ca5e-6eb4-44ad-8113-912bbb03d499": {"__data__": {"text": "[`ez_decoded_event_logs`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_ez\\_decoded\\_logs)\n* [`ez_nft_sales`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_ez\\_nft\\_sales)\n* [`ez_nft_transfers`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_ez\\_nft\\_transfers)\n* [`ez_nft_mints`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_ez\\_nft\\_mints)\n* [`ez_eth_transfers`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_ez\\_eth\\_transfers)\n* [`ez_balance_deltas`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_ez\\_balance\\_deltas)\n* [`ez_current_balances`](https://flipsidecrypto.github.io/ethereum-models/#!/model/model.ethereum\\_models.core\\_\\_ez\\_current\\_balances)\n\n\n\nNote: when working with the `fact_transactions` and `fact_event_logs` tables, you may find it useful to use the [ethereum.public.udf\\_hex\\_to\\_int() function](../../hex-to-integer-function.md).\\\n\\\n", "doc_id": "a600ca5e-6eb4-44ad-8113-912bbb03d499", "embedding": null, "doc_hash": "d7ad36f90df05fc7a3980c02782b576072b0c78f29ced00d17bd1f4ec3c8f9cf", "extra_info": {"file_path": "our-data/archive/tables/ethereum-tables.md", "file_name": "ethereum-tables.md"}, "node_info": {"start": 2402, "end": 3520, "_node_type": "1"}, "relationships": {"1": "272c6a7a4ec979b65763c3ee27028c3adc2562f0", "2": "98010a80-c7f4-4e33-92d8-af7b3764f6b8"}}, "__type__": "1"}, "e20ff1be-c08d-44e7-ba4d-745339944ede": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# FLOW Tables\n\nThe [Flow blockchain](https://www.onflow.org/primer) is a fast, decentralized blockchain that enhances the development of decentralized applications and NFTs. Like other blockchains, Flow has its own native currency, known as FLOW. FLOW is the reserve asset used to pay transaction costs and staking on the network.\n\n## Documentation\n\nFor more detailed documentation on the model structures that build up the `core` views you use, please refer to the full dbt documentation below, which includes a lineage graph of the models and data flow.\n\n{% embed url=\"https://flipside-flow.netlify.app/#!/overview\" %}\nFull Project Documentation\n{% endembed %}\n\nThe public Github repo with Flow model source code is [here](https://github.com/FlipsideCrypto/flow-models).\n\n### Quick Docs\n\nThe following pages offer quick documentation with details around the schema, and descriptions of each column.\n\n{% content-ref url=\"blocks.md\" %}\n[blocks.md](blocks.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"bridge-transactions.md\" %}\n[bridge-transactions.md](bridge-transactions.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"contract-labels.md\" %}\n[contract-labels.md](contract-labels.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"events.md\" %}\n[events.md](events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"moment-metadata.md\" %}\n[moment-metadata.md](moment-metadata.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"nft-sales.md\" %}\n[nft-sales.md](nft-sales.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"prices.md\" %}\n[prices.md](prices.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"swaps.md\" %}\n[swaps.md](swaps.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"token-transfers.md\" %}\n[token-transfers.md](token-transfers.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"topshot-metadata.md\" %}\n[topshot-metadata.md](topshot-metadata.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"transactions.md\" %}\n[transactions.md](transactions.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"validator-labels.md\" %}\n[validator-labels.md](validator-labels.md)\n{% endcontent-ref %}\n", "doc_id": "e20ff1be-c08d-44e7-ba4d-745339944ede", "embedding": null, "doc_hash": "08f5f587c56509f499c484b5ad46442195423b72f805873ac87bb7f7083969bd", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 2136, "_node_type": "1"}, "relationships": {"1": "240bdd40db78063f2558938a25e571d3a99da90d"}}, "__type__": "1"}, "d717de9b-aed6-4414-9fa2-98ccf28b19f6": {"__data__": {"text": "# Blocks\n\n\n\n| Column           | Type           | Description                                                       |\n| ---------------- | -------------- | ----------------------------------------------------------------- |\n| block\\_height    | NUMBER         | The block height the block was recorded at.                       |\n| block\\_timestamp | TIMESTAMP\\_NTZ | The date and time for when the block was written.                 |\n| network          | TEXT           | The blockchain network the block or transaction occurred on.      |\n| chain\\_id        | TEXT           | The id for the chain of the network on which this block occurred. |\n| tx\\_count        | NUMBER         | The number of transactions in the block.                          |\n| id               | TEXT           | The block hash.                                                   |\n| parent\\_id       | TEXT           | The block hash for the parent block.                              |\n\n{% embed url=\"https://flipside-flow.netlify.app/#!/model/model.flow_models.core__fact_blocks\" %}\nFull Documentation for Core Blocks\n{% endembed %}\n", "doc_id": "d717de9b-aed6-4414-9fa2-98ccf28b19f6", "embedding": null, "doc_hash": "eae19fdedd83583dc04d27a3597e5fca2d6fdab6fb799054640b77cf9fb06ec7", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/blocks.md", "file_name": "blocks.md"}, "node_info": {"start": 0, "end": 1114, "_node_type": "1"}, "relationships": {"1": "b37137ea7e4959bde2232209d70fe7448a991a5f"}}, "__type__": "1"}, "6466bf06-da5d-43c6-9f12-cfb99967d25f": {"__data__": {"text": "# Bridge Transactions\n\n\n\n| tx\\_id                | TEXT           | ID for the transaction.                                                                                                                                                           |\n| --------------------- | -------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| block\\_timestamp      | TIMESTAMP\\_NTZ | The date and time for when the block was written.                                                                                                                                 |\n| block\\_height         | NUMBER         | The block height the block was recorded at.                                                                                                                                       |\n| bridge\\_contract      | TEXT           | The contract address for the bridge used to move tokens to or from Flow.                                                                                                          |\n| token\\_contract       | TEXT           | The contract address for a token on the Flow blockchain.                                                                                                                          |\n| amount                | FLOAT          | The amount of the asset involved in the transaction.                                                                                            ", "doc_id": "6466bf06-da5d-43c6-9f12-cfb99967d25f", "embedding": null, "doc_hash": "606aa3ae9862f2f5932ade62e522f5d92254b3ff1837c468cd9a3a1b5ceaec16", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/bridge-transactions.md", "file_name": "bridge-transactions.md"}, "node_info": {"start": 0, "end": 1550, "_node_type": "1"}, "relationships": {"1": "02072f7ef401ce69eed24f3276b2af5039bb674f", "3": "8acaeb6a-e209-4f34-9c60-6f21fe2f552a"}}, "__type__": "1"}, "8acaeb6a-e209-4f34-9c60-6f21fe2f552a": {"__data__": {"text": "                                                     |\n| flow\\_wallet\\_address | TEXT           | Address of a FLOW wallet related to the transaction.                                                                                                                              |\n| blockchain            | TEXT           | The name of the blockchain for this address or transaction.                                                                                                                       |\n| direction             | TEXT           | For bridging transactions, inbound refers to tokens bridged to the Flow blockchain, while outbound indicated tokens were sent from Flow to another (i.e. to Ethereum, BSC, etc.). |\n| bridge                | TEXT           | The name of the bridge or protocol used.                                                                                                                                          |\n\n{% embed url=\"https://flipside-flow.netlify.app/#!/model/model.flow_models.core__fact_bridge_transactions\" %}\nFull Documentation for Core Bridge Transactions\n{% endembed %}\n", "doc_id": "8acaeb6a-e209-4f34-9c60-6f21fe2f552a", "embedding": null, "doc_hash": "dce012f8076ccc73303b7fb85bc4f2b7438cb59b7d90364e166ed17fd081c550", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/bridge-transactions.md", "file_name": "bridge-transactions.md"}, "node_info": {"start": 1531, "end": 2652, "_node_type": "1"}, "relationships": {"1": "02072f7ef401ce69eed24f3276b2af5039bb674f", "2": "6466bf06-da5d-43c6-9f12-cfb99967d25f"}}, "__type__": "1"}, "1ec7a8a5-4f4d-4a70-9343-cef02fd08c78": {"__data__": {"text": "# Contract Labels\n\n\n\n| Column           | Type | Description                                                                                                                                                                                                                                                                                 |\n| ---------------- | ---- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| event\\_contract  | TEXT | The contract called for this event. This is equivalent to the Contract column on Flowscan and is a concatenation of the contract's account address and primary name.                                                                                                                        |\n| contract\\_name   | TEXT | The primary name of the contract, derived from the full contract address.                                                                                                                                                                                                                   |\n| account\\_address | TEXT | The account address in 0x form that instantiated the contract called in the event. Note, on the Flow blockchain the account and the contract are separate as the account may have created more than one contract, in rare instances, such as the following FLOW address 0x8624b52f9ddcd04a. |\n\n{% embed url=\"https://flipside-flow.netlify.app/#!/model/model.flow_models.core__dim_contract_labels\" %}\nFull Documentation for Core Contract Labels\n{% endembed %}\n", "doc_id": "1ec7a8a5-4f4d-4a70-9343-cef02fd08c78", "embedding": null, "doc_hash": "0598e6d0bc03cabf405e5d3d7f61afb0ac1ff85bfc0e7c46ec865e0677ba3e79", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/contract-labels.md", "file_name": "contract-labels.md"}, "node_info": {"start": 0, "end": 1756, "_node_type": "1"}, "relationships": {"1": "51af1f2e59fa01781ee3e27f08fb18ccd3a4ae0f"}}, "__type__": "1"}, "e6456e53-4975-4941-a201-6065e28dcb17": {"__data__": {"text": "# Events\n\n\n\n| Column           | Type           | Description                                                                                                                                                          |\n| ---------------- | -------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| tx\\_id           | TEXT           | ID for the transaction.                                                                                                                                              |\n| block\\_timestamp | TIMESTAMP\\_NTZ | The date and time for when the block was written.                                                                                                                    |\n| block\\_height    | NUMBER         | The block height the block was recorded at.                                                                                                                          |\n| tx\\_succeeded    | BOOLEAN        | Transaction status, if it succeeded or failed.                                                                                                                       |\n| event\\_index     | NUMBER         | The index of the event within the transaction, i.e. in what order the events occurred.                                                                               |\n| event\\_contract  | TEXT           | The contract called for this event. This is equivalent to the Contract column on Flowscan and is a concatenation", "doc_id": "e6456e53-4975-4941-a201-6065e28dcb17", "embedding": null, "doc_hash": "d31bf43631488473b44b495779305983e6aae00b89e783143ed786a4b41be5f5", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/events.md", "file_name": "events.md"}, "node_info": {"start": 0, "end": 1597, "_node_type": "1"}, "relationships": {"1": "f929b88878f6ae30f4034dca5bc7b98128a9b15e", "3": "6318d340-7d34-4ebb-bb02-01934feb0792"}}, "__type__": "1"}, "6318d340-7d34-4ebb-bb02-01934feb0792": {"__data__": {"text": "event. This is equivalent to the Contract column on Flowscan and is a concatenation of the contract's account address and primary name. |\n| event\\_type      | TEXT           | The type of method called on the event\\_contract. This is equivalent to the Type column on Flowscan.                                                                 |\n| event\\_data      | OBJECT         | The data passed to the event                                                                                                                                         |\n\n{% embed url=\"https://flipside-flow.netlify.app/#!/model/model.flow_models.core__fact_events\" %}\nFull Documentation for Core Events\n{% endembed %}\n", "doc_id": "6318d340-7d34-4ebb-bb02-01934feb0792", "embedding": null, "doc_hash": "194d9fff3cc20d01164969fd786d92119371f66af6e736c3aa21987a07f27be8", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/events.md", "file_name": "events.md"}, "node_info": {"start": 1514, "end": 2210, "_node_type": "1"}, "relationships": {"1": "f929b88878f6ae30f4034dca5bc7b98128a9b15e", "2": "e6456e53-4975-4941-a201-6065e28dcb17"}}, "__type__": "1"}, "feb5bf05-69f4-4c09-a370-2cfc99420d4c": {"__data__": {"text": "# Moment Metadata\n\n{% embed url=\"https://flipside-flow.netlify.app/#!/model/model.flow_models.core__dim_moment_metadata\" %}\nFull documentation for the Moment Metadata table\n{% endembed %}\n\n\n\n| Column          | Description                                                                                                                                                                                               |\n| --------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| nft\\_collection | The contract address or ID for the NFT Collection.                                                                                                                                                        |\n| nft\\_id         | The id of the NFT, usually a number.                                                                                                                                                                      |\n| serial\\_number  | The serial number for the Moment, such as 25, within the collection.                                                                                                                                      |\n| max\\_mint\\_size | The gross NFTs minted for the batch.                                                                                                                                                                     ", "doc_id": "feb5bf05-69f4-4c09-a370-2cfc99420d4c", "embedding": null, "doc_hash": "0f11951d3e743418227b9062a03034f2222eb656f8e69d1cb42dfe361169472a", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/moment-metadata.md", "file_name": "moment-metadata.md"}, "node_info": {"start": 0, "end": 1532, "_node_type": "1"}, "relationships": {"1": "214aee6bee0ebd551048c59c08897912853e07cd", "3": "5d581b77-27be-4d09-bc2c-8c836aa761a2"}}, "__type__": "1"}, "5d581b77-27be-4d09-bc2c-8c836aa761a2": {"__data__": {"text": "                    |\n| play\\_id        | The numeric ID of the play for the moment. For example, with topshot moment ABC may be a version of Play 123. The play id is 123 and moment metadata is associated with the play, rather than the moment. |\n| series\\_id      | The numeric ID for the series of moments or plays. This corresponds with the series column found in some metadata tables.                                                                                 |\n| series\\_name    | The series for this particular set of drops.                                                                                                                                                              |\n| set\\_id         | The numeric ID for the set. This corresponds with the set name found in some metadata columns.                                                                                                            |\n| set\\_name       | Name of the set in which the moment was dropped.                                                                                                                                                          |\n| edition\\_id     | The numeric ID for the edition of moments. This is likely a bundle of moment NFTs within the same type of play, differentiated by some trait like rarity.                                                 |\n| tier            | The tiered rarity of the edition.                                                                                                                                                         ", "doc_id": "5d581b77-27be-4d09-bc2c-8c836aa761a2", "embedding": null, "doc_hash": "746ec821ff02dd521eb590e394587a5b2583db52daf2f30720e21c0f0e14eb34", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/moment-metadata.md", "file_name": "moment-metadata.md"}, "node_info": {"start": 1533, "end": 3105, "_node_type": "1"}, "relationships": {"1": "214aee6bee0ebd551048c59c08897912853e07cd", "2": "feb5bf05-69f4-4c09-a370-2cfc99420d4c", "3": "2c1445cd-d2e3-4418-9195-3f6dd7c14a8b"}}, "__type__": "1"}, "2c1445cd-d2e3-4418-9195-3f6dd7c14a8b": {"__data__": {"text": "                                   |\n| metadata        | A JSON object containing moment or play metadata.                                                                                                                                                         |\n", "doc_id": "2c1445cd-d2e3-4418-9195-3f6dd7c14a8b", "embedding": null, "doc_hash": "ed018a4998e751e18ed2942d106e5e1d5e65d2bd1285c351d8ce7b9a64baa1bb", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/moment-metadata.md", "file_name": "moment-metadata.md"}, "node_info": {"start": 3086, "end": 3347, "_node_type": "1"}, "relationships": {"1": "214aee6bee0ebd551048c59c08897912853e07cd", "2": "5d581b77-27be-4d09-bc2c-8c836aa761a2"}}, "__type__": "1"}, "ccfdcddb-4eeb-4f1a-b574-249d99a272c2": {"__data__": {"text": "# NFT Sales\n\n\n\n| Column           | Type           | Description                                                                                                                                                                                                                                                                                 |\n| ---------------- | -------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| tx\\_id           | TEXT           | ID for the transaction.                                                                                                                                                                                                                                                                     |\n| block\\_height    | NUMBER         | The block height the block was recorded at.                                                                                                                                                                                                                                                 |\n| block\\_timestamp | TIMESTAMP\\_NTZ | The date and time for when the block was written.                                                                       ", "doc_id": "ccfdcddb-4eeb-4f1a-b574-249d99a272c2", "embedding": null, "doc_hash": "658ce9a1eb677e8034de12d8271dae4ab2136a3860fa32258ef72d93b34a3645", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/nft-sales.md", "file_name": "nft-sales.md"}, "node_info": {"start": 0, "end": 1469, "_node_type": "1"}, "relationships": {"1": "caeceb80adf98350d352cf51992b804891ed57e6", "3": "88bcd294-cfd5-41bc-950d-fad27b19d6a6"}}, "__type__": "1"}, "88bcd294-cfd5-41bc-950d-fad27b19d6a6": {"__data__": {"text": "                                                                                                                                                                                       |\n| marketplace      | TEXT           | Contract address for the marketplace where the transaction occurred. Flow uses a general-purpose contract at \\`A.4eb8a10cb9f87357.NFTStorefront\\` for a significant number of sales. This column does not necessarily indicate the website or specific platform on which the sale occurred. |\n| nft\\_collection  | TEXT           | The contract address or ID for the NFT Collection.                                                                                                                                                                                                                                          |\n| nft\\_id          | TEXT           | The id of the NFT, usually a number.                                                                                                                                                                                                                                                        |\n| buyer            | TEXT           | The party in the transaction purchasing the asset, this is an account address.                                                                                                          ", "doc_id": "88bcd294-cfd5-41bc-950d-fad27b19d6a6", "embedding": null, "doc_hash": "d4317073ede2ea3fd70657c1bd1032c441feef1353f34865f5b8d8601f4cc76a", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/nft-sales.md", "file_name": "nft-sales.md"}, "node_info": {"start": 1470, "end": 2849, "_node_type": "1"}, "relationships": {"1": "caeceb80adf98350d352cf51992b804891ed57e6", "2": "ccfdcddb-4eeb-4f1a-b574-249d99a272c2", "3": "55d86028-3e34-4971-b30d-36d17d7c9937"}}, "__type__": "1"}, "55d86028-3e34-4971-b30d-36d17d7c9937": {"__data__": {"text": "                                                                                                                       |\n| seller           | TEXT           | The party in the transaction selling the asset, this is an account address.                                                                                                                                                                                                                 |\n| price            | FLOAT          | The price of the asset, in the currency specified in the table.                                                                                                                                                                                                                             |\n| currency         | TEXT           | The contract address refering to the currency used in the transaction. This may or may not relate to a token in the prices table, depending on the marketplace or transaction.                                                                                                              |\n| tx\\_succeeded    | BOOLEAN        | Transaction status, if it succeeded or failed.                                                                                                                                           ", "doc_id": "55d86028-3e34-4971-b30d-36d17d7c9937", "embedding": null, "doc_hash": "5ce1cb6bd9bcba7fc73bba75a312da3b6cd1d3cbee75e890bcc8c7c1f4a8eac8", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/nft-sales.md", "file_name": "nft-sales.md"}, "node_info": {"start": 2850, "end": 4166, "_node_type": "1"}, "relationships": {"1": "caeceb80adf98350d352cf51992b804891ed57e6", "2": "88bcd294-cfd5-41bc-950d-fad27b19d6a6", "3": "dbead414-6c79-42fe-ac7d-109810b80810"}}, "__type__": "1"}, "dbead414-6c79-42fe-ac7d-109810b80810": {"__data__": {"text": "                                                                                                                      |\n| tokenflow        | ARRAY          | An array of events tracking the flow of tokens, in event\\_index order, for a transaction. This is constructed from the following events within a transaction: \\`TokensDeposited\\`, \\`TokensWithdrawn\\`, \\`ForwardedDeposit\\`.                                                               |\n| counterparties   | ARRAY          | An array containing the addresses interacted with during the tokenflow of the transaction. This contains all payers and recipients of tokens within the transaction.                                                                                                                        |\n\n{% embed url=\"https://flipside-flow.netlify.app/#!/model/model.flow_models.core__fact_nft_sales\" %}\nFull Documentation for Core NFT Sales\n{% endembed %}\n", "doc_id": "dbead414-6c79-42fe-ac7d-109810b80810", "embedding": null, "doc_hash": "247897e8a58f8d137c7129f69402445adcea5ab899bb4fe5dabbe8a4c82f6820", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/nft-sales.md", "file_name": "nft-sales.md"}, "node_info": {"start": 4147, "end": 5069, "_node_type": "1"}, "relationships": {"1": "caeceb80adf98350d352cf51992b804891ed57e6", "2": "55d86028-3e34-4971-b30d-36d17d7c9937"}}, "__type__": "1"}, "bc951f4e-b96c-4e4c-8a70-efb6f92bc708": {"__data__": {"text": "# Prices\n\n\n\n| Column          | Type           | Description                                                                                                                                                                                                                                                     |\n| --------------- | -------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| timestamp       | TIMESTAMP\\_NTZ | Timestamp of when the data was recorded from the API or from on-chain data, depending on the source.                                                                                                                                                            |\n| token           | TEXT           | Friendly name of the crypto token, e.g. Blocto Token.                                                                                                                                                                                                           |\n| symbol          | TEXT           | Short-name symbol for the crypto token, e.g. BLT.                                                                                                                                                                                                               |\n| token\\_contract |", "doc_id": "bc951f4e-b96c-4e4c-8a70-efb6f92bc708", "embedding": null, "doc_hash": "af3b8a5fa1811a4ba88e7a5ace4255fab2a4e54ca652c9ab8f62b60814b89a38", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/prices.md", "file_name": "prices.md"}, "node_info": {"start": 0, "end": 1506, "_node_type": "1"}, "relationships": {"1": "ea811ad39f7ea9edd996d9019254b9f23fe0551f", "3": "a2b23d11-a0c6-49fe-932d-4fb15219bef7"}}, "__type__": "1"}, "a2b23d11-a0c6-49fe-932d-4fb15219bef7": {"__data__": {"text": "            |\n| token\\_contract | TEXT           | The contract address for a token on the Flow blockchain.                                                                                                                                                                                                        |\n| price\\_usd      | FLOAT          | Asset price, in USD.                                                                                                                                                                                                                                            |\n| source          | TEXT           | Data source for the record in question. E.g. for the prices table, this may be an API or derived from swaps. Stableswap indicates the price was calculated from a swap where one of the assets was a stablecoin, while for a flowswap the other token was Flow. |\n\n{% embed url=\"https://flipside-flow.netlify.app/#!/model/model.flow_models.core__fact_prices\" %}\nFull Documentation for Core Prices\n{% endembed %}\n", "doc_id": "a2b23d11-a0c6-49fe-932d-4fb15219bef7", "embedding": null, "doc_hash": "d2d38cbabcc30e0f86475d67a49946fcef066fb5bcbe2a01d6269e49314c0557", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/prices.md", "file_name": "prices.md"}, "node_info": {"start": 1473, "end": 2520, "_node_type": "1"}, "relationships": {"1": "ea811ad39f7ea9edd996d9019254b9f23fe0551f", "2": "bc951f4e-b96c-4e4c-8a70-efb6f92bc708"}}, "__type__": "1"}, "95c926fd-ee35-4882-846f-45a8a94d2b21": {"__data__": {"text": "# Swaps\n\n\n\n| Column               | Type           | Description                                                                                |\n| -------------------- | -------------- | ------------------------------------------------------------------------------------------ |\n| tx\\_id               | TEXT           | ID for the transaction.                                                                    |\n| block\\_timestamp     | TIMESTAMP\\_NTZ | The date and time for when the block was written.                                          |\n| block\\_height        | NUMBER         | The block height the block was recorded at.                                                |\n| swap\\_contract       | TEXT           | The smart contract address of the DEX swap pool.                                           |\n| trader               | TEXT           | The account address of the trader performing the swap action.                              |\n| token\\_out\\_amount   | FLOAT          | The amount of the token being swapped that the trader is sending to the pool (selling).    |\n| token\\_out\\_contract | TEXT           | The smart contract address for the token that is being swapped out of the traders wallet.  |\n| token\\_in\\_amount    | FLOAT          | The amount of the token being swapped that the trader is receiving from the pool (buying). |\n| token\\_in\\_contract  | TEXT           | The smart contract address for the token that is being swapped into the traders wallet.    |\n\n{% embed url=\"https://flipside-flow.netlify.app/#!/model/model.flow_models.core__fact_swaps\" %}\nFull Documentation for Core Swaps\n{% endembed %}\n", "doc_id": "95c926fd-ee35-4882-846f-45a8a94d2b21", "embedding": null, "doc_hash": "fefd1629689d2a65470c69d9b2ca0221bc59dfdf16151792d7d864abcd7501cf", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/swaps.md", "file_name": "swaps.md"}, "node_info": {"start": 0, "end": 1642, "_node_type": "1"}, "relationships": {"1": "e605adb9186c10332670bef7ad37b5cafcf3999a"}}, "__type__": "1"}, "5903f7c7-aa1d-44b5-80b2-13dc1a1afd92": {"__data__": {"text": "# Token Transfers\n\n\n\n| Column           | Type           | Description                                              |\n| ---------------- | -------------- | -------------------------------------------------------- |\n| tx\\_id           | TEXT           | ID for the transaction.                                  |\n| block\\_timestamp | TIMESTAMP\\_NTZ | The date and time for when the block was written.        |\n| block\\_height    | NUMBER         | The block height the block was recorded at.              |\n| sender           | TEXT           | Address sending the transferred token.                   |\n| recipient        | TEXT           | Address receiving the transferred token.                 |\n| token\\_contract  | TEXT           | The contract address for a token on the Flow blockchain. |\n| amount           | NUMBER         | The amount of the asset involved in the transaction.     |\n| tx\\_succeeded    | BOOLEAN        | Transaction status, if it succeeded or failed.           |\n\n{% embed url=\"https://flipside-flow.netlify.app/#!/model/model.flow_models.core__ez_token_transfers\" %}\nFull Documentation for Core Token Transfers\n{% endembed %}\n", "doc_id": "5903f7c7-aa1d-44b5-80b2-13dc1a1afd92", "embedding": null, "doc_hash": "478bd21ef8262173d4d7fa65c223898bc89bf75cdb91eba1882189c42b6b1483", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/token-transfers.md", "file_name": "token-transfers.md"}, "node_info": {"start": 0, "end": 1155, "_node_type": "1"}, "relationships": {"1": "356e28dd737c28096b10d073590f5bc53ce522eb"}}, "__type__": "1"}, "0fc91b5c-171f-4198-bd2e-e56d1ac5288f": {"__data__": {"text": "# TopShot Metadata\n\n\n\n| Column                          | Type           | Description                                                                                                                                       |\n| ------------------------------- | -------------- | ------------------------------------------------------------------------------------------------------------------------------------------------- |\n| nft\\_id                         | TEXT           | The id of the NFT, usually a number.                                                                                                              |\n| nft\\_collection                 | TEXT           | The contract address or ID for the NFT Collection.                                                                                                |\n| nbatopshot\\_id                  | TEXT           | The ID used by NBA TopShot. This can be pasted into the URL https://nbatopshot.com/moment/{nbatopshot\\_id} to view the moment on the marketplace. |\n| serial\\_number                  | NUMBER         | The serial number for the Moment, such as 25, within the collection.                                                                              |\n| total\\_circulation              | NUMBER         | The total number of moments minted for the particular play.                                                                                       |\n| moment\\_description             | TEXT           | Long-form description of the play, from NBA TopShot.                                                                                         ", "doc_id": "0fc91b5c-171f-4198-bd2e-e56d1ac5288f", "embedding": null, "doc_hash": "05b9a64af52a744ddf551afd454fc985dd0a3dabff240c0e5ea67693dbf3cd00", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/topshot-metadata.md", "file_name": "topshot-metadata.md"}, "node_info": {"start": 0, "end": 1623, "_node_type": "1"}, "relationships": {"1": "521cab09631a4b86fc84a1312f3c113ee732f73e", "3": "28678798-a0bf-4eeb-886e-23ba62981d58"}}, "__type__": "1"}, "28678798-a0bf-4eeb-886e-23ba62981d58": {"__data__": {"text": "                        |\n| player                          | TEXT           | The player who is the focus of the moment.                                                                                                        |\n| team                            | TEXT           | The team that the player from the moment is on, at the time of the moment.                                                                        |\n| season                          | TEXT           | The season during which the moment occurred.                                                                                                      |\n| play\\_category                  | TEXT           | The broad category of play that is shown in the moment.                                                                                           |\n| play\\_type                      | TEXT           | The more granular (than play\\_category) type of play that is shown in the moment.                                                                 |\n| moment\\_date                    | TIMESTAMP\\_NTZ | When the moment occurred.                                                                                                                         |\n| set\\_name                       | TEXT           | Name of the set in which the moment was dropped.                                 ", "doc_id": "28678798-a0bf-4eeb-886e-23ba62981d58", "embedding": null, "doc_hash": "a0d406ccd462090899b2521f25b4de20938563c394f19a2947deac4a8447352e", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/topshot-metadata.md", "file_name": "topshot-metadata.md"}, "node_info": {"start": 1624, "end": 2990, "_node_type": "1"}, "relationships": {"1": "521cab09631a4b86fc84a1312f3c113ee732f73e", "2": "0fc91b5c-171f-4198-bd2e-e56d1ac5288f", "3": "1b1cd5a5-f7d0-4e5d-9e05-497bb4271f3e"}}, "__type__": "1"}, "1b1cd5a5-f7d0-4e5d-9e05-497bb4271f3e": {"__data__": {"text": "                                                                                    |\n| set\\_series\\_number             | NUMBER         | The series number for this particular set of drops, within the set\\_name.                                                                         |\n| video\\_urls                     | ARRAY          | An array containing links to the moments.                                                                                                         |\n| moment\\_stats\\_full             | OBJECT         | A dictionary of the full moment stats.                                                                                                            |\n| player\\_stats\\_game             | OBJECT         | The statline for the player in the Moment, from the game highlighted.                                                                             |\n| player\\_stats\\_season\\_to\\_date | OBJECT         | The season stats for the player as of the game featured in the moment.                                                                            |\n\n{% embed url=\"https://flipside-flow.netlify.app/#!/model/model.flow_models.silver__nft_topshot_metadata\" %}\nFull Documentation for TopShot Metadata\n{% endembed %}\n", "doc_id": "1b1cd5a5-f7d0-4e5d-9e05-497bb4271f3e", "embedding": null, "doc_hash": "cb3e5155931f4c756619bd9c45dd007aabe6973949df02b1ecfb195fe1d5dc71", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/topshot-metadata.md", "file_name": "topshot-metadata.md"}, "node_info": {"start": 2971, "end": 4226, "_node_type": "1"}, "relationships": {"1": "521cab09631a4b86fc84a1312f3c113ee732f73e", "2": "28678798-a0bf-4eeb-886e-23ba62981d58"}}, "__type__": "1"}, "39dfbb36-6aee-4c66-bf3d-705737f05966": {"__data__": {"text": "# Transactions\n\n\n\n| Column              | Type           | Description                                                       |\n| ------------------- | -------------- | ----------------------------------------------------------------- |\n| tx\\_id              | TEXT           | ID for the transaction.                                           |\n| block\\_timestamp    | TIMESTAMP\\_NTZ | The date and time for when the block was written.                 |\n| block\\_height       | NUMBER         | The block height the block was recorded at.                       |\n| chain\\_id           | TEXT           | The id for the chain of the network on which this block occurred. |\n| tx\\_index           | NUMBER         | tbd                                                               |\n| proposer            | TEXT           | Address of the transaction proposer.                              |\n| payer               | TEXT           | Address of the wallet paying for the transaction.                 |\n| authorizers         | ARRAY          | Address(es) authorizing the transaction.                          |\n| count\\_authorizers  | NUMBER         | Number of authorizers                                             |\n| gas\\_limit          | NUMBER         | Upper gas limit attached to the transaction.                      |\n| transaction\\_result | VARIANT        | Outcome of the transaction, including events that were called.    |\n| tx\\_succeeded       | BOOLEAN        | Transaction status, if it succeeded or failed.                    |\n| error\\_msg          | TEXT           | Error message, if the transaction failed, explaining why.         |\n\n{% embed url=\"https://flipside-flow.netlify.app/#!/model/model.flow_models.core__fact_transactions\" %}\nFull Documentation for Core Transactions\n{% endembed %}\n", "doc_id": "39dfbb36-6aee-4c66-bf3d-705737f05966", "embedding": null, "doc_hash": "53e6cdd33e3b98313fbf440c2adbae93c5c7db3c8d84503a17b22ca856399b28", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/transactions.md", "file_name": "transactions.md"}, "node_info": {"start": 0, "end": 1813, "_node_type": "1"}, "relationships": {"1": "be9f2ce086eacebcd83cfb9b27195278a71cdf88"}}, "__type__": "1"}, "623150d2-a09b-4c84-a76d-3c66d73c5cdb": {"__data__": {"text": "# Validator Labels\n\n\n\n| Column          | Type | Description                                                                                                                                                                                                                          |\n| --------------- | ---- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| node\\_id        | TEXT | The address, known on the Flow blockchain as Node ID, of the validator.                                                                                                                                                              |\n| validator\\_type | TEXT | The role of the node from one of the following options: collection, consensus, execution, verification, access. See the Flow [documentation](https://docs.onflow.org/node-operation/node-roles/) here for more.                      |\n| project\\_name   | TEXT | The overarching project name, related to the address name. For example, Kraken (vs. Kraken Deposit Wallet for address\\_names). For validators, this will be the name only if provided as most validators do not provide such a name. |\n\n{% embed url=\"https://flipside-flow.netlify.app/#!/model/model.flow_models.core__dim_validator_labels\" %}\nFull Documentation for Core Validator Labels\n{% endembed %}\n", "doc_id": "623150d2-a09b-4c84-a76d-3c66d73c5cdb", "embedding": null, "doc_hash": "25b6c935a0af673659f3d9888c7d9b691d5e1b8f1e4f33628b8b2fda2d040ade", "extra_info": {"file_path": "our-data/archive/tables/flow-tables/validator-labels.md", "file_name": "validator-labels.md"}, "node_info": {"start": 0, "end": 1479, "_node_type": "1"}, "relationships": {"1": "7e216e816b54aa2a877e60607f779a1386a1b8f1"}}, "__type__": "1"}, "cb3143a1-c849-479b-a79c-95aa0cd1db8a": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Gnosis Tables\n\nDocumentation for \\`gnosis\\` tables can be found [here](https://flipsidecrypto.github.io/gnosis-models/#!/overview).\n\nThe public Github repo with Gnosis model source code is [here](https://github.com/FlipsideCrypto/gnosis-models).\n\nPlease note, data is in 'lite mode' - meaning, historical data has not yet been backfilled. Please see the `min(block`\\_`timestamp)`.&#x20;\n\nQuick Links to Table Docs:\n\n* [`fact_event_logs`](https://flipsidecrypto.github.io/gnosis-models/#!/model/model.gnosis\\_models.core\\_\\_fact\\_event\\_logs)\n* [`fact_transactions`](https://flipsidecrypto.github.io/gnosis-models/#!/model/model.gnosis\\_models.core\\_\\_fact\\_transactions)\n* [`fact_blocks`](https://flipsidecrypto.github.io/gnosis-models/#!/model/model.gnosis\\_models.core\\_\\_fact\\_blocks)\n* [`fact_traces`](https://flipsidecrypto.github.io/gnosis-models/#!/model/model.gnosis\\_models.core\\_\\_fact\\_traces)\n* &#x20;[`fact_token_transfers`](https://flipsidecrypto.github.io/gnosis-models/#!/model/model.gnosis\\_models.core\\_\\_fact\\_token\\_transfers)\n* [`dim_labels`](https://flipsidecrypto.github.io/gnosis-models/#!/model/model.gnosis\\_models.core\\_\\_dim\\_labels)\n* [`ez_xdai_transfers`](https://flipsidecrypto.github.io/gnosis-models/#!/model/model.gnosis\\_models.core\\_\\_ez\\_xdai\\_transfers)\n\n\n\n`Sushi specific tables:`\n\n* [sushi\\_\\_dim\\_dex\\_pools](https://cloud.getdbt.com/accounts/1258/runs/80579141/docs/#!/model/model.gnosis\\_models.sushi\\_\\_dim\\_dex\\_pools)\n* [sushi\\_\\_dim\\_kashi\\_pairs](https://cloud.getdbt.com/accounts/1258/runs/80579141/docs/#!/model/model.gnosis\\_models.sushi\\_\\_dim\\_kashi\\_pairs)\n* [sushi\\_\\_ez\\_swaps ](https://cloud.getdbt.com/accounts/1258/runs/80579141/docs/#!/model/model.gnosis\\_models.sushi\\_\\_ez\\_swaps)\n* [sushi\\_\\_ez\\_borrowing](https://cloud.getdbt.com/accounts/1258/runs/80579141/docs/#!/model/model.gnosis\\_models.sushi\\_\\_ez\\_borrowing)\n* [sushi\\_\\_ez\\_lending](https://cloud.getdbt.com/accounts/1258/runs/80579141/docs/#!/model/model.gnosis\\_models.sushi\\_\\_ez\\_lending)\n", "doc_id": "cb3143a1-c849-479b-a79c-95aa0cd1db8a", "embedding": null, "doc_hash": "ca35db170ed7525976558e8872a084d8ce2cb32ab6301ee9ac62966cf33b59fb", "extra_info": {"file_path": "our-data/archive/tables/gnosis-tables.md", "file_name": "gnosis-tables.md"}, "node_info": {"start": 0, "end": 2102, "_node_type": "1"}, "relationships": {"1": "522a1c2198be25e06bfd5f2c057f58e2f3f5f586"}}, "__type__": "1"}, "357e09a9-0027-41c9-901d-395c2a0b79f3": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# NEAR Tables\n\nThe data models for NEAR have been updated to use the [Near Lake S3 Bucket](https://docs.near.org/tools/realtime#near-lake-indexer), which is the same data source that feeds NEAR's explorer, as of January 23rd, 2023. The core views available to Flipside data users remain the exact same, but the below linked documentation may be a bit cumbersome until the legacy models are fully deleted. If using the lineage graph, [apply a filter on the tag `s3_load`](https://flipsidecrypto.github.io/near-models/#!/overview?g\\_v=1\\&g\\_i=%2Btag:s3\\_load%2B%20%2Btag:api%2B) to exclude legacy models. Further, deprecated models have been moved to `models/silver/legacy/` to keep them out of sight.\n\nPlease click this link below for the full documentation:\n\n{% embed url=\"https://flipsidecrypto.github.io/near-models/\" %}\n", "doc_id": "357e09a9-0027-41c9-901d-395c2a0b79f3", "embedding": null, "doc_hash": "a3fab6165ca47e087e80549bfffdd8215528cabe9f7362fd71af13f7674bc048", "extra_info": {"file_path": "our-data/archive/tables/near-tables.md", "file_name": "near-tables.md"}, "node_info": {"start": 0, "end": 906, "_node_type": "1"}, "relationships": {"1": "3bd62b5a306ed81a1569600e12faca526f15ac81"}}, "__type__": "1"}, "d3c4c32a-351b-47e6-8b39-1b8ce7a98013": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Optimism Tables\n\nDocumentation for `optimism` tables can be found [here](https://flipsidecrypto.github.io/optimism-models/#!/overview).\n\nThe public Github repo with Optimism model source code is [here](https://github.com/FlipsideCrypto/optimism-models).\\\n\\\nPlease note, data is in 'lite mode' - meaning, historical data has not yet been backfilled. Please see the `min(block`\\_`timestamp)`\\\n\\\nQuick Links to Table Docs:\n\n* [`fact_event_logs`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.core\\_\\_fact\\_blocks)\n* [`fact_transactions`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.core\\_\\_fact\\_transactions)\n* [`fact_blocks`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.core\\_\\_fact\\_blocks)\n* [`fact_traces`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.core\\_\\_fact\\_traces)\n* [`fact_token_transfers`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.core\\_\\_fact\\_token\\_transfers)\n* [`dim_labels`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.core\\_\\_dim\\_labels)\n* [`dim_contracts`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.core\\_\\_dim\\_contracts)\n* [`ez_eth_transfers`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.core\\_\\_ez\\_eth\\_transfers)\n* [`dim_contracts`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.core\\_\\_dim\\_contracts)\n\nVelodrome\n\n* [`ez_claimed_rewards`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.velodrome\\_\\_ez\\_claimed\\_rewards)\n* [`ez_lp_actions`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.velodrome\\_\\_ez\\_lp\\_actions)\n* [`ez_pool_details`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.velodrome\\_\\_ez\\_pool\\_details)\n* [`ez_staking_actions`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.velodrome\\_\\_ez\\_staking\\_actions)\n* [`ez_swaps`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.velodrome\\_\\_ez\\_swaps)\n* [`ez_velo_locks`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.velodrome\\_\\_ez\\_velo\\_locks)\n*", "doc_id": "d3c4c32a-351b-47e6-8b39-1b8ce7a98013", "embedding": null, "doc_hash": "402c8d4f24efffcdf4b7bed79afc4ed6d38e925d566382b313d87d4656ae42dc", "extra_info": {"file_path": "our-data/archive/tables/optimism-tables.md", "file_name": "optimism-tables.md"}, "node_info": {"start": 0, "end": 2459, "_node_type": "1"}, "relationships": {"1": "bce78121bca90a97161b8a7abcf962dfb5a02bb3", "3": "bdbb3399-8f49-4a4c-9170-9d547d6e0f84"}}, "__type__": "1"}, "bdbb3399-8f49-4a4c-9170-9d547d6e0f84": {"__data__": {"text": "[`ez_votes`](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.velodrome\\_\\_ez\\_votes)\n\n\n\n`Sushi`\n\n* [dim\\_ _dex_\\_ pools](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.sushi\\_\\_dim\\_dex\\_pools)\n* [ez\\_swaps](https://flipsidecrypto.github.io/optimism-models/#!/model/model.optimism\\_models.sushi\\_\\_ez\\_swaps)\n\n\n\nNote: when working with the `fact_transactions` and `fact_event_logs` tables, you may find it useful to use the [ethereum.public.hex\\_to\\_int() function](../../hex-to-integer-function.md).\n\n", "doc_id": "bdbb3399-8f49-4a4c-9170-9d547d6e0f84", "embedding": null, "doc_hash": "9a341c932172c7d58d5f53fcb157b0997003ed4905747a5377bb3444597f03ea", "extra_info": {"file_path": "our-data/archive/tables/optimism-tables.md", "file_name": "optimism-tables.md"}, "node_info": {"start": 2460, "end": 3029, "_node_type": "1"}, "relationships": {"1": "bce78121bca90a97161b8a7abcf962dfb5a02bb3", "2": "d3c4c32a-351b-47e6-8b39-1b8ce7a98013"}}, "__type__": "1"}, "e4e4a2de-8f9e-4377-9ca3-212b583c9357": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Osmosis Tables\n\n### Background of Osmosis\n\n**Blockchain:** [Osmosis](https://app.osmosis.zone/)\n\nOsmosis is a proof-of-stake IBC blockchain with a decentralized exchange application enabling users to provide liquidity, swap, and stake tokens from across the Cosmos ecosystem. The Osmosis Frontier application, which is a full permissionless listing and curation of bridged ETH and CW20 assets, exists alongside the main Osmosis application.&#x20;\n\nThe native token of Osmosis, Osmo, is used for governance and paying transaction fees for actions performed on the DEX. There are a few points that make Osmosis a unique DEX:\n\n* **Self-Governing Liquidity Pools:** In Osmosis, the LP shares are used to calculate the fractional ownership of a LP, as well as the right to participate in the strategic decision making of the LP via governance. To incentivize long-term liquidity commitment, shares must be locked up for an extended period. Longer-term commitments are awarded by additional voting power and additional liquidity mining revenue.\n* **Superfluid Staking:** A method of staking the OSMO tokens that underlie your LP positions to earn additional rewards. Superfluid staking is at time of writing only available on certain OSMO pools on Osmosis.\n* **MEV Resistance:** Osmosis was conceived with the goal of Maximal Extractable Value (MEV) resistance at its core and includes several unique solutions to help limit MEV.\n\n### Current Osmosis Tables\n\nThe Osmosis tables are built on Osmosis transaction and messages information.&#x20;\n\n[Fact Blocks](osmosis-fact-blocks-table.md)\n\n[Fact Daily Balances](osmosis-daily-balances.md)\n\n[Fact Governance Proposal Deposits](osmosis-fact-governance-proposal-deposits.md)\n\n[Fact Governance Submit Proposal](osmosis-fact-governance-submit-proposal.md)&#x20;\n\n[Fact Governance Votes](osmosis-fact-governance-votes.md)\n\n[Dim Labels ](osmosis-dim-labels.md)\n\n[Dim Liquidity Pools](osmosis-dim-liquidity-pools.md)\n\n[Fact Liquidity Provider Actions](osmosis-fact-liquidity-provider-actions.md)&#x20;\n\n[Fact Msg Attributes](osmosis-fact-msg-attributes-table.md)\n\n[Fact Msgs](osmosis-fact-msgs-table.md)\n\n[Dim Prices](osmosis-dim-prices.md)\n\n[Fact Staking Rewards](osmosis-fact-staking-rewards.md)\n\n[Fact Staking](osmosis-fact-staking.md)\n\n[Fact Superfluid Staking](osmosis-fact-superfluid-staking.md)\n\n[Fact Swaps](osmosis-fact-swaps.md)\n\n[Dim Tokens](osmosis-dim-tokens.md)\n\n[Fact Transactions](osmosis-fact-transactions-table.md)\n\n[Fact Transfers](osmosis-fact-transfers.md)\n\n[Fact Validators](osmosis-fact-validators.md)\n\n[Dim Vote Options](osmosis-dim-vote-options.md)\n\n[EZ Prices](osmosis-ez-prices.md)\n\n[EZ ICNS](osmosis-ez-icns.md)\n\n#### What we have:\n\n* All on-chain Osmosis events dating back to the genesis block in June 2021.&#x20;\n* Labels for all available tokens and liquidity pools on the Osmosis app and Osmosis validators.\n\n####", "doc_id": "e4e4a2de-8f9e-4377-9ca3-212b583c9357", "embedding": null, "doc_hash": "be7d0aef99267fb1a0112f8e6c741aad27ae761c4f73240e36385c5f2fce4857", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 2966, "_node_type": "1"}, "relationships": {"1": "eabb6a31dc07b1ba7f472a5d8048698cac9d2d19", "3": "e9558a93-8e6e-4cc3-b774-f362a2de6b2f"}}, "__type__": "1"}, "e9558a93-8e6e-4cc3-b774-f362a2de6b2f": {"__data__": {"text": "liquidity pools on the Osmosis app and Osmosis validators.\n\n#### What we don't have:&#x20;\n\n* Data related to pool APY, as this is not available on chain.&#x20;\n* Some labels & decimals for LP tokens and low market cap tokens.&#x20;\n", "doc_id": "e9558a93-8e6e-4cc3-b774-f362a2de6b2f", "embedding": null, "doc_hash": "87cc314fb3410a84cd137353d9a678628be2eda7fbb530bfeddf0b09a99006a4", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 2902, "end": 3135, "_node_type": "1"}, "relationships": {"1": "eabb6a31dc07b1ba7f472a5d8048698cac9d2d19", "2": "e4e4a2de-8f9e-4377-9ca3-212b583c9357"}}, "__type__": "1"}, "712291cc-9556-4419-b697-5a138f2051cc": {"__data__": {"text": "# Osmosis Daily Balances\n\n### Table Schema\n\n`osmosis.core.daily_balances`\n\nThis table is currently under development and will release in the Velocity App soon. This table only includes balances for addresses that are actively staking or providing liquidity to a liquidity pool. If an address is not doing either of these actions on a given date, it will not be represented in the table on that date.&#x20;\n\n| Field         | Type      | Description                                                |\n| ------------- | --------- | ---------------------------------------------------------- |\n| date          | timestamp | The day that the balance corresponds to.                   |\n| balance\\_type | string    | Either \"staked\" or \"liquid.\"                               |\n| address       | string    | The wallet that the balance belongs to.                    |\n| currency      | string    | An address that corresponds to the currency in the wallet. |\n| decimal       | integer   | Divide \"balance\" by POW(10, decimal) to get the balance.   |\n| balance       | integer   | The amount of currency in the wallet on the given day.     |\n", "doc_id": "712291cc-9556-4419-b697-5a138f2051cc", "embedding": null, "doc_hash": "cfa10d8166e10fe28251e4b13c9717d309c37346b2e1677e3d4589d0e90eddc5", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-daily-balances.md", "file_name": "osmosis-daily-balances.md"}, "node_info": {"start": 0, "end": 1135, "_node_type": "1"}, "relationships": {"1": "130d94bc314ebd462ea4a854c703cdff9f7f24fb"}}, "__type__": "1"}, "d698d37c-2a42-423e-99dd-c1a99e95247d": {"__data__": {"text": "# Osmosis Dim Labels\n\n### Table Schema\n\n`osmosis.core.dim_labels`\n\n| Field          | Type   | Description                                                                                     |\n| -------------- | ------ | ----------------------------------------------------------------------------------------------- |\n| blockchain     | string | Cross-chain identifier. In this table, `blockchain` will always be Osmosis.                     |\n| address        | string | Address that the label is associated with.                                                      |\n| creator        | string | Name of the creator of the label.                                                               |\n| label\\_type    | string | A high-level category describing the addresses main function or ownership (eg validator).       |\n| label\\_subtype | string | A sub-category nested within label type providing further detail (e.g. exchange deposit wallet) |\n| label          | string | The name of the entity that controls the address (e.g. Cosmostation)                            |\n| project\\_name  | string | A description of the use of the address by the controlling entity.                              |\n| raw\\_metadata  | json   | A json structure containing additional information about the label where available.             |\n", "doc_id": "d698d37c-2a42-423e-99dd-c1a99e95247d", "embedding": null, "doc_hash": "5a95e0a554d30e7cceaff558733de89c5de04067dc1eb0d013a4605bb0839129", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-dim-labels.md", "file_name": "osmosis-dim-labels.md"}, "node_info": {"start": 0, "end": 1327, "_node_type": "1"}, "relationships": {"1": "5bd8fb8130646b27ab0efbad7151a049e0d80988"}}, "__type__": "1"}, "2f9d366b-9d56-4eb9-aaf1-9d6940d48386": {"__data__": {"text": "# Osmosis Dim Liquidity Pools\n\n### Table Schema\n\n`osmosis.core.dim_liquidity_pools`\n\n| Field      | Type    | Description                                                        |\n| ---------- | ------- | ------------------------------------------------------------------ |\n| blockchain | string  | In this table, always Osmosis. Used to join to cross-chain tables. |\n| module     | string  | Module used to create liquidity pool                               |\n| pool\\_id   | integer | Identifier for the pool within the module                          |\n| assets     | object  | List of 2 or more asset addresses belonging to the pool            |\n\n", "doc_id": "2f9d366b-9d56-4eb9-aaf1-9d6940d48386", "embedding": null, "doc_hash": "59b265b5c2612b5f9befb87e00fca98d25fe16c05f49ef8519059f95d4fa22be", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-dim-liquidity-pools.md", "file_name": "osmosis-dim-liquidity-pools.md"}, "node_info": {"start": 0, "end": 650, "_node_type": "1"}, "relationships": {"1": "56db32c9ee99c0654f0e5602466cc85308d5fb7b"}}, "__type__": "1"}, "60144fcf-0315-4970-a08e-72d7ba8cde46": {"__data__": {"text": "# Osmosis Dim Prices\n\n### Table Schema\n\n`osmosis.core.dim_prices`\n\nThree different sources are used to create this prices table. Coingecko, Coinmarketcap, and the swaps table. When using prices from the swaps table, please note that prices calculated during hours with low transaction volumes and / or a low number of swaps may be incorrect.&#x20;\n\n| Field         | Type      | Description                                                                                  |\n| ------------- | --------- | -------------------------------------------------------------------------------------------- |\n| recorded\\_at  | timestamp | The day and hour that the price was recorded.                                                |\n| symbol        | string    | The short-hand, symbolic notation for the currency. This is what shows up on price tickers.  |\n| price         | number    | The fiat cost of the asset at this point in time in USD.                                     |\n| total\\_supply | number    | The supply of the currency in circulation.                                                   |\n| volume\\_24h   | number    | The amount in USD of the currency that has been traded in a 24 hour period.                  |\n| provider      | string    | The source the price was pulled from.                                                        |\n", "doc_id": "60144fcf-0315-4970-a08e-72d7ba8cde46", "embedding": null, "doc_hash": "f3d4e405afe050bddbfa97cd2264d723569b73d53b6b581efed009f4bb3d446a", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-dim-prices.md", "file_name": "osmosis-dim-prices.md"}, "node_info": {"start": 0, "end": 1349, "_node_type": "1"}, "relationships": {"1": "4ccdb2fb751c41374dc41d390b4ec5bd2a5fa017"}}, "__type__": "1"}, "9fb78d77-ac1a-428e-94fe-e93ca9f9faf7": {"__data__": {"text": "# Osmosis Dim Tokens\n\n### Table Schema\n\n`osmosis.core.dim_tokens`\n\n| Field          | Type   | Description                                                                                                                                                                          |\n| -------------- | ------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| blockchain     | string | In this table, always Osmosis. Used to join to cross-chain tables.                                                                                                                   |\n| address        | string | Address unique to the token.                                                                                                                                                         |\n| creator        | string | Name of the label creator - for now, this will always be \"Flipside.\"                                                                                                                 |\n| label\\_type    | string | A broad category that describes what a label is representing.                                                                                                                        |\n| label\\_subtype | string | Adds more detail to the label type.                                                                                                                            ", "doc_id": "9fb78d77-ac1a-428e-94fe-e93ca9f9faf7", "embedding": null, "doc_hash": "83f3b453388789bba93d9dbd86bc453183991e6663d645edc754056393e5b9c1", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-dim-tokens.md", "file_name": "osmosis-dim-tokens.md"}, "node_info": {"start": 0, "end": 1520, "_node_type": "1"}, "relationships": {"1": "05826bacd4cc0005352cb6595ca0fbc184c2f2da", "3": "a24270ff-9a09-41be-8717-e36a3d417bf7"}}, "__type__": "1"}, "a24270ff-9a09-41be-8717-e36a3d417bf7": {"__data__": {"text": "                                         |\n| label          | string | The label or name of the address.                                                                                                                                                    |\n| project\\_name  | string | The name of the project the label belongs to.                                                                                                                                        |\n| alias          | string | A secondary address for the token, where available                                                                                                                                   |\n| decimal        | number | Divide the amount by POW(10, decimal) to get the amount used in the transaction. This value can be NULL, as decimals are hand curated from an outside source and not found on-chain. |\n| raw\\_metadata  | object | Additional details about the validator or token in json format.                                                                                                                      |\n", "doc_id": "a24270ff-9a09-41be-8717-e36a3d417bf7", "embedding": null, "doc_hash": "5391173705eda3ff78f406f0bc454045ff05b7a4a273a66b61d65881aa98fbfa", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-dim-tokens.md", "file_name": "osmosis-dim-tokens.md"}, "node_info": {"start": 1501, "end": 2599, "_node_type": "1"}, "relationships": {"1": "05826bacd4cc0005352cb6595ca0fbc184c2f2da", "2": "9fb78d77-ac1a-428e-94fe-e93ca9f9faf7"}}, "__type__": "1"}, "22292c4a-5fcc-43a0-a38e-44cd6410c406": {"__data__": {"text": "# Osmosis Dim Vote Options\n\n### Table Schema\n\n`osmosis.core.dim_vote_options`\n\nJoin this table to `osmosis.fact_governance_votes` on `vote_option = vote_id`\n\n| Field       | Type    | Description                                          |\n| ----------- | ------- | ---------------------------------------------------- |\n| vote\\_id    | integer | Numeric option that corresponds to the user's vote.  |\n| description | string  | Text that describes the vote option.                 |\n", "doc_id": "22292c4a-5fcc-43a0-a38e-44cd6410c406", "embedding": null, "doc_hash": "26806c60550e67073b9f43b382c2f88e8f38a699fc87a5bbd4d3e72a0707773c", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-dim-vote-options.md", "file_name": "osmosis-dim-vote-options.md"}, "node_info": {"start": 0, "end": 482, "_node_type": "1"}, "relationships": {"1": "bc6020ae1bf3c27464490f76b03b2592d0e6ca3e"}}, "__type__": "1"}, "56f05ace-2d7d-4456-b7a5-0cbc45c10d7f": {"__data__": {"text": "# Osmosis EZ ICNS\n\n### Table Schema\n\n`osmosis.core.ez_icns`\n\n| Field         | Type      | Description                                                     |\n| ------------- | --------- | --------------------------------------------------------------- |\n| blockchain    | string    | Blockchain the label is applicable for.                         |\n| creator       | string    | Name of the label creator.                                      |\n| address       | string    | Address unique to an individual wallet, validator, or token.    |\n| label         | string    | The ICNS name associated with the address.                      |\n| project\\_name | string    | The name of the project the name was purchased from.            |\n| start\\_date   | timestamp | Date the ICNS name first applies to the wallet.                 |\n| end\\_date     | timestamp | Date the ICNS name expires or no longer represents the wallet.  |\n", "doc_id": "56f05ace-2d7d-4456-b7a5-0cbc45c10d7f", "embedding": null, "doc_hash": "d7d2c1de74be0eee32f7060d50d10716cc9b3fb63b89c1ed672bddb3a30d8862", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-ez-icns.md", "file_name": "osmosis-ez-icns.md"}, "node_info": {"start": 0, "end": 925, "_node_type": "1"}, "relationships": {"1": "080acf44a469907e567882aa932b73e712fe0114"}}, "__type__": "1"}, "88f8a558-96e6-4312-83a5-18a9308d4766": {"__data__": {"text": "# Osmosis EZ Prices\n\n### Table Schema\n\n`osmosis.core.ez_prices`\n\nAn to use table for finding a token's price for a given hour. The table takes the Dim\\_Prices table and reduce it down to only one record per hour per token. The table also brings in the token address for easy joining to other tables that contain the address and not the token symbol.\n\n| Field          | Type      | Description                                                                                  |\n| -------------- | --------- | -------------------------------------------------------------------------------------------- |\n| recorded\\_hour | timestamp | The hour the price is valid for                                                              |\n| symbol         | string    | The short-hand, symbolic notation for the currency. This is what shows up on price tickers.  |\n| currency       | string    | An address that corresponds to the currency in the wallet.                                   |\n| price          | number    | The fiat cost of the asset at this point in time in USD.                                     |\n|                |           |                                                                                              |\n", "doc_id": "88f8a558-96e6-4312-83a5-18a9308d4766", "embedding": null, "doc_hash": "11e77c5dbf44f2822585b14511ea6ad6f65873360934940a18e3ea619155aff6", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-ez-prices.md", "file_name": "osmosis-ez-prices.md"}, "node_info": {"start": 0, "end": 1233, "_node_type": "1"}, "relationships": {"1": "1627cdd4a4188ad3ea7eca47b8887649b69e6396"}}, "__type__": "1"}, "e3039c7e-7b4c-4a92-ae1b-4f8aa97ab51c": {"__data__": {"text": "# Osmosis Fact Airdrops\n\n### Table Schema\n\n`osmosis.core.fact_airdrops`\n\n| Field            | Type      | Field                                                                                            |\n| ---------------- | --------- | ------------------------------------------------------------------------------------------------ |\n| block\\_id        | integer   | Unique sequential number that identifies the current block. Called \"height\" on block explorers.  |\n| block\\_timestamp | timestamp | The time the block began.                                                                        |\n| blockchain       | string    | Cross-chain identifier. In this table, `blockchain` will always be Osmosis.                      |\n| chain\\_id        | string    | ID of the blockchain to connect to, i.e. Osmosis-1.                                              |\n| tx\\_id           | string    | A unique key that identifies a transaction. Called \"TxHash\" on block explorers.                  |\n| tx\\_status       | string    | \"SUCCEEDED\" if the transaction went through, \"FALSE\" if the transaction failed.                  |\n| transfer\\_type   | string    | The type of transfer that occurred (i.e. IBC transfer)                                           |\n| sender           | string    | The wallet address of the user that sent the transfer.                                           |\n| amount           | integer   | The quantity of cryptocurrency sent in the transfer.                                             |\n| currency         | string    | A string identifying the cryptocurrency sent in the transfer.                                    |\n| decimal          | integer   | Divide `amount` by POW(10, decimal) to get the actual amount.                                    |\n| receiver         | string    | The wallet address of the user that received the transfer.                                      ", "doc_id": "e3039c7e-7b4c-4a92-ae1b-4f8aa97ab51c", "embedding": null, "doc_hash": "9e668fc0d72880d6f64e1aaa8197d3f7eed3e3d89e917ab04bb4bd94592801f8", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-airdrops.md", "file_name": "osmosis-fact-airdrops.md"}, "node_info": {"start": 0, "end": 1918, "_node_type": "1"}, "relationships": {"1": "e4d674c827083afe0a5fad750e119c756058d271", "3": "1b2976b6-1f95-440c-acf8-698017f89347"}}, "__type__": "1"}, "1b2976b6-1f95-440c-acf8-698017f89347": {"__data__": {"text": "                    |\n", "doc_id": "1b2976b6-1f95-440c-acf8-698017f89347", "embedding": null, "doc_hash": "f0728169a7eab944e58b59b1dec5b47c6ba226b897a569dbe627245320b46447", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-airdrops.md", "file_name": "osmosis-fact-airdrops.md"}, "node_info": {"start": 1899, "end": 1921, "_node_type": "1"}, "relationships": {"1": "e4d674c827083afe0a5fad750e119c756058d271", "2": "e3039c7e-7b4c-4a92-ae1b-4f8aa97ab51c"}}, "__type__": "1"}, "be955e22-4b69-4efd-991b-02b4c06feaac": {"__data__": {"text": "# Osmosis Fact Blocks Table\n\n### Table Schema\n\n`osmosis.core.fact_blocks`\n\n| Field             | Type      | Description                                                                                                     |\n| ----------------- | --------- | --------------------------------------------------------------------------------------------------------------- |\n| block\\_id         | integer   | Unique sequential number that identifies the current block. Called \"height\" on block explorers.                 |\n| block\\_timestamp  | timestamp | The time the block began.                                                                                       |\n| blockchain        | string    | Cross-chain identifier. In this table, `blockchain` will always be Osmosis.                                     |\n| chain\\_id         | string    | ID of the blockchain to connect to, i.e. Osmosis-1.                                                             |\n| tx\\_count         | integer   | Number of transactions that occurred on the block.                                                              |\n| proposer\\_address | string    | The address of the validator that proposed this block and is the validator responsible for building the block.  |\n| validators\\_hash  | string    | The root hash of the new validator set.                                                                         |\n", "doc_id": "be955e22-4b69-4efd-991b-02b4c06feaac", "embedding": null, "doc_hash": "2527ec6e5e7e71777a13eb0bcd2397b71ca51fc2d7ff733c2d9f99ddef6068c9", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-blocks-table.md", "file_name": "osmosis-fact-blocks-table.md"}, "node_info": {"start": 0, "end": 1407, "_node_type": "1"}, "relationships": {"1": "b6fc0c8622a3e75b89681149f9534bb6b0eeaf06"}}, "__type__": "1"}, "e2f5bd8a-2c8a-4573-9cf3-1cb31d5d433b": {"__data__": {"text": "# Osmosis Fact Governance Proposal Deposits\n\n### Table Schema\n\n`osmosis.core.fact_governance_proposal_deposits`\n\nAfter a proposal on Osmosis is submitted, it is required that at least 500 OSMO be deposited into the proposal over a two week timeframe.&#x20;\n\n| Field            | Type      | Description                                                                                           |\n| ---------------- | --------- | ----------------------------------------------------------------------------------------------------- |\n| block\\_id        | integer   | Unique sequential number that identifies the current block. Called \"height\" on block explorers.       |\n| block\\_timestamp | timestamp | The time the block began.                                                                             |\n| blockchain       | string    | Cross-chain identifier. In this table, `blockchain` will always be Osmosis.                           |\n| chain\\_id        | string    | ID of the blockchain to connect to, i.e. Osmosis-1.                                                   |\n| tx\\_id           | string    | A unique key that identifies a transaction. Called \"TxHash\" on block explorers.                       |\n| tx\\_status       | string    | Transaction status is \"SUCCEEDED\" if the transaction went through, \"FALSE\" if the transaction failed. |\n| depositor        | string    | The wallet address of the user depositing into a proposal.                                            |\n| proposal\\_id     | integer   | A sequential number that identifies the proposal.                                                     |\n| amount           | integer   | The quantity deposited in the transaction.                                                            |\n| currency         | string    | A string identifying the cryptocurrency used in the transaction.                                      |\n| decimal          | integer   | Divide `amount` by POW(10, decimal) to get the actual", "doc_id": "e2f5bd8a-2c8a-4573-9cf3-1cb31d5d433b", "embedding": null, "doc_hash": "1096f39224fbca38057774dc72a9e42a0b037203849988923f68a3fee83c502c", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-governance-proposal-deposits.md", "file_name": "osmosis-fact-governance-proposal-deposits.md"}, "node_info": {"start": 0, "end": 1988, "_node_type": "1"}, "relationships": {"1": "bc89d4f48c5e8405c7e62a9d0c14c34fc3ede925", "3": "baac30c4-813c-4767-9b1e-9c10f20e0701"}}, "__type__": "1"}, "baac30c4-813c-4767-9b1e-9c10f20e0701": {"__data__": {"text": " | Divide `amount` by POW(10, decimal) to get the actual amount.                                         |\n", "doc_id": "baac30c4-813c-4767-9b1e-9c10f20e0701", "embedding": null, "doc_hash": "4f067b5ff85655d605eec64e7b79bcc2069f8642b0b2a22f27d5867fc2217285", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-governance-proposal-deposits.md", "file_name": "osmosis-fact-governance-proposal-deposits.md"}, "node_info": {"start": 1932, "end": 2039, "_node_type": "1"}, "relationships": {"1": "bc89d4f48c5e8405c7e62a9d0c14c34fc3ede925", "2": "e2f5bd8a-2c8a-4573-9cf3-1cb31d5d433b"}}, "__type__": "1"}, "0933c4b4-428c-4b9f-97d2-ce8a104ea2ea": {"__data__": {"text": "# Osmosis Fact Governance Submit Proposal\n\n### Table Schema\n\n`osmosis.core.fact_governance_submit_proposal`\n\n| Field            | Type      | Description                                                                                           |\n| ---------------- | --------- | ----------------------------------------------------------------------------------------------------- |\n| block\\_id        | integer   | Unique sequential number that identifies the current block. Called \"height\" on block explorers.       |\n| block\\_timestamp | timestamp | The time the block began.                                                                             |\n| blockchain       | string    | Cross-chain identifier. In this table, `blockchain` will always be Osmosis.                           |\n| chain\\_id        | string    | ID of the blockchain to connect to, i.e. Osmosis-1.                                                   |\n| tx\\_id           | string    | A unique key that identifies a transaction. Called \"TxHash\" on block explorers.                       |\n| tx\\_status       | string    | Transaction status is \"SUCCEEDED\" if the transaction went through, \"FALSE\" if the transaction failed. |\n| proposer         | string    | The wallet address of the user that submitted the proposal.                                           |\n| proposal\\_id     | integer   | A sequential number that identifies the proposal.                                                     |\n| proposal\\_type   | string    | A descriptor of what the proposal is about. Will be \"text\" if unknown.                                |\n", "doc_id": "0933c4b4-428c-4b9f-97d2-ce8a104ea2ea", "embedding": null, "doc_hash": "f9e0e83ec4c1e3dc9c6298710977ebbbc88811d003f0ab8abcc15ade132c0971", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-governance-submit-proposal.md", "file_name": "osmosis-fact-governance-submit-proposal.md"}, "node_info": {"start": 0, "end": 1616, "_node_type": "1"}, "relationships": {"1": "d797900f79bf5d1c65c5616588db0ea6f9b960b5"}}, "__type__": "1"}, "7b2fcbf2-e0ff-41f9-8978-2276a8afb45f": {"__data__": {"text": "# Osmosis Fact Governance Votes\n\n### Table Schema\n\n`osmosis.core.fact_governance_votes`\n\n| Field            | Type      | Description                                                                                      |\n| ---------------- | --------- | ------------------------------------------------------------------------------------------------ |\n| block\\_id        | integer   | Unique sequential number that identifies the current block. Called \"height\" on block explorers.  |\n| block\\_timestamp | timestamp | The time the block began.                                                                        |\n| blockchain       | string    | Cross-chain identifier. In this table, `blockchain` will always be Osmosis.                      |\n| chain\\_id        | string    | ID of the blockchain to connect to, i.e. Osmosis-1.                                              |\n| tx\\_id           | string    | A unique key that identifies a transaction. Called \"TxHash\" on block explorers.                  |\n| tx\\_status       | string    | \"SUCCEEDED\" if the transaction went through, \"FALSE\" if the transaction failed.                  |\n| voter            | string    | The wallet address of the user voting on the proposal.                                           |\n| proposal\\_id     | integer   | A sequential number that identifies the proposal.                                                |\n| vote\\_option     | string    | How the user voted on the proposal.                                                              |\n| vote\\_weight     | float     | The percentage of a user's voting power put towards this vote.                                   |\n", "doc_id": "7b2fcbf2-e0ff-41f9-8978-2276a8afb45f", "embedding": null, "doc_hash": "91023c72ac5d92c0b96501d843c6ec0bdba7172d4afb116ba58d36b70f186d98", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-governance-votes.md", "file_name": "osmosis-fact-governance-votes.md"}, "node_info": {"start": 0, "end": 1673, "_node_type": "1"}, "relationships": {"1": "031c58b44863977ff8e23a98882bb8200700b4b4"}}, "__type__": "1"}, "a64e971f-048c-4814-981f-eacf99ff4fd6": {"__data__": {"text": "# Osmosis Fact Liquidity Provider Actions\n\n### Table Schema\n\n`osmosis.core.fact_liquidity_provider_actions`\n\n| Field                        | Type      | Description                                                                                          |\n| ---------------------------- | --------- | ---------------------------------------------------------------------------------------------------- |\n| block\\_id                    | intger    | Unique sequential number that identifies the current block. Called \"height\" on block explorers.      |\n| block\\_timestamp             | timestamp | The time the block began.                                                                            |\n| blockchain                   | string    | Cross-chain identifier. In this table, `blockchain` will always be Osmosis.                          |\n| chain\\_id                    | string    | ID of the blockchain to connect to, i.e. Osmosis-1.                                                  |\n| tx\\_id                       | string    | A unique key that identifies a transaction. Called \"TxHash\" on block explorers.                      |\n| tx\\_status                   | string    | ransaction status is \"SUCCEEDED\" if the transaction went through, \"FALSE\" if the transaction failed. |\n| liquidity\\_provider\\_address | string    | The address of the user interacting with the liquidity pool.                                         |\n| action                       | string    | Whether the user is joining or exiting the liquidity pool.                                           |\n| pool\\_id                     | integer   | A numeric ID that corresponds to the liquidity pool.                                                 |\n| amount                       | integer   | The quantity of cryptocurrency in the transaction.                          ", "doc_id": "a64e971f-048c-4814-981f-eacf99ff4fd6", "embedding": null, "doc_hash": "335ca39d60dc23b1c7da87df48eaa895be95fa1232264483dee38e89fefad54f", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-liquidity-provider-actions.md", "file_name": "osmosis-fact-liquidity-provider-actions.md"}, "node_info": {"start": 0, "end": 1858, "_node_type": "1"}, "relationships": {"1": "55a42e6f03c8c0f9f4018b40436737db6705633a", "3": "1c9a7d9c-19db-4a6f-a558-03164e69ae44"}}, "__type__": "1"}, "1c9a7d9c-19db-4a6f-a558-03164e69ae44": {"__data__": {"text": "                                            |\n| currency                     | string    | A string identifying the cryptocurrency used in the transaction.                                     |\n| decimal                      | integer   | Divide `amount` by POW(10, decimal) to get the actual amount.                                        |\n\n", "doc_id": "1c9a7d9c-19db-4a6f-a558-03164e69ae44", "embedding": null, "doc_hash": "8e41b55920af47aa363452fb9104357a73c86999f3f708dec5e76d1a00357058", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-liquidity-provider-actions.md", "file_name": "osmosis-fact-liquidity-provider-actions.md"}, "node_info": {"start": 1839, "end": 2182, "_node_type": "1"}, "relationships": {"1": "55a42e6f03c8c0f9f4018b40436737db6705633a", "2": "a64e971f-048c-4814-981f-eacf99ff4fd6"}}, "__type__": "1"}, "d1c9f756-d260-4cb9-bb07-8d962ed8cf38": {"__data__": {"text": "# Osmosis Fact Msg Attributes Table\n\n### Table Schema\n\n`osmosis.core.fact_msg_attributes`\n\n| Field            | Type      | Descriptions                                                                                     |\n| ---------------- | --------- | ------------------------------------------------------------------------------------------------ |\n| block\\_id        | integer   | Unique sequential number that identifies the current block. Called \"height\" on block explorers.  |\n| block\\_timestamp | timestamp | The time the block began.                                                                        |\n| blockchain       | string    | Cross-chain identifier. In this table, `blockchain` will always be Osmosis.                      |\n| chain\\_id        | string    | ID of the blockchain to connect to, i.e. Osmosis-1.                                              |\n| tx\\_id           | string    | A unique key that identifies a transaction. Called \"TxHash\" on block explorers.                  |\n| msg\\_index       | integer   | Short for \"message index,\" the position in which messages occur in a transaction.                |\n| msg\\_type        | string    | A string containing information about the type of message occurring.                             |\n| attribute\\_index | integer   | The position in which attributes occur within a message.                                         |\n| attribute\\_key   | string    | A label of sorts for the attribute\\_value.                                                       |\n| attribute\\_value | string    | Contains critical information such as addresses, amounts, tokens sent, etc.                      |\n", "doc_id": "d1c9f756-d260-4cb9-bb07-8d962ed8cf38", "embedding": null, "doc_hash": "3e42e764f87a5800aac11b50290ee1c5bd7a79216580b8a238f2b18e91d230a2", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-msg-attributes-table.md", "file_name": "osmosis-fact-msg-attributes-table.md"}, "node_info": {"start": 0, "end": 1675, "_node_type": "1"}, "relationships": {"1": "396f6eb474a91c6e1c0ebd03863de0f62a65c4ae"}}, "__type__": "1"}, "c3239452-892b-417e-81de-cf42e3eee7ca": {"__data__": {"text": "# Osmosis Fact Msgs Table\n\n### Table Schema\n\n`osmosis.core.fact_msgs`\n\n| Field            | Type      | Description                                                                                            |\n| ---------------- | --------- | ------------------------------------------------------------------------------------------------------ |\n| block\\_id        | integer   | Unique sequential number that identifies the current block. Called \"height\" on block explorers.        |\n| block\\_timestamp | timestamp | The time the block began.                                                                              |\n| blockchain       | string    | Cross-chain identifier. In this table, `blockchain` will always be Osmosis.                            |\n| chain\\_id        | string    | ID of the blockchain to connect to, i.e. Osmosis-1.                                                    |\n| tx\\_id           | string    | A unique key that identifies a transaction. Called \"TxHash\" on block explorers.                        |\n| tx\\_status       | string    | Transaction status is \"SUCCEEDED\" if the transaction went through, \"FALSE\" if the transaction failed.  |\n| msg\\_index       | integer   | Short for \"message index,\" the position in which messages occur in a transaction.                      |\n| msg\\_type        | string    | A string containing information about the type of message occurring.                                   |\n| msg              | json      | A block of json that contains the message attributes in base64 encoding.                               |\n", "doc_id": "c3239452-892b-417e-81de-cf42e3eee7ca", "embedding": null, "doc_hash": "c4e622dde0f1d2c1720ff02b6481390eb24b824e0c9b56acb9532063f90e9988", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-msgs-table.md", "file_name": "osmosis-fact-msgs-table.md"}, "node_info": {"start": 0, "end": 1589, "_node_type": "1"}, "relationships": {"1": "cb4ccd561e62fd866e71b0e72deed51d787658ed"}}, "__type__": "1"}, "ae0af7a0-8554-4dd0-8e48-ae85bcbb3a7f": {"__data__": {"text": "# Osmosis Fact Staking Rewards\n\n### Table Schema\n\n`osmosis.core.fact_staking_rewards`\n\n| Field               | Type      | Description                                                                                      |\n| ------------------- | --------- | ------------------------------------------------------------------------------------------------ |\n| block\\_id           | integer   | Unique sequential number that identifies the current block. Called \"height\" on block explorers.  |\n| block\\_timestamp    | timestamp | The time the block began.                                                                        |\n| blockchain          | string    | Cross-chain identifier. In this table, `blockchain` will always be Osmosis.                      |\n| chain\\_id           | string    | ID of the blockchain to connect to, i.e. Osmosis-1.                                              |\n| tx\\_id              | string    | A unique key that identifies a transaction. Called \"TxHash\" on block explorers.                  |\n| tx\\_status          | string    | \"SUCCEEDED\" if the transaction went through, \"FALSE\" if the transaction failed.                  |\n| tx\\_caller\\_address | string    | The address of the wallet that initiated the transaction.                                        |\n| action              | string    | A description of what is occurring in the transaction.                                           |\n| delegator\\_address  | string    | The wallet address that is delegating their OSMO.                                                |\n| validator\\_address  | string    | The address of the validator that the delegator is delegating to.                                |\n| amount              | integer   | The quantity of cryptocurrency in the transaction.                                               |\n| currency            | string    | A string identifying the cryptocurrency used in the transaction.         ", "doc_id": "ae0af7a0-8554-4dd0-8e48-ae85bcbb3a7f", "embedding": null, "doc_hash": "762af42e6613be264b9e48596f32dc4536f0e462a5bc0a7cc2608bd9e0fe4856", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-staking-rewards.md", "file_name": "osmosis-fact-staking-rewards.md"}, "node_info": {"start": 0, "end": 1951, "_node_type": "1"}, "relationships": {"1": "de2a69b29790cb02bd1a490d6f89db6118452038", "3": "09408a92-03eb-4ceb-92b2-943ee7c52783"}}, "__type__": "1"}, "09408a92-03eb-4ceb-92b2-943ee7c52783": {"__data__": {"text": "the cryptocurrency used in the transaction.                                 |\n| decimal             | integer   | Divide `amount` by POW(10, decimal) to get the actual amount.                                    |\n\n", "doc_id": "09408a92-03eb-4ceb-92b2-943ee7c52783", "embedding": null, "doc_hash": "d8271e3f85a09698b8e8d1ed9024907accf8f2365f7a70859d7746d7c64fe92b", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-staking-rewards.md", "file_name": "osmosis-fact-staking-rewards.md"}, "node_info": {"start": 1899, "end": 2113, "_node_type": "1"}, "relationships": {"1": "de2a69b29790cb02bd1a490d6f89db6118452038", "2": "ae0af7a0-8554-4dd0-8e48-ae85bcbb3a7f"}}, "__type__": "1"}, "a48492e3-8de3-4783-a2f1-d7c3cf0f2dbd": {"__data__": {"text": "# Osmosis Fact Staking\n\n### Table Schema\n\n`osmosis.core.fact_staking`\n\n| Field                                  | Type      | Description                                                                                      |\n| -------------------------------------- | --------- | ------------------------------------------------------------------------------------------------ |\n| block\\_id                              | integer   | Unique sequential number that identifies the current block. Called \"height\" on block explorers.  |\n| block\\_timestamp                       | timestamp | The time the block began.                                                                        |\n| blockchain                             | string    | Cross-chain identifier. In this table, `blockchain` will always be Osmosis.                      |\n| chain\\_id                              | string    | ID of the blockchain to connect to, i.e. Osmosis-1.                                              |\n| tx\\_id                                 | string    | A unique key that identifies a transaction. Called \"TxHash\" on block explorers.                  |\n| tx\\_status                             | string    | \"SUCCEEDED\" if the transaction went through, \"FALSE\" if the transaction failed.                  |\n| tx\\_caller\\_address                    | string    | The address of the wallet that initiated the transaction.                                        |\n| action                                 | string    | A description of what is occurring in the transaction.                                           |\n| delegator\\_address                     | string    | The wallet address that is delegating their OSMO.                                                |\n| amount    ", "doc_id": "a48492e3-8de3-4783-a2f1-d7c3cf0f2dbd", "embedding": null, "doc_hash": "a49cb8a72c74af9460bfa2d9695b2e8e9f13a578cc35af32da2f63d4131fb2e1", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-staking.md", "file_name": "osmosis-fact-staking.md"}, "node_info": {"start": 0, "end": 1777, "_node_type": "1"}, "relationships": {"1": "3b1f74c6121363d407dd4205178adff6e6db4cbb", "3": "7b17c1a8-2471-4f66-8516-1784020a9412"}}, "__type__": "1"}, "7b17c1a8-2471-4f66-8516-1784020a9412": {"__data__": {"text": "            |\n| amount                                 | integer   | The quantity of cryptocurrency in the transaction.                                               |\n| currency                               | string    | A string identifying the cryptocurrency used in the transaction.                                 |\n| decimal                                | integer   | Divide `amount` by POW(10, decimal) to get the actual amount.                                    |\n| validator\\_address                     | string    | The address of the validator that the delegator is delegating to.                                |\n| redelegate\\_source\\_validator\\_address | string    | The address that the user redelegates to in redelegation transactions. Otherwise NULL.           |\n| completion\\_time                       | timestamp | The time the transaction was completed at.                                                       |\n", "doc_id": "7b17c1a8-2471-4f66-8516-1784020a9412", "embedding": null, "doc_hash": "43d561d9e1f7830ae0899c410269efbdb6df888941c5696ddc97288e6db06a1c", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-staking.md", "file_name": "osmosis-fact-staking.md"}, "node_info": {"start": 1751, "end": 2689, "_node_type": "1"}, "relationships": {"1": "3b1f74c6121363d407dd4205178adff6e6db4cbb", "2": "a48492e3-8de3-4783-a2f1-d7c3cf0f2dbd"}}, "__type__": "1"}, "5841ae26-16fa-43ef-9750-e620cd2ac947": {"__data__": {"text": "# Osmosis Fact Superfluid Staking\n\n### Table Schema\n\n`osmosis.core.fact_superfluid_staking`\n\n| Field                              | Type      | Description                                                                                                                                                                          |\n| ---------------------------------- | --------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| block\\_id                          | integer   | The block height the block was recorded at.                                                                                                                                          |\n| block\\_timestamp                   | timestamp | The date and time at which the block began.                                                                                                                                          |\n| blockchain                         | string    | In this table, always Osmosis. Used to join to cross-chain tables.                                                                                                                   |\n| chain\\_id                          | string    | The name and version of the blockchain.                                                                                                                                           ", "doc_id": "5841ae26-16fa-43ef-9750-e620cd2ac947", "embedding": null, "doc_hash": "ad0973b310a49c2d11f83f8359b81a0ca7a280bc9be81431e08663dbbf32a62b", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-superfluid-staking.md", "file_name": "osmosis-fact-superfluid-staking.md"}, "node_info": {"start": 0, "end": 1492, "_node_type": "1"}, "relationships": {"1": "bde9d3369fcedc4817d84351f2de5b09109d620e", "3": "c8e34d08-0626-4b86-9823-f60234d91e4b"}}, "__type__": "1"}, "c8e34d08-0626-4b86-9823-f60234d91e4b": {"__data__": {"text": "                      |\n| tx\\_id                             | string    | A unique key that identifies a transaction. Called \"TxHash\" on block explorers.                                                                                                      |\n| tx\\_status                         | string    | Transaction status is \"SUCCEEDED\" if the transaction went through, \"FALSE\" if the transaction failed.                                                                                |\n| tx\\_caller\\_address                | string    | The wallet address of the individual who initiated the transaction.                                                                                                                  |\n| action                             | string    | The action taken in the msg group. For staking this includes delegate, undelegate, redelegate, withdraw\\_rewards.                                                                    |\n| delegator\\_address                 | string    | The wallet address of the individual who owns the delegated asset.                                                                                                                   |\n| amount                             | integer   | The amount that was used in the transaction message.                                                                                                                                 |\n| currency        ", "doc_id": "c8e34d08-0626-4b86-9823-f60234d91e4b", "embedding": null, "doc_hash": "592aafb42f5c2088fc9c84143e5b4c7290af8e41625731ca709ef67621233ad7", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-superfluid-staking.md", "file_name": "osmosis-fact-superfluid-staking.md"}, "node_info": {"start": 1493, "end": 2939, "_node_type": "1"}, "relationships": {"1": "bde9d3369fcedc4817d84351f2de5b09109d620e", "2": "5841ae26-16fa-43ef-9750-e620cd2ac947", "3": "f685cdab-c964-416f-a793-f1178e33b2ab"}}, "__type__": "1"}, "f685cdab-c964-416f-a793-f1178e33b2ab": {"__data__": {"text": "        |\n| currency                           | string    | The currency that was used in the transaction message.                                                                                                                               |\n| decimal                            | integer   | Divide the amount by POW(10, decimal) to get the amount used in the transaction. This value can be NULL, as decimals are hand curated from an outside source and not found on-chain. |\n| validator\\_address                 | string    | The wallet address of the validator related to the staking action.                                                                                                                   |\n| lock\\_id                           | integer   | An ID corresponding to the locking step of the transaction.                                                                                                                          |\n| original superfluid delegate tx id | string    | The transaction id when the user initialized the superfluid stake.                                                                                                                   |\n\n", "doc_id": "f685cdab-c964-416f-a793-f1178e33b2ab", "embedding": null, "doc_hash": "19c312878cbafc1fd0566ea4a08b7a5829a04fe722782d907338d82f1b8dc12d", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-superfluid-staking.md", "file_name": "osmosis-fact-superfluid-staking.md"}, "node_info": {"start": 2911, "end": 4092, "_node_type": "1"}, "relationships": {"1": "bde9d3369fcedc4817d84351f2de5b09109d620e", "2": "c8e34d08-0626-4b86-9823-f60234d91e4b"}}, "__type__": "1"}, "4a535c41-470e-43e2-9893-ecc717531592": {"__data__": {"text": "# Osmosis Fact Swaps\n\n### Table Schema\n\n`osmosis.core.fact_swaps`\n\n| Field            | Type      | Description                                                                                      |\n| ---------------- | --------- | ------------------------------------------------------------------------------------------------ |\n| block\\_id        | integer   | Unique sequential number that identifies the current block. Called \"height\" on block explorers.  |\n| block\\_timestamp | timestamp | The time the block began.                                                                        |\n| blockchain       | string    | Cross-chain identifier. In this table, `blockchain` will always be Osmosis.                      |\n| chain\\_id        | string    | ID of the blockchain to connect to, i.e. Osmosis-1.                                              |\n| tx\\_id           | string    | A unique key that identifies a transaction. Called \"TxHash\" on block explorers.                  |\n| tx\\_status       | string    | \"SUCCEEDED\" if the transaction went through, \"FALSE\" if the transaction failed.                  |\n| trader           | string    | The wallet address of the user who initiated the swap.                                           |\n| from\\_amount     | integer   | The quantity of cryptocurrency to be swapped.                                                    |\n| from\\_currency   | string    | A string identifying the cryptocurrency to be swapped.                                           |\n| from\\_decimal    | integer   | Divide `from_amount` by POW(10, decimal) to get the actual from\\_amount.                         |\n| to\\_amount       | integer   | The quantity of cryptocurrency received in the swap.                                             |\n| to\\_currency     | string    | string identifying the cryptocurrency received in the swap.                                      |\n|", "doc_id": "4a535c41-470e-43e2-9893-ecc717531592", "embedding": null, "doc_hash": "6623af5fb5d06c0ce43a7d34e5d29d600316b0761e1acd1986a6c07c9b784599", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-swaps.md", "file_name": "osmosis-fact-swaps.md"}, "node_info": {"start": 0, "end": 1916, "_node_type": "1"}, "relationships": {"1": "0f95c494374a5beff5ebe400d025f657f84c4217", "3": "5974c62b-5b3b-4674-842e-a133ce42fad4"}}, "__type__": "1"}, "5974c62b-5b3b-4674-842e-a133ce42fad4": {"__data__": {"text": "                 |\n| to\\_decimal      | integer   | Divide `to_amount` by POW(10, decimal) to get the actual to\\_amount.                             |\n| pool\\_ids        | array     | An array containing integers corresponding to the pools the swap went through.                   |\n", "doc_id": "5974c62b-5b3b-4674-842e-a133ce42fad4", "embedding": null, "doc_hash": "c63c3c140d96af9e6341ee118a7b0a47d067e7a07507b8d2a7a8e5e6e6177dec", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-swaps.md", "file_name": "osmosis-fact-swaps.md"}, "node_info": {"start": 1896, "end": 2179, "_node_type": "1"}, "relationships": {"1": "0f95c494374a5beff5ebe400d025f657f84c4217", "2": "4a535c41-470e-43e2-9893-ecc717531592"}}, "__type__": "1"}, "c538eba6-5891-464f-a639-b7b6998f7c67": {"__data__": {"text": "# Osmosis Fact Transactions Table\n\n### Table Schema\n\n`osmosis.core.fact_transactions`\n\n| Field            | Type      | Description                                                                                                                                                   |\n| ---------------- | --------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| block\\_id        | integer   | Unique sequential number that identifies the current block. Called \"height\" on block explorers.                                                               |\n| block\\_timestamp | timestamp | The time the block began.                                                                                                                                     |\n| blockchain       | string    | Cross-chain identifier. In this table, `blockchain` will always be Osmosis.                                                                                   |\n| chain\\_id        | string    | ID of the blockchain to connect to, i.e. Osmosis-1.                                                                                                           |\n| tx\\_id           | string    | A unique key that identifies a transaction. Called \"TxHash\" on block explorers.                                                                               |\n| tx\\_from         | string    | Address of the individual that initiated the transaction.                                                                                           ", "doc_id": "c538eba6-5891-464f-a639-b7b6998f7c67", "embedding": null, "doc_hash": "3b7a05751e69b2c8578482111fc78d7f10660b31bd729a898dacc03a6167e540", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-transactions-table.md", "file_name": "osmosis-fact-transactions-table.md"}, "node_info": {"start": 0, "end": 1619, "_node_type": "1"}, "relationships": {"1": "89139710f5731cae660d4d8686e4ae183c4c4499", "3": "5c91dc82-f53f-416e-82a1-81af14fccf84"}}, "__type__": "1"}, "5c91dc82-f53f-416e-82a1-81af14fccf84": {"__data__": {"text": "                             |\n| tx\\_status       | string    | Transaction status is \"SUCCEEDED\" if the transaction went through, \"FALSE\" if the transaction failed.                                                         |\n| fee              | integer   | The fee is paid by the initiator of the transaction. Fee = gas \\* gas price.                                                                                  |\n| gas\\_used        | integer   | The amount of gas consumed by the transaction.                                                                                                                |\n| gas\\_wanted      | integer   | Amount of gas requested for a transaction. It is provided by users when the transaction is generated.                                                         |\n| codespace        | string    | Namespace for the code.                                                                                                                                       |\n| tx\\_code         | integer   | A number that corresponds to various error codes. When \"0\", the transaction is successful. Non-zero numbers signify different types of transaction failures.  |\n| msgs             | json      | A json structure that includes information about the message attributes and attribute types.                                                                  |\n", "doc_id": "5c91dc82-f53f-416e-82a1-81af14fccf84", "embedding": null, "doc_hash": "8e5f74c695856709d0b07617b72fa5d9bb055f9e43fbec958fd3168d4d61babf", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-transactions-table.md", "file_name": "osmosis-fact-transactions-table.md"}, "node_info": {"start": 1600, "end": 2982, "_node_type": "1"}, "relationships": {"1": "89139710f5731cae660d4d8686e4ae183c4c4499", "2": "c538eba6-5891-464f-a639-b7b6998f7c67"}}, "__type__": "1"}, "012e5f04-acbb-4933-b96b-504081203da1": {"__data__": {"text": "# Osmosis Fact Transfers\n\n### Table Schema\n\n`osmosis.core.fact_transactions`\n\n| Field            | Type      | Field                                                                                            |\n| ---------------- | --------- | ------------------------------------------------------------------------------------------------ |\n| block\\_id        | integer   | Unique sequential number that identifies the current block. Called \"height\" on block explorers.  |\n| block\\_timestamp | timestamp | The time the block began.                                                                        |\n| blockchain       | string    | Cross-chain identifier. In this table, `blockchain` will always be Osmosis.                      |\n| chain\\_id        | string    | ID of the blockchain to connect to, i.e. Osmosis-1.                                              |\n| tx\\_id           | string    | A unique key that identifies a transaction. Called \"TxHash\" on block explorers.                  |\n| tx\\_status       | string    | \"SUCCEEDED\" if the transaction went through, \"FALSE\" if the transaction failed.                  |\n| transfer\\_type   | string    | The type of transfer that occurred (i.e. IBC transfer)                                           |\n| sender           | string    | The wallet address of the user that sent the transfer.                                           |\n| amount           | integer   | The quantity of cryptocurrency sent in the transfer.                                             |\n| currency         | string    | A string identifying the cryptocurrency sent in the transfer.                                    |\n| decimal          | integer   | Divide `amount` by POW(10, decimal) to get the actual amount.                                    |\n| receiver         | string    | The wallet address of the user that received the transfer.                                     ", "doc_id": "012e5f04-acbb-4933-b96b-504081203da1", "embedding": null, "doc_hash": "d090d9caad3f6bcac124b6680f7fae1927cbe5d48dd2fdfd3ed24a9aef0c4e27", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-transfers.md", "file_name": "osmosis-fact-transfers.md"}, "node_info": {"start": 0, "end": 1922, "_node_type": "1"}, "relationships": {"1": "5256b2c14fb851d7aa231dfa78aaf0a88114b6db", "3": "984dee8b-32da-4c55-b046-2f08e861f8db"}}, "__type__": "1"}, "984dee8b-32da-4c55-b046-2f08e861f8db": {"__data__": {"text": "                     |\n", "doc_id": "984dee8b-32da-4c55-b046-2f08e861f8db", "embedding": null, "doc_hash": "1566ff57ba84a85b0ecfd5ee7d0d98ab51a8c0450e810d8061be30fc6ccb7686", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-transfers.md", "file_name": "osmosis-fact-transfers.md"}, "node_info": {"start": 1903, "end": 1926, "_node_type": "1"}, "relationships": {"1": "5256b2c14fb851d7aa231dfa78aaf0a88114b6db", "2": "012e5f04-acbb-4933-b96b-504081203da1"}}, "__type__": "1"}, "9941b652-fcfc-4341-a4b1-2f02ed312d10": {"__data__": {"text": "# Osmosis Fact Validators\n\n### Table Schema\n\n`osmosis.core.fact_validators`\n\n| Field                 | Type    | Description                                                                                                              |\n| --------------------- | ------- | ------------------------------------------------------------------------------------------------------------------------ |\n| address               | string  | Address unique to an individual wallet, validator, or token.                                                             |\n| blockchain            | string  | In this table, always Osmosis. Used to join to cross-chain tables.                                                       |\n| creator               | string  | Name of the label creator - for now, this will always be \"Flipside.\"                                                     |\n| label\\_type           | string  | A broad category that describes what a label is representing.                                                            |\n| label\\_subtype        | string  | Adds more detail to the label type.                                                                                      |\n| label                 | string  | The label or name of the address.                                                                                        |\n| project\\_name         | string  | The name of the project the label belongs to.                                                                            |\n| account\\_address      | string  | The osmosis address of the user / entity that operates the validator.                                                    |\n| delegator\\_address  ", "doc_id": "9941b652-fcfc-4341-a4b1-2f02ed312d10", "embedding": null, "doc_hash": "e5e035952fd5a5ac77c692268a0c117de38a230349d376ea96c3f4df2d157d18", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-validators.md", "file_name": "osmosis-fact-validators.md"}, "node_info": {"start": 0, "end": 1689, "_node_type": "1"}, "relationships": {"1": "6283a34850c2abb31861283d90788e7f1816d648", "3": "f731648d-1e61-4651-a6c8-8ff5eb1e730b"}}, "__type__": "1"}, "f731648d-1e61-4651-a6c8-8ff5eb1e730b": {"__data__": {"text": "         |\n| delegator\\_address    | string  | The number of tokens staked to the validator.                                                                            |\n| jailed                | boolean | FALSE when a validator is not jailed, TRUE when a validator is jailed.                                                   |\n| max\\_change\\_rate     | number  | The maximum rate at which a validator can change their commission per day.                                               |\n| max\\_rate             | number  | The maximum commission rate that the validator can charge.                                                               |\n| min\\_self\\_delegation | number  | The minimum number of OSMO tokens that the operator must be staking with their own validator.                            |\n| rank                  | number  | The rank of the validator in the validator set. Rank is determined by the number of OSMO tokens staked to the validator. |\n| missed\\_blocks        | number  | The number of blocks the validator has been down for during it's lifetime.                                               |\n| raw\\_metadata         | object  | Additional details about the validator or token in json format.                                                          |\n\n", "doc_id": "f731648d-1e61-4651-a6c8-8ff5eb1e730b", "embedding": null, "doc_hash": "8f0381bfd56cbd83f91735dbe26c5f4e61b0260373d884aa59c700aa594d6807", "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-validators.md", "file_name": "osmosis-fact-validators.md"}, "node_info": {"start": 1656, "end": 2940, "_node_type": "1"}, "relationships": {"1": "6283a34850c2abb31861283d90788e7f1816d648", "2": "9941b652-fcfc-4341-a4b1-2f02ed312d10"}}, "__type__": "1"}, "fb6a75a4-b2f2-4478-ad79-fe6443e85346": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Polygon 2.0 Tables\n\nDocumentation for \\`polygon\\` tables can be found [here](https://flipsidecrypto.github.io/polygon-models/#!/overview).\n\nThe public Github repo with Polygon 2.0 model source code is [here](https://github.com/FlipsideCrypto/polygon-models).\n\nPlease note, data is in 'lite mode' - meaning, historical data has not yet been backfilled. Please see the `min(block`\\_`timestamp)`.&#x20;\n\nQuick Links to Table Docs:\n\n* [`fact_event_logs`](https://flipsidecrypto.github.io/polygon-models/#!/model/model.polygon\\_models.core\\_\\_fact\\_event\\_logs)\n* [`fact_transactions`](https://flipsidecrypto.github.io/polygon-models/#!/model/model.polygon\\_models.core\\_\\_fact\\_transactions)\n* [`fact_blocks`](https://flipsidecrypto.github.io/polygon-models/#!/model/model.polygon\\_models.core\\_\\_fact\\_blocks)\n* [`fact_traces`](https://flipsidecrypto.github.io/polygon-models/#!/model/model.polygon\\_models.core\\_\\_fact\\_traces)\n* [`fact_token_transfers`](https://flipsidecrypto.github.io/polygon-models/#!/model/model.polygon\\_models.core\\_\\_fact\\_token\\_transfers)\n* [`dim_labels`](https://flipsidecrypto.github.io/polygon-models/#!/model/model.polygon\\_models.core\\_\\_dim\\_labels)\n* [`ez_matic_transfers`](https://flipsidecrypto.github.io/polygon-models/#!/model/model.polygon\\_models.core\\_\\_ez\\_matic\\_transfers)\n* [`dim_contracts`](https://flipsidecrypto.github.io/polygon-models/#!/model/model.polygon\\_models.core\\_\\_dim\\_contracts)\n\n\n\nPolygon sushi tables\n\n* [sushi\\_\\__dim\\_dex\\__pools](https://flipsidecrypto.github.io/polygon-models/#!/model/model.polygon\\_models.sushi\\_\\_dim\\_dex\\_pools)\n* [sush\\_\\__dim\\_kashi\\_pairs_ ](https://flipsidecrypto.github.io/polygon-models/#!/model/model.polygon\\_models.sushi\\_\\_dim\\_kashi\\_pairs)\n* [_sushi\\_\\_ez\\_lending_](https://flipsidecrypto.github.io/polygon-models/#!/model/model.polygon\\_models.sushi\\_\\_ez\\_lending)\n* [_sushi\\_\\_ez\\_borrowing_](https://flipsidecrypto.github.io/polygon-models/#!/model/model.polygon\\_models.sushi\\_\\_ez\\_borrowing)\n* [_sushi\\_\\_ez\\_swaps_](https://flipsidecrypto.github.io/polygon-models/#!/model/model.polygon\\_models.sushi\\_\\_ez\\_swaps)\n\n\n\nNote: when working with the `fact_transactions` and `fact_event_logs` tables, you may find it useful to use the [ethereum.public.hex\\_to\\_int() function](../../hex-to-integer-function.md).\\\n", "doc_id": "fb6a75a4-b2f2-4478-ad79-fe6443e85346", "embedding": null, "doc_hash": "1523fa63c1d9fa3eb9ba78c1ba2944e42a0537661c9c501e2149ec1880bff9d5", "extra_info": {"file_path": "our-data/archive/tables/polygon-2.0-tables.md", "file_name": "polygon-2.0-tables.md"}, "node_info": {"start": 0, "end": 2401, "_node_type": "1"}, "relationships": {"1": "590db04b06e35270a8e3afc2bc07ff781d5f7d7e"}}, "__type__": "1"}, "4b266d0e-ec44-4e81-b0ed-4a7f53352eaa": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Polygon Tables\n\n**Blockchain:** [Polygon](https://polygon.technology/)\n\nThe public Github repo with Polygon model source code is [here](https://github.com/FlipsideCrypto/sql\\_models/tree/main/models/polygon).\n\n{% hint style=\"warning\" %}\nThese are legacy Polygon tables. See [Polygon 2.0](../polygon-2.0-tables.md) for up-to-date Polygon models.\n{% endhint %}\n\n### Tables\n\n{% content-ref url=\"polygon-events-emitted.md\" %}\n[polygon-events-emitted.md](polygon-events-emitted.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"polygon-transactions.md\" %}\n[polygon-transactions.md](polygon-transactions.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"polygon-udm-events.md\" %}\n[polygon-udm-events.md](polygon-udm-events.md)\n{% endcontent-ref %}\n\n", "doc_id": "4b266d0e-ec44-4e81-b0ed-4a7f53352eaa", "embedding": null, "doc_hash": "a352370cb4935f3d152c7f1da044ee322fea7738e2f942aa0622dcf99529cddc", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 820, "_node_type": "1"}, "relationships": {"1": "a2187a3d22d44914760959190b9a31d995506039"}}, "__type__": "1"}, "73af855e-7227-4db7-bb70-07c9f2591d10": {"__data__": {"text": "# Polygon Events Emitted\n\n{% hint style=\"warning\" %}\nThese are legacy Polygon tables. See [Polygon 2.0](../polygon-2.0-tables.md) for up-to-date Polygon models.\n{% endhint %}\n\nPolygon events emitted table contains the information for the Polygon events, it is extracted from the Polygon blockchain and there are some notable features:\n\n* All event inputs are decoded and stored in a fully queryable JSON column called `event_inputs`\n* Flipside's labels have been merged in.\n* Every contract has an associated name that corresponds 1:1 with the solidity contract code.\n\n## Table Schema\n\n`polygon.events_emitted`\n\n| Field                    | Type      | Description                                                                                                    |\n| ------------------------ | --------- | -------------------------------------------------------------------------------------------------------------- |\n| block\\_id                | number    | The block height this event was recorded at.                                                                   |\n| block\\_timestamp         | timestamp | UTC block timestamp for parent block                                                                           |\n| tx\\_id                   | string    | Transaction hash                                                                                               |\n| event\\_index             | string    | The index/order of the event in the transaction                                                                |\n| event\\_inputs            | json      | Decoded event inputs (specifically topics/data are decoded)                                                    |\n| event\\_name              | string    | English decoded name for the event name. This could be a transfer, or any decoded log method or log event name |\n| event\\_removed           | boolean   | Whether the event get removed or not                                                 ", "doc_id": "73af855e-7227-4db7-bb70-07c9f2591d10", "embedding": null, "doc_hash": "3636be63642dc5420dcd8a620dd1ed26915637a79eac0af305330ec65f015295", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/polygon-events-emitted.md", "file_name": "polygon-events-emitted.md"}, "node_info": {"start": 0, "end": 1970, "_node_type": "1"}, "relationships": {"1": "86a6bc5c47227b1b82fa2e489c5f785d6375f39e", "3": "cd2ddb1e-13cf-4aab-88f2-6b86eb9c2f51"}}, "__type__": "1"}, "cd2ddb1e-13cf-4aab-88f2-6b86eb9c2f51": {"__data__": {"text": "                                             |\n| tx\\_from\\_address        | address   | The initiator of the transaction.                                                                              |\n| tx\\_from\\_address\\_name  | string    | [(see Labels section for details)](../../../labels/)                                                           |\n| tx\\_from\\_label          | string    | [(see Labels section for details)](../../../labels/)                                                           |\n| tx\\_from\\_label\\_subtype | string    | [(see Labels section for details)](../../../labels/)                                                           |\n| tx\\_from\\_label\\_type    | string    | [(see Labels section for details)](../../../labels/)                                                           |\n| tx\\_to\\_address          | address   | The receiver of the transaction or initial contract being called                                               |\n| tx\\_to\\_address\\_name    | string    | [(see Labels section for details)](../../../labels/)                                                           |\n| tx\\_to\\_label            | string    | [(see Labels section for details)](../../../labels/)                                                           |\n| tx\\_to\\_label\\_subtype   | string    | [(see Labels section for details)](../../../labels/)                                                           |\n| tx\\_to\\_label\\_type      | string    | [(see Labels section for details)](../../../labels/)                             ", "doc_id": "cd2ddb1e-13cf-4aab-88f2-6b86eb9c2f51", "embedding": null, "doc_hash": "34a79628b2b4e8c9e3eeed4c95d9293c3ded64a91fb1839e807eb184837bbbef", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/polygon-events-emitted.md", "file_name": "polygon-events-emitted.md"}, "node_info": {"start": 1971, "end": 3526, "_node_type": "1"}, "relationships": {"1": "86a6bc5c47227b1b82fa2e489c5f785d6375f39e", "2": "73af855e-7227-4db7-bb70-07c9f2591d10", "3": "d31f5f15-2ea9-481f-a138-11b768091d14"}}, "__type__": "1"}, "d31f5f15-2ea9-481f-a138-11b768091d14": {"__data__": {"text": "                                                 |\n| contract\\_address        | address   | The parent contract that is responsible for kicking off this event.                                            |\n| contract\\_name           | string    | The name of this contract.                                                                                     |\n| tx\\_succeeded            | boolean   | Was this transaction successful?                                                                               |\n", "doc_id": "d31f5f15-2ea9-481f-a138-11b768091d14", "embedding": null, "doc_hash": "3cd2272baf11d67ba1fa400dd9fa84adc4bb690d424b4fd175119ca04f68d00d", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/polygon-events-emitted.md", "file_name": "polygon-events-emitted.md"}, "node_info": {"start": 3507, "end": 4020, "_node_type": "1"}, "relationships": {"1": "86a6bc5c47227b1b82fa2e489c5f785d6375f39e", "2": "cd2ddb1e-13cf-4aab-88f2-6b86eb9c2f51"}}, "__type__": "1"}, "53d9cb2d-5600-432d-9240-63a003a7a9c9": {"__data__": {"text": "# Polygon Transactions\n\n{% hint style=\"warning\" %}\nThese are legacy Polygon tables. See [Polygon 2.0](../polygon-2.0-tables.md) for up-to-date Polygon models.\n{% endhint %}\n\nPolygon transactions exist within the polygon schema, as `polygon.transactions` .\n\nTransactions contain top-level summary information not found in `polygon.udm_events`, for example, transaction fees and gas.\n\n## Table Schema\n\n`polygon.transactions`\n\n| Field                | Type                      | Description                                                         |\n| -------------------- | ------------------------- | ------------------------------------------------------------------- |\n| block\\_id            | number                    | The block height this event was recorded at.                        |\n| block\\_timestamp     | timestamp                 | UTC block timestamp for parent block                                |\n| tx\\_id               | string                    | The hash (unique identifier) of the transaction.                    |\n| tx\\_position         | string                    | The position of the transaction in the block.                       |\n| nonce                | number                    | The number of transactions sent from the `from_address.`            |\n| from\\_address        | address                   | The sender/initiator of the transaction.                            |\n| from\\_address\\_name  | [label](../../../labels/) | [(see label's data model for details)](../../../labels/)            |\n| from\\_label          | [label](../../../labels/) | [(see label's data model for details)](../../../labels/)            |\n| from\\_label\\_subtype | [label](../../../labels/) | [(see label's data model for details)](../../../labels/)            |\n| from\\_label\\_type    | [label](../../../labels/) | [(see label's data model for details)](../../../labels/)            |\n| to\\_address          | text                      | The recipient of the transaction, or contract being called.         |\n| to\\_addres\\_name     | [label](../../../labels/) | [(see label's data model for details)](../../../labels/)", "doc_id": "53d9cb2d-5600-432d-9240-63a003a7a9c9", "embedding": null, "doc_hash": "ae913db8784a6bc1abdd9daad094cdb1ee7041014b6ff993d01bbfecafd9d028", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/polygon-transactions.md", "file_name": "polygon-transactions.md"}, "node_info": {"start": 0, "end": 2132, "_node_type": "1"}, "relationships": {"1": "5f38d6590bbbbd05eaabb113c63f3f45f3e42263", "3": "2de641b6-32b8-4fdd-ae02-45ce61a56fde"}}, "__type__": "1"}, "2de641b6-32b8-4fdd-ae02-45ce61a56fde": {"__data__": {"text": "| [(see label's data model for details)](../../../labels/)            |\n| to\\_label            | [label](../../../labels/) | [(see label's data model for details)](../../../labels/)            |\n| to\\_label\\_subtype   | [label](../../../labels/) | [(see label's data model for details)](../../../labels/)            |\n| to\\_label\\_type      | [label](../../../labels/) | [(see label's data model for details)](../../../labels/)            |\n| symbol               | text                      | The project symbol (i.e. ERC-20 transaction), if applicable.        |\n| function\\_signature  | string                    | The function signature of the contract call, if applicable.         |\n| function\\_name       | string                    | The English decoded name of the function signature, if applicable.  |\n| gas\\_price           | number                    | The gas price at the time of this transaction.                      |\n| gas\\_limit           | number                    | The gas limit specified in this transaction.                        |\n| gas\\_used            | number                    | The amount of gas used by this transaction.                         |\n| fee                  | number                    | The transaction fee calculated from the gas price and the gas used. |\n| fee\\_usd             | number                    | The USD equivalent fee at the time of the transaction.              |\n| success              | text                      | The success state of this transaction execution.                    |\n| event\\_count         | number                    | The number of events contained within this transaction.             |\n\n", "doc_id": "2de641b6-32b8-4fdd-ae02-45ce61a56fde", "embedding": null, "doc_hash": "e869978c9795fed4fd429ae36f1798d9705809d12709f44831917141cebec23b", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/polygon-transactions.md", "file_name": "polygon-transactions.md"}, "node_info": {"start": 2074, "end": 3746, "_node_type": "1"}, "relationships": {"1": "5f38d6590bbbbd05eaabb113c63f3f45f3e42263", "2": "53d9cb2d-5600-432d-9240-63a003a7a9c9"}}, "__type__": "1"}, "721e1f5d-681f-4ada-9b6e-504c4cd7406a": {"__data__": {"text": "# Polygon UDM Events\n\n{% hint style=\"warning\" %}\nThese are legacy Polygon tables. See [Polygon 2.0](../polygon-2.0-tables.md) for up-to-date Polygon models.\n{% endhint %}\n\nPolygon UDM events exist within the `polygon` schema, as `polygon.udm_events`&#x20;\n\nWithin the event table, native MATIC transfers, internal transactions, and contract calls are all modeled as \"events\".\n\nNotable Features that make querying simple:\n\n* \"Origin\" metadata is carried down to every event. This is particularly useful if you want to query an event in the context of a specific origin contract call, i.e. all \"burn\" events that occur in the context of a token \"transfer\".\n* All function names, log methods, and log events have been decoded into their human-readable format.\n* All amounts have been decimal adjusted.\n* All amounts, where applicable, contain their USD Equivalent.\n\n## Table Schema\n\n`polygon.udm_events`\n\n| Field                       | Type      | Description                                                                                                                                              |\n| --------------------------- | --------- | -------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| block\\_timestamp            | timestamp | UTC block timestamp for parent block                                                                                                                     |\n| block\\_id                   | number    | The block height this event was recorded at.                                                                                                             |\n| tx\\_id                      | string    | Transaction id for this transfer                                                                                                                         |\n| origin\\_address             | address   | The initiator of the transaction                                         ", "doc_id": "721e1f5d-681f-4ada-9b6e-504c4cd7406a", "embedding": null, "doc_hash": "1904197169691fc79f58077de7ce16a2ab73a739c4eb51a529fae5fa00c31743", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/polygon-udm-events.md", "file_name": "polygon-udm-events.md"}, "node_info": {"start": 0, "end": 2014, "_node_type": "1"}, "relationships": {"1": "809616575fcb6974b0c9a36f0097360cb237dba9", "3": "79b77f86-dad6-4c80-921c-cfed66f1a0e7"}}, "__type__": "1"}, "79b77f86-dad6-4c80-921c-cfed66f1a0e7": {"__data__": {"text": "                                                                                                   |\n| origin\\_address\\_name       | string    | [(see Labels section for details)](../../../labels/)                                                                                                     |\n| origin\\_label               | string    | [(see Labels section for details)](../../../labels/)                                                                                                     |\n| origin\\_label\\_subtype      | string    | [(see Labels section for details)](../../../labels/)                                                                                                     |\n| origin\\_label\\_type         | string    | [(see Labels section for details)](../../../labels/)                                                                                                     |\n| origin\\_function\\_name      | string    | Input function signature decoded to English name for the parent tx that kicked off this event, if applicable                                             |\n| origin\\_function\\_signature | string    | The function signature of contract call, if applicable                                                                                                   |\n| from\\_address               | address   | The sender of the event                                                                          ", "doc_id": "79b77f86-dad6-4c80-921c-cfed66f1a0e7", "embedding": null, "doc_hash": "50c0905c407625f939010ff905776498d055dc4cb2d34bb0fbc749c48464eb74", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/polygon-udm-events.md", "file_name": "polygon-udm-events.md"}, "node_info": {"start": 2015, "end": 3451, "_node_type": "1"}, "relationships": {"1": "809616575fcb6974b0c9a36f0097360cb237dba9", "2": "721e1f5d-681f-4ada-9b6e-504c4cd7406a", "3": "4f595c2c-3c47-41bf-827e-febf8c2e04dd"}}, "__type__": "1"}, "4f595c2c-3c47-41bf-827e-febf8c2e04dd": {"__data__": {"text": "                                                                           |\n| from\\_address\\_name         | string    | [(see Labels section for details)](../../../labels/)                                                                                                     |\n| from\\_label                 | string    | [(see Labels section for details)](../../../labels/)                                                                                                     |\n| from\\_label\\_subtype        | string    | [(see Labels section for details)](../../../labels/)                                                                                                     |\n| from\\_label\\_type           | string    | [(see Labels section for details)](../../../labels/)                                                                                                     |\n| to\\_address                 | address   | The receiver of the transaction or contract being called                                                                                                 |\n| to\\_address\\_name           | string    | [(see Labels section for details)](../../../labels/)                                                                                                     |\n| to\\_label                   | string    | [(see Labels section for details)](../../../labels/)              ", "doc_id": "4f595c2c-3c47-41bf-827e-febf8c2e04dd", "embedding": null, "doc_hash": "34d7ab48865d230e3c1fceffb718a1b962cf1b4ad717a265c9a10634a7a82e08", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/polygon-udm-events.md", "file_name": "polygon-udm-events.md"}, "node_info": {"start": 3452, "end": 4833, "_node_type": "1"}, "relationships": {"1": "809616575fcb6974b0c9a36f0097360cb237dba9", "2": "79b77f86-dad6-4c80-921c-cfed66f1a0e7", "3": "cdff6b0c-d462-4bc6-9a11-1c4fc61fa46a"}}, "__type__": "1"}, "cdff6b0c-d462-4bc6-9a11-1c4fc61fa46a": {"__data__": {"text": "                                                                                                    |\n| to\\_label\\_subtype          | string    | [(see Labels section for details)](../../../labels/)                                                                                                     |\n| to\\_label\\_type             | string    | [(see Labels section for details)](../../../labels/)                                                                                                     |\n| event\\_name                 | string    | English decoded name for the event name. This could be a transfer, or any decoded log method or log event name                                           |\n| event\\_type                 | string    | The english name for the type of event. This could be a native polygon event, token transfer, or contract methods calls/events.                          |\n| event\\_id                   | string    | The index/order of the event in the transaction                                                                                                          |\n| contract\\_address           | address   | The parent contract that is responsible for kicking off this event.                                                                                      |\n| symbol                      | string    | The symbol for the contract, if applicable.                                                                                                       ", "doc_id": "cdff6b0c-d462-4bc6-9a11-1c4fc61fa46a", "embedding": null, "doc_hash": "25e9fafb84f18c8657f40fa4b49b3df3390bd2b57103fb1afd9b9687b5d44b17", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/polygon-udm-events.md", "file_name": "polygon-udm-events.md"}, "node_info": {"start": 4834, "end": 6320, "_node_type": "1"}, "relationships": {"1": "809616575fcb6974b0c9a36f0097360cb237dba9", "2": "4f595c2c-3c47-41bf-827e-febf8c2e04dd", "3": "776a2f5f-ff32-4e97-be6e-7951f3ad21ce"}}, "__type__": "1"}, "776a2f5f-ff32-4e97-be6e-7951f3ad21ce": {"__data__": {"text": "                          |\n| amount                      | number    | Native amount of transfer (decimal adjusted)                                                                                                             |\n| amount\\_usd                 | number    | In the case of a transfer event, the equivalent amount in USD. Note this is computed by taking the average hourly price around the time of the tx event. |\n", "doc_id": "776a2f5f-ff32-4e97-be6e-7951f3ad21ce", "embedding": null, "doc_hash": "a13128947ccecdfa6ab4b80ee901ce3d9211b3ac9ea283ae4ec619af5f8e633c", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/polygon-udm-events.md", "file_name": "polygon-udm-events.md"}, "node_info": {"start": 6301, "end": 6727, "_node_type": "1"}, "relationships": {"1": "809616575fcb6974b0c9a36f0097360cb237dba9", "2": "cdff6b0c-d462-4bc6-9a11-1c4fc61fa46a"}}, "__type__": "1"}, "f144ed4f-95a9-40c2-9aab-10e2fce36a32": {"__data__": {"text": "---\ndescription: uniswapv3.position_collected_fees\n---\n\n# Position Collected Fees\n\n{% hint style=\"warning\" %}\nThese are legacy Polygon tables. See [Polygon 2.0](../polygon-2.0-tables.md) for up-to-date Polygon models.\n{% endhint %}\n\nFees collected by a Liquidity Provider (LP) on their position. In V3 fees are accrued and collected in each token within the pair. When a pool `Collect` event is emitted a new record is appended to this table. If a `Burn` event is emitted in the same transaction as the `Collect` event the amount of the burn is subtracted from the `Collect` event token1 and token0 amounts. This allows us to arrive solely at the swap fees collected.\n\n| Field                         | Type      | Description                                                                                |\n| ----------------------------- | --------- | ------------------------------------------------------------------------------------------ |\n| `block_id`                    | number    | The block number that this Collect was recorded                                            |\n| `block_timestamp`             | timestamp | The block timestamp that this Collect was recorded                                         |\n| `tx_id`                       | text      | The transaction that contained this Collect                                                |\n| `blockchain`                  | text      | The blockchain this Collect occurred on (Ethereum, will support L2s here shortly)          |\n| `pool_address`                | address   | The contract address of the pool                                                           |\n| `pool_name`                   | text      | The name of the Pool (format = \"{token0}-{token1} {tick\\_spacing} {fee}\")                  |\n| `liquidity_provider`          | address   | The address of the liquidity provider                                                      |\n| `nf_position_manager_address` | address   | The address of the peripheral nf position manager contract, if used.                       |\n| `nf_token_id`            ", "doc_id": "f144ed4f-95a9-40c2-9aab-10e2fce36a32", "embedding": null, "doc_hash": "87d4d35dc0266a732a9b127551fe7c01840eee22c8fb4ae17f140414f23d315f", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/position-collected-fees.md", "file_name": "position-collected-fees.md"}, "node_info": {"start": 0, "end": 2086, "_node_type": "1"}, "relationships": {"1": "36420b550190ac49aba964e6a4adb6a04a64a711", "3": "28632d92-5d8f-4af0-8249-194b6efbab08"}}, "__type__": "1"}, "28632d92-5d8f-4af0-8249-194b6efbab08": {"__data__": {"text": "`nf_token_id`                 | number    | The id of the NFT associated with the liquidity position                                   |\n| `amount0_adjusted`            | number    | The amount of token0 collected for swap fees                                               |\n| `amount1_adjusted`            | number    | The amount of token1 collected for swap fees                                               |\n| `amount0_adjusted_usd`        | number    | The amount of token0 collected for swap fees, converted to USD                             |\n| `amount1_adjusted_usd`        | number    | The amount of token1 collected for swap fees, converted to USD                             |\n| `tick_lower`                  | number    | Lower tick of the liquidity position                                                       |\n| `tick_upper`                  | number    | Upper tick of the liquidity position                                                       |\n| `price_lower`                 | number    | Lower bound of the liquidity position represented as token 1 per token 0                   |\n| `price_upper`                 | number    | Upper bound of the liquidity position represented as token 1 per token 0                   |\n| `price_lower_usd`             | number    | Lower bound of the liquidity position represented as token 1 per token 0, converted to USD |\n| `price_upper_usd`             | number    | Upper bound of the liquidity position represented as token 1 per token 0, converted to USD |\n\n\n\n\n\n\n\n", "doc_id": "28632d92-5d8f-4af0-8249-194b6efbab08", "embedding": null, "doc_hash": "898c925228d7be1940e90be4fcb6bb5b420b12d8762be70ffedaad58208d0582", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/position-collected-fees.md", "file_name": "position-collected-fees.md"}, "node_info": {"start": 2061, "end": 3595, "_node_type": "1"}, "relationships": {"1": "36420b550190ac49aba964e6a4adb6a04a64a711", "2": "f144ed4f-95a9-40c2-9aab-10e2fce36a32"}}, "__type__": "1"}, "86b4d58b-7e39-449f-892e-5937125891cd": {"__data__": {"text": "---\ndescription: uniswapv3.swaps\n---\n\n# Swaps\n\n{% hint style=\"warning\" %}\nThese are legacy Polygon tables. See [Polygon 2.0](../polygon-2.0-tables.md) for up-to-date Polygon models.\n{% endhint %}\n\nAll swaps that occur on V3 pools.\n\n| Field                | Type      | Description                                                                            |\n| -------------------- | --------- | -------------------------------------------------------------------------------------- |\n| `block_id`           | number    | The block number that this lp action was recorded                                      |\n| `block_timestamp`    | timestamp | The block timestamp that this lp action was recorded                                   |\n| `tx_id`              | text      | The transaction that contained this lp action                                          |\n| `blockchain`         | text      | The blockchain this lp action was created on (Ethereum, will support L2s here shortly) |\n| `pool_address`       | address   | The contract address of the pool                                                       |\n| `pool_name`          | text      | The name of the Pool (format = \"{token0}-{token1} {tick\\_spacing} {fee}\")              |\n| `sender`             | address   | The address that initiated the swap call, and that received the callback               |\n| `recipient`          | address   | The address that received the output of the swap                                       |\n| `amount0_adjusted`   | number    | The delta of the token0 balance of the pool, decimal adjusted.                         |\n| `amount1_adjusted`   | number    | The delta of the token1 balance of the pool, decimal adjusted.                         |\n| `amount0_usd`        | number    | The delta of the token0 balance of the pool, converted to USD                          |\n| `amount1_usd`        | number    | The delta of the token1 balance of the pool, converted to USD                          |\n| `tick`             ", "doc_id": "86b4d58b-7e39-449f-892e-5937125891cd", "embedding": null, "doc_hash": "46c24bde6b59d172bd465fbb24e0634d859182d2738bccceb64be182302f0e7d", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/swaps.md", "file_name": "swaps.md"}, "node_info": {"start": 0, "end": 2017, "_node_type": "1"}, "relationships": {"1": "a5942b73aa4199416281b74616aa258027f2d725", "3": "fa21c9f6-1167-4fc9-b1d8-ea37acba86dc"}}, "__type__": "1"}, "fa21c9f6-1167-4fc9-b1d8-ea37acba86dc": {"__data__": {"text": " |\n| `tick`               | number    | The log base 1.0001 of the price of the pool after the swap                            |\n| `liquidity_adjusted` | number    | The liquidity of the pool after the swap, decimal adjusted.                            |\n| `price_0_1`          | number    | The amount of token0 per token1 that the swap occurred at                              |\n| `price_1_0`          | number    | The amount of token1 per token0 that the swap occurred at                              |\n| `token0_address`     | address   | Contract address of token 0                                                            |\n| `token0_symbol`      | text      | Symbol of token 0                                                                      |\n| `token1_address`     | address   | Contract address of token 1                                                            |\n| `token1_symbol`      | text      | Symbol of token 1                                                                      |\n\n", "doc_id": "fa21c9f6-1167-4fc9-b1d8-ea37acba86dc", "embedding": null, "doc_hash": "55fd36f48f2a3f229273ed84fd7b472dc69d9e1513ff5c2bbc0460bfee159c9b", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/swaps.md", "file_name": "swaps.md"}, "node_info": {"start": 1993, "end": 3005, "_node_type": "1"}, "relationships": {"1": "a5942b73aa4199416281b74616aa258027f2d725", "2": "86b4d58b-7e39-449f-892e-5937125891cd"}}, "__type__": "1"}, "43c13f38-6dc6-4e1a-b0ae-c8e139808805": {"__data__": {"text": "# V3 Resources\n\n{% hint style=\"warning\" %}\nThese are legacy Polygon tables. See [Polygon 2.0](../polygon-2.0-tables.md) for up-to-date Polygon models.\n{% endhint %}\n\nIn the process of putting together this data for V3, we created a map of the V3 contracts. This proved to be incredibly useful in building out our data models.\n\n### Pool\n\n![](<../../../../.gitbook/assets/Uniswap V3 - Pool.png>)\n\n### NF Position Manager\n\n![](<../../../../.gitbook/assets/Uniswap V3 - NonFungiblePositionManager.png>)\n\n### Factory\n\n![](<../../../../.gitbook/assets/Uniswap V3 - Factory.png>)\n", "doc_id": "43c13f38-6dc6-4e1a-b0ae-c8e139808805", "embedding": null, "doc_hash": "95804347c34ae1331dda1519714f04d1fa80f3a1be4378850bffd37ecfa4e0ec", "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/v3-resources.md", "file_name": "v3-resources.md"}, "node_info": {"start": 0, "end": 573, "_node_type": "1"}, "relationships": {"1": "b64f4ed6edc4f6543cc1f7c422f24f9e53b520fe"}}, "__type__": "1"}, "04830afc-516a-4b6b-a7bd-048a5cab2b60": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Solana Tables\n\n### Background of Solana\n\n**Blockchain:** [Solana](https://solana.com/)\n\nSolana is a public base-layer blockchain protocol that optimizes for scalability. The goal of the Solana blockchain is to provide a platform that enables developers to create decentralized applications (dApps) without needed to design around performance bottlenecks. Solana features a new timestamp system called Proof of History (PoH) that enables automatically ordered transactions. It also uses Proof of Stake (PoS) consensus algorithm to help secure the network.&#x20;\n\nThe public Github repo with Solana model source code is [here](https://github.com/FlipsideCrypto/solana-models).\n\n### Current Solana Tables\n\nThe current Solana table schemas build concepts laid out in [Flipside's event data model](broken-reference). Solana tables are available in Velocity as the `solana` schema. The tables are built based on the Solana events and transactions information. The following Solana tables are available:\n\n[Solana Dim Labels](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_dim\\_labels)\n\n[Solan Dim Tokens](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_dim\\_tokens)\n\n[Solana EZ Signers](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_ez\\_signers)\n\n[Solan EZ Token Prices Hourly](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_ez\\_token\\_prices\\_hourly)\n\n[Solana Fact Blocks](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_fact\\_blocks)\n\n[Solana Fact Events](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_fact\\_events)&#x20;\n\n[Solana Fact Gauges Votes](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_fact\\_gauges\\_votes)\n\n[Solana Fact Gov Actions](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_fact\\_gov\\_actions)\n\n[Solana Dim NFT Metadata](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_dim\\_nft\\_metadata)\n\n[Solana Fact NFT Mints](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_fact\\_nft\\_mints)\n\n[Solana Fact NFT Sales](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_fact\\_nft\\_sales)\n\n[Solana Fact Proposal Creation](broken-reference)\n\n[Solana EZ Staking/LP Actions](broken-reference)\n\n[Solana Fact Staking/LP Actions](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_fact\\_staking\\_lp\\_actions)\n\n[Solana Fact Stake Pool", "doc_id": "04830afc-516a-4b6b-a7bd-048a5cab2b60", "embedding": null, "doc_hash": "f23927d8765084b02c5955edd41a3962ac1e9fb289ad9f04ad79425ddb935289", "extra_info": {"file_path": "our-data/archive/tables/solana-tables.md", "file_name": "solana-tables.md"}, "node_info": {"start": 0, "end": 2756, "_node_type": "1"}, "relationships": {"1": "25a4c69537e4ccc17e3f9be88402907181d8ae12", "3": "ae2556ca-4de3-426b-b22a-686ae2ab4c0d"}}, "__type__": "1"}, "ae2556ca-4de3-426b-b22a-686ae2ab4c0d": {"__data__": {"text": "Fact Stake Pool Actions](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_fact\\_stake\\_pool\\_actions)\n\n[Solana Fact Swaps](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_fact\\_swaps)\n\n[Solana Fact Token Prices Hourly](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_fact\\_token\\_prices\\_hourly)\n\n[Solana Fact Transactions](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_fact\\_transactions)\n\n[Solana Fact Transfers](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_fact\\_transfers)\n\n[Solana Fact Votes Agg Blocks](https://flipsidecrypto.github.io/solana-models/#!/model/model.solana\\_models.core\\_\\_fact\\_votes\\_agg\\_block) &#x20;\n\n\n\n#### What we have:\n\n* All native on-chain Solana events dating back to November 28, 2021.&#x20;\n* Labels for certain common Solana wallet addresses and programs.&#x20;\n* NFT metadata for top Solana NFT projects.&#x20;\n\n#### What we don't have:&#x20;\n\n* Off-chain events such as DEX order book transactions and bids on secondary NFT marketplaces.&#x20;\n* Data before Nov. 28th, 2021. We are in the process of backfilling the Solana tables, earlier data will be made available shortly.&#x20;\n* Votes anywhere besides the `solana.votes_block_agg` table and Pyth Oracle transactions.\n\n### Solana Labels&#x20;\n\nSolana labels are available and located in the table `solana.labels`. To include Solana labels in your analysis, perform a join on address or program ID. Please note that all address labels stored in the `solana.labels` table are in lower case and that Solana addresses are case sensitive. To join the tables, use the SQL function `COLLATE` to create a case insensitive `JOIN` statement.&#x20;\n\n### Solana NFT Tables And Metadata\n\nWe have three Solana NFT tables: `solana.nfts` (mints, sales, etc), `solana.nft_metadata` (token names, images, attributes, etc), and `solana.airdrops` (NFT and token airdrops).\n\nThe goal of these tables is to create a unified table of on-chain Solana NFT data that makes it easy to compare across and within NFTs. To do this, we have curated metadata from top Solana NFT projects. The metadata is nowhere near comprehensive, we add projects one or two at a time. That being said, we want these tables to be interesting to our community and would love feedback and recommendations for projects to add.&#x20;\n\n### How to Contribute to Our Data\n\nAre there labels or NFT metadata that you would like to see added to our data? Let us know the following information in Discord or via email (hello@flipsidecrypto.com):&#x20;\n\n**Good:** Send us the name of the token/label and the contract address.&#x20;\n\n**Better:** Send us the name of the token/label, the contract address, and the project website.\n\n**Best:** Send us the name, contract address, project website, and example transactions (links to solscan.io). For an NFT, we would appreciate examples of the following transaction types:&#x20;\n\n* minting\n* list\n* unlist\n* bid\n*", "doc_id": "ae2556ca-4de3-426b-b22a-686ae2ab4c0d", "embedding": null, "doc_hash": "efae445823de24343fb37282146f55e3eb9bd2d9074fd370ae62262061d457c5", "extra_info": {"file_path": "our-data/archive/tables/solana-tables.md", "file_name": "solana-tables.md"}, "node_info": {"start": 2744, "end": 5823, "_node_type": "1"}, "relationships": {"1": "25a4c69537e4ccc17e3f9be88402907181d8ae12", "2": "04830afc-516a-4b6b-a7bd-048a5cab2b60", "3": "92b47052-7df7-4a3e-b6d1-d5e25e5dda8e"}}, "__type__": "1"}, "92b47052-7df7-4a3e-b6d1-d5e25e5dda8e": {"__data__": {"text": "minting\n* list\n* unlist\n* bid\n* sale\n* any other special thing you can \"do\" with this NFT (ex: staking)\n", "doc_id": "92b47052-7df7-4a3e-b6d1-d5e25e5dda8e", "embedding": null, "doc_hash": "fa15320b892c6878eb59be1a5c6abf61d8514cbd972e31cecc607a754f3baebc", "extra_info": {"file_path": "our-data/archive/tables/solana-tables.md", "file_name": "solana-tables.md"}, "node_info": {"start": 5805, "end": 5909, "_node_type": "1"}, "relationships": {"1": "25a4c69537e4ccc17e3f9be88402907181d8ae12", "2": "ae2556ca-4de3-426b-b22a-686ae2ab4c0d"}}, "__type__": "1"}, "96d785ae-267c-46df-85f8-49b69ac6944c": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Terra Tables\n\n## Background of Terra\n\n**Blockchain:** [Terra](https://www.terra.money/).&#x20;\n\nTerra is a Proof of stake chain and can also be used as a Smart contract platform. Terra protocol aims to create a stable priced currency by adopting an elastic monetary policy. Terra is supported by a basket of fiat-pegged, seigniorage share style stable coins which are algorithmically stabilized by its native crypto asset, Luna.&#x20;\n\n## Terra Tables\n\nThe Terra table schemas build on the concepts laid out in [Flipside's event data model](broken-reference). Terra tables are available in Velocity as the `terra` schema. The tables are built based on the terra message, transactions and transition information.&#x20;\n\nAt Flipside database, for Terra, there are two types of tables, one is the Raw Tables and the other one is the Terra Base Tables, clicking the following link to see more details about the tables.&#x20;\n\nThe public Github repo with Terra model source code is [here](https://github.com/FlipsideCrypto/sql\\_models/tree/main/models/terra).\n\n### Terra Raw Tables:\n\n{% content-ref url=\"terra-raw-tables/blocks.md\" %}\n[blocks.md](terra-raw-tables/blocks.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"terra-raw-tables/msgs.md\" %}\n[msgs.md](terra-raw-tables/msgs.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"terra-raw-tables/msg_events.md\" %}\n[msg\\_events.md](terra-raw-tables/msg\\_events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"terra-raw-tables/transactions.md\" %}\n[transactions.md](terra-raw-tables/transactions.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"terra-raw-tables/transitions.md\" %}\n[transitions.md](terra-raw-tables/transitions.md)\n{% endcontent-ref %}\n\n### Terra Base Tables:\n\n{% content-ref url=\"terra-base-tables/labels.md\" %}\n[labels.md](terra-base-tables/labels.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"terra-base-tables/oracle-prices.md\" %}\n[oracle-prices.md](terra-base-tables/oracle-prices.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"terra-base-tables/tax-rate.md\" %}\n[tax-rate.md](terra-base-tables/tax-rate.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"terra-base-tables/daily-balances.md\" %}\n[daily-balances.md](terra-base-tables/daily-balances.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"terra-base-tables/swap.md\" %}\n[swap.md](terra-base-tables/swap.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"terra-base-tables/staking.md\" %}\n[staking.md](terra-base-tables/staking.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"terra-base-tables/rewards.md\"", "doc_id": "96d785ae-267c-46df-85f8-49b69ac6944c", "embedding": null, "doc_hash": "c9bcabd07116222a905051c7910f8b8d02ce38d23827fa1be33eb0fd595e7469", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 2581, "_node_type": "1"}, "relationships": {"1": "543cf842e50426577d550e7e5f17cd64baebf5a7", "3": "ce6050e7-4209-42a4-b9dc-0811fb66dc7a"}}, "__type__": "1"}, "ce6050e7-4209-42a4-b9dc-0811fb66dc7a": {"__data__": {"text": "content-ref url=\"terra-base-tables/rewards.md\" %}\n[rewards.md](terra-base-tables/rewards.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"broken-reference\" %}\n[Broken link](broken-reference)\n{% endcontent-ref %}\n\n{% content-ref url=\"broken-reference\" %}\n[Broken link](broken-reference)\n{% endcontent-ref %}\n\n{% content-ref url=\"broken-reference\" %}\n[Broken link](broken-reference)\n{% endcontent-ref %}\n\n{% content-ref url=\"broken-reference\" %}\n[Broken link](broken-reference)\n{% endcontent-ref %}\n\n\n\n\n\n\n\n## **General Table Notes**\n\n### **Platform (how are other assets represented)**\n\n* All assets on-chain are typically represented as an object with a denomination and an amount to differentiate between different assets\n\n### **Precision (decimals)**\n\n* 0.000001 (10^6)\n\n### **Fees**\n\n* Fees can be paid in any Terra currency (Luna, TerraSDT, TerraKRW etc)\n* We can get fees in the transaction payload\n\n### **Events**\n\n* Events or (Msgs) in Tendermint terms can easily be captured when we query for txs in a block\n* Events are emitted from a \"module\"\n\n\n\n", "doc_id": "ce6050e7-4209-42a4-b9dc-0811fb66dc7a", "embedding": null, "doc_hash": "13f6ffa6f3c96416acfdd877fd476368c676da51d5d178bd1392c979ff56ad2f", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 2535, "end": 3587, "_node_type": "1"}, "relationships": {"1": "543cf842e50426577d550e7e5f17cd64baebf5a7", "2": "96d785ae-267c-46df-85f8-49b69ac6944c"}}, "__type__": "1"}, "2535d1ba-b7c6-4386-985a-4f9126cde6fb": {"__data__": {"text": "---\ndescription: This page lists all the base tables for Terra\n---\n\n# Terra Base Tables\n\nThe Terra base tables contains the table from the Raw Table side, it will be used to create the Starter Queries.&#x20;\n\n{% content-ref url=\"../../../../labels/\" %}\n[labels](../../../../labels/)\n{% endcontent-ref %}\n\n{% content-ref url=\"oracle-prices.md\" %}\n[oracle-prices.md](oracle-prices.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"tax-rate.md\" %}\n[tax-rate.md](tax-rate.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"daily-balances.md\" %}\n[daily-balances.md](daily-balances.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"swap.md\" %}\n[swap.md](swap.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"staking.md\" %}\n[staking.md](staking.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"rewards.md\" %}\n[rewards.md](rewards.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"broken-reference\" %}\n[Broken link](broken-reference)\n{% endcontent-ref %}\n\n{% content-ref url=\"broken-reference\" %}\n[Broken link](broken-reference)\n{% endcontent-ref %}\n\n{% content-ref url=\"broken-reference\" %}\n[Broken link](broken-reference)\n{% endcontent-ref %}\n\n{% content-ref url=\"broken-reference\" %}\n[Broken link](broken-reference)\n{% endcontent-ref %}\n", "doc_id": "2535d1ba-b7c6-4386-985a-4f9126cde6fb", "embedding": null, "doc_hash": "e4dfeb204fa48e45d0310317b0b1978c203f22fa3c37e6555fa6a21a400fb2cd", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 1209, "_node_type": "1"}, "relationships": {"1": "82487b1ddf23730b0c46fb53db0de200f8ba2846"}}, "__type__": "1"}, "ce824b2d-7866-418e-b847-cfca68c790ec": {"__data__": {"text": "# Daily Balances\n\nDaily Balance shows the balance amount for each address. The label information can be found at [(see Labels section for details)](../../../../labels/).&#x20;\n\n## Table Schema\n\n**table name:** `terra.daily_balances`\n\n| Field                   | Type    | Description                                                                                        |\n| ----------------------- | ------- | -------------------------------------------------------------------------------------------------- |\n| `DATE`                  | date    | The date time for this balance record                                                              |\n| `ADDRESS`               | address | The balance address                                                                                |\n| `ADDRESS_LABEL_TYPE`    | text    | [(see Labels section for details)](../../../../labels/)                                            |\n| `ADDRESS_LABEL_SUBTYPE` | text    | [(see Labels section for details)](../../../../labels/)                                            |\n| `ADDRESS_LABEL`         | text    | [(see Labels section for details)](../../../../labels/)                                            |\n| `ADDRESS_NAME`          | text    | [(see Labels section for details)](../../../../labels/)                                            |\n| `BALANCE`               | number  | The amount of the balance                                                                          |\n| `BALANCE_USD`           | number  | The amount of the balance in USD, it is calculated by the hourly price multiple the balance amount |\n| `BALANCE_TYPE`          | text    | The balance type                                                                    ", "doc_id": "ce824b2d-7866-418e-b847-cfca68c790ec", "embedding": null, "doc_hash": "018dfabdaa82cc9d664f5062a68596cc9f9c0867abb3f173e67d8c2f3da581e3", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/daily-balances.md", "file_name": "daily-balances.md"}, "node_info": {"start": 0, "end": 1746, "_node_type": "1"}, "relationships": {"1": "bd9ab788b42cdad0391db1b48b92ae2bb4d01c48", "3": "0342fdff-f98c-43eb-9b41-64367ee2035f"}}, "__type__": "1"}, "0342fdff-f98c-43eb-9b41-64367ee2035f": {"__data__": {"text": "                                  |\n| `CURRENCY`              | text    | The balance currency                                                                               |\n", "doc_id": "0342fdff-f98c-43eb-9b41-64367ee2035f", "embedding": null, "doc_hash": "068afd2ca0c3e1b108532adab49b0e7b323be42fac34e093c963130a055ef1b5", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/daily-balances.md", "file_name": "daily-balances.md"}, "node_info": {"start": 1727, "end": 1902, "_node_type": "1"}, "relationships": {"1": "bd9ab788b42cdad0391db1b48b92ae2bb4d01c48", "2": "ce824b2d-7866-418e-b847-cfca68c790ec"}}, "__type__": "1"}, "1398cb85-25e7-4573-b99d-59c92ff4edc7": {"__data__": {"text": "---\ndescription: >-\n  Row based event actions table curated from terra.msg_events event attributes.\n  Actions or methods in the 'from_contract' event type are displayed as records\n  based on contract address.\n---\n\n# Event Actions\n\n## Table Schema\n\ntable name: `terra.event_actions`\n\n<table><thead><tr><th width=\"277.1723384899322\">Field</th><th width=\"154.6185569170212\">Type</th><th>Description</th></tr></thead><tbody><tr><td><code>BLOCK_ID</code></td><td>number</td><td>The block number for this event action</td></tr><tr><td><code>BLOCK_TIMESTAMP</code></td><td>timestamp</td><td>The timestamp this block was recorded</td></tr><tr><td><code>BLOCKCHAIN</code></td><td>text</td><td>The blockchain name for this block</td></tr><tr><td><code>CHAIN_ID</code></td><td>text</td><td>ID of blockchain to connect to, it can be <em>columbus-3, columbus-4</em>, <em>columbus-5</em>, etc.</td></tr><tr><td><code>TX_ID</code></td><td>text</td><td>The transaction that contained this event action</td></tr><tr><td><code>ACTION_INDEX</code></td><td>number</td><td>Index for event actions</td></tr><tr><td><code>MSG_INDEX</code></td><td>number</td><td>Message index, it is like the different steps for message, one message group can contain multiple message index values to deliver different information</td></tr><tr><td><code>ACTION_CONTRACT_ADDRESS</code></td><td>text</td><td>Contract address that kicked off this event action</td></tr><tr><td><code>CONTRACT_LABEL</code></td><td>text</td><td><a href=\"../../../../labels/\">(see Labels section for details)</a></td></tr><tr><td><code>ACTION_METHOD</code></td><td>text</td><td>The action or method within an event</td></tr><tr><td><code>ACTION_LOG</code></td><td>object</td><td>The log that provides detail (amounts, to, from, etc.) to an action or method</td></tr></tbody></table>\n", "doc_id": "1398cb85-25e7-4573-b99d-59c92ff4edc7", "embedding": null, "doc_hash": "42045fbdf87829b4ae44f6c57c0e46422536a6b5d80f5c1fad8699f8782219df", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/event-actions.md", "file_name": "event-actions.md"}, "node_info": {"start": 0, "end": 1820, "_node_type": "1"}, "relationships": {"1": "536bd9e20290a89068e0881aa0108d56d9833b26"}}, "__type__": "1"}, "a8e60942-4653-468a-aa7d-9059d3895758": {"__data__": {"text": "# Labels\n\nThe labels table is based on the Flipside Event label data, currently we included 4 different projects for the labels: `terraswap`, `chai`, `mirror`, `anchor`\n\n[(see Labels section for details)](../../../../labels/)\n\n## Table Schema\n\n**table name:** `terra.labels`\n\n| Field           | Type    | Description                                             |\n| --------------- | ------- | ------------------------------------------------------- |\n| `BLOCKCHAIN`    | text    | The blockchain name for this block                      |\n| `ADDRESS`       | address | The label address                                       |\n| `LABEL_TYPE`    | text    | [(see Labels section for details)](../../../../labels/) |\n| `LABEL_SUBTYPE` | text    | [(see Labels section for details)](../../../../labels/) |\n| `LABEL`         | text    | [(see Labels section for details)](../../../../labels/) |\n| `ADDRESS_NAME`  | text    | The name of this address                                |\n\n", "doc_id": "a8e60942-4653-468a-aa7d-9059d3895758", "embedding": null, "doc_hash": "6b460f78ffef1f0574d8f13a6c743f929aa6ec50119b33bfd2d269acb26d5a45", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/labels.md", "file_name": "labels.md"}, "node_info": {"start": 0, "end": 981, "_node_type": "1"}, "relationships": {"1": "3bbc1c4c759c63ace11e14c48f4fa1d01812665c"}}, "__type__": "1"}, "8b656dee-2466-474c-a225-e561d23e7a4c": {"__data__": {"text": "# Oracle Prices\n\nThe Oracle Prices table contains the information for the token price per timestamp\n\n## Table Schema\n\n**table name:** `terra.oracle_prices`\n\n| Field                | Type      | Description                                                                                                                                                                                                                                 |\n| -------------------- | --------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `BLOCKCHAIN`         | text      | Blockchain name, here is Terra                                                                                                                                                                                                              |\n| `BLOCK_TIMESTAMP`    | timestamp | Block time stamp for this message events been recorded                                                                                                                                                                                      |\n| `CURRENCY`           | text      | The currency for this token                                                                                                                                                                                            ", "doc_id": "8b656dee-2466-474c-a225-e561d23e7a4c", "embedding": null, "doc_hash": "836d597cea9a1742df2fa11a386d8e9c9c4f13172691e93ec79258e0e09abe60", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/oracle-prices.md", "file_name": "oracle-prices.md"}, "node_info": {"start": 0, "end": 1509, "_node_type": "1"}, "relationships": {"1": "ad22cefca0c1bdc1b22e2f6e8d8f1681441f4f0b", "3": "a492c4d8-de28-49f5-a772-75c654456f61"}}, "__type__": "1"}, "a492c4d8-de28-49f5-a772-75c654456f61": {"__data__": {"text": "                                        |\n| `SYMBOL`             | text      | The token symbol                                                                                                                                                                                                                            |\n| `LUNA_EXCHANGE_RATE` | text      | The exchange ratio to change this token for `LUNA` token. How many this token you can get when you transfer it with 1`LUNA`, for example, for `MNT`, `LUNA_EXCHANGE_RATE` is 2600, which means you can use 1 `LUNA` to exchange 2600 `MNT`  |\n| `PRICE_USD`          | number    | The price for this token at this timestamp                                                                                                                                                                                                  |\n| `SOURCE`             | text      | The source for the price                                                                                                                                                                                                                    |\n", "doc_id": "a492c4d8-de28-49f5-a772-75c654456f61", "embedding": null, "doc_hash": "91f99993fb2e65f6836d7ef1b866b32cc816a4c3d7319f048344ec34e607c992", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/oracle-prices.md", "file_name": "oracle-prices.md"}, "node_info": {"start": 1490, "end": 2632, "_node_type": "1"}, "relationships": {"1": "ad22cefca0c1bdc1b22e2f6e8d8f1681441f4f0b", "2": "8b656dee-2466-474c-a225-e561d23e7a4c"}}, "__type__": "1"}, "1ed927cc-73c4-414e-ac3b-78712486ada7": {"__data__": {"text": "# Reward\n\n`Reward` table shows the behaviors about how does supply enter / exist the Terra ecosystem. Staking rewards are made up of **gas (computer fees)**, **taxes**, and **seigniorage rewards**:\n\n* **Gas fee:** Similar concept as the Gas fee in Ethereum network, the fee paid for the transaction in the Network.&#x20;\n* **Taxes:** Taxes are essentially a stability fee and range from 0.1% to 1% of transactions capped at 1 TerraSDR, the taxes can be paid in ANY Terra currency&#x20;\n* **Seigniorage rewards:** Seigniorage rewards are given to validators for participating in the Luna exchange rate oracle process. Rewards come from the seigniorage pool.\n\n## Table Schema\n\n**table name:** `terra.rewards`\n\n| Field                     | Type      | Description                                                                                                                  |\n| ------------------------- | --------- | ---------------------------------------------------------------------------------------------------------------------------- |\n| `BLOCKCHAIN`              | text      | Blockchain name, here is Terra                                                                                               |\n| `CHAIN_ID`                | text      | The type of Blockchain                                                                                                       |\n| `TX_STATUS`               | text      | The status of this transaction, either `success` or `failure`                                                                |\n| `BLOCK_ID`                | number    | Block number for this message events been recorded                                                                           |\n| `BLOCK_TIMESTAMP`         | timestamp | Block time stamp for this message events been recorded                                                                       |\n| `TX_ID`     ", "doc_id": "1ed927cc-73c4-414e-ac3b-78712486ada7", "embedding": null, "doc_hash": "fd8e4b7aa2b47e0b920f6f720e010c3b68924c9ec875b71c1b207712f4f562da", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/rewards.md", "file_name": "rewards.md"}, "node_info": {"start": 0, "end": 1905, "_node_type": "1"}, "relationships": {"1": "6be0f7a9122cad5904b2605a5eba0fbfacae47f0", "3": "bbef1e3c-83ea-42ab-a72f-ea691d955c7b"}}, "__type__": "1"}, "bbef1e3c-83ea-42ab-a72f-ea691d955c7b": {"__data__": {"text": "       |\n| `TX_ID`                   | text      | Unique transaction id for the reward                                                                                         |\n| `MSG_INDEX`               | number    | The index of message, within one message there are many messaged wrapped up and index will show the position of the message  |\n| `ACTION`                  | text      | Different actions for the reward, it can be `withdraw_validator_commission`or `withdraw_delegator_rewards`                   |\n| `VALIDATOR`               | address   | Validator address                                                                                                            |\n| `VALIDATOR_LABEL_TYPE`    | text      | [(see Labels section for details)](../../../../labels/)                                                                      |\n| `VALIDATOR_LABEL_SUBTYPE` | text      | [(see Labels section for details)](../../../../labels/)                                                                      |\n| `VALIDATOR_ADDRESS_LABEL` | text      | [(see Labels section for details)](../../../../labels/)                                                                      |\n| `VALIDATOR_ADDRESS_NAME`  | text      | Validator name linked to the address                                                                                         |\n| `DELEGATOR`               | address   | The address for the recipient to receive the reward                                                                          |\n|", "doc_id": "bbef1e3c-83ea-42ab-a72f-ea691d955c7b", "embedding": null, "doc_hash": "abea392e6f7043038c80408084a92b86f6e3cacca73582f73da0d4ab35bcdf58", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/rewards.md", "file_name": "rewards.md"}, "node_info": {"start": 1896, "end": 3427, "_node_type": "1"}, "relationships": {"1": "6be0f7a9122cad5904b2605a5eba0fbfacae47f0", "2": "1ed927cc-73c4-414e-ac3b-78712486ada7", "3": "d3aed894-832c-4bc5-a077-e4629219d3bf"}}, "__type__": "1"}, "d3aed894-832c-4bc5-a077-e4629219d3bf": {"__data__": {"text": "                 |\n| `DELEGATOR_LABEL_TYPE`    | text      | [(see Labels section for details)](../../../../labels/)                                                                      |\n| `DELEGATOR_LABEL_SUBTYPE` | text      | [(see Labels section for details)](../../../../labels/)                                                                      |\n| `DELEGATOR_ADDRESS_LABEL` | text      | [(see Labels section for details)](../../../../labels/)                                                                      |\n| `DELEGATOR_ADDRESS_NAME`  | text      | The recipient name linked to the address                                                                                     |\n| `EVENT_AMOUNT`            | number    | The amount of currency for this event                                                                                        |\n| `PRICE_USD`               | number    | The price of the token at current timestamp for this currency                                                                |\n| `EVENT_AMOUNT_USD`        | number    | Event amount in USD                                                                                                          |\n| `CURRENCY`                | text      | The currency for this token                                                                                                  |\n", "doc_id": "d3aed894-832c-4bc5-a077-e4629219d3bf", "embedding": null, "doc_hash": "6438828ed37d320b99d5f97bb1a98def41391ef70cf76e1d40aec9f1022ab670", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/rewards.md", "file_name": "rewards.md"}, "node_info": {"start": 3417, "end": 4788, "_node_type": "1"}, "relationships": {"1": "6be0f7a9122cad5904b2605a5eba0fbfacae47f0", "2": "bbef1e3c-83ea-42ab-a72f-ea691d955c7b"}}, "__type__": "1"}, "b160f86d-cfe2-4e0a-88b4-92a3ff367167": {"__data__": {"text": "# Staking\n\nStaking table listed the information about the users who staked the tokens into the chain and it contains the information of the amount of the staking token, price and the validator and delegator address.&#x20;\n\n## Table Schema\n\n**table name:** `terra.staking`\n\n| Field                     | Type      | Description                                                   |\n| ------------------------- | --------- | ------------------------------------------------------------- |\n| `BLOCKCHAIN`              | text      | Blockchain name, here is Terra                                |\n| `CHAIN_ID`                | text      | The type of Blockchain                                        |\n| `TX_STATUS`               | text      | The transaction status for the staking                        |\n| `BLOCK_ID`                | number    | Block number for this message events been recorded            |\n| `BLOCK_TIMESTAMP`         | timestamp | Block time stamp for this message events been recorded        |\n| `TX_ID`                   | text      | The unique transaction id                                     |\n| `ACTION`                  | text      | The action taken for this transaction                         |\n| `DELEGATOR_ADDRESS`       | address   | The address of the delegator for this staking event           |\n| `DELEGATOR_LABEL_TYPE`    | text      | [(see Labels section for details)](../../../../labels/)       |\n| `DELEGATOR_LABEL_SUBTYPE` | text      | [(see Labels section for details)](../../../../labels/)       |\n| `DELEGATOR_ADDRESS_LABEL` | text      | [(see Labels section for details)](../../../../labels/)       |\n| `DELEGATOR_ADDRESS_NAME`  | text      | Delegator name linked to the address                          |\n| `VALIDATOR_ADDRESS`       | address   | The validator is the addresses to validate the delegation     |\n| `VALIDATOR_LABEL_TYPE`    | text      | [(see Labels section for details)](../../../../labels/)       |\n| `VALIDATOR_LABEL_SUBTYPE` | text      | [(see Labels section for details)](../../../../labels/)       |\n|", "doc_id": "b160f86d-cfe2-4e0a-88b4-92a3ff367167", "embedding": null, "doc_hash": "d3e8a6b75c11016274651f38fd4178df851733356f68027ad4a603b0fd5989ac", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/staking.md", "file_name": "staking.md"}, "node_info": {"start": 0, "end": 2076, "_node_type": "1"}, "relationships": {"1": "7e5b7ab988e3356825e0befad0993cffea8553f1", "3": "b4c05558-6fa8-482b-b848-403d02d60283"}}, "__type__": "1"}, "b4c05558-6fa8-482b-b848-403d02d60283": {"__data__": {"text": "for details)](../../../../labels/)       |\n| `VALIDATOR_ADDRESS_LABEL` | text      | [(see Labels section for details)](../../../../labels/)       |\n| `VALIDATOR_ADDRESS_NAME`  | text      | Validator name linked to the address                          |\n| `EVENT_AMOUNT`            | number    | The amount of currency for this event                         |\n| `PRICE_USD`               | number    | The price of the token at current timestamp for this currency |\n| `EVENT_AMOUNT_USD`        | number    | Event amount in USD                                           |\n| `CURRENCY`                | text      | The currency for this token                                   |\n", "doc_id": "b4c05558-6fa8-482b-b848-403d02d60283", "embedding": null, "doc_hash": "b6069ccfbfb5a3c5206149f2a6424da99b3503ae15a70edf023bd8823bfc41e0", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/staking.md", "file_name": "staking.md"}, "node_info": {"start": 2032, "end": 2711, "_node_type": "1"}, "relationships": {"1": "7e5b7ab988e3356825e0befad0993cffea8553f1", "2": "b160f86d-cfe2-4e0a-88b4-92a3ff367167"}}, "__type__": "1"}, "2ee17623-4101-4f26-8e04-295f6e453209": {"__data__": {"text": "# Swaps\n\nSwaps table contains the information for the swap behavior, it involves the two parties to swap different tokens within the chain\n\n## Table Schema\n\n**table name:** `terra.swap`\n\n| Field                 | Type      | Description                                                                      |\n| --------------------- | --------- | -------------------------------------------------------------------------------- |\n| `BLOCKCHAIN`          | text      | The blockchain this swap was created on (Terra)                                  |\n| `CHAIN_ID`            | text      | The version of the Terra Core (now is **Columbus-4**)                            |\n| `BLOCK_ID`            | number    | The block number that this swap was recorded                                     |\n| `BLOCK_TIMESTAMP`     | timestamp | The block timestamp that this swap was recorded                                  |\n| `TX_STATUS`           | text      | The transaction status for the staking                                           |\n| `TX_ID`               | text      | The transaction that contained this swap                                         |\n| `SWAP_FEE_AMOUNT`     | number    | The amount of fee for this swap                                                  |\n| `SWAP_FEE_AMOUNT_USD` | number    | The USD amount of fee for this swap                                              |\n| `SWAP_FEE_CURRENCY`   | text      | The currency of fee for this swap                                                |\n| `TRADER`              | address   | Trader address for this swap                                                     |\n| `ASK_CURRENCY`        | text      |  The currency asked for the swap                                  ", "doc_id": "2ee17623-4101-4f26-8e04-295f6e453209", "embedding": null, "doc_hash": "8867ee1421c1ec00eca9a2019d41548fe0f84324f581da903c52ecef3f635aff", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/swap.md", "file_name": "swap.md"}, "node_info": {"start": 0, "end": 1743, "_node_type": "1"}, "relationships": {"1": "d0b13b6b0275cfa527d7493fdb214f9ab884076e", "3": "487d6538-b0bf-4bb7-bec0-7003f8fb8c99"}}, "__type__": "1"}, "487d6538-b0bf-4bb7-bec0-7003f8fb8c99": {"__data__": {"text": "                                  |\n| `OFFER_AMOUNT`        | number    | Amount to offer for this swap                                                    |\n| `OFFER_AMOUNT_USD`    | number    | USD Amount to offer for this swap                                                |\n| `OFFER_CURRENCY`      | text      | Currency to offer for this swap                                                  |\n| `TOKEN_0_AMOUNT`      | number    | The swap token 0 amount, in other word, use how many `token_0` to swap `token_1` |\n| `TOKEN_0_AMOUNT_USD`  | number    | Amount of token\\_0 in USD                                                        |\n| `TOKEN_0_CURRENCY`    | text      | The currency of token\\_0                                                         |\n| `TOKEN_1_AMOUNT`      | number    | The swap token 0 amount, in other word, use how many `token_0` to swap `token_1` |\n| `TOKEN_1_AMOUNT_USD`  | number    | Amount of token\\_1 in USD                                                        |\n| `TOKEN_1_CURRENCY`    | text      | The currency of token\\_1                                                         |\n| `PRICE0_USD`          | number    | The price for token\\_0                                                           |\n| `PRICE1_USD`          | number    | The price for token\\_1                                                           |\n| `SWAP_PAIR`           | text      | The concat field for the combination of `token_0` and `token_1`                  |\n", "doc_id": "487d6538-b0bf-4bb7-bec0-7003f8fb8c99", "embedding": null, "doc_hash": "f47a7137115dd831d9998eecd2e8525f444822c0391eee53a75e3d2e31d2d014", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/swap.md", "file_name": "swap.md"}, "node_info": {"start": 1724, "end": 3212, "_node_type": "1"}, "relationships": {"1": "d0b13b6b0275cfa527d7493fdb214f9ab884076e", "2": "2ee17623-4101-4f26-8e04-295f6e453209"}}, "__type__": "1"}, "29a91d38-17e6-4f19-8b12-8c137ffa74c9": {"__data__": {"text": "# Tax Rate\n\nTaxes are essentially a stability fee and range from 0.1% to 1% of transactions capped at 1 TerraSDR. This can be paid in ANY Terra currency (On-chain I don't think we can distinguish between fees for gas vs taxes. They are rolled up into one).\\\n\\\nNote: In January 2022 the tax rate on Terra was lowered to 0%. Prior this, there were two kinds of tax on Terra, the default tax rate as the extra percentage paid for transactions on chain, and the effective tax rate which occurred when your transaction's tax value was greater than the capped 1 SDR default tax rate.\n\n## Table Schema\n\n**table name:** `terra.tax_rate`\n\n| Field             | Type      | Description                                                                       |\n| ----------------- | --------- | --------------------------------------------------------------------------------- |\n| `BLOCK_NUMBER`    | number    | Block number for this message events been recorded, this one equals to block\\_id  |\n| `BLOCK_TIMESTAMP` | timestamp | Block time stamp for this message events been recorded                            |\n| `BLOCKCHAIN`      | text      | The blockchain name for this block                                                |\n| `TAX_RATE`        | number    | The tax ratio for at this block and timestamp                                     |\n", "doc_id": "29a91d38-17e6-4f19-8b12-8c137ffa74c9", "embedding": null, "doc_hash": "da017e20af83997b2684d19be3505785fe0b5e294e389a120af7b6cdc16f495e", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/tax-rate.md", "file_name": "tax-rate.md"}, "node_info": {"start": 0, "end": 1338, "_node_type": "1"}, "relationships": {"1": "6894124c65a612d25ce19966b2846141c1b3b1ef"}}, "__type__": "1"}, "519fb0d3-0f42-46c8-8413-fba2ccf2ccc9": {"__data__": {"text": "---\ndescription: >-\n  Terra transfer events, curated from Terra msg_events. Includes event_type\n  transfers, cw20 token transfers, Wormhole transfers, and Delegator rewards\n  transfers\n---\n\n# Transfer Events\n\n## Table Schema\n\ntable name: `terra.transfer_events`\n\n<table><thead><tr><th width=\"277.1723384899322\">Field</th><th width=\"154.6185569170212\">Type</th><th>Description</th></tr></thead><tbody><tr><td><code>BLOCK_TIMESTAMP</code></td><td>timestamp</td><td>The timestamp this block was recorded</td></tr><tr><td><code>TX_ID</code></td><td>text</td><td>The transaction that contained this transfer</td></tr><tr><td><code>MSG_INDEX</code></td><td>number</td><td>Message index, it is like the different steps for message, one message group can contain multiple message index values to deliver different information</td></tr><tr><td><code>ACTION_INDEX</code></td><td>number</td><td>Index for transfer event actions</td></tr><tr><td><code>INITIAL_ACTION</code></td><td>text</td><td>Initial action for a transfer event</td></tr><tr><td><code>CURRENT_ACTION</code></td><td>text</td><td>Current action for a transfer event</td></tr><tr><td><code>SENDER</code></td><td>text</td><td>Transfer sender</td></tr><tr><td><code>SENDER_LABEL_TYPE</code></td><td>text</td><td><a href=\"../../../../labels/\">(see Labels section for details)</a></td></tr><tr><td><code>SENDER_LABEL_SUBTYPE</code></td><td>text</td><td><a href=\"../../../../labels/\">(see Labels section for details)</a></td></tr><tr><td><code>SENDER_ADDRESS_LABEL</code></td><td>text</td><td><a href=\"../../../../labels/\">(see Labels section for details)</a></td></tr><tr><td><code>SENDER_ADDRESS_NAME</code></td><td>text</td><td><a href=\"../../../../labels/\">(see Labels section for details)</a></td></tr><tr><td><code>RECIPIENT</code></td><td>text</td><td>Transfer recipient</td></tr><tr><td><code>RECIPIENT_LABEL_TYPE</code></td><td>text</td><td><a href=\"../../../../labels/\">(see Labels section for details)</a></td></tr><tr><td><code>RECIPIENT_LABEL_SUBTYPE</code></td><td>text</td><td><a href=\"../../../../labels/\">(see Labels section for details)</a></td></tr><tr><td><code>RECIPIENT_ADDRESS_LABEL</code></td><td>text</td><td><a href=\"../../../../labels/\">(see Labels section for details)</a></td></tr><tr><td><code>RECIPIENT_ADDRESS_NAME</code></td><td>text</td><td><a href=\"../../../../labels/\">(see Labels section for details)</a></td></tr><tr><td><code>CURRENCY</code></td><td>text</td><td>The transfer currency</td></tr><tr><td><code>AMOUNT</code></td><td>number</td><td>The transfer amount</td></tr><tr><td><code>AMOUNT_USD</code></td><td>number</td><td>The transfer amount in USD, it is calculated by the hourly price multiplied by the transfer", "doc_id": "519fb0d3-0f42-46c8-8413-fba2ccf2ccc9", "embedding": null, "doc_hash": "7c70d4ad8508008534e3769e6ee8693e76dc8f4a7273f30dc4a6f526c6a4cf20", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/transfer-events.md", "file_name": "transfer-events.md"}, "node_info": {"start": 0, "end": 2708, "_node_type": "1"}, "relationships": {"1": "c26e5e51e5a26783e38dafb4b10ed897235734f3", "3": "2da3f285-135e-4f77-916e-f08e3fe5c8fb"}}, "__type__": "1"}, "2da3f285-135e-4f77-916e-f08e3fe5c8fb": {"__data__": {"text": "transfer amount in USD, it is calculated by the hourly price multiplied by the transfer amount</td></tr><tr><td><code>MSG_SENDER</code></td><td>text</td><td>The message sender, from message event types</td></tr><tr><td><code>CONTRACT_ADDRESS</code></td><td>text</td><td>The contract address that is responsible for kicking off the transfer event, if applicable</td></tr><tr><td><code>CONTRACT_LABEL</code></td><td>text</td><td><a href=\"../../../../labels/\">(see Labels section for details)</a></td></tr></tbody></table>\n", "doc_id": "2da3f285-135e-4f77-916e-f08e3fe5c8fb", "embedding": null, "doc_hash": "582d95836756aa9c3272c0afabe6cbfec6cfef9571870731a397d830416d9335", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/transfer-events.md", "file_name": "transfer-events.md"}, "node_info": {"start": 2621, "end": 3141, "_node_type": "1"}, "relationships": {"1": "c26e5e51e5a26783e38dafb4b10ed897235734f3", "2": "519fb0d3-0f42-46c8-8413-fba2ccf2ccc9"}}, "__type__": "1"}, "38f622a6-7ec9-4b12-8cd5-8561f506d307": {"__data__": {"text": "# Validator Labels\n\nThe Validators labels table is based on few different kind of Validator addresses that show up on chain. These individual addresses are matched based on the public\\_key of the Validator addresses.\n\n## Table Schema\n\n**table name:** `terra.validator_labels`\n\n| Field               | Type    | Description                                                |\n| ------------------- | ------- | ---------------------------------------------------------- |\n| `LABEL`             | text    | [(see Labels section for details)](../../../../labels/)    |\n| `OPERATOR_ADDRESS`  | address | The validator address (terravaloper)                       |\n| `DELEGATOR_ADDRESS` | address | The delegator address of the Validator (terra)             |\n| `VP_ADDRESS`        | address | The Validator address used for Voting Power (terravalcons) |\n\n", "doc_id": "38f622a6-7ec9-4b12-8cd5-8561f506d307", "embedding": null, "doc_hash": "ee9015d4a4d2655f1ae62858bfc136ca56098a62d58652d335bde5e60a8e835d", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/validator-labels.md", "file_name": "validator-labels.md"}, "node_info": {"start": 0, "end": 848, "_node_type": "1"}, "relationships": {"1": "98b392d2c86e8861d251944cd120fc4bffede4b9"}}, "__type__": "1"}, "f4eba0bd-15d3-4e97-882d-80cb4a473707": {"__data__": {"text": "# Terra Raw Tables\n\nTerra Raw Tables are the first 5 tables in Terra. It contains the important information about the Terra Blockchains:\n\n{% content-ref url=\"blocks.md\" %}\n[blocks.md](blocks.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"msgs.md\" %}\n[msgs.md](msgs.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"msg_events.md\" %}\n[msg\\_events.md](msg\\_events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"transactions.md\" %}\n[transactions.md](transactions.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"transitions.md\" %}\n[transitions.md](transitions.md)\n{% endcontent-ref %}\n\n", "doc_id": "f4eba0bd-15d3-4e97-882d-80cb4a473707", "embedding": null, "doc_hash": "2059fee704c524285ec6b821b5ff9e15190bd7bd8451b4f734d781126e3e9a89", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 574, "_node_type": "1"}, "relationships": {"1": "8b816f3fd229f95097b4cb8894717540e27dd9d5"}}, "__type__": "1"}, "29606d29-a981-438f-a7df-806ae3b50028": {"__data__": {"text": "# Blocks\n\nBlocks table shows all the basic blocks information in Terra\n\n## Table Schema\n\n**table name:** `terra.blocks`\n\n| `BLOCK_ID`         | number    | The block number that this block was recorded                                                                                                |\n| ------------------ | --------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| `BLOCK_TIMESTAMP`  | timestamp | The timestamp this block was recorded                                                                                                        |\n| `BLOCKCHAIN`       | text      | The blockchain name for this block                                                                                                           |\n| `CHAIN_ID`         | number    | ID of blockchain to connect to, it can be _columbus-3, columbus-4, etc._                                                                     |\n| `PROPOSER_ADDRESS` | address   | The address of the block proposer for this block, a _block proposer_ is the validator responsible for building a block during any given slot |\n| `TX_COUNT`         | number    | Count of transactions per block, available for Columbus-5 onward.                                                                            |\n\n", "doc_id": "29606d29-a981-438f-a7df-806ae3b50028", "embedding": null, "doc_hash": "ce8d0c73d409165b650a5701a09a8dcc62f11c380d8e1411a9e309e091bcd581", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/blocks.md", "file_name": "blocks.md"}, "node_info": {"start": 0, "end": 1368, "_node_type": "1"}, "relationships": {"1": "afd317930b7349d53bd4c81834986ad5d935f6bc"}}, "__type__": "1"}, "b8250e3c-82fd-45d6-b4c4-17eeafc1e5e8": {"__data__": {"text": "# Msg\\_events\n\nMessage events table shows all the message events information blocks contains. Please be aware that for now terra msgs table only contains the data for **Columbus-4** and **Columbus-5.**\n\n## Table Schema\n\n**table name:** `terra.msg_events`\n\n| Field              | Type      | Description                                                                                                                                           |\n| ------------------ | --------- | ----------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `BLOCK_ID`         | number    | Block number for this message been recorded                                                                                                           |\n| `BLOCK_TIMESTAMP`  | timestamp | The timestamp this block was recorded                                                                                                                 |\n| `BLOCKCHAIN`       | text      | The blockchain name for this block                                                                                                                    |\n| `CHAIN_ID`         | text      | ID of blockchain to connect to, it can be _columbus-3, columbus-4_, etc.                                                                              |\n| `TX_ID`            | text      | The transaction that contained this message, unique id to identify this message information                                                           |\n| `TX_STATUS`        | text      | Transaction Status for this message events                                                       ", "doc_id": "b8250e3c-82fd-45d6-b4c4-17eeafc1e5e8", "embedding": null, "doc_hash": "e5cf1104a34fa1d4344af2982886257119abb3d927a503f8a474c51c731f7c04", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/msg_events.md", "file_name": "msg_events.md"}, "node_info": {"start": 0, "end": 1697, "_node_type": "1"}, "relationships": {"1": "7b81d084abad64bf1db634f44fa5c07ccd61854f", "3": "9e520c65-2e90-430e-ab6f-306b0c6b47e0"}}, "__type__": "1"}, "9e520c65-2e90-430e-ab6f-306b0c6b47e0": {"__data__": {"text": "                                                                        |\n| `TX_MODULE`        | text      | Transaction Module for this message events                                                                                                            |\n| `TX_TYPE`          | text      | Transaction Type for this message events                                                                                                              |\n| `MSG_INDEX`        | number    | Message index, it is like the different steps for message, one message group can contain multiple message index to deliver many different information |\n| `MSG_MODULE`       | text      | Different type of message, it can be distribution, oracle, etc.                                                                                       |\n| `MSG_TYPE`         | text      | The sub type of message module, the format is like oracle/...                                                                                         |\n| `EVENT_INDEX`      | number    | Event happens within message, it can be seen as the steps of message. Event Index defines the index of this event within the message                  |\n| `EVENT_TYPE`       | text      | For each event, there will be a type linked to that                                                                                                   |\n| `EVENT_ATTRIBUTES` | array     | The information contained within each event, it can be a JSON array format                                                                            |\n", "doc_id": "9e520c65-2e90-430e-ab6f-306b0c6b47e0", "embedding": null, "doc_hash": "4474edea18cda1cbba29cbf5bbf706d816ed647e52f6732840df10d63f5dc270", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/msg_events.md", "file_name": "msg_events.md"}, "node_info": {"start": 1678, "end": 3248, "_node_type": "1"}, "relationships": {"1": "7b81d084abad64bf1db634f44fa5c07ccd61854f", "2": "b8250e3c-82fd-45d6-b4c4-17eeafc1e5e8"}}, "__type__": "1"}, "f607e13d-caa6-4a55-adb4-bcc9ee2b42f7": {"__data__": {"text": "# Msgs\n\nMessage table shows all the message information blocks contains. Please be aware that for now terra msgs table only contains the data for **Columbus-4** and **Columbus-5.**\n\n## Table Schema\n\n**table name:** `terra.msgs`\n\n| Field             | Type      | Description                                                                                                                                           |\n| ----------------- | --------- | ----------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `BLOCK_ID`        | number    | Block number for this message been recorded                                                                                                           |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded                                                                                                                 |\n| `BLOCKCHAIN`      | text      | The blockchain name for this block                                                                                                                    |\n| `CHAIN_ID`        | text      | ID of blockchain to connect to, it can be _columbus-3, columbus-4, etc._                                                                              |\n| `TX_ID`           | text      | The transaction that contained this message, unique id to identify this message information                                                           |\n| `TX_STATUS`       | text      | Transaction Status for this message                                                                       ", "doc_id": "f607e13d-caa6-4a55-adb4-bcc9ee2b42f7", "embedding": null, "doc_hash": "d70a92f70622c430cf45f3bbb34821360812960f6d72b2033372bba65dccf918", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/msgs.md", "file_name": "msgs.md"}, "node_info": {"start": 0, "end": 1671, "_node_type": "1"}, "relationships": {"1": "f66ad15e426159e42cea14ea5b29b6aca90bb826", "3": "782d070c-6966-4ccf-8c91-b9b44c672e8f"}}, "__type__": "1"}, "782d070c-6966-4ccf-8c91-b9b44c672e8f": {"__data__": {"text": "                                                               |\n| `TX_MODULE`       | text      | Transaction Module for this message                                                                                                                   |\n| `TX_TYPE`         | text      | Transaction Type for this message                                                                                                                     |\n| `MSG_INDEX`       | number    | Message index, it is like the different steps for message, one message group can contain multiple message index to deliver many different information |\n| `MSG_MODULE`      | text      | Different type of message, it can be _distribution, oracle, etc._                                                                                     |\n| `MSG_TYPE`        | text      | The sub type of message module, the format is like _oracle/..._                                                                                       |\n| `MSG_VALUE`       | array     | The content of this message, it can be JSON or array and there are many attributes there to identify what kind of message it delivers                 |\n\n", "doc_id": "782d070c-6966-4ccf-8c91-b9b44c672e8f", "embedding": null, "doc_hash": "866399a6ac41b7a6b0ef8c80ca22f7f4f282b75d62aee16df04274a5014783fc", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/msgs.md", "file_name": "msgs.md"}, "node_info": {"start": 1652, "end": 2834, "_node_type": "1"}, "relationships": {"1": "f66ad15e426159e42cea14ea5b29b6aca90bb826", "2": "f607e13d-caa6-4a55-adb4-bcc9ee2b42f7"}}, "__type__": "1"}, "32c76ed3-a13d-4a10-b880-50ff28c91781": {"__data__": {"text": "# Transactions\n\nTransactions table shows all the transactions information blocks contains\n\n## Table Schema\n\n**table name:** `terra.transactions`\n\n| Field             | Type      | Description                                                                                                                                                                 |\n| ----------------- | --------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number this transaction was recorded                                                                                                                              |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded                                                                                                                                       |\n| `BLOCKCHAIN`      | text      | The blockchain for this transaction                                                                                                                                         |\n| `CHAIN_ID`        | text      | ID of blockchain to connect to, it can be columbus-3, columbus-4, etc.                                                                                                      |\n| `TX_ID`           | text      | The transaction that contained this message, unique id to identify this message information                                                                                ", "doc_id": "32c76ed3-a13d-4a10-b880-50ff28c91781", "embedding": null, "doc_hash": "c726292e6f770343e0c6a7282f44bfa0c97aa5dd10ee6187971708bdb8bf459d", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/transactions.md", "file_name": "transactions.md"}, "node_info": {"start": 0, "end": 1599, "_node_type": "1"}, "relationships": {"1": "bd143e35f4bee6acceb9537890db14e2cd883031", "3": "dbf04b64-b151-41f9-bb8a-e574f1749e48"}}, "__type__": "1"}, "dbf04b64-b151-41f9-bb8a-e574f1749e48": {"__data__": {"text": "                    |\n| `TX_TYPE`         | text      | Transaction type. Luna can be unbonded (free to move wherever), bonded (ie delegated) and unbonding (21 day freeze to undelegate)                                           |\n| `TX_STATUS`       | text      | The transaction status                                                                                                                                                      |\n| `TX_STATUS_MSG`   | text      | The transaction status for the message                                                                                                                                      |\n| `TX_CODE`         | text      | The Transaction Code                                                                                                                                                        |\n| `TX_MODULE`       | text      | Transaction Module for this message                                                                                                                                         |\n| `CODESPACE`       | text      | Code space for the transaction                                                                                                                                              |\n|", "doc_id": "dbf04b64-b151-41f9-bb8a-e574f1749e48", "embedding": null, "doc_hash": "2323f6b1ac97c271d03b9f489b12f82f295a90bb0c71b006f03dad30751fccdc", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/transactions.md", "file_name": "transactions.md"}, "node_info": {"start": 1600, "end": 2871, "_node_type": "1"}, "relationships": {"1": "bd143e35f4bee6acceb9537890db14e2cd883031", "2": "32c76ed3-a13d-4a10-b880-50ff28c91781", "3": "2fd8a584-fb44-4af6-b65f-9de0f5d1d3b1"}}, "__type__": "1"}, "2fd8a584-fb44-4af6-b65f-9de0f5d1d3b1": {"__data__": {"text": "                 |\n| `FEE`             | array     | The transaction fee for this transaction, the format is `{ \"amount\": , \"denom\":  },` where denom is the currency and the amount is how many token spent on this transaction |\n| `GAS_USED`        | number    | The real used gas fee for this transaction, the gas fee is like the gas fee in ETH blockchain                                                                               |\n| `GAS_WANTED`      | number    | The requested gas fee for this transaction, the gas fee is like the gas fee in ETH blockchain                                                                               |\n", "doc_id": "2fd8a584-fb44-4af6-b65f-9de0f5d1d3b1", "embedding": null, "doc_hash": "e0af9ba398d26558c2bf8dba560516163daba47add6ae72672a6d3a8f3072b77", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/transactions.md", "file_name": "transactions.md"}, "node_info": {"start": 2851, "end": 3494, "_node_type": "1"}, "relationships": {"1": "bd143e35f4bee6acceb9537890db14e2cd883031", "2": "dbf04b64-b151-41f9-bb8a-e574f1749e48"}}, "__type__": "1"}, "aef6bbad-b466-4fee-bf1d-8881858335d9": {"__data__": {"text": "# Transitions\n\nTransitions table shows all the Transitions information blocks contains\n\n## Table Schema\n\n**table name:** `terra.transitions`\n\n| Field              | Type      | Description                                                                           |\n| ------------------ | --------- | ------------------------------------------------------------------------------------- |\n| `BLOCK_ID`         | number    | The block number this transaction was recorded                                        |\n| `BLOCK_TIMESTAMP`  | timestamp | The timestamp this transaction was recorded                                           |\n| `BLOCKCHAIN`       | text      | The blockchain for this transaction                                                   |\n| `CHAIN_ID`         | text      | ID of blockchain to connect to, it can be _columbus-3, columbus-4, etc._              |\n| `TRANSITION_TYPE`  | text      | The type of this transition                                                           |\n| `INDEX`            | number    | The position/index for this transition                                                |\n| `EVENT`            | text      | The name of the event for this transition record                                      |\n| `EVENT_ATTRIBUTES` | array     | It contains the information for this transition, the format will be JSON array format |\n", "doc_id": "aef6bbad-b466-4fee-bf1d-8881858335d9", "embedding": null, "doc_hash": "fdac670a1fd06a7f1455747b64070765f78ad5574a87f7958c6f61cda002c414", "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/transitions.md", "file_name": "transitions.md"}, "node_info": {"start": 0, "end": 1372, "_node_type": "1"}, "relationships": {"1": "da8a5d313809701f6c04fb8ed2f11ac356750079"}}, "__type__": "1"}, "e135f070-28a8-472b-b098-c8e6592ad5d4": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Terraswap Tables\n\nFrom the [Terraswap docs](https://docs.terraswap.io/) : \"Terraswap is a Uniswap-inspired automated market-maker (AMM) protocol implemented with smart contracts on the Terra blockchain.\"\n\nThe public Github repo with Terraswap model source code is [here](https://github.com/FlipsideCrypto/sql\\_models/tree/main/models/terra/swap).\n\n### Participants [#](https://docs.terraswap.io/#participants) <a href=\"#participants\" id=\"participants\"></a>\n\nTerraswap users can become trader, liquidity provider or both.\n\nA **trader** can exchange their token for another token through Terraswap using the price determined by the liquidity pool ratio.\n\n**Liquidity provider** adds equal value of two assets to their corresponding Terraswap pair pool, which increases liquidity for the corresponding pair market while maintaining the pool price. In this process, liquidity providers are rewarded by newly minted LP tokens. LP tokens represent the liquidity provider\u2019s share in the pool and provide the benefit of earning trading fees, which are accumulated into the pool on every swap transaction. Liquidity providers can burn their LP tokens to withdraw their share from the pool.\n\n", "doc_id": "e135f070-28a8-472b-b098-c8e6592ad5d4", "embedding": null, "doc_hash": "5d9681b04d3c2f268ffbd36a0222d8a850d2600f75eb753f51f6d6ad82250938", "extra_info": {"file_path": "our-data/archive/tables/terraswap-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 1267, "_node_type": "1"}, "relationships": {"1": "1a3194392f14a78d262ef86d582b912bce1029b2"}}, "__type__": "1"}, "bc606504-acae-4909-b0a5-e692ace07127": {"__data__": {"text": "---\ndescription: terraswap.pool_reserves\n---\n\n# Terraswap Pool Reserves\n\nThis table provides block by block pool reserve information including total pool shares, pool currencies, and token amounts in Terraswap pools.&#x20;\n\n<table data-header-hidden><thead><tr><th width=\"227.33333333333331\">Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>Field</td><td>Type</td><td>Description</td></tr><tr><td><code>blockchain</code></td><td>text</td><td>The blockchain this pool was created on.</td></tr><tr><td><code>chain_id</code></td><td>text</td><td>ID of blockchain to connect to, it can be <em>columbus-3, columbus-4, columbus-5, etc.</em></td></tr><tr><td><code>block_id</code></td><td>number</td><td>The block number that this pool reserve was recorded</td></tr><tr><td><code>block_timestamp</code></td><td>timestamp</td><td>The block timestamp that this pool reserve was recorded</td></tr><tr><td><code>contract_address</code></td><td>address</td><td>The address of the liquidity pool</td></tr><tr><td><code>total_share</code></td><td>number</td><td>The total amount of shares  in a pool</td></tr><tr><td><code>token_0_currency</code></td><td>text</td><td>Token 0 currency</td></tr><tr><td><code>token_0_amount</code></td><td>number</td><td>Token 0 amount in pool</td></tr><tr><td><code>token_1_currency</code></td><td>text</td><td>Token 1 currency</td></tr><tr><td><code>token_1_amount</code></td><td>number</td><td>Token 1 amount in pool</td></tr></tbody></table>\n", "doc_id": "bc606504-acae-4909-b0a5-e692ace07127", "embedding": null, "doc_hash": "f9231c1389a5036eac8b0cfc640acba89a02f09133dcd901364a0e63fbd26ec2", "extra_info": {"file_path": "our-data/archive/tables/terraswap-tables/lp-actions-1.md", "file_name": "lp-actions-1.md"}, "node_info": {"start": 0, "end": 1486, "_node_type": "1"}, "relationships": {"1": "83c29d3789a94bdee119fbb50515bd8280216d33"}}, "__type__": "1"}, "9783a244-72f9-4a55-8d36-6380a6a2ea53": {"__data__": {"text": "---\ndescription: terraswap.lp_actions\n---\n\n# Terraswap LP Actions\n\nUse this table to track liquidity provided or withdrawn by liquidity providers (LPs) on Terraswap. When an LP provides or withdraws liquidity from a Terraswap pool, the transaction is appended to this table.&#x20;\n\n<table data-header-hidden><thead><tr><th width=\"227.33333333333331\">Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>Field</td><td>Type</td><td>Description</td></tr><tr><td><code>blockchain</code></td><td>text</td><td>The blockchain this lp action was created on.</td></tr><tr><td><code>chain_id</code></td><td>text</td><td>ID of blockchain to connect to, it can be <em>columbus-3, columbus-4, columbus-5, etc.</em></td></tr><tr><td><code>block_id</code></td><td>number</td><td>The block number that this lp action was recorded</td></tr><tr><td><code>block_timestamp</code></td><td>timestamp</td><td>The block timestamp that this lp action was recorded</td></tr><tr><td><code>tx_id</code></td><td>text</td><td>The transaction that contained this lp action</td></tr><tr><td><code>event_type</code></td><td>text</td><td>The type of lp action, either <code>PROVIDE_LIQUIDITY</code> (mint) or <code>WITHDRAW_LIQUIDITY</code>(burn)</td></tr><tr><td><code>sender</code></td><td>address</td><td>The address of the liquidity provider</td></tr><tr><td><code>token_0_amount</code></td><td>number</td><td>Token 0 amount in event</td></tr><tr><td><code>token_0_amount_usd</code></td><td>number</td><td>Token 0 amount, converted to USD</td></tr><tr><td><code>token_0_currency</code></td><td>text</td><td>Token 0 currency</td></tr><tr><td><code>token_1_amount</code></td><td>number</td><td>Token 1 amount in event</td></tr><tr><td><code>token_1_amount_usd</code></td><td>number</td><td>Token 1 amount, converted to USD</td></tr><tr><td><code>token_1_currency</code></td><td>text</td><td>Token 1 currency</td></tr><tr><td><code>pool_address</code></td><td>address</td><td>The contract address of the pool</td></tr><tr><td><code>pool_name</code></td><td>text</td><td>The name of the Pool</td></tr><tr><td><code>LP_share_amount</code></td><td>number</td><td>The total amount of shares provided or withdrawn in a transaction</td></tr><tr><td><code>LP_pool_address</code></td><td>address</td><td>The address of the LP token issued </td></tr><tr><td><code>LP_pool_name</code></td><td>text</td><td>The name of the LP token issued</td></tr></tbody></table>\n", "doc_id": "9783a244-72f9-4a55-8d36-6380a6a2ea53", "embedding": null, "doc_hash": "3145273469c1835bf58566a6247137e28177d0e0fd670a88797b7e3ee5909728", "extra_info": {"file_path": "our-data/archive/tables/terraswap-tables/lp-actions.md", "file_name": "lp-actions.md"}, "node_info": {"start": 0, "end": 2439, "_node_type": "1"}, "relationships": {"1": "ac9f83a08c71388a493ea52cd3da2e8f69e07f44"}}, "__type__": "1"}, "e423adbf-1764-4bc4-b1f6-1557aefb84d2": {"__data__": {"text": "---\ndescription: terraswap.swaps\n---\n\n# Terraswap Swaps\n\nSwaps table contains the information for swap behavior, it involves the sender (trader) and liquidity pool where the swap takes place.&#x20;\n\n**Note**: The terraswap.swaps table is different from terra.swaps. Terraswap swaps are swaps executed by smart contracts in Terraswap liquidity pools. Native swaps (terra.swaps) are on-chain swaps executed by Terra's minting/burning mechanism. For example, when $1 worth of UST is minted, $1 worth of LUNA is burned.&#x20;\n\n\n\n## Table Schema\n\n\n\n| Field               | Type      | Description                                                                          |\n| ------------------- | --------- | ------------------------------------------------------------------------------------ |\n| `BLOCKCHAIN`        | text      | The blockchain this swap was created on (Terra)                                      |\n| `CHAIN_ID`          | text      | ID of blockchain to connect to, it can be _columbus-3, columbus-4, columbus-5, etc._ |\n| `BLOCK_ID`          | number    | The block number that this swap was recorded                                         |\n| `MSG_INDEX`         | number    | The message index for this swap                                                      |\n| `TX_INDEX`          | number    | The transaction index for this swap, some transactions contain multiple swaps        |\n| `BLOCK_TIMESTAMP`   | timestamp | The block timestamp that this swap was recorded                                      |\n| `TX_ID`             | text      | The transaction that contained this swap                                             |\n| `SENDER`            | address   | Sender (trader) address for this swap                                                |\n| `OFFER_AMOUNT`      | number    | Amount to offer for this swap                                                        |\n| `OFFER_AMOUNT_USD`  | number    | USD Amount to offer for this swap                        ", "doc_id": "e423adbf-1764-4bc4-b1f6-1557aefb84d2", "embedding": null, "doc_hash": "94962f0a95e4dac7266cdde66484f7a221b0b06863e1286e768301fa19cbb1b6", "extra_info": {"file_path": "our-data/archive/tables/terraswap-tables/swap.md", "file_name": "swap.md"}, "node_info": {"start": 0, "end": 1990, "_node_type": "1"}, "relationships": {"1": "f9d4fac3cb7d48153bf2434c7302feeded0f3fca", "3": "ecfaa753-5fe4-49e1-a8aa-5c47792b80b4"}}, "__type__": "1"}, "ecfaa753-5fe4-49e1-a8aa-5c47792b80b4": {"__data__": {"text": "                                               |\n| `OFFER_CURRENCY`    | text      | Currency to offer for this swap                                                      |\n| `RETURN_AMOUNT`     | number    | Amount returned for this swap                                                        |\n| `RETURN_AMOUNT_USD` | number    | USD Amount returned for this swap                                                    |\n| `RETURN_CURRENCY`   | text      |  The currency returned for the swap                                                  |\n| `POOL_ADDRESS`      | text      | The address for the pool where the currencies were swapped                           |\n| `POOL_NAME`         | text      | The name of the pool where the currencies were swapped                               |\n", "doc_id": "ecfaa753-5fe4-49e1-a8aa-5c47792b80b4", "embedding": null, "doc_hash": "e350082ebf26339deaee059a0ec0e9ced7f3fccf7a77955fb1f07bf4213021e4", "extra_info": {"file_path": "our-data/archive/tables/terraswap-tables/swap.md", "file_name": "swap.md"}, "node_info": {"start": 1971, "end": 2758, "_node_type": "1"}, "relationships": {"1": "f9d4fac3cb7d48153bf2434c7302feeded0f3fca", "2": "e423adbf-1764-4bc4-b1f6-1557aefb84d2"}}, "__type__": "1"}, "bbeaef50-dc1f-45b7-9155-694e7f05178a": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# THORChain Tables\n\n**Blockchain:** [THORChain](https://thorchain.org/)\n\nTHORChain is a decentralized cross-chain liquidity protocol that enables native swaps for tokens on separate blockchains. THORChain allows everyone in the world to trade digital asset with another asset on another chain, the process is frictionless, decentralized. Users can also earn yield on their digital assets in THORChain. Each liquidity pool on THORChain has RUNE as one of the underlying assets.&#x20;\n\n* Native THORChain token: **RUNE**\n* Consensus protocol: Proof of Bond&#x20;\n\n![](https://lh5.googleusercontent.com/vUNT-ck46AT2GM6zYtoKTimICi1-nAHZ0RsQs2nuyAL85Da4w07FTvs5qMa-Venw\\_MiwwZjDgVFqG7vbxoeFw7tNAUpEVZ7MGP0OnYLzsIr8F5G-wnDDYJKngGh2n8RXVFkgXpWs)\n\nCheck out the complete docs for our [THORChain Raw Tables](thorchain-raw-table/) and [THORChain Base Tables](thorchain-base-table/) or watch this video overview:\n\n{% embed url=\"https://www.youtube.com/watch?v=PpTRZcE_KgI\" %}\n", "doc_id": "bbeaef50-dc1f-45b7-9155-694e7f05178a", "embedding": null, "doc_hash": "ae42915fb84ad963c773621fc458c45963a993adcd8a73e66dae36b91111fc41", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 1048, "_node_type": "1"}, "relationships": {"1": "93ef6ed6f6195507fc8e6ec4ced648c13b2381be"}}, "__type__": "1"}, "c0550596-3c09-40db-a466-f104da915bdb": {"__data__": {"text": "# THORChain Base Table\n\n{% content-ref url=\"block-rewards.md\" %}\n[block-rewards.md](block-rewards.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"bond-actions.md\" %}\n[bond-actions.md](bond-actions.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"daily-earnings.md\" %}\n[daily-earnings.md](daily-earnings.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"daily-pool-stats.md\" %}\n[daily-pool-stats.md](daily-pool-stats.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"daily-tvl.md\" %}\n[daily-tvl.md](daily-tvl.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"prices.md\" %}\n[prices.md](prices.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"swaps.md\" %}\n[swaps.md](swaps.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"liquidity-actions.md\" %}\n[liquidity-actions.md](liquidity-actions.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"pool-block-balances.md\" %}\n[pool-block-balances.md](pool-block-balances.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"pool-block-fees.md\" %}\n[pool-block-fees.md](pool-block-fees.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"pool-block-statistics.md\" %}\n[pool-block-statistics.md](pool-block-statistics.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"total-block-rewards.md\" %}\n[total-block-rewards.md](total-block-rewards.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"total-value-locked.md\" %}\n[total-value-locked.md](total-value-locked.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"transfers.md\" %}\n[transfers.md](transfers.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"upgrades.md\" %}\n[upgrades.md](upgrades.md)\n{% endcontent-ref %}\n\n", "doc_id": "c0550596-3c09-40db-a466-f104da915bdb", "embedding": null, "doc_hash": "16555be9f82740efcb9238489c3b8277abb1f4ebeac3556855ce8b78912f7b88", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 1542, "_node_type": "1"}, "relationships": {"1": "4f7282416ccf0c45d59eb887dbe2dc5d47e516e2"}}, "__type__": "1"}, "9cd65341-155d-44c7-921b-ad7dc9f69787": {"__data__": {"text": "---\ndescription: The summarized rewards information for each block per day\n---\n\n# Block Rewards\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.block_rewards`\n\n| Field                | Type   | Description                                                  |\n| -------------------- | ------ | ------------------------------------------------------------ |\n| `DAY`                | date   | The recorded day                                             |\n| `LIQUIDITY_FEE`      | number | The summarized liquidity cost fee within this day            |\n| `BLOCK_REWARDS`      | number | The summarized total block rewards within this day           |\n| `EARNINGS`           | number | The summarized earnings within this day                      |\n| `BONDING_EARNINGS`   | number | The summarized bonding earnings within this day              |\n| `LIQUIDITY_EARNINGS` | number | The summarized liquidity earnings fee within this day        |\n| `AVG_NODE_COUNT`     | number | The summarized average node operators number within this day |\n", "doc_id": "9cd65341-155d-44c7-921b-ad7dc9f69787", "embedding": null, "doc_hash": "1395268739b129936cd4811e4e47d925cd8e4d5630e4561f5a90145c61c563d4", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/block-rewards.md", "file_name": "block-rewards.md"}, "node_info": {"start": 0, "end": 1077, "_node_type": "1"}, "relationships": {"1": "6dd34e190612f1248325172624f42efe6fc58e43"}}, "__type__": "1"}, "e382b892-1389-401e-b4c3-edab79d7ae09": {"__data__": {"text": "---\ndescription: The clean bond action table to record the node operators' behaviors\n---\n\n# Bond Actions\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.bond_actions`\n\n| Field             | Type      | Description                                                                                     |\n| ----------------- | --------- | ----------------------------------------------------------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded                                                   |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded                                                           |\n| `TX_ID`           | number    | The transaction that contained this bond events, unique id to identify this message information |\n| `FROM_ADDRESS`    | address   | The sending address for this bond event                                                         |\n| `TO_ADDRES`       | address   | The receiving address for this bond event                                                       |\n| `ASSET`           | text      | Same as pool name, which pool this bond events happens                                          |\n| `BLOCKCHAIN`      | text      | The blockchain for this event, here is \"THOR\"                                                   |\n| `BOND_TYPE`       | text      | There are 4 different types of bond:`bond_reward, bond_paid, bond_cost, bond_returned`          |\n| `ASSET_AMOUNT`    | number    | The asset amount for this bond event                                                            |\n| `ASSET_USD`       | number    | Used the price table to calculate the asset in the usd                                          |\n", "doc_id": "e382b892-1389-401e-b4c3-edab79d7ae09", "embedding": null, "doc_hash": "e48e066233ecf9a98e42cdf8c607f812fc39d6b8e39fd421aaaff8dd55892d65", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/bond-actions.md", "file_name": "bond-actions.md"}, "node_info": {"start": 0, "end": 1796, "_node_type": "1"}, "relationships": {"1": "4e938e095164241f004d78779b3ca388bea78be3"}}, "__type__": "1"}, "f7a0384b-ccba-4077-a1e5-3922deb01215": {"__data__": {"text": "---\ndescription: The earnings information for the whole THORChain network broken down by daily\n---\n\n# Daily Earnings\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.daily_earnings`\n\n| Field                   | Type   | Description                                                  |\n| ----------------------- | ------ | ------------------------------------------------------------ |\n| `DAY`                   | date   | The recorded day                                             |\n| `LIQUIDITY_FEE`         | number | The summarized liquidity cost fee within this day            |\n| `LIQUIDITY_FEES_USD`    | number | The summarized liquidity cost fee within this day in USD     |\n| `BLOCK_REWARDS`         | number | The summarized total block rewards within this day           |\n| `BLOCK_REWARDS_USD`     | number | The summarized total block rewards within this day in USD    |\n| `TOTAL_EARNINGS`        | number | The summarized total earnings within this day                |\n| `TOTAL_EARNINGS_USD`    | number | The summarized total earnings within this day in USD         |\n| `EARNINGS_TO_NODES`     | number | The summarized bonding earnings within this day              |\n| `EARNINGS_TO_NODES_USD` | number | The summarized bonding earnings within this day in USD       |\n| `EARNINGS_TO_POOLS`     | number | The summarized liquidity earnings fee within this day        |\n| `EARNINGS_TO_POOLS_USD` | number | The summarized liquidity earnings fee within this day in USD |\n| `AVG_NODE_COUNT`        | number | The summarized average node operators number within this day |\n", "doc_id": "f7a0384b-ccba-4077-a1e5-3922deb01215", "embedding": null, "doc_hash": "623c3847cd2904aae7d7be8f168bb04f90e14ed2d5457ef2096043ba3e45fae7", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/daily-earnings.md", "file_name": "daily-earnings.md"}, "node_info": {"start": 0, "end": 1626, "_node_type": "1"}, "relationships": {"1": "5f2db22d6ca0ca53228acbc87f47c8d8c2eb3a72"}}, "__type__": "1"}, "22d425d4-0075-4b88-b3f9-6c9bc95dbdf5": {"__data__": {"text": "---\ndescription: Daily Pool Stats shows the table for the pool statistics, broken down by daily\n---\n\n# Daily Pool Stats\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.daily_pool_stats`\n\n| Field                          | Type   | Description                                                                                                                     |\n| ------------------------------ | ------ | ------------------------------------------------------------------------------------------------------------------------------- |\n| `DAY`                          | date   | The recorded day                                                                                                                |\n| `POOL_NAME`                    | text   | The asset and the pool name                                                                                                     |\n| `SYSTEM_REWARDS`               | number | The total daily system rewards in RUNE to the pool                                                                              |\n| `SYSTEM_REWARDS_USD`           | number | The total daily system rewards in USD to the pool                                                                               |\n| `ASSET_LIQUIDITY`              | number | The total asset liquidity for this pool                                                                                         |\n| `ASSET_PRICE`                  | number | Current asset price                                                              ", "doc_id": "22d425d4-0075-4b88-b3f9-6c9bc95dbdf5", "embedding": null, "doc_hash": "65f34f6ba71297e24516c4625405597982fc28b3237ffc5c1172c8dc2c526ec7", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/daily-pool-stats.md", "file_name": "daily-pool-stats.md"}, "node_info": {"start": 0, "end": 1574, "_node_type": "1"}, "relationships": {"1": "c80220107578c2cd57cc57f5153a3165493060ec", "3": "095ace39-7378-4416-8596-dd8244f4d7fd"}}, "__type__": "1"}, "095ace39-7378-4416-8596-dd8244f4d7fd": {"__data__": {"text": "                                                                  |\n| `ASSET_PRICE_USD`              | number | Current asset price in USD                                                                                                      |\n| `RUNE_LIQUIDITY`               | number | The total RUNE liquidity for this pool                                                                                          |\n| `RUNE_PRICE`                   | number | Current RUNE price                                                                                                              |\n| `RUNE_PRICE_USD`               | number | Current RUNE price in USD                                                                                                       |\n| `ADD_LIQUIDITY_COUNT`          | number | How many times to add liquidity to the pool                                                                                     |\n| `ADD_ASSET_LIQUIDITY`          | number | The total amount of asset liquidity added to the pool                                                                           |\n| `ADD_ASSET_LIQUIDITY_USD`      | number | The total amount in usd of asset liquidity added to the pool                                                                    |\n| `ADD_RUNE_LIQUIDITY`           | number | The", "doc_id": "095ace39-7378-4416-8596-dd8244f4d7fd", "embedding": null, "doc_hash": "ea7c76e3b08ef6272427e11282b1cfc2a6a0754b7b23bbed3c4d7e9ee0f545ec", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/daily-pool-stats.md", "file_name": "daily-pool-stats.md"}, "node_info": {"start": 1575, "end": 2908, "_node_type": "1"}, "relationships": {"1": "c80220107578c2cd57cc57f5153a3165493060ec", "2": "22d425d4-0075-4b88-b3f9-6c9bc95dbdf5", "3": "c8ee4cda-3a4e-4687-8a98-fc6747fc8a71"}}, "__type__": "1"}, "c8ee4cda-3a4e-4687-8a98-fc6747fc8a71": {"__data__": {"text": "          | number | The total amount of RUNE liquidity added to the pool                                                                            |\n| `ADD_RUNE_LIQUIDITY_USD`       | number | The total amount in usd of RUNE liquidity added to the pool                                                                     |\n| `WITHDRAW_COUNT`               | number | Time to withdraw from the pool                                                                                                  |\n| `WITHDRAW_ASSET_LIQUDITIY`     | number | The total amount of asset withdrawn from the pool                                                                               |\n| `WITHDRAW_ASSET_LIQUDITIY_USD` | number | The total amount in USD of asset withdrawn from the pool                                                                        |\n| `WITHDRAW_RUNE_LIQUIDITY`      | number | The total amount of RUNE withdrawn from the pool                                                                                |\n| `WITHDRAW_RUNE_LIQUIDITY_USD`  | number | The total amount in USD of RUNE withdrawn from the pool                                                                         |\n| `IL_PROTECTION_PAID`           | number | Impermanent loss protection cost paid to the network                                                                            |\n| `IL_PROTECTION_PAID_USD`       | number | Impermanent loss protection cost in USD paid to the network                                         ", "doc_id": "c8ee4cda-3a4e-4687-8a98-fc6747fc8a71", "embedding": null, "doc_hash": "a32711b046006705e097b107cabd551b8f86befb2ac414b8b3a407f8dd92abdf", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/daily-pool-stats.md", "file_name": "daily-pool-stats.md"}, "node_info": {"start": 2898, "end": 4411, "_node_type": "1"}, "relationships": {"1": "c80220107578c2cd57cc57f5153a3165493060ec", "2": "095ace39-7378-4416-8596-dd8244f4d7fd", "3": "69c203f1-6498-4977-87ae-1383728c9793"}}, "__type__": "1"}, "69c203f1-6498-4977-87ae-1383728c9793": {"__data__": {"text": "                                               |\n| `AVERAGE_SLIP`                 | number | Average slippage                                                                                                                |\n| `TO_ASSET_AVERAGE_SLIP`        | number | When swap from RUNE to Asset, the average slippage                                                                              |\n| `TO_RUNE_AVERAGE_SLIP`         | number | When swap from Asset to RUNE, the average slippage                                                                              |\n| `SWAP_COUNT`                   | number | Total number of swaps                                                                                                           |\n| `TO_ASSET_SWAP_COUNT`          | number | Total number of swaps from RUNE TO Asset                                                                                        |\n| `TO_RUNE_SWAP_COUNT`           | number | Total number of swaps from Asset TO RUNE                                                                                        |\n| `SWAP_VOLUME_RUNE`             | number | The swap amount of RUNE                                                                                                         |\n| `SWAP_VOLUME_RUNE_USD`   ", "doc_id": "69c203f1-6498-4977-87ae-1383728c9793", "embedding": null, "doc_hash": "dcdca1eedbee38d8a6b5b77bb755f1a8c8e05976597e5197d551414cd8fe98c7", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/daily-pool-stats.md", "file_name": "daily-pool-stats.md"}, "node_info": {"start": 4423, "end": 5717, "_node_type": "1"}, "relationships": {"1": "c80220107578c2cd57cc57f5153a3165493060ec", "2": "c8ee4cda-3a4e-4687-8a98-fc6747fc8a71", "3": "0f99132d-47b3-4eea-a5a3-f202aa20bb4d"}}, "__type__": "1"}, "0f99132d-47b3-4eea-a5a3-f202aa20bb4d": {"__data__": {"text": "  |\n| `SWAP_VOLUME_RUNE_USD`         | number | The swap amount of RUNE in USD                                                                                                  |\n| `TO_ASSET_SWAP_VOLUME`         | number | The swap volume from RUNE to Asset                                                                                              |\n| `TO_RUNE_SWAP_VOLUME`          | number | The swap volume from Asset to RUNE                                                                                              |\n| `TOTAL_SWAP_FEES_RUNE`         | number | Total swap fees in RUNE                                                                                                         |\n| `TOTAL_SWAP_FEES_USD`          | number | Total swap fees in USD                                                                                                          |\n| `TOTAL_ASSET_SWAP_FEES`        | number | Total asset swap fees in asset                                                                                                  |\n| `TOTAL_ASSET_RUNE_FEES`        | number | Total asset swap fees in RUNE                                                                                                   |\n| `UNIQUE_MEMBER_COUNT`          | number | All memberships with a rune address. Take the member from", "doc_id": "0f99132d-47b3-4eea-a5a3-f202aa20bb4d", "embedding": null, "doc_hash": "5e43fdccb0ce0495fc94320e7c43edf0097d537eb76c0071c9f2eb28bd352b20", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/daily-pool-stats.md", "file_name": "daily-pool-stats.md"}, "node_info": {"start": 5693, "end": 7016, "_node_type": "1"}, "relationships": {"1": "c80220107578c2cd57cc57f5153a3165493060ec", "2": "69c203f1-6498-4977-87ae-1383728c9793", "3": "c000bd7a-2de6-4193-b60a-50fab26af232"}}, "__type__": "1"}, "c000bd7a-2de6-4193-b60a-50fab26af232": {"__data__": {"text": "    | number | All memberships with a rune address. Take the member from rune and asset and then subtract the balance = 0 then get the results |\n| `UNIQUE_SWAPPER_COUNT`         | number | The unique swap address for this pool                                                                                           |\n| `LIQUIDITY_UNITS`              | number | The amount of units for the liquidity in the pool                                                                               |\n", "doc_id": "c000bd7a-2de6-4193-b60a-50fab26af232", "embedding": null, "doc_hash": "c30e0ba50e36a1f03d993b1d1c0af1e1d8fe227c98d1a9b463fbb5b0a7773d87", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/daily-pool-stats.md", "file_name": "daily-pool-stats.md"}, "node_info": {"start": 6969, "end": 7462, "_node_type": "1"}, "relationships": {"1": "c80220107578c2cd57cc57f5153a3165493060ec", "2": "0f99132d-47b3-4eea-a5a3-f202aa20bb4d"}}, "__type__": "1"}, "48b86d76-952d-4eea-9a66-c143788dd7b1": {"__data__": {"text": "---\ndescription: The table shows the total valued locked and the total value bonded/pooled\n---\n\n# Daily TVL\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.daily_tvl`\n\n| Field                    | Type   | Description                                                                            |\n| ------------------------ | ------ | -------------------------------------------------------------------------------------- |\n| `DAY`                    | date   | The recorded day                                                                       |\n| `TOTAL_VALUE_POOLED`     | number | The total amount of rune provided by the liquidity provides and pooled in the pool     |\n| `TOTAL_VALUE_POOLED_USD` | number | The total USD amount of rune provided by the liquidity provides and pooled in the pool |\n| `TOTAL_VALUE_BONDED`     | number | The total amount of rune provided by the node operators and bonded in the pool         |\n| `TOTAL_VALUE_BONDED_USD` | number | The total USD amount of rune provided by the node operators and bonded in the pool     |\n| `TOTAL_VALUE_LOCKED`     | number | The total rune value locked in the pool                                                |\n| `TOTAL_VALUE_LOCKED_USD` | number | The total USD value locked in the pool                                                 |\n", "doc_id": "48b86d76-952d-4eea-9a66-c143788dd7b1", "embedding": null, "doc_hash": "a46a1d8a6884f62bf7217a92ce640ba77c0f818fe04657c46c6cd0f727b9dcb0", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/daily-tvl.md", "file_name": "daily-tvl.md"}, "node_info": {"start": 0, "end": 1355, "_node_type": "1"}, "relationships": {"1": "0d0dd09f7e191da34804a14b7d5659b0cb0a744a"}}, "__type__": "1"}, "cbfd6a94-c8b1-4e70-8dc6-5e296f71f439": {"__data__": {"text": "---\ndescription: >-\n  The actions the liquidity providers do in the THORChain, with the amount in\n  RUNE/Asset\n---\n\n# Liquidity Actions\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.liquidity_actions`\n\n| Field                  | Type      | Description                                                                                                                                                                                                                     |\n| ---------------------- | --------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `BLOCK_ID`             | number    | The block number that this block was recorded                                                                                                                                                                                   |\n| `BLOCK_TIMESTAMP`      | timestamp | The timestamp this block was recorded                                                                                                                                                                                           |\n| `EVENT_ID`             | text      | The flipside internal unique id                                                                                                                                                                                  ", "doc_id": "cbfd6a94-c8b1-4e70-8dc6-5e296f71f439", "embedding": null, "doc_hash": "14c15d111533f75117f910ddbcf385be4df6b29fb70427a9ac3d4ee940dde668", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/liquidity-actions.md", "file_name": "liquidity-actions.md"}, "node_info": {"start": 0, "end": 1556, "_node_type": "1"}, "relationships": {"1": "bd400f7a2d3fcf09f72a99ebe9e46cbe9284f9b2", "3": "e42c2577-192d-4b6a-8c31-8776f009a7e2"}}, "__type__": "1"}, "e42c2577-192d-4b6a-8c31-8776f009a7e2": {"__data__": {"text": "                                  |\n| `TX_ID`                | text      | The unique transaction id for the this swap                                                                                                                                                                                     |\n| `LP_ACTION`            | text      | The direction of the liquidity providers, add or remove the liquidity                                                                                                                                                           |\n| `POOL_NAME`            | text      | The asset name                                                                                                                                                                                                                  |\n| `FROM_ADDRESS`         | address   | The address of the liquidity provider                                                                                                                                                                                           |\n| `TO_ADDRESS`           | address   | The address of the pool                                      ", "doc_id": "e42c2577-192d-4b6a-8c31-8776f009a7e2", "embedding": null, "doc_hash": "67266ea9bdd1ad4f3a8824c8ca5db7170db0b39eb628718b1bf7914a578b9bc4", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/liquidity-actions.md", "file_name": "liquidity-actions.md"}, "node_info": {"start": 1557, "end": 2753, "_node_type": "1"}, "relationships": {"1": "bd400f7a2d3fcf09f72a99ebe9e46cbe9284f9b2", "2": "cbfd6a94-c8b1-4e70-8dc6-5e296f71f439", "3": "e2a48a68-79b4-4718-821a-600c36ac03ce"}}, "__type__": "1"}, "e2a48a68-79b4-4718-821a-600c36ac03ce": {"__data__": {"text": "                                                                                                                                                                                      |\n| `RUNE_AMOUNT`          | number    | How many RUNE liquidity added/removed                                                                                                                                                                                           |\n| `RUNE_AMOUNT_USD`      | number    | How many RUNE liquidity added/removed in USD                                                                                                                                                                                    |\n| `ASSET_AMOUNT`         | number    | How many Asset liquidity added/removed                                                                                                                                                                                          |\n| `ASSET_AMOUNT_USD`     | number    | How many Asset liquidity added/removed in USD                                                                                                              ", "doc_id": "e2a48a68-79b4-4718-821a-600c36ac03ce", "embedding": null, "doc_hash": "0df27fc53ff812add049e4436905a4714878352b26afdbb3bfca42e67a4d14de", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/liquidity-actions.md", "file_name": "liquidity-actions.md"}, "node_info": {"start": 2754, "end": 3927, "_node_type": "1"}, "relationships": {"1": "bd400f7a2d3fcf09f72a99ebe9e46cbe9284f9b2", "2": "e42c2577-192d-4b6a-8c31-8776f009a7e2", "3": "f0cc0181-cd91-4bf9-a1ea-173798619920"}}, "__type__": "1"}, "f0cc0181-cd91-4bf9-a1ea-173798619920": {"__data__": {"text": "                                                                                        |\n| `STAKE_UNITS`          | number    | Stake units are a way of representing how much liquidity an address has in the pool. THORChain converts the raw amounts you are depositing / withdrawing into `stake_units` to represent what % of the pool you own a claim to. |\n| `ASSET_TX_ID`          | text      | The transaction id for adding/removing the asset                                                                                                                                                                                |\n| `ASSET_ADDRESS`        | address   | The asset address of the liquidity provider                                                                                                                                                                                     |\n| `ASSET_BLOCKCHAIN`     | text      | The blockchain the asset is in                                                                                                                                                                                                  |\n| `IL_PROTECTION`        | number    | The total impermanent loss protection paid for this pool on this day                                                                                                                    ", "doc_id": "f0cc0181-cd91-4bf9-a1ea-173798619920", "embedding": null, "doc_hash": "8a62201e74ea9611b2ff4d29a0f162d0ef9e4f43cc0b8c7417817bb0c0a57656", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/liquidity-actions.md", "file_name": "liquidity-actions.md"}, "node_info": {"start": 3928, "end": 5301, "_node_type": "1"}, "relationships": {"1": "bd400f7a2d3fcf09f72a99ebe9e46cbe9284f9b2", "2": "e2a48a68-79b4-4718-821a-600c36ac03ce", "3": "a60f6759-3d36-42ec-bfc0-ac575403a4bb"}}, "__type__": "1"}, "a60f6759-3d36-42ec-bfc0-ac575403a4bb": {"__data__": {"text": "                                                           |\n| `IL_PROTECTION_USD`    | number    | The total impermanent loss protection paid  in USD for this pool on this day                                                                                                                                                    |\n| `UNSTAKE_ASYMMETRY`    | number    | Only exists in unstake, or removing the liquidity                                                                                                                                                                               |\n| `UNSTAKE_BASIS_POINTS` | number    | The basis points for unstaking, or removing the liquidity                                                                                                                                                                       |\n", "doc_id": "a60f6759-3d36-42ec-bfc0-ac575403a4bb", "embedding": null, "doc_hash": "27c64defbca304523e225c5c4900536f50dface8d889f0cabdddda02e2b81b23", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/liquidity-actions.md", "file_name": "liquidity-actions.md"}, "node_info": {"start": 5282, "end": 6138, "_node_type": "1"}, "relationships": {"1": "bd400f7a2d3fcf09f72a99ebe9e46cbe9284f9b2", "2": "f0cc0181-cd91-4bf9-a1ea-173798619920"}}, "__type__": "1"}, "f798351d-67cb-4b52-8076-52b21d0005c1": {"__data__": {"text": "---\ndescription: The table shows the pool block balances based on the rune and asset amount\n---\n\n# Pool Block Balances\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.pool_block_balances`\n\n| Field              | Type      | Description                                                    |\n| ------------------ | --------- | -------------------------------------------------------------- |\n| `BLOCK_ID`         | number    | The block number that this block was recorded                  |\n| `BLOCK_TIMESTAMP`  | timestamp | The timestamp this block was recorded                          |\n| `POOL_NAME`        | text      | The pool name for the balance, it can be asset in other tables |\n| `RUNE_AMOUNT`      | number    | The rune amount balance for this pool name                     |\n| `RUNE_AMOUNT_USD`  | number    | The rune amount balance in USD for this pool name              |\n| `ASSET_AMOUNT`     | number    | The asset amount balance for this pool name                    |\n| `ASSET_AMOUNT_USD` | number    | The asset amount balance in USD for this pool name             |\n| `SYNTH_AMOUNT`     | number    | The synth amount balance for this pool name                    |\n| `SYNTH_AMOUNT_USD` | number    | The synth amount balance in USD for this pool name             |\n", "doc_id": "f798351d-67cb-4b52-8076-52b21d0005c1", "embedding": null, "doc_hash": "2fcebdda475ac983277e68e326d1cf7c5ee4b66f9f6d644e0303f9cd0780c4ad", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/pool-block-balances.md", "file_name": "pool-block-balances.md"}, "node_info": {"start": 0, "end": 1333, "_node_type": "1"}, "relationships": {"1": "681a314dda1f5bd822330bdbf39a7ee30168aeb0"}}, "__type__": "1"}, "093c0089-9746-488a-9475-908504a59089": {"__data__": {"text": "---\ndescription: The table shows the fee paid by each pool at different timestamp\n---\n\n# Pool Block Fees\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.pool_block_fees`\n\n| Field                       | Type   | Description                                            |\n| --------------------------- | ------ | ------------------------------------------------------ |\n| `DAY`                       | date   | The timestamp in day for the recorded of the block fee |\n| `POOL_NAME`                 | text   | The asset for the fee events                           |\n| `REWARDS`                   | number | The total rewards                                      |\n| `TOTAL_LIQUIDITY_FEES_RUNE` | number | The total liquidity fees paid in RUNE                  |\n| `ASSET_LIQUIDITY_FEES`      | number | The liquidity fees paid in Asset                       |\n| `RUNE_LIQUIDITY_FEES`       | number | The liquidity fees paid in RUNE                        |\n| `EARNINGS`                  | number | The total earnings for this pool at this time          |\n", "doc_id": "093c0089-9746-488a-9475-908504a59089", "embedding": null, "doc_hash": "b001c7e60cf962b473b2a1a9309040826994e0021d79c31a74ce0021f987ef71", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/pool-block-fees.md", "file_name": "pool-block-fees.md"}, "node_info": {"start": 0, "end": 1097, "_node_type": "1"}, "relationships": {"1": "f49a38e5ba8eb389ea104f95e4edd67f99d252b9"}}, "__type__": "1"}, "4618b8b4-80ae-42be-8e11-e196ef23a62f": {"__data__": {"text": "---\ndescription: >-\n  The overall pool block statistics broken by day, it lists most important\n  metrics for the pools\n---\n\n# Pool Block Statistics\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.pool_block_statistics`\n\n| Field                              | Type   | Description                                                                                                                     |\n| ---------------------------------- | ------ | ------------------------------------------------------------------------------------------------------------------------------- |\n| `DAY`                              | date   | The timestamp in day for the recorded of the block fee                                                                          |\n| `ADD_ASSET_LIQUIDITY_VOLUME`       | number | How many asset liquidity has been added to the pol at this time for this pool                                                   |\n| `ADD_LIQUIDITY_COUNT`              | number | How many times there are transactions to add liquidity                                                                          |\n| `ADD_LIQUIDITY_VOLUME`             | number | The asset volume of liquidity added to the pool                                                                                 |\n| `ADD_RUNE_LIQUIDITY_VOLUME`        | number | The rune volume of liquidity added to the pool                                                                                  |\n| `ASSET`                            | text   | Asset name or pool name                                                                                                         |\n|", "doc_id": "4618b8b4-80ae-42be-8e11-e196ef23a62f", "embedding": null, "doc_hash": "a2c9627fe567faa543f407ab0f7f273c570525b1115bb4a6e98173e40fa62a45", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/pool-block-statistics.md", "file_name": "pool-block-statistics.md"}, "node_info": {"start": 0, "end": 1689, "_node_type": "1"}, "relationships": {"1": "6923c68ede99ecf21e569912f3044177785a9e10", "3": "dc274d00-c554-4efb-983c-b6973f77220c"}}, "__type__": "1"}, "dc274d00-c554-4efb-983c-b6973f77220c": {"__data__": {"text": "                 |\n| `ASSET_DEPTH`                      | number | The current pool depth, which is the total Rune pooled in the asset                                                             |\n| `ASSET_PRICE`                      | number | The asset price (how many rune) at this time                                                                                    |\n| `ASSET_PRICE_USD`                  | number | The asset price in USD                                                                                                          |\n| `AVERAGE_SLIP`                     | number | The average slip point for this block within the day                                                                            |\n| `IMPERMANENT_LOSS_PROTECTION_PAID` | number | The total impermanent loss protection paid for this pool on this day                                                            |\n| `RUNE_DEPTH`                       | number | The pool depth                                                                                                                  |\n| `STATUS`                           | text   | The pool status, which is active or not                                                                                         |\n| `SWAP_COUNT`                       | number | Total swap transactions count                              ", "doc_id": "dc274d00-c554-4efb-983c-b6973f77220c", "embedding": null, "doc_hash": "b98f4b3dc9bd6948ec2c2f36636e9437ff4fc302adf050a9865e424e84aed6d3", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/pool-block-statistics.md", "file_name": "pool-block-statistics.md"}, "node_info": {"start": 1687, "end": 3059, "_node_type": "1"}, "relationships": {"1": "6923c68ede99ecf21e569912f3044177785a9e10", "2": "4618b8b4-80ae-42be-8e11-e196ef23a62f", "3": "55cb7e72-b6a4-4b20-838d-4825a171bc8e"}}, "__type__": "1"}, "55cb7e72-b6a4-4b20-838d-4825a171bc8e": {"__data__": {"text": "                                                                                        |\n| `SWAP_VOLUME`                      | number | Total swap volume                                                                                                               |\n| `TO_ASSET_AVERAGE_SLIP`            | number | If the transaction is from Rune to Asset, the average slip point                                                                |\n| `TO_ASSET_COUNT`                   | number | How many swaps happen from Rune to Asset                                                                                        |\n| `TO_ASSET_FEES`                    | number | The total swap fees paid to transfer from Rune to Asset                                                                         |\n| `TO_ASSET_VOLUME`                  | number | The total volume transferred from Rune to Asset                                                                                 |\n| `TO_RUNE_AVERAGE_SLIP`             | number | If the transaction is from Asset to Rune, the average slip point                                                                |\n| `TO_RUNE_COUNT`                    | number | How many swaps happen from Asset to Rune                                                                                        |\n|", "doc_id": "55cb7e72-b6a4-4b20-838d-4825a171bc8e", "embedding": null, "doc_hash": "dc5c73e048756041d2b1aed625f2b7ea27cd3b4f9e8ec92c1307736d8f2bfa8a", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/pool-block-statistics.md", "file_name": "pool-block-statistics.md"}, "node_info": {"start": 3063, "end": 4400, "_node_type": "1"}, "relationships": {"1": "6923c68ede99ecf21e569912f3044177785a9e10", "2": "dc274d00-c554-4efb-983c-b6973f77220c", "3": "3772604c-84ec-41ff-9454-497d9f1bd8aa"}}, "__type__": "1"}, "3772604c-84ec-41ff-9454-497d9f1bd8aa": {"__data__": {"text": "                 |\n| `TO_RUNE_FEES`                     | number | The total swap fees paid to transfer from Asset to Rune                                                                         |\n| `TO_RUNE_VOLUME`                   | number | The total volume transferred from Asset to Rune                                                                                 |\n| `TOTAL_FEES`                       | number | The total fees paid for the swaps                                                                                               |\n| `UNIQUE_MEMBER_COUNT`              | number | All memberships with a rune address. Take the member from rune and asset and then subtract the balance = 0 then get the results |\n| `UNIQUE_SWAPPER_COUNT`             | number | The unique swap addresses for this pool                                                                                         |\n| `UNITS`                            | number | The swap units                                                                                                                  |\n| `WITHDRAW_ASSET_VOLUME`            | number | How many assets get withdrawn from the liquidity pools                                                                          |\n| `WITHDRAW_COUNT`                   | number | How many times the withdraw events happens                                                                           ", "doc_id": "3772604c-84ec-41ff-9454-497d9f1bd8aa", "embedding": null, "doc_hash": "ef54e9d0680fa7e03b3fb6a93e547deb80f22c58baab3e2490bab39a796d87c8", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/pool-block-statistics.md", "file_name": "pool-block-statistics.md"}, "node_info": {"start": 4398, "end": 5828, "_node_type": "1"}, "relationships": {"1": "6923c68ede99ecf21e569912f3044177785a9e10", "2": "55cb7e72-b6a4-4b20-838d-4825a171bc8e", "3": "d29b13fe-69a8-4dd9-8048-b37583603333"}}, "__type__": "1"}, "d29b13fe-69a8-4dd9-8048-b37583603333": {"__data__": {"text": "                              |\n| `WITHDRAW_RUNE_VOLUME`             | number | How many rune volume get withdrawn from the pool                                                                                |\n| `WITHDRAW_VOLUME`                  | number | How many asset volume get withdrawn from the pool                                                                               |\n", "doc_id": "d29b13fe-69a8-4dd9-8048-b37583603333", "embedding": null, "doc_hash": "63eca291f0165810bff07293effc2b42d9c19d1761f9aba9a52a60b0d7349d2e", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/pool-block-statistics.md", "file_name": "pool-block-statistics.md"}, "node_info": {"start": 5812, "end": 6200, "_node_type": "1"}, "relationships": {"1": "6923c68ede99ecf21e569912f3044177785a9e10", "2": "3772604c-84ec-41ff-9454-497d9f1bd8aa"}}, "__type__": "1"}, "35e62b9f-b7e0-4a09-a932-cfc2058b5f65": {"__data__": {"text": "---\ndescription: >-\n  The table shows the asset and rune prices in the Thorchain, it will include\n  the exchange ratio between rune/asset and the usd price data\n---\n\n# Prices\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.prices`\n\n| Field              | Type      | Description                                   |\n| ------------------ | --------- | --------------------------------------------- |\n| `BLOCK_ID`         | number    | The block number that this block was recorded |\n| `BLOCK_TIMESTAMP`  | timestamp | The timestamp this block was recorded         |\n| `PRICE_RUNE_ASSET` | number    | How many RUNE can be exchanged by 1 Asset     |\n| `PRICE_ASSET_RUNE` | number    | How many Asset can be exchanged by 1 RUNE     |\n| `ASSET_USD`        | number    | The Asset price in USD                        |\n| `RUNE_USD`         | number    | The RUNE price in USD                         |\n| `POOL_NAME`        | text      | The pool this asset in                        |\n", "doc_id": "35e62b9f-b7e0-4a09-a932-cfc2058b5f65", "embedding": null, "doc_hash": "24427dab97eae2bd3aa4d7eebe9bb4498cfc8b0d90ca4cf1e1e81eb4b393e955", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/prices.md", "file_name": "prices.md"}, "node_info": {"start": 0, "end": 1023, "_node_type": "1"}, "relationships": {"1": "bc503a2d6046f7d35783636805c537ba02fab937"}}, "__type__": "1"}, "53027dc5-84ff-445f-8510-1e8338d8f81b": {"__data__": {"text": "---\ndescription: The swaps table to show the swap activity in the Thorchain\n---\n\n# Swaps\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.swaps`\n\n| Field               | Type      | Description                                                         |\n| ------------------- | --------- | ------------------------------------------------------------------- |\n| `BLOCK_ID`          | number    | The block number that this block was recorded                       |\n| `BLOCK_TIMESTAMP`   | timestamp | The timestamp this block was recorded                               |\n| `TX_ID`             | text      | The unique transaction id for the this swap                         |\n| `BLOCKCHAIN`        | text      | The blockchain for the swap transaction                             |\n| `POOL_NAME`         | text      | The pool name where the swaps happen                                |\n| `FROM_ADDRESS`      | address   | The user address that initiates the swap                            |\n| `NATIVE_TO_ADDRESS` | address   | The user address that is receiving the result of the swap           |\n| `TO_POOL_ADDRESS`   | address   | The pool address that processes the swap                            |\n| `FROM_ASSET`        | text      | Initial asset to swap                                               |\n| `TO_ASSET`          | text      | The asset swap to                                                   |\n| `FROM_AMOUNT`       | number    | Amount of the asset to swap from                                    |\n| `TO_AMOUNT`         | number    | Amount of the asset to swap for                                     |\n| `MIN_TO_AMOUNT`     | number    | Minimal amount to swap for                                          |\n|", "doc_id": "53027dc5-84ff-445f-8510-1e8338d8f81b", "embedding": null, "doc_hash": "1f5c6b2e1ecd7596dd4fca238f980b42cfd6162a31570000d38eeb485555ccef", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/swaps.md", "file_name": "swaps.md"}, "node_info": {"start": 0, "end": 1780, "_node_type": "1"}, "relationships": {"1": "8c7abeabee2372c2d7aeca5e46eecb3fcde1612b", "3": "171ea692-bbe7-4ca3-83c2-ea54c1109b70"}}, "__type__": "1"}, "171ea692-bbe7-4ca3-83c2-ea54c1109b70": {"__data__": {"text": "                 |\n| `FROM_AMOUNT_USD`   | number    | Amount in USD of the asset to swap from                             |\n| `TO_AMOUNT_USD`     | number    | Amount in USD of the asset to swap for                              |\n| `TO_AMOUNT_MIN_USD` | number    | Minimal amount in USD to swap for                                   |\n| `SWAP_SLIP_BP`      | number    | The slippage during the swap process                                |\n| `LIQ_FEE_RUNE`      | number    | The amount of RUNE liquidity fee paid in RUNE for the swaps         |\n| `LIQ_FEE_RUNE_USD`  | number    | The amount of RUNE in USD liquidity fee paid in RUNE for the swaps  |\n| `LIQ_FEE_ASSET`     | number    | The amount of Asset liquidity fee paid in RUNE for the swaps        |\n| `LIQ_FEE_ASSET_USD` | number    | The amount of Asset in USD liquidity fee paid in RUNE for the swaps |\n", "doc_id": "171ea692-bbe7-4ca3-83c2-ea54c1109b70", "embedding": null, "doc_hash": "240c85fde78271fcb627d00a0fbdf5e3f3b022f7548445d461bce7d5be17b7b6", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/swaps.md", "file_name": "swaps.md"}, "node_info": {"start": 1760, "end": 2627, "_node_type": "1"}, "relationships": {"1": "8c7abeabee2372c2d7aeca5e46eecb3fcde1612b", "2": "53027dc5-84ff-445f-8510-1e8338d8f81b"}}, "__type__": "1"}, "873369f0-751e-4cf8-8ada-5b814314b51f": {"__data__": {"text": "---\ndescription: The total block rewards for each pool\n---\n\n# Total Block Rewards\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.total_block_rewards`\n\n| Field             | Type      | Description                                    |\n| ----------------- | --------- | ---------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded  |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded          |\n| `REWARD_ENTITY`   | text      | The asset or named as pool name                |\n| `RUNE_AMOUNT`     | number    | The rewards measured in RUNE amount            |\n| `RUNE_AMOUNT_USD` | number    | The rewards measured in RUNE amount in the USD |\n", "doc_id": "873369f0-751e-4cf8-8ada-5b814314b51f", "embedding": null, "doc_hash": "6d9b013d12add830bcbcdfd1585c9170d8b02246d99e2aae826f1024924ae876", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/total-block-rewards.md", "file_name": "total-block-rewards.md"}, "node_info": {"start": 0, "end": 777, "_node_type": "1"}, "relationships": {"1": "2c77adc60f01ea850b492196c15079898c150ad3"}}, "__type__": "1"}, "bd1987fa-f9b5-4da5-b115-899e7c7f2dac": {"__data__": {"text": "---\ndescription: The table to show the total value locked, bonded and pooled\n---\n\n# Total Value Locked\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.total_value_locked`\n\n| Field                | Type   | Description                                                                        |\n| -------------------- | ------ | ---------------------------------------------------------------------------------- |\n| `DAY`                | date   | The timestamp in day for the recorded of the block fee                             |\n| `TOTAL_VALUE_POOLED` | number | The total amount of rune provided by the liquidity provides and pooled in the pool |\n| `TOTAL_VALUE_BONDED` | number | The total amount of rune provided by the node operators and bonded in the pool     |\n| `TOTAL_VALUE_LOCKED` | number | The total rune value locked in the pool                                            |\n", "doc_id": "bd1987fa-f9b5-4da5-b115-899e7c7f2dac", "embedding": null, "doc_hash": "89e62ad148e06bdd298515c65c98072d177719a2c1287ea58227f2e06c7bf12e", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/total-value-locked.md", "file_name": "total-value-locked.md"}, "node_info": {"start": 0, "end": 930, "_node_type": "1"}, "relationships": {"1": "f99db088a10db1a1bd5b7c8b622fd1e48672d546"}}, "__type__": "1"}, "5f50a87f-9d92-4d09-a6c9-70eb7ceed46d": {"__data__": {"text": "---\ndescription: Transfers table shows the transfer action between different address\n---\n\n# Transfers\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.transfers`\n\n| Field             | Type      | Description                                   |\n| ----------------- | --------- | --------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded |\n| `EVENT_ID`        | text      | The flipside internal unique id               |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded         |\n| `FROM_ADDRESS`    | address   | The address initiated this transfers          |\n| `TO_ADDRESS`      | address   | The address received this transfers           |\n| `ASSET`           | text      | The related asset                             |\n| `RUNE_AMOUNT`     | number    | The transferred RUNE amount                   |\n| `RUNE_AMOUNT_USD` | number    | The transferred RUNE amount in USD            |\n", "doc_id": "5f50a87f-9d92-4d09-a6c9-70eb7ceed46d", "embedding": null, "doc_hash": "77dbe3bf862970675275ec01fa1192d3f2bd8e2616b4299065ed296df7dda2e3", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/transfers.md", "file_name": "transfers.md"}, "node_info": {"start": 0, "end": 1026, "_node_type": "1"}, "relationships": {"1": "1b1f61d75a6cb1c72429e9a1bf6abb86be75d644"}}, "__type__": "1"}, "3f95f270-8d03-454c-89eb-1a625c11c856": {"__data__": {"text": "# Upgrades\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.upgrades`\n\n| Field             | Type      | Description                                   |\n| ----------------- | --------- | --------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded         |\n| `FROM_ADDRESS`    | address   | The address initiated this transfers          |\n| `TO_ADDRESS`      | address   | The address received this transfers           |\n| `BURN_ASSET`      | text      | The burned asset                              |\n| `RUNE_AMOUNT`     | number    | The transferred RUNE amount                   |\n| `RUNE_AMOUNT_USD` | number    | The transferred RUNE amount in USD            |\n", "doc_id": "3f95f270-8d03-454c-89eb-1a625c11c856", "embedding": null, "doc_hash": "96afcced3d4be081038fddb3c4aa7c210755456680150f2d4b34fc8b4959ab10", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/upgrades.md", "file_name": "upgrades.md"}, "node_info": {"start": 0, "end": 852, "_node_type": "1"}, "relationships": {"1": "bf2601e6519a3d04633cc28441ce2d8a7a3b4d14"}}, "__type__": "1"}, "6730909d-718a-4139-bde7-103d73a6643b": {"__data__": {"text": "# Thorchain Core Tables\n\nDocumentation for Core tables can be found [here](https://flipsidecrypto.github.io/thorchain\\_models/#!/overview).&#x20;\n\nThe public Github repo with model source code is [here](https://github.com/FlipsideCrypto/thorchain\\_models).\n\nOverview of Fact Dimensional model with Primary & Foreign Key relationships:\n", "doc_id": "6730909d-718a-4139-bde7-103d73a6643b", "embedding": null, "doc_hash": "491dab2f70751649ec738f40164fe77bbe2d74f5a384513f8d7dcac37fc4eda1", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-core-tables.md", "file_name": "thorchain-core-tables.md"}, "node_info": {"start": 0, "end": 335, "_node_type": "1"}, "relationships": {"1": "4296e67e8f199c3faef285773a98fa5601d85778"}}, "__type__": "1"}, "ae7b7fa0-5cae-4cf0-9192-1f181d1bd6ea": {"__data__": {"text": "# THORChain Raw Table\n\n{% content-ref url=\"active-vault-events.md\" %}\n[active-vault-events.md](active-vault-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"inactive-vault-events.md\" %}\n[inactive-vault-events.md](inactive-vault-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"add-events.md\" %}\n[add-events.md](add-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"block-pool-depths.md\" %}\n[block-pool-depths.md](block-pool-depths.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"bond-events.md\" %}\n[bond-events.md](bond-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"fee-events.md\" %}\n[fee-events.md](fee-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"gas-events.md\" %}\n[gas-events.md](gas-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"message-events.md\" %}\n[message-events.md](message-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"new-node-events.md\" %}\n[new-node-events.md](new-node-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"pending-liquidity-events.md\" %}\n[pending-liquidity-events.md](pending-liquidity-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"pool-balance-change-events.md\" %}\n[pool-balance-change-events.md](pool-balance-change-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"pool-events.md\" %}\n[pool-events.md](pool-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"refund-events.md\" %}\n[refund-events.md](refund-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"reserve-events.md\" %}\n[reserve-events.md](reserve-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"rewards-events.md\" %}\n[rewards-events.md](rewards-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"rewards-event-entries.md\" %}\n[rewards-event-entries.md](rewards-event-entries.md)\n{% endcontent-ref %}\n\n", "doc_id": "ae7b7fa0-5cae-4cf0-9192-1f181d1bd6ea", "embedding": null, "doc_hash": "5055aa40f9619b4feeac1335986fa4c36cb04642e5ebf23986d106ae0f8691f1", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 1749, "_node_type": "1"}, "relationships": {"1": "2b3d54bf1283987a9c0400dfc697cf38452e8a83"}}, "__type__": "1"}, "5b11833a-02aa-4c9b-946e-605e21154294": {"__data__": {"text": "---\ndescription: Active Vault Events lists the events triggered by the churning activities\n---\n\n# Active Vault Events\n\n## Table Schema\n\n**table name:** `thorchain.active_vault_events`\n\n| Field             | Type      | Description                                   |\n| ----------------- | --------- | --------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded         |\n| `ADD_ASGARD_ADDR` | address   | The asgard address added to the vault         |\n", "doc_id": "5b11833a-02aa-4c9b-946e-605e21154294", "embedding": null, "doc_hash": "6480444311122c76030b71757776744f3ae55f7411a16c28daf8799f14739330", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/active-vault-events.md", "file_name": "active-vault-events.md"}, "node_info": {"start": 0, "end": 595, "_node_type": "1"}, "relationships": {"1": "02c411fbb10492d88625c77f7063141fbf1615c8"}}, "__type__": "1"}, "bfc81b41-276e-4c79-9af7-6576e2f52240": {"__data__": {"text": "# Add events\n\n", "doc_id": "bfc81b41-276e-4c79-9af7-6576e2f52240", "embedding": null, "doc_hash": "5654b463e2bb4c5d0e74c54947e0ff0af7fdf04c256a646fc16d7aa4835c9e3e", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/add-events.md", "file_name": "add-events.md"}, "node_info": {"start": 0, "end": 14, "_node_type": "1"}, "relationships": {"1": "545431ed64921223e9769d8b8656631b79a06f20"}}, "__type__": "1"}, "e3ad2bab-e0ba-4344-a02d-1bc1821fdfaa": {"__data__": {"text": "---\ndescription: >-\n  Block Pool Depth table lists all the available pools and its' rune/asset depth\n  at each block interval\n---\n\n# Block Pool Depths\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.block_pool_depths`\n\n| Field             | Type      | Description                                         |\n| ----------------- | --------- | --------------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded       |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded               |\n| `RUNE_E8`         | number    | The rune depth for this pool at this block          |\n| `ASSET_E8`        | number    | The asset depth for this pool at this block         |\n| `POOL_NAME`       | text      | Pool name, which is also asset at some other tables |\n", "doc_id": "e3ad2bab-e0ba-4344-a02d-1bc1821fdfaa", "embedding": null, "doc_hash": "90e377652dd3d27d4342205e2c6c44f4f8493857c2acdcffe8c941bc936c22d1", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/block-pool-depths.md", "file_name": "block-pool-depths.md"}, "node_info": {"start": 0, "end": 879, "_node_type": "1"}, "relationships": {"1": "a90a58573e336368e81b11e5181a1857622b5925"}}, "__type__": "1"}, "303f2ae0-f00e-4ee8-8cb6-1ff48b721b8a": {"__data__": {"text": "---\ndescription: >-\n  Bond Events table lists all the information about the Bond activities.\n  THORChain uses a spinoff of the Proof of Stake consensus mechanism called\n  Proof of Bond.\n---\n\n# Bond Events\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.bond_events`\n\n| Field             | Type      | Description                                                                                            |\n| ----------------- | --------- | ------------------------------------------------------------------------------------------------------ |\n| `BLOCK_ID`        | number    | The block number that this block was recorded                                                          |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded                                                                  |\n| `TX_ID`           | number    | The transaction that contained this bond events, unique id to identify this message information        |\n| `TO_ADDRES`       | address   | The receiving address for this bond event                                                              |\n| `FROM_ADDRESS`    | address   | The sending address for this bond event                                                                |\n| `MEMO`            | text      | Memo for this bond event                                                                               |\n| `ASSET`           | text      | Same as pool name, which pool this bond events happens                                                 |\n| `BLOCKCHAIN`      | text      | The blockchain for this event, here is \"THOR\"                                                          |\n| `BOND_TYPE`       | text      | There are 4 different types of bond:`bond_reward, bond_paid, bond_cost,", "doc_id": "303f2ae0-f00e-4ee8-8cb6-1ff48b721b8a", "embedding": null, "doc_hash": "2bfaa8c023bc1f475ab88e167b4acca7ce2657b2b5ee7e9472e9f73fc65c4ef0", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/bond-events.md", "file_name": "bond-events.md"}, "node_info": {"start": 0, "end": 1806, "_node_type": "1"}, "relationships": {"1": "44056b05fe2d2955cdad998617fd847ab4ca9505", "3": "0bcd7602-4b4d-471c-9cc1-a8002af5dd40"}}, "__type__": "1"}, "0bcd7602-4b4d-471c-9cc1-a8002af5dd40": {"__data__": {"text": "bond:`bond_reward, bond_paid, bond_cost, bond_returned`                 |\n| `E8`              | number    | The rune amount for this bond event                                                                    |\n| `ASSET_E8`        | number    | The asset amount for this bond, using the price table we can calculate the rune amount by asset amount |\n", "doc_id": "0bcd7602-4b4d-471c-9cc1-a8002af5dd40", "embedding": null, "doc_hash": "f3d6c8130af2c4ed99c72073ddcacdd9839787b1783f6a3adb8284022f913996", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/bond-events.md", "file_name": "bond-events.md"}, "node_info": {"start": 1766, "end": 2118, "_node_type": "1"}, "relationships": {"1": "44056b05fe2d2955cdad998617fd847ab4ca9505", "2": "303f2ae0-f00e-4ee8-8cb6-1ff48b721b8a"}}, "__type__": "1"}, "0b8a56e8-cac2-49fa-a782-6e304e79dc45": {"__data__": {"text": "---\ndescription: Fee events lists all related fees happen in the Thorchain network\n---\n\n# Fee Events\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.fee_events`\n\n| Field             | Type      | Description                                                                                           |\n| ----------------- | --------- | ----------------------------------------------------------------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded                                                         |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded                                                                 |\n| `TX_ID`           | number    | The transaction that contained this fee events, unique id to identify this message information        |\n| `ASSET`           | text      | Same as pool name, which pool this fee events happens                                                 |\n| `POOL_DEDUCT`     | number    | The amount deduct from the pool related to the fee                                                    |\n| `ASSET_E8`        | number    | The asset amount for this fee, using the price table we can calculate the rune amount by asset amount |\n", "doc_id": "0b8a56e8-cac2-49fa-a782-6e304e79dc45", "embedding": null, "doc_hash": "1b00103e68f79d5e30a8f8193b64d9360e0e7374cdcd2182ca1dbdc4b257634b", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/fee-events.md", "file_name": "fee-events.md"}, "node_info": {"start": 0, "end": 1310, "_node_type": "1"}, "relationships": {"1": "afa9ffa3c556059f2530adcf5657e0ff2c19f3d4"}}, "__type__": "1"}, "4ab264ec-7787-4f40-8831-d417f2101d53": {"__data__": {"text": "---\ndescription: Gas events table provides the summary of the gas events for each block\n---\n\n# Gas Events\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.gas_events`\n\n| Field             | Type      | Description                                                                                           |\n| ----------------- | --------- | ----------------------------------------------------------------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded                                                         |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded                                                                 |\n| `RUNE_E8`         | number    | The total gas amount in rune                                                                          |\n| `TX_COUNT`        | number    | The total count of transactions within this block id                                                  |\n| `ASSET_E8`        | number    | The asset amount for this fee, using the price table we can calculate the rune amount by asset amount |\n| `ASSET`           | text      | Same as pool name, which pool this gas events happens                                                 |\n", "doc_id": "4ab264ec-7787-4f40-8831-d417f2101d53", "embedding": null, "doc_hash": "be9ff741413e5ee8153ede5d03f4962d25e19042c9416d9d4aaf7a184b100710", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/gas-events.md", "file_name": "gas-events.md"}, "node_info": {"start": 0, "end": 1315, "_node_type": "1"}, "relationships": {"1": "992879c4ffa542a7495b0b15303c196ded3ee3df"}}, "__type__": "1"}, "5e861f85-9be2-48b4-95e8-d8643868f772": {"__data__": {"text": "---\ndescription: Inactive Vault Events lists the events triggered by the churning activities\n---\n\n# Inactive Vault Events\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.inactive_vault_events`\n\n| Field             | Type      | Description                                        |\n| ----------------- | --------- | -------------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded      |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded              |\n| `ADD_ASGARD_ADDR` | address   | The asgard address in the vault which are inactive |\n", "doc_id": "5e861f85-9be2-48b4-95e8-d8643868f772", "embedding": null, "doc_hash": "407316db92718375fd2f5eca6d249b73ff9e620d7b818955c4b692dbe8fd38e3", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/inactive-vault-events.md", "file_name": "inactive-vault-events.md"}, "node_info": {"start": 0, "end": 673, "_node_type": "1"}, "relationships": {"1": "e6c5b30ffdf8f79c7aa24e1fe0cff68bba34edd1"}}, "__type__": "1"}, "6cb8b09b-8665-478d-8106-acd34c6cbfe3": {"__data__": {"text": "---\ndescription: >-\n  Message events table shows the message nodes send to the network, it will have\n  the block id, timestamp for identification and the action column shows the\n  type of message sent\n---\n\n# Message Events\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.message_events`\n\n| Field             | Type      | Description                                   |\n| ----------------- | --------- | --------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded         |\n| `ACTION`          | text      | The type of action of the message             |\n| `FROM_ADDRESS`    | address   | The address sends the message to the network  |\n", "doc_id": "6cb8b09b-8665-478d-8106-acd34c6cbfe3", "embedding": null, "doc_hash": "05cc997e4416dcb9a19785151c114de87de5884b99d07ab55e6275f96ab7a416", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/message-events.md", "file_name": "message-events.md"}, "node_info": {"start": 0, "end": 824, "_node_type": "1"}, "relationships": {"1": "a0c729c53d2f65f95a314595a2c3be06e2788c77"}}, "__type__": "1"}, "c2cbca83-f322-41c6-98e2-53bc4dc8ae7b": {"__data__": {"text": "---\ndescription: New Node Events show the new nodes into the network\n---\n\n# New Node Events\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.new_node_events`\n\n| Field             | Type      | Description                                   |\n| ----------------- | --------- | --------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded         |\n| `NODE_ADDRESS`    | address   | The new node address                          |\n", "doc_id": "c2cbca83-f322-41c6-98e2-53bc4dc8ae7b", "embedding": null, "doc_hash": "299620cece70ce964016c159d06d0f27780736d9cf6512e78639d5d131f65899", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/new-node-events.md", "file_name": "new-node-events.md"}, "node_info": {"start": 0, "end": 612, "_node_type": "1"}, "relationships": {"1": "46a6648bc29a05e177a8787430c6b6da47d6235f"}}, "__type__": "1"}, "43377517-b756-4c80-a372-d55f25b0a81c": {"__data__": {"text": "---\ndescription: >-\n  The pending liquidity events table shows the pending liquidity actions, there\n  are different types of pending liquidity, can be 'add' or 'withdraw'\n---\n\n# Pending Liquidity Events\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.pending_liquidity_events`\n\n| Field              | Type      | Description                                                                                                                     |\n| ------------------ | --------- | ------------------------------------------------------------------------------------------------------------------------------- |\n| `BLOCK_ID`         | number    | The block number that this block was recorded                                                                                   |\n| `BLOCK_TIMESTAMP`  | timestamp | The timestamp this block was recorded                                                                                           |\n| `RUNE_TX_ID`       | text      | The unique transaction id for the rune event, the liquidity type can be add/remove the rune/asset, if the event related to rune |\n| `POOL_NAME`        | text      | The pool name for the liquidity                                                                                                 |\n| `PENDING_TYPE`     | text      | The type of liquidity, can be 'add' or 'withdraw'                                                                               |\n| `RUNE_E8`          | number    | The amount of rune for the liquidity events                                                                                     |\n| `ASSET_TX_ID`      | text      | The unique transaction id for the rune event, the liquidity type can be add/remove the rune/asset, if the event related to rune |\n| `ASSET_E8`    ", "doc_id": "43377517-b756-4c80-a372-d55f25b0a81c", "embedding": null, "doc_hash": "0da569f556b15209ade345736438480f9e202abf9cecb14c171f2bd0dd4a109a", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/pending-liquidity-events.md", "file_name": "pending-liquidity-events.md"}, "node_info": {"start": 0, "end": 1823, "_node_type": "1"}, "relationships": {"1": "4d93469f0924c4a39903f976e363cdcdf9ee1c74", "3": "e252574c-cf70-41b4-91a8-9d86f9b0cf41"}}, "__type__": "1"}, "e252574c-cf70-41b4-91a8-9d86f9b0cf41": {"__data__": {"text": "the event related to rune |\n| `ASSET_E8`         | number    | The amount of asset for the liquidity events                                                                                    |\n| `RUNE_ADDRESS`     | address   | The address of rune                                                                                                             |\n| `ASSET_ADDRESS`    | address   | The address of asset                                                                                                            |\n| `ASSET_BLOCKCHAIN` | text      | The blockchain of the asset                                                                                                     |\n", "doc_id": "e252574c-cf70-41b4-91a8-9d86f9b0cf41", "embedding": null, "doc_hash": "c50e89e4a2ef982a96ef2725c0b4be03bafb78f3f56adf36d130c7217b3562e7", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/pending-liquidity-events.md", "file_name": "pending-liquidity-events.md"}, "node_info": {"start": 1779, "end": 2467, "_node_type": "1"}, "relationships": {"1": "4d93469f0924c4a39903f976e363cdcdf9ee1c74", "2": "43377517-b756-4c80-a372-d55f25b0a81c"}}, "__type__": "1"}, "711d6d87-d956-4446-8dda-14ff277dc0a9": {"__data__": {"text": "---\ndescription: Pool Balance Change Events shows the change of the pool balance\n---\n\n# Pool Balance Change Events\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.pool_balance_change_events`\n\n| Field             | Type      | Description                                                     |\n| ----------------- | --------- | --------------------------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded                   |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded                           |\n| `REASON`          | text      | The reason for the pool balance change                          |\n| `ASSET`           | text      | The related asset or pool name in other table                   |\n| `RUNE_AMOUNT`     | number    | The amount of rune for the pool balance change                  |\n| `ASSET_ADD`       | boolean   | False or True, if True, then the event is to add asset not rune |\n| `ASSET_AMOUNT`    | number    | The amount of asset for the pool balance change                 |\n| `RUNE_ADD`        | boolean   | False or True, if True, then the event is to add rune not asset |\n", "doc_id": "711d6d87-d956-4446-8dda-14ff277dc0a9", "embedding": null, "doc_hash": "d971f667719797a5f297126d48fcb940543fc85b07961666935adc5cabe7af19", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/pool-balance-change-events.md", "file_name": "pool-balance-change-events.md"}, "node_info": {"start": 0, "end": 1236, "_node_type": "1"}, "relationships": {"1": "bd03d3e32c2af551ab785ec767d9366ba83665ae"}}, "__type__": "1"}, "3e028061-ba69-4a84-b5fc-1ec6bec74022": {"__data__": {"text": "---\ndescription: Pool events table shows that the status of the pool at each block id\n---\n\n# Pool Events\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.pool_events`\n\n| Field             | Type      | Description                                   |\n| ----------------- | --------- | --------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded         |\n| `ASSET`           | text      | The asset/pool name                           |\n| `STATUS`          | text      | The current status for this pool              |\n", "doc_id": "3e028061-ba69-4a84-b5fc-1ec6bec74022", "embedding": null, "doc_hash": "eadd0bcc0f8e152f772b58635a455da0168d829f3c32e86bf693e0d1b8890d4a", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/pool-events.md", "file_name": "pool-events.md"}, "node_info": {"start": 0, "end": 703, "_node_type": "1"}, "relationships": {"1": "734d527577e34abf4963cf3b8ad14ceefeb5f114"}}, "__type__": "1"}, "8667a10f-2d00-40d5-a744-7131c7b2c607": {"__data__": {"text": "# Refund Events\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.refund_events`\n\n| Field             | Type      | Description                                   |\n| ----------------- | --------- | --------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded         |\n| `TX_ID`           | text      |                                               |\n| `ASSET_E8`        | number    |                                               |\n| `MEMO`            | text      |                                               |\n| `REASON`          | text      |                                               |\n| `ASSET_2ND_E8`    | number    |                                               |\n| `CODE`            | number    |                                               |\n| `BLOCKCHAIN`      | text      |                                               |\n| `ASSET`           | text      |                                               |\n| `ASSET_2ND`       | text      |                                               |\n| `TO_ADDRESS`      | address   |                                               |\n| `FROM_ADDRESS`    | address   |                                               |\n", "doc_id": "8667a10f-2d00-40d5-a744-7131c7b2c607", "embedding": null, "doc_hash": "02f912529ab3527fd686bbc5c2940c67c60362edef0bef7302291d3fdc6084f3", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/refund-events.md", "file_name": "refund-events.md"}, "node_info": {"start": 0, "end": 1354, "_node_type": "1"}, "relationships": {"1": "cfe9c14268e1ea7ad0fbb5d723959cb7aade7b4d"}}, "__type__": "1"}, "f7756a27-4b50-45d7-9cda-64e2dde51127": {"__data__": {"text": "---\ndescription: Reserve Events table shows the amount of rune reserved into the network\n---\n\n# Reserve Events\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.reserve_events`\n\n| Field             | Type      | Description                                                                                        |\n| ----------------- | --------- | -------------------------------------------------------------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded                                                      |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded                                                              |\n| `TX_ID`           | text      | The transaction that contained this reserve events, unique id to identify this message information |\n| `BLOCKCHAIN`      | text      | The blockchain for this reserve event                                                              |\n| `ADDRESS`         | address   | The address reserve the amount to the pool                                                         |\n| `E8`              | number    | The rune amount                                                                                    |\n| `ASSET_E8`        | number    | The asset amount                                                                                   |\n| `FROM_ADDRESS`    | address   | The address reserve the amount to the pool                                                         |\n| `TO_ADDRESS`      | address   | Reserve the amount to the address                                                                 ", "doc_id": "f7756a27-4b50-45d7-9cda-64e2dde51127", "embedding": null, "doc_hash": "d2f50582f9e356ebc3db2d6aa8dc4097c976e6ba9446caa09e9aab4a45b5ae0b", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/reserve-events.md", "file_name": "reserve-events.md"}, "node_info": {"start": 0, "end": 1702, "_node_type": "1"}, "relationships": {"1": "e43cf8afd55e48d9ee2ac61401f185adf905af4a", "3": "33d362fb-553b-45ea-a993-47a9fcfff52c"}}, "__type__": "1"}, "33d362fb-553b-45ea-a993-47a9fcfff52c": {"__data__": {"text": "                    |\n| `MEMO`            | text      | The memo for the reserve                                                                           |\n| `ASSET`           | text      | The reserved asset                                                                                 |\n", "doc_id": "33d362fb-553b-45ea-a993-47a9fcfff52c", "embedding": null, "doc_hash": "e880147e6409fc7357e14b683ee5d925850060152360cb04aca4fdb2cf82efb0", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/reserve-events.md", "file_name": "reserve-events.md"}, "node_info": {"start": 1683, "end": 1975, "_node_type": "1"}, "relationships": {"1": "e43cf8afd55e48d9ee2ac61401f185adf905af4a", "2": "f7756a27-4b50-45d7-9cda-64e2dde51127"}}, "__type__": "1"}, "265688b6-0085-4521-9ed8-8701efb11e95": {"__data__": {"text": "---\ndescription: Rewards event entries table shows the entries for the rewards\n---\n\n# Rewards Event Entries\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.rewards_event_entries`\n\n| Field             | Type      | Description                                                |\n| ----------------- | --------- | ---------------------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded              |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded                      |\n| `POOL_NAME`       | text      | The pool name for the rewards                              |\n| `RUNE_E8`         | number    | The rune amount of the rewards for this pool at this block |\n", "doc_id": "265688b6-0085-4521-9ed8-8701efb11e95", "embedding": null, "doc_hash": "5c06e17381763f2027f093d24a0c1405570b5c0cdb23d5f51d6cdcdf1176c661", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/rewards-event-entries.md", "file_name": "rewards-event-entries.md"}, "node_info": {"start": 0, "end": 794, "_node_type": "1"}, "relationships": {"1": "0fcdd64eb9bed253d98dfd35bf9fd2c94eda243f"}}, "__type__": "1"}, "7e125326-ddf9-4623-b0c8-12dbdd6721ac": {"__data__": {"text": "---\ndescription: Rewards events table shows the rewards at each block id\n---\n\n# Rewards Events\n\n## Table Schema <a href=\"#table-schema\" id=\"table-schema\"></a>\n\n**table name:** `thorchain.rewards_events`\n\n| Field             | Type      | Description                                             |\n| ----------------- | --------- | ------------------------------------------------------- |\n| `BLOCK_ID`        | number    | The block number that this block was recorded           |\n| `BLOCK_TIMESTAMP` | timestamp | The timestamp this block was recorded                   |\n| `BOND_E8`         | number    | The rune amount of the bond for this pool at this block |\n", "doc_id": "7e125326-ddf9-4623-b0c8-12dbdd6721ac", "embedding": null, "doc_hash": "443093394df5b4e0e21ca2333e04fd615699abc4ea77aedc8221d9ae0cebe675", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/rewards-events.md", "file_name": "rewards-events.md"}, "node_info": {"start": 0, "end": 664, "_node_type": "1"}, "relationships": {"1": "77f2a9109b6466e7187dcae8e22f3c723e655893"}}, "__type__": "1"}, "9dcccb3a-27c1-459e-9a56-70cfcd18ea92": {"__data__": {"text": "---\ndescription: Swap event entries table shows the entries for the swaps\n---\n\n# Swap Events\n\n| Field                | Type   | Description                                                                     |\n| -------------------- | ------ | ------------------------------------------------------------------------------- |\n| `_FIVETRAN_ID`       | text   | A unique identifier for the swap event                                          |\n| `TO_ADDR`            | text   | The address we are swapping to                                                  |\n| `LIQ_FEE_IN_RUNE_E8` | number | The fee in RUNE (divide by 10^8 to get the decimal amount)                      |\n| `FROM_ADDR`          | text   | The address we are swapping from                                                |\n| `TO_ASSET`           | text   | The asset we are swapping to                                                    |\n| `FROM_ASSET`         | text   | The asset we are swapping from                                                  |\n| `SWAP_SLIP_BP`       | number | The slippage                                                                    |\n| `BLOCK_TIMESTAMP`    | number | The timestamp of when the block was created                                     |\n| `LIQ_FEE_E8`         | number | The fee (divide by 10^8 to get the decimal amount)                              |\n| `CHAIN`              | text   | The chain we are interacting with                                               |\n| `TO_E8`              | number | The asset amount we are swapping for (divide by 10^8 to get the decimal amount) |\n| `POOL`               | text   | The name of the pool            ", "doc_id": "9dcccb3a-27c1-459e-9a56-70cfcd18ea92", "embedding": null, "doc_hash": "cd15831ab4f46105b05eaf9341122b2e6e6496780b9730558fc696ee3ab220e1", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/swap-events.md", "file_name": "swap-events.md"}, "node_info": {"start": 0, "end": 1668, "_node_type": "1"}, "relationships": {"1": "e3cc832d6fe2f756d67f235c591d63fa9b607037", "3": "513c4136-b633-4e86-a9c7-ec939670f48f"}}, "__type__": "1"}, "513c4136-b633-4e86-a9c7-ec939670f48f": {"__data__": {"text": "  | The name of the pool                                                            |\n| `TX`                 | text   | The transaction ID of the swap                                                  |\n| `MEMO`               | text   | The transaction memo                                                            |\n| `TO_E8_MIN`          | number | The minimum amount the swapper will receive                                     |\n| `FROM_E8`            | number | The amount we are swapping from                                                 |\n\n", "doc_id": "513c4136-b633-4e86-a9c7-ec939670f48f", "embedding": null, "doc_hash": "5e59bb33bea83a1d141d773935420b08693de8ff500cb899b2b5f606fdff3bf0", "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/swap-events.md", "file_name": "swap-events.md"}, "node_info": {"start": 1632, "end": 2183, "_node_type": "1"}, "relationships": {"1": "e3cc832d6fe2f756d67f235c591d63fa9b607037", "2": "9dcccb3a-27c1-459e-9a56-70cfcd18ea92"}}, "__type__": "1"}, "e1b07707-e6c4-4c6b-88a6-8af5498aa8f4": {"__data__": {"text": "---\ndescription: '[Legacy Documentation, Not Maintained, For Reference Only]'\n---\n\n# Uniswap V3 Tables\n\n**Blockchain:** [Ethereum](https://ethereum.org/en/)\n\nUniswapV3 tables are available in Velocity as the `uniswapv3` schema. These tables are built leveraging Ethereum logs, traces, and contract readings from Flipside's fully archival Ethereum cluster. Each table covers a core V3 concept.&#x20;\n\nThe public Github repo with Uniswap V3 model source code is [here](https://github.com/FlipsideCrypto/sql\\_models/tree/main/models/uniswapv3/eth\\_mainnet).\n\n### Tables\n\n![](<../../../../.gitbook/assets/Uniswap V3 - Copy of uniswapv3 silver\\_tables.png>)\n\n{% content-ref url=\"pools.md\" %}\n[pools.md](pools.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"pool-stats.md\" %}\n[pool-stats.md](pool-stats.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"positions.md\" %}\n[positions.md](positions.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"lp-actions.md\" %}\n[lp-actions.md](lp-actions.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"../polygon-tables/position-collected-fees.md\" %}\n[position-collected-fees.md](../polygon-tables/position-collected-fees.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"../polygon-tables/swaps.md\" %}\n[swaps.md](../polygon-tables/swaps.md)\n{% endcontent-ref %}\n\n\n\n### **General Table Notes:**\n\n* The suffix `_adjusted` on a column name indicates it was decimal adjusted by its underlying token pair.\n* `price_1_0`is equivalent to `price` and indicates the price of token1 in terms of token0\n* `price_0_1`is equivalent to `1/price` and indicates the price of token0 in terms of token1\n\n", "doc_id": "e1b07707-e6c4-4c6b-88a6-8af5498aa8f4", "embedding": null, "doc_hash": "58d3af3370b7a3e3e284714f9ab4165656b46c74daf45eeb2d0d5dbb8a1c3d2c", "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 1601, "_node_type": "1"}, "relationships": {"1": "68c63d9875ad39ea5768143ba31c64c6e0e1da80"}}, "__type__": "1"}, "e89acb5a-5fc3-4159-91ea-b38334f32acc": {"__data__": {"text": "---\ndescription: uniswapv3.lp_actions\n---\n\n# LP Actions\n\nUse this table to track increases and decreases to positions by liquidity providers (LPs) over time. Whenever a Pool `Burn` or `Mint` event is triggered on a position a record is appended to this table.\n\n<table data-header-hidden><thead><tr><th width=\"227.33333333333331\">Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>Field</td><td>Type</td><td>Description</td></tr><tr><td><code>block_id</code></td><td>number</td><td>The block number that this lp action was recorded</td></tr><tr><td><code>block_timestamp</code></td><td>timestamp</td><td>The block timestamp that this lp action was recorded</td></tr><tr><td><code>tx_id</code></td><td>text</td><td>The transaction that contained this lp action</td></tr><tr><td><code>blockchain</code></td><td>text</td><td>The blockchain this lp action was created on (Ethereum, will support L2s here shortly)</td></tr><tr><td><code>pool_address</code></td><td>address</td><td>The contract address of the pool</td></tr><tr><td><code>pool_name</code></td><td>text</td><td>The name of the Pool (format = \"{token0}-{token1} {tick_spacing} {fee}\")</td></tr><tr><td><code>action</code></td><td>text</td><td>The type of lp action, either <code>INCREASE_LIQUIDITY</code> (mint) or <code>DECREASE_LIQUIDITY</code> (burn)</td></tr><tr><td><code>liquidity_adjusted</code></td><td>number</td><td>The amount of liquidity to mint or burn, decimal adjusted.</td></tr><tr><td><code>liquidity_provider</code></td><td>address</td><td>The address of the liquidity provider</td></tr><tr><td><code>nf_position_manager_address</code></td><td>address</td><td>The address of the peripheral nf position manager contract, if used. </td></tr><tr><td><code>nf_token_id</code></td><td>number</td><td>The id of the NFT associated with the liquidity position</td></tr><tr><td><code>price_lower_0_1</code></td><td>number</td><td>Lower bound of the liquidity position represented as token 0 per token 1</td></tr><tr><td><code>price_upper_0_1</code></td><td>number</td><td>Upper bound of the liquidity position represented as token 0 per token 1</td></tr><tr><td><code>price_lower_0_1_usd</code></td><td>number</td><td>Lower bound of the liquidity position represented as token 0 per token 1, converted to USD</td></tr><tr><td><code>price_upper_0_1_usd</code></td><td>number</td><td>Upper bound of the liquidity position represented as token 0 per token 1, converted to USD</td></tr><tr><td><code>price_lower_1_0</code></td><td>number</td><td>Lower bound of the liquidity position represented as token 1 per token 0</td></tr><tr><td><code>price_upper_1_0</code></td><td>number</td><td>Upper bound of the liquidity position represented as token 1 per token 0</td></tr><tr><td><code>price_lower_1_0_usd</code></td><td>number</td><td>Lower bound of the liquidity position represented as token 1 per token 0, converted to", "doc_id": "e89acb5a-5fc3-4159-91ea-b38334f32acc", "embedding": null, "doc_hash": "a885b584ba9cf02611221e295ca84ac6e58820a25f2db5219a2c65de2154bbd1", "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/lp-actions.md", "file_name": "lp-actions.md"}, "node_info": {"start": 0, "end": 2902, "_node_type": "1"}, "relationships": {"1": "e41f7879d9748908dd4d9bab1a1b235b26041bdc", "3": "bb28bb83-152d-489a-a2d8-1e13d868e9b1"}}, "__type__": "1"}, "bb28bb83-152d-489a-a2d8-1e13d868e9b1": {"__data__": {"text": "bound of the liquidity position represented as token 1 per token 0, converted to USD</td></tr><tr><td><code>price_upper_1_0_usd</code></td><td>number</td><td>Upper bound of the liquidity position represented as token 1 per token 0, converted to USD</td></tr><tr><td><code>tick_lower</code></td><td>number</td><td>Lower tick of the liquidity position</td></tr><tr><td><code>tick_upper</code></td><td>number</td><td>Upper tick of the liquidity position</td></tr><tr><td><code>token_0_address</code></td><td>address</td><td>Contract address of token 0</td></tr><tr><td><code>token_0_symbol</code></td><td>text</td><td>Symbol of token 0</td></tr><tr><td><code>token_1_address</code></td><td>address</td><td>Contract address of token 1</td></tr><tr><td><code>token_1_symbol</code></td><td>text</td><td>Symbol of token 1</td></tr></tbody></table>\n", "doc_id": "bb28bb83-152d-489a-a2d8-1e13d868e9b1", "embedding": null, "doc_hash": "c6d88e9bbe422b924429cf94db0ba00d3a1f3b18f52fc6c4c1bc9cfeebb4b9f1", "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/lp-actions.md", "file_name": "lp-actions.md"}, "node_info": {"start": 2822, "end": 3663, "_node_type": "1"}, "relationships": {"1": "e41f7879d9748908dd4d9bab1a1b235b26041bdc", "2": "e89acb5a-5fc3-4159-91ea-b38334f32acc"}}, "__type__": "1"}, "5806b011-c870-4b63-994d-171b1e9fc170": {"__data__": {"text": "---\ndescription: uniswapv3.pool_stats\n---\n\n# Pool Stats\n\nStatistics for each pool, appened each time a transaction triggers a Pool Event (i.e. 'Initialize', 'Mint', 'Collect', 'Burn', 'Swap', 'Flash', 'IncreaseObservationCardinalityNext', 'SetFeeProtocol', 'CollectProtocol', etc.).&#x20;\n\n**A new record is appended each time this occurs.** These stats are read from the Pool contract state leveraging Flipside's fully archival Ethereum cluster.\n\n| Field                              | Type      | Description                                                                                                 |\n| ---------------------------------- | --------- | ----------------------------------------------------------------------------------------------------------- |\n| `block_id`                         | number    | The block number at which stats computed/read.                                                              |\n| `block_timestamp`                  | timestamp | The block timestamp at which stats were computed/read.                                                      |\n| `blockchain`                       | string    | The blockchain this pool was created on (Ethereum, will support L2s here shortly)                           |\n| `pool_address`                     | address   | The contract address of the pool                                                                            |\n| `pool_name`                        | string    | The name of the pool                                                                                        |\n| `price_0_1`                        | number    | The price of token 0 in terms of token 1                                                                    |\n| `price_1_0`                        | number    | The price of token 1 in terms of token 0   ", "doc_id": "5806b011-c870-4b63-994d-171b1e9fc170", "embedding": null, "doc_hash": "69541d5b6f135abe55dcc296c715baa83db57b55929e1baeb101b454b124c77d", "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/pool-stats.md", "file_name": "pool-stats.md"}, "node_info": {"start": 0, "end": 1830, "_node_type": "1"}, "relationships": {"1": "fd05d5a63ecdadbba8e6b09198b1606ee575c9b8", "3": "c190c342-7a8a-4f4d-b17a-d2d8df1d3a7f"}}, "__type__": "1"}, "c190c342-7a8a-4f4d-b17a-d2d8df1d3a7f": {"__data__": {"text": " | number    | The price of token 1 in terms of token 0                                                                    |\n| `tick`                             | number    | The tick of the pool according to the last tick transitions that was run                                    |\n| `protocol_fees_token_0_adjusted`   | number    | The amount of token0 owed to the protocol, decimal adjusted                                                 |\n| `protocol_fees_token_1_adjusted`   | number    | The amount of token1 owed to the protocol, decimal adjusted                                                 |\n| `token0_address`                   | address   | The contract address of token0                                                                              |\n| `token1_address`                   | address   | The contract address of token1                                                                              |\n| `token0_symbol`                    | text      | The symbol of token0                                                                                        |\n| `token1_symbol`                    | text      | The symbol of token1                                                                                        |\n| `token_0_balance`                  | number    | The balance of token0 locked in the pool contract as of this block                                          |\n| `token_1_balance`                  | number    | The balance of token1 locked in the pool contract as of this block            ", "doc_id": "c190c342-7a8a-4f4d-b17a-d2d8df1d3a7f", "embedding": null, "doc_hash": "35ed5f1fa147bc6695335edd287ce7343af90fe0f3c8e7d399cd7ae7ac4bab66", "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/pool-stats.md", "file_name": "pool-stats.md"}, "node_info": {"start": 1792, "end": 3334, "_node_type": "1"}, "relationships": {"1": "fd05d5a63ecdadbba8e6b09198b1606ee575c9b8", "2": "5806b011-c870-4b63-994d-171b1e9fc170", "3": "3d2b90ae-681c-4722-9014-1c83afa9fdfc"}}, "__type__": "1"}, "3d2b90ae-681c-4722-9014-1c83afa9fdfc": {"__data__": {"text": "in the pool contract as of this block                                          |\n| `token_0_balance_adjusted`         | number    | The balance of token0 locked in the pool contract as of this block, decimal adjusted                        |\n| `token_1_balance_adjusted`         | number    | The balance of token1 locked in the pool contract as of this block, decimal adjusted                        |\n| `unlocked`                         | boolean   | Whether the pool is currently locked to reentrancy                                                          |\n| `virtual_liquidity_adjusted`       | number    | The virtual liquidity of the pool                                                                           |\n| `virtual_reserves_token0_adjusted` | number    | The virtual reserves of token0, decimal adjusted, in the pool                                               |\n| `virtual_reserves_token1_adjusted` | number    | The virtual reserves of token1, decimal adjusted, in the pool.                                              |\n| `virtual_reserves_token0_usd`      | number    | The virtual reserves of token0, converted to USD.                                                           |\n| `virtual_reserves_token1_usd`      | number    | The virtual reserves of token1 converted to USD.                                                            |\n| `fee_growth_global0_x128`          | number    | The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool |\n| `fee_growth_global1_x128`          | number    | The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool |\n", "doc_id": "3d2b90ae-681c-4722-9014-1c83afa9fdfc", "embedding": null, "doc_hash": "ab5e228cc3f66e7125244c4982bda31525ec778785e104b2eaca50a6ddae7083", "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/pool-stats.md", "file_name": "pool-stats.md"}, "node_info": {"start": 3324, "end": 5015, "_node_type": "1"}, "relationships": {"1": "fd05d5a63ecdadbba8e6b09198b1606ee575c9b8", "2": "c190c342-7a8a-4f4d-b17a-d2d8df1d3a7f"}}, "__type__": "1"}, "7bfa9481-e849-459a-8e7c-77e46bcad072": {"__data__": {"text": "---\ndescription: uniswapv3.pools\n---\n\n# Pools\n\nPool records are appended to this table whenever a `PoolCreated` event is emitted by the UniswapV3 Factory Contract.\n\n| Field             | Type      | Description                                                                       |\n| ----------------- | --------- | --------------------------------------------------------------------------------- |\n| `block_id`        | number    | The block number that this Pool record was created at                             |\n| `block_timestamp` | timestamp | The block timestamp that this Pool record was created at                          |\n| `tx_id`           | text      | The transaction that this Pool was created at                                     |\n| `blockchain`      | text      | The blockchain this Pool was created on (Ethereum, will support L2s here shortly) |\n| `factory_address` | address   | The address of the UniswapV3 factory that initialized this Pool                   |\n| `fee_percent`     | number    | The fee expressed as a decimal percentage                                         |\n| `init_price_1_0`  | number    | The initial price of the Pool (converted from sqrtPriceX96)                       |\n| `init_tick`       | number    | The initial tick of the Pool                                                      |\n| `pool_address`    | address   | The address of the Pool                                                           |\n| `pool_name`       | text      | The name of the Pool (format = \"token0-token1 fee tick\\_spacing\")                 |\n| `tick_spacing`    | number    | The minimum number of ticks allowed between each tick.                            |\n| `token0_address`  | address   | The contract address of token0                                                    |\n| `token0_decimals` | number    | The number of decimals for token0 (used for decimal adjustments)                  |\n| `token0_name`     | text      | The name of token0            ", "doc_id": "7bfa9481-e849-459a-8e7c-77e46bcad072", "embedding": null, "doc_hash": "0cad0154dbe6bc3e0524fa07863624499d94813e27a35cbe97b3fff994a8c445", "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/pools.md", "file_name": "pools.md"}, "node_info": {"start": 0, "end": 1999, "_node_type": "1"}, "relationships": {"1": "ab95f1de2e2de93eac2ad423619f72ae773278a2", "3": "c301d2e8-a235-4850-9e9f-8864edd9d679"}}, "__type__": "1"}, "c301d2e8-a235-4850-9e9f-8864edd9d679": {"__data__": {"text": "  | The name of token0                                                                |\n| `token0_symbol`   | text      | The symbol of token0                                                              |\n| `token1_address`  | address   | The contract address of token1                                                    |\n| `token1_decimals` | number    | The number of decimals for token1 (used for decimal adjustments)                  |\n| `token1_name`     | text      | The name of token1                                                                |\n| `token1_symbol`   | text      | The symbol of token1                                                              |\n\n", "doc_id": "c301d2e8-a235-4850-9e9f-8864edd9d679", "embedding": null, "doc_hash": "9c0f148a20d110762ca30f3c584b323e71cca266b6a02b6ee98818af8d135d6a", "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/pools.md", "file_name": "pools.md"}, "node_info": {"start": 1965, "end": 2644, "_node_type": "1"}, "relationships": {"1": "ab95f1de2e2de93eac2ad423619f72ae773278a2", "2": "7bfa9481-e849-459a-8e7c-77e46bcad072"}}, "__type__": "1"}, "3157cd8b-7a9d-45e6-874d-81500471fdfb": {"__data__": {"text": "---\ndescription: uniswapv3.positions\n---\n\n# Positions\n\nPositions opened by liquidity providers at a specific tick range (tick\\_lower_,_ tick\\_upper). Whenever an event is emitted related to a position a new record is added to this table with the latest state of the position.\n\n| Field                          | Type      | Description                                                                                         |\n| ------------------------------ | --------- | --------------------------------------------------------------------------------------------------- |\n| `block_id`                     | number    | The block number that this position's state was recorded                                            |\n| `block_timestamp`              | timestamp | The block timestamp that this position's state was recorded                                         |\n| `tx_id`                        | text      | The transaction that triggered this position's state to be recorded                                 |\n| `blockchain`                   | text      | The blockchain this position was created on (Ethereum, will support L2s here shortly)               |\n| `pool_address`                 | address   | the contract address of the pool                                                                    |\n| `pool_name`                    | text      | The name of the Pool (format = \"{token0}-{token1} {tick\\_spacing} {fee}\")                           |\n| `is_active`                    | boolean   | Is the position currently active? When a position is closed this is set to false.                   |\n| `liquidity_adjusted`           | number    | The liquidity of the position, decimal adjusted.                                                    |\n| `liquidity_provider`           | address   | The address of the LP                                                                               |\n|", "doc_id": "3157cd8b-7a9d-45e6-874d-81500471fdfb", "embedding": null, "doc_hash": "f66bee7a50fd86566b8c795caa4d4411408417c786fd6119208111faaec44e51", "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/positions.md", "file_name": "positions.md"}, "node_info": {"start": 0, "end": 1917, "_node_type": "1"}, "relationships": {"1": "a3022e826e483cd8837a733acecfd14d2da379e8", "3": "3073d8d8-9797-4990-8a30-bcfad05b0822"}}, "__type__": "1"}, "3073d8d8-9797-4990-8a30-bcfad05b0822": {"__data__": {"text": "                 |\n| `nf_position_manager_address`  | address   | The address of the peripheral nf position manager contract, if used.                                |\n| `nf_token_id`                  | number    | The id of the NFT associated with the liquidity position                                            |\n| `price_lower_0_1`              | number    | Lower bound of the liquidity position represented as token 0 per token 1                            |\n| `price_upper_0_1`              | number    | Upper bound of the liquidity position represented as token 0 per token 1                            |\n| `price_lower_0_1_usd`          | number    | Lower bound of the liquidity position represented as token 0 per token 1, converted to USD          |\n| `price_upper_0_1_usd`          | number    | Upper bound of the liquidity position represented as token 0 per token 1, converted to USD          |\n| `price_lower_1_0`              | number    | Lower bound of the liquidity position represented as token 1 per token 0                            |\n| `price_upper_1_0`              | number    | Upper bound of the liquidity position represented as token 1 per token 0                            |\n| `price_lower_1_0_usd`          | number    | Lower bound of the liquidity position represented as token 1 per token 0, converted to USD          |\n| `price_upper_1_0_usd`          | number    | Upper bound of the liquidity position represented as token 1 per token 0, converted to USD          |\n| `tick_lower`                   | number    | Lower tick of the liquidity position                                                                |\n| `tick_upper`                   | number    | Upper tick of the liquidity position                                                                |\n| `token_0_address`              | address   | Contract address of token 0                                                    ", "doc_id": "3073d8d8-9797-4990-8a30-bcfad05b0822", "embedding": null, "doc_hash": "26493bc24698b68f8442e3d9e5f252aced4732e9fad690babcf9a3b17d4b3a10", "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/positions.md", "file_name": "positions.md"}, "node_info": {"start": 1915, "end": 3848, "_node_type": "1"}, "relationships": {"1": "a3022e826e483cd8837a733acecfd14d2da379e8", "2": "3157cd8b-7a9d-45e6-874d-81500471fdfb", "3": "9aa21791-9e21-4b52-9daf-2ab871cfd8ff"}}, "__type__": "1"}, "9aa21791-9e21-4b52-9daf-2ab871cfd8ff": {"__data__": {"text": "                                        |\n| `token_0_symbol`               | text      | Symbol of token 0                                                                                   |\n| `token_1_address`              | address   | Contract address of token 1                                                                         |\n| `token_1_symbol`               | text      | Symbol of token 1                                                                                   |\n| `tokens_owed0_adjusted`        | number    | The uncollected amount of token0 owed to the position as of the last computation.                   |\n| `tokens_owed1_adjusted`        | number    | The uncollected amount of token1 owed to the position as of the last computation                    |\n| `tokens_owed0_usd`             | number    | The uncollected amount of token0 owed to the position as of the last computation, converted to USD. |\n| `tokens_owed1_usd`             | number    | The uncollected amount of token1 owed to the position as of the last computation, converted to USD  |\n| `fee_growth_inside0_last_x128` | number    | The fee growth of token0 as of the last action on the individual position.                          |\n| `fee_growth_inside1_last_x128` | number    | The fee growth of token1 as of the last action on the individual position.                          |\n", "doc_id": "9aa21791-9e21-4b52-9daf-2ab871cfd8ff", "embedding": null, "doc_hash": "470dfc959c29d0fbb53262b2d7113d38828c976dac8088d5c23a1c9e8dab8061", "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/positions.md", "file_name": "positions.md"}, "node_info": {"start": 3832, "end": 5215, "_node_type": "1"}, "relationships": {"1": "a3022e826e483cd8837a733acecfd14d2da379e8", "2": "3073d8d8-9797-4990-8a30-bcfad05b0822"}}, "__type__": "1"}, "c5600297-18c9-4a17-86d9-8bff93698c75": {"__data__": {"text": "# Contract Decoding & ABIs\n\n### Adding a contract for decoding <a href=\"#adding-a-contract-for-decoding\" id=\"adding-a-contract-for-decoding\"></a>\n\nTo add a contract for decoding, please visit [here](https://science.flipsidecrypto.xyz/abi-requestor/).\n\nAssuming the submitted ABI is valid, records will be decoded within 24 hours. If records are not decoded within 24 hours, or for any ABI updates, please submit a ticket within our Discord.\n\n#### General Process Overview <a href=\"#general-process-overview\" id=\"general-process-overview\"></a>\n\nThe majority of our ABIs have been sourced from Etherscan, and we are constantly asking Etherscan for new ABIs. However, this is not comprehensive, and therefore we must also rely on our users to submit ABIs for decoding. If we are unable to locate an ABI for the contract from either Etherscan or our users, we will attempt to match the contract to a similar ABI. This is done by comparing the contract bytecode to a list of known contract bytecodes. If we are able to match the contract to a similar ABI, we will decode the contract using the similar ABI. You can see the source of each ABI in the `dim_contract_abis` table within the `abi_source` column.\n\nOnce ABIs have been verified, events within the last day of blocks will be decoded within approximately 90 minutes. Events older than 1 day will be decoded within 24 hours in the majority of cases. The exception here is if the contract has a massive number of events, in which case it may take longer.\n", "doc_id": "c5600297-18c9-4a17-86d9-8bff93698c75", "embedding": null, "doc_hash": "8c2bc8550d9dd9277f1beba17fd2a86cedf56d4caa5a9162fca806a3fe7e1f7c", "extra_info": {"file_path": "our-data/contract-decoding-and-abis.md", "file_name": "contract-decoding-and-abis.md"}, "node_info": {"start": 0, "end": 1505, "_node_type": "1"}, "relationships": {"1": "c9edd2307625a65fdd81053b9a50307130046df1"}}, "__type__": "1"}, "20db7f4a-f670-42bf-9670-5d950bb284db": {"__data__": {"text": "---\ndescription: >-\n  How we design our data structures for accessibility and performance using the\n  Star Schema approach.\n---\n\n# Data Modeling Approach\n\n### Our Data Modeling Approach\n\nFlipside models on-chain data around a common set of principles known as the [star schema](https://en.wikipedia.org/wiki/Star\\_schema), an industry-standard model for relational data warehouses.&#x20;\n\nA star schema is a data modeling technique commonly used in data warehousing and business intelligence to organize and represent data in a way that is easily accessible and understandable for end-users. The schema consists of a central fact table surrounded by dimension tables that provide additional context to the data in the fact table. The star schema design helps users quickly and easily analyze data by:\n\n* reducing the complexity of the data structure\n* enabling clear and meaningful data visualization\n* improving query performance\n\nThis approach requires modelers to classify their tables as either **dimension** or **fact** tables.\n\n_**Fact tables**_ store observations or events, and can be blocks, transactions, mints, swaps, etc. If you were modeling sales for a restaurant chain, for example, each sale might be represented by a row in a fact table.\n\n_**Dimension (\"dim\") tables**_ describe entities\u2014the things you analyze. Entities can include labels, prices, decimals, tags, etc. Extending the restaurant metaphor: if each individual sale is a fact, then which restaurant the sale occurred in would be a dimension, describing that fact.\n\nThe key here is that:\n\n* _**Facts**_ support summarization (\"what is the total number of sales?\")\n* _**Dimensions**_ support filtering and grouping (\"what are the sales totals grouped by restaurant?\")\n\nThis kind of schema design is incredibly popular, and we see it as a key part of our strategy to provide the most accessible and performant blockchain data possible.\n", "doc_id": "20db7f4a-f670-42bf-9670-5d950bb284db", "embedding": null, "doc_hash": "c841c7c97ed48a7d7a08054508648410287aecc9cd1b1a2a4ec565f3f1539505", "extra_info": {"file_path": "our-data/data-models.md", "file_name": "data-models.md"}, "node_info": {"start": 0, "end": 1913, "_node_type": "1"}, "relationships": {"1": "42fdcccccdeb0f656fb0f92ca51531584d074c7c"}}, "__type__": "1"}, "49774169-84b3-4f84-a6d3-01e4fcf41e7f": {"__data__": {"text": "---\ndescription: Looking for specific database, schema, and table details? Look no further.\n---\n\n# Data Table Documentation\n\nOur data documentation is kept up to date _as changes are deployed_, so check here for the very latest details on each of our covered chains:\n\n* [Arbitrum](https://flipsidecrypto.github.io/arbitrum-models/#!/overview)\n* [Avalanche](https://flipsidecrypto.github.io/avalanche-models/#!/overview)\n* [Axelar](https://flipsidecrypto.github.io/axelar-models/#!/overview) \u00a0\n* [Binance Smart Chain](https://flipsidecrypto.github.io/bsc-models/#!/overview)\n* [Cosmos](https://flipsidecrypto.github.io/cosmos-models/#!/overview)&#x20;\n* Crosschain Data\n* [Ethereum](https://flipsidecrypto.github.io/ethereum-models/#!/overview)\n* [Evmos](https://flipsidecrypto.github.io/evmos-models/#!/overview)\n* [Flow](https://flipsidecrypto.github.io/flow-models/#!/overview)&#x20;\n* [Gnosis](https://flipsidecrypto.github.io/gnosis-models/#!/overview)\n* [Near](https://flipsidecrypto.github.io/near-models/#!/overview) \u00a0\n* [Optimism](https://flipsidecrypto.github.io/optimism-models/#!/overview)\n* [Osmosis](https://flipsidecrypto.github.io/osmosis-models/#!/overview)&#x20;\n* [Polygon](https://flipsidecrypto.github.io/polygon-models/#!/overview)\n* [Solana](https://flipsidecrypto.github.io/solana-models/#!/overview) &#x20;\n* [Terra](https://metricsdao.github.io/terra\\_dbt/#!/overview)&#x20;\n* Thorchain\n\n", "doc_id": "49774169-84b3-4f84-a6d3-01e4fcf41e7f", "embedding": null, "doc_hash": "3f0bcbb0555322d55240cfce2a6add16a7908c3b563e8896f0fd1d2d97c2f4c0", "extra_info": {"file_path": "our-data/data-table-documentation.md", "file_name": "data-table-documentation.md"}, "node_info": {"start": 0, "end": 1413, "_node_type": "1"}, "relationships": {"1": "79ea47c234c09e057332f386000becf3689cb53e"}}, "__type__": "1"}, "c1d6468e-8729-4789-a734-62673ffe9181": {"__data__": {"text": "---\ndescription: >-\n  Want to see what interesting addresses are up to? Have a list of addresses you\n  want to analyze without pasting them into your where clause? Tags are for you.\n---\n\n# Tags\n\nTags can be specific and provable, e.g. \"OpenSea user\", or simply a tool to group addresses and clean up your code. Your tags. Your rules.&#x20;\n\nCheck back often as our list of tags is constantly being updated!&#x20;\n\n[`crosschain.core.address_tags` table docs](../archive/tables/crosschain-tables/crosschain-address-tags.md)\\\n&#x20;\\\nDon't see the perfect tag? [Add your own! ](how-to-add-your-own-tags.md#how-to-add-tags)\n\n\n\n## Table of Contents\n\n| Tag Type                                           |\n| -------------------------------------------------- |\n| [token standard](./#token-standard)                |\n| [contract](./#contract)                            |\n| [cex (centralized exchange)](./#cex)               |\n| [dex (decentralized exchange)](./#dex)             |\n| [nft](./#nft)                                      |\n| [activity (general behavior)](./#activity)         |\n| [wallet (token contents of an address)](./#wallet) |\n\n### Token Standard\n\nTag\\_type 'token standard' is a set of tags that define the token standard of an address!\n\n| tag\\_name      | description                           | blockchains |\n| -------------- | ------------------------------------- | ----------- |\n| erc-20         | An erc-20 address                     | ethereum    |\n| erc-721        | An erc-721 address                    | ethereum    |\n| erc-1155       | An erc-1151 address                   | ethereum    |\n| erc-4626       | An erc-4626 address                   | ethereum    |\n| erc-6551       | An erc-6551 address                   | ethereum    |\n| erc-6551 owner | A token address that owns an erc-6551 | ethereum    |\n\nWant to know the difference in behaviors of erc-721's vs. erc-1155's? Leveraging the 'token standard' tag\\_name will make this segmentation and subsequent analysis trivial!\n\nThe code below will find all erc-721s that are on Ethereum!&#x20;\n\n```sql\nselect \n  distinct address\nfrom crosschain.core.address_tags \nwhere \n    tag_type = 'token standard' \n    and tag_name = 'erc-721'\n    and creator = 'flipside'\n```\n\n### Contract\n\nTag\\_type 'contract' is a group of tags that call out contract addresses! \\\nContracts are discovered", "doc_id": "c1d6468e-8729-4789-a734-62673ffe9181", "embedding": null, "doc_hash": "0c70bff2ecfd26849a6cb1dc0e032ad2ced788ff95a1ad1a0186d1c422c61dc7", "extra_info": {"file_path": "our-data/featured-tags-and-sql-examples/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 2364, "_node_type": "1"}, "relationships": {"1": "81705d6a0e8a1cb4944b5cbd4b42bd68d2fe98d3", "3": "428dc21f-38ff-4705-9e51-cdcce14da1c4"}}, "__type__": "1"}, "428dc21f-38ff-4705-9e51-cdcce14da1c4": {"__data__": {"text": "is a group of tags that call out contract addresses! \\\nContracts are discovered by looking through the blockchain's logs and tagged for you!\\\n\n\n| tag\\_name           | description                               | blockchains |\n| ------------------- | ----------------------------------------- | ----------- |\n| contract address    | An address that is a contract             | Ethereum    |\n| gnosis safe address | An address that is a gnosis safe contract | Ethereum    |\n\nLeveraging the tag type 'contract' is a useful way to exclude contracts from your analysis, and only focus on externally owned addresses (EOAs). \\\nAdd the below code to a where statement within your analysis to ensure you are not pulling in any contracts!\n\n<pre class=\"language-sql\"><code class=\"lang-sql\"><strong>select \n</strong>  distinct address\nfrom crosschain.core.address_tags \nwhere \n    tag_type = 'contract' \n    and tag_name = 'contract address'\n    and creator = 'flipside'\n</code></pre>\n\n[back to top](./#table-of-contents)\n\n### CEX\n\nTag\\_type 'cex' is a group of tags pertaining to 'centralized exchanges' or 'cex' for short.&#x20;\n\n| tag\\_name        | description                                                                                     | blockchains |\n| ---------------- | ----------------------------------------------------------------------------------------------- | ----------- |\n| \\[cex name] user | Identifies an address that either sent or received funds from a particular centralized exchange | Ethereum    |\n\nCEX tags can be used to group addresses based on which centralized exchange they use. \\\nWant to know which centralized exchange has the most addresses interacting with it? See below for code to get an ordered list!\n\n```sql\nselect \n  tag_name, \n  count(distinct address) as num_addresses\nfrom crosschain.core.address_tags \nwhere \n    tag_type = 'cex' \n    and tag_name like '% user'\n    and creator = 'flipside'\ngroup by tag_name\norder by num_addresses desc\n```\n\n[back to top](./#table-of-contents)\n\n### DEX\n\nTag\\_type 'dex' is a group of tags for 'decentralized exchanges' or 'dex' for short.&#x20;\n\n| tag\\_name                     | description                                                    | blockchains                                                                         |\n| ----------------------------- | -------------------------------------------------------------- | ----------------------------------------------------------------------------------- |\n| thorchain dex user            | Identifies an address that has done a swap with thorchain      | bitcoin, bitcoin cash, bsc, cosmos, dogechain, Ethereum, litecoin, terra, thorchain |\n| thorchain liquidity provider  | Identifies an address that has provided liquidity to thorchain | bitcoin, bitcoin cash, bsc, cosmos, dogechain, Ethereum,", "doc_id": "428dc21f-38ff-4705-9e51-cdcce14da1c4", "embedding": null, "doc_hash": "18e593111984416c1a23371516f7a893bd2064695509a422ddbded854fd79d04", "extra_info": {"file_path": "our-data/featured-tags-and-sql-examples/README.md", "file_name": "README.md"}, "node_info": {"start": 2298, "end": 5128, "_node_type": "1"}, "relationships": {"1": "81705d6a0e8a1cb4944b5cbd4b42bd68d2fe98d3", "2": "c1d6468e-8729-4789-a734-62673ffe9181", "3": "6882259f-d5f1-4055-b0ba-210914dd2514"}}, "__type__": "1"}, "6882259f-d5f1-4055-b0ba-210914dd2514": {"__data__": {"text": "| bitcoin, bitcoin cash, bsc, cosmos, dogechain, Ethereum, litecoin, terra, thorchain |\n\nEver wondered what Ethereum addresses are providing liquidity to Thorchain? It has never been easier with the help of tags!:\n\n```sql\nselect \n  distinct address\nfrom crosschain.core.address_tags \nwhere \n    tag_type = 'dex' \n    and tag_name = 'thorchain liquidity provider'\n    and creator = 'flipside'\n    and blockchain = 'ethereum'\n```\n\n[back to top](./#table-of-contents)\n\n### NFT\n\nTag\\_type 'nft' is a group of tags pertaining to nft usage!\n\n| tag\\_name               | description                                                        | blockchains |\n| ----------------------- | ------------------------------------------------------------------ | ----------- |\n| \\[nft marketplace] user | Identifies addresses that use a particular nft marketplace         | Ethereum    |\n| nft transactor top 1%   | addresses that are in the top 1% of transactions involving an nft  | Ethereum    |\n| nft transactor top 5%   | addresses that are in the top 5% of transactions involving an nft  | Ethereum    |\n| nft transactor top 10%  | addresses that are in the top 10% of transactions involving an nft | Ethereum    |\n\nWant to know which marketplace has the most addresses interacting with it? Tags can help you with a simple query:\n\n```sql\nselect \n  tag_name, \n  count(distinct address) as num_addresses\nfrom crosschain.core.address_tags \nwhere \n    tag_type = 'nft' \n    and tag_name like '% user'\n    and creator = 'flipside'\ngroup by tag_name\norder by num_addresses desc\n```\n\n[back to top](./#table-of-contents)\n\n### Activity\n\nTag\\_type 'activity' is for tags that describe an address's activity. General tags that are not protocol specific!\n\n| tag\\_name                      | description                                                                                     | blockchains                                           |\n| ------------------------------ | ----------------------------------------------------------------------------------------------- | ----------------------------------------------------- |\n| active on \\[blockchain] last 7 | identifies an address that has sent at least 1 transaction on a blockchain in the last 7 days.  | Arbitrum, Avalanche, Bsc, Ethereum, Optimism, Polygon |\n\nThere are many use cases for an active tag! A simple one is to see what other EVM's an address is active on.\\\nHere is a query to see addresses that are active on both Ethereum and Arbitrum:\n\n<pre class=\"language-sql\"><code class=\"lang-sql\">with eth_addresses as (\nselect \n    distinct address \nfrom crosschain.core.address_tags \nwhere tag_name = 'active on ethereum last 7'\n<strong>    and creator = 'flipside'\n</strong>)\nselect \n  distinct address\nfrom crosschain.core.address_tags \nwhere \n    tag_name = 'active on arbitrum last", "doc_id": "6882259f-d5f1-4055-b0ba-210914dd2514", "embedding": null, "doc_hash": "fbaff272dcec72c73d0b06532ebf0be4141a04736ef9870dca61c77c8d94a64a", "extra_info": {"file_path": "our-data/featured-tags-and-sql-examples/README.md", "file_name": "README.md"}, "node_info": {"start": 5145, "end": 7974, "_node_type": "1"}, "relationships": {"1": "81705d6a0e8a1cb4944b5cbd4b42bd68d2fe98d3", "2": "428dc21f-38ff-4705-9e51-cdcce14da1c4", "3": "a0351c26-3890-4129-bb87-de34c4d72cdc"}}, "__type__": "1"}, "a0351c26-3890-4129-bb87-de34c4d72cdc": {"__data__": {"text": "\nwhere \n    tag_name = 'active on arbitrum last 7'\n    and address in (select distinct address from eth_addresses)\n    and creator = 'flipside'\n</code></pre>\n\n[back to top](./#table-of-contents)\n\n### Wallet\n\nTag\\_type 'wallet' is for tags pertaining to the token contents of an address.&#x20;\n\n| tag\\_name                        | description                                                                                                                 | blockchains |\n| -------------------------------- | --------------------------------------------------------------------------------------------------------------------------- | ----------- |\n| airdrop master                   | address is in the top 10% of airdrop recipients based on token value. Value of token is calculated at time of airdrop claim | Ethereum    |\n| eth billionaire                  | address has an ETH balance of at least $1,000,000,000                                                                       | Ethereum    |\n| eth millionaire                  | address has an ETH balance of at least $1,000,000                                                                           | Ethereum    |\n| eth top 1%                       | address has an ETH balance in the top 1% of all ETH holders                                                                 | Ethereum    |\n| optimism airdrop 1 recipient     | addresses that received the first optimism airdrop                                                                          | Optimism    |\n| optimism airdrop 2 recipient     | addresses that received the second optimism airdrop                                                                         | Optimism    |\n| token billionaire                | address has a non-eth token  balance of at least $1,000,000,000                                                             | Ethereum   ", "doc_id": "a0351c26-3890-4129-bb87-de34c4d72cdc", "embedding": null, "doc_hash": "7c6b15a75b443e8ace1876df0a831d82e2b9a8776e7d19dc79a1068a6532bb94", "extra_info": {"file_path": "our-data/featured-tags-and-sql-examples/README.md", "file_name": "README.md"}, "node_info": {"start": 7989, "end": 9873, "_node_type": "1"}, "relationships": {"1": "81705d6a0e8a1cb4944b5cbd4b42bd68d2fe98d3", "2": "6882259f-d5f1-4055-b0ba-210914dd2514", "3": "4c4b4a2e-990c-4218-8883-8f2075274816"}}, "__type__": "1"}, "4c4b4a2e-990c-4218-8883-8f2075274816": {"__data__": {"text": "              | Ethereum    |\n| token millionaire                | address has a non-eth token balance of at least $1,000,000                                                                  | Ethereum    |\n| token top 1%                     | address has a non-eth token balance in the top 1% of all non-eth token holders                                              | Ethereum    |\n| wallet billionaire               | address has a total wallet (ETH and token) balance of at least $1,000,000,000                                               | Ethereum    |\n| wallet millionaire               | address has a total wallet (ETH and token) balance of at least $1,000,000                                                   | Ethereum    |\n| wallet top 1%                    | address has a total wallet (ETH and token) balance in the top 1% of all addresses                                           | Ethereum    |\n| vested or locked token recipient | address has received vested/unlocked tokens from a protocol                                                                 | Ethereum    |\n\nUsing wallet type in combination with some other tags can yield more interesting results. For example, let look at what nft platforms wallet millionaires use:\n\n```sql\nwith wallet_millionaire as (\nselect \n    distinct address \nfrom crosschain.core.address_tags \nwhere tag_name = 'wallet millionaire'\n    and creator = 'flipside'\n)\nselect \n  tag_name, \n  count(distinct address) as num_addresses\nfrom crosschain.core.address_tags \nwhere \n    tag_type = 'nft'\n    and address in (select distinct address from wallet_millionaire)\n    and creator = 'flipside'\ngroup by tag_name\norder by num_addresses desc\n```\n\n[back to top](./#table-of-contents)\n\n###\n", "doc_id": "4c4b4a2e-990c-4218-8883-8f2075274816", "embedding": null, "doc_hash": "d865f7f033547b2b3341021bb0dedf6beafb0f240e90f12dbf939db5fe496559", "extra_info": {"file_path": "our-data/featured-tags-and-sql-examples/README.md", "file_name": "README.md"}, "node_info": {"start": 9883, "end": 11623, "_node_type": "1"}, "relationships": {"1": "81705d6a0e8a1cb4944b5cbd4b42bd68d2fe98d3", "2": "a0351c26-3890-4129-bb87-de34c4d72cdc"}}, "__type__": "1"}, "2e9bab57-5e3f-4000-b5d9-e790517f8c8b": {"__data__": {"text": "# How to Add Your Own Tags\n\nTags identify traits or behaviors that belong to an address.&#x20;\n\nFor a table of all tagged addresses see [the Crosschain schema](../archive/tables/crosschain-tables/crosschain-address-tags.md).&#x20;\n\nDo you often copy/paste lists of addresses into your queries? Tags are for you. Tags can be specific and provable, e.g. \"OpenSea user\", or simply a tool to group addresses and clean up your code.&#x20;\n\nYour tags. Your rules.&#x20;\n\n## How are tags different than labels?&#x20;\n\nTags are more unstructured and free-form than labels. An address's tags can be provable and durable, or subjective and temporary. An address can have as many tags as desired.&#x20;\n\nIn contrast labels serve as a \"source of truth\" for an address, and are used to label known addresses that are associated with a CEX, DEX, NFT project, liquidity pool, or other entity. An address can have only one label.&#x20;\n\n\n\n## What do our tags look like?\n\nOur tags use a 2-level hierarchy, just like our labels. \\\n\n\n| tag\\_type | <p>A high-level category describing the address' main function or ownership </p><p>(i.e. NFT)</p> |\n| --------- | ------------------------------------------------------------------------------------------------- |\n| tag\\_name | <p>A sub-category of tag_type providing further detail </p><p>(e.g. Moonbird Holder)</p>          |\n\n**Tags example:**\n\n| tag\\_type | tag\\_name     |\n| --------- | ------------- |\n| Celebrity | Steve Aoki    |\n| Celebrity | Mark Cuban    |\n| Celebrity | Justin Bieber |\n\nUsing tag_\\__type you can pull all celebrities tagged by the Flipside community, or use tag\\_name to pull a specific celebrity.\n\n## The tags table\n\nThe data for our tags is stored in the data table: [crosschain.core.address\\_tags](../archive/tables/crosschain-tables/crosschain-address-tags.md). \\\n\n\n| Column Name             | Data type | Description                                                                                                                                                                                                                         |\n| ----------------------- | --------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| blockchain              | string    | The blockchain that the address belongs to.                                                                                                                        ", "doc_id": "2e9bab57-5e3f-4000-b5d9-e790517f8c8b", "embedding": null, "doc_hash": "0382b0c73cb520d491d118592d2c619d9910cd0ef9886a70ccd3f96dbdcc6b7f", "extra_info": {"file_path": "our-data/featured-tags-and-sql-examples/how-to-add-your-own-tags.md", "file_name": "how-to-add-your-own-tags.md"}, "node_info": {"start": 0, "end": 2571, "_node_type": "1"}, "relationships": {"1": "732a721361ad62ac5f3a9fbc5bdd927cf971040f", "3": "ac7970c3-f6d0-4eaa-bab0-66315a30f96e"}}, "__type__": "1"}, "ac7970c3-f6d0-4eaa-bab0-66315a30f96e": {"__data__": {"text": "                                                                                    |\n| creator                 | string    | Who created the tag. Use your Flipside username, shown in your Flipside profile URL, for tags you create.                                                                                                                           |\n| address                 | string    | The address of the contract or wallet the tag describes.                                                                                                                                                                            |\n| tag\\_name               | string    | Tag name (sub-category)                                                                                                                                                                                                             |\n| tag\\_type               | string    | Tag type (high-level category)                                                                                                                                                                                                      |\n| start\\_date             | timestamp | Date the tag first applies. For tags that are", "doc_id": "ac7970c3-f6d0-4eaa-bab0-66315a30f96e", "embedding": null, "doc_hash": "68069efa31630759dd1187cb5b93609ef68b2b5e523e58621fc2fc11c5808d77", "extra_info": {"file_path": "our-data/featured-tags-and-sql-examples/how-to-add-your-own-tags.md", "file_name": "how-to-add-your-own-tags.md"}, "node_info": {"start": 2572, "end": 3823, "_node_type": "1"}, "relationships": {"1": "732a721361ad62ac5f3a9fbc5bdd927cf971040f", "2": "2e9bab57-5e3f-4000-b5d9-e790517f8c8b", "3": "7c4068d7-562b-4907-b442-184f9790a0f8"}}, "__type__": "1"}, "7c4068d7-562b-4907-b442-184f9790a0f8": {"__data__": {"text": "     | timestamp | Date the tag first applies. For tags that are permanent, this might be the date the address had its first behavior that warrants its tag, or the addresses' first transaction (e.g. if the tag identifies a celebrity NFT address). |\n| end\\_date               | timestamp | Date the tag no longer applies (for tags that are permanent or currently active, end\\_date can be NULL)                                                                                                                             |\n| **tag\\_created\\_at \\*** | timestamp | Timestamp for when the tag was inserted into our data.                                                                                                                                                                              |\n\n\\* tag\\_created\\_at is auto-generated by Flipside.\n\n## How to add tags\n\nThere are 3 ways to add tags to our data!\\\n\\\n**1. Add a SQL statement to our GitHub**\\\n\\\nYou can use a Flipside query to create a tag set that will run on a reoccurring basis. This is a very powerful and scalable way to create a dynamic tag set that can update regularly. \\\n\\\nPlease see our [Github](https://github.com/FlipsideCrypto/crosschain-models) for how to upload your tag set queries. \\\n\\\n**2. Add a DBT seed file to our GitHub**\\\n\\\nIf you have a static list of addresses that need a tag, a DBT seed file is the best route. This is the most efficient method to tag a list of addresses that will not change and don't rely on a SQL query. \\\n\\\nPlease see our [Github](https://github.com/FlipsideCrypto/crosschain-models) for how to upload your own DBT seed files.\\\n\\\n**3. I know what I want but I don't know how to tag**\\\n\\\nFlipside has a very active community and extraordinarily helpful employees. Reach out to the community, or to @gto, in Discord and someone will help you set up your tags.&#x20;\n\n\n\n## How to query tags\n\nIt's important to remember that a particular address can (and should) have multiple tags.&#x20;\n\n**BE CAREFUL WHEN JOINING TO THE TAGS TABLE, SO YOU DON'T DUPLICATE ROWS.**&#x20;\n\n\n\nA common use-case for tags is to exclude addresses that are contracts from an analysis. A query such as:\n\n```\nselect \n    address \nfrom crosschain.core.address_tags \nwhere tag_name = 'contract address' \nlimit 100\n```\n\nwill return a list of all addresses that are contracts.&#x20;\n\n\n\nAnother use-case is to find addresses that are active on multiple EVM's. For our example, lets say active on both Ethereum and Avalanche.", "doc_id": "7c4068d7-562b-4907-b442-184f9790a0f8", "embedding": null, "doc_hash": "b6730ad61c1e634fabf2573d6df04ae6db18505403cc1144ca33097035610bd3", "extra_info": {"file_path": "our-data/featured-tags-and-sql-examples/how-to-add-your-own-tags.md", "file_name": "how-to-add-your-own-tags.md"}, "node_info": {"start": 3776, "end": 6271, "_node_type": "1"}, "relationships": {"1": "732a721361ad62ac5f3a9fbc5bdd927cf971040f", "2": "ac7970c3-f6d0-4eaa-bab0-66315a30f96e", "3": "4725b319-e61f-4d04-9a51-b84ba7acba2b"}}, "__type__": "1"}, "4725b319-e61f-4d04-9a51-b84ba7acba2b": {"__data__": {"text": "EVM's. For our example, lets say active on both Ethereum and Avalanche. For this example a query such as:\n\n```\nselect \n    distinct address\nfrom crosschain.core.address_tags \nwhere tag_name in ('active on ethereum last 7', 'active on avalanche last 7') \nlimit 100\n```\n\nwill return a list of addresses that are active on both Ethereum and Avalanche. \\\n\\\n\\\nOur tags are augmented by our start\\_date and end\\_date fields, which allows you to see tags historically!\\\nA simple query like:\n\n```\nselect \n    distinct address\nfrom crosschain.core.address_tags \nwhere tag_name = 'active on ethereum last 7' \nlimit 100\n```\n\nwill return a list of addresses that were _ever_ active on Ethereum. \\\nA query such as:\n\n```\nselect \n    distinct address\nfrom crosschain.core.address_tags \nwhere tag_name = 'active on ethereum last 7' \nand end_date is null\nlimit 100\n```\n\nwill return a list of addresses that were active _in the last 7 days!_\\\nWe can also use the start and end dates to find addresses that were active in a date range! A query such as:\n\n```\nselect \n    distinct address\nfrom crosschain.core.address_tags \nwhere tag_name = 'active on ethereum last 7' \n    and start_date < '2021-07-01'\n    and (end_date >= '2021-06-01' or end_date is null)\nlimit 100\n```\n\nwill return a list of addresses that were active on Ethereum during June 2021.\n", "doc_id": "4725b319-e61f-4d04-9a51-b84ba7acba2b", "embedding": null, "doc_hash": "030bbc200977ca7c812fdbed0faef4f21670daa5bc76ef47b5dd18f94e3117af", "extra_info": {"file_path": "our-data/featured-tags-and-sql-examples/how-to-add-your-own-tags.md", "file_name": "how-to-add-your-own-tags.md"}, "node_info": {"start": 6248, "end": 7580, "_node_type": "1"}, "relationships": {"1": "732a721361ad62ac5f3a9fbc5bdd927cf971040f", "2": "7c4068d7-562b-4907-b442-184f9790a0f8"}}, "__type__": "1"}, "27fdddf4-6cd8-4dc6-bbeb-b4032b72f688": {"__data__": {"text": "---\ndescription: >-\n  A convenience function to convert hex values to integers, useful when working\n  with raw EVM event logs and transactions.\n---\n\n# Hex-to-Integer Function\n\n**Function name**: ethereum.public.udf\\_hex\\_to\\_int()\n\n\n\n**What is it used for**: converts hex values into integer\n\n\n\n**When to use**:&#x20;\n\nWhen working with raw event logs and data inside the fact\\_transactions and fact\\_event\\_logs tables, you will encounter hexadecimal values, similar to what you find on Etherscan in the \u2018Input data\u2019 section or the \u2018Logs\u2019 section.\n\nOften you will want to convert these values into integers to get the decoded values. For example, in our Example 2 below, decoding the hex value gives us the NFT token ID. Note that you can use this function is relevant for any EVM data and is not limited to Ethereum data only.&#x20;\n\n\n\n**How to use**:\n\n**Example 1**\n\nSelect ethereum.public.udf\\_hex\\_to\\_int (\u20180000000000000000000000000000000000000000000000000000000000001ffb\u2019)\n\nThis would produce \u20188187\u2019 as the result. Note that removing the leading 0\u2019s, to just \u20181ffb\u2019 would also produce the same result.\n\n\n\n**Example 2**\n\nConsider this Etherscan transaction: https://etherscan.io/tx/0xfff5bcbefe615b3409f7c280445e2dc20785a0b5ac82bf465f1e031917bf88df\n\nIf we queried the input\\_data column for this transaction in the ethereum.core.fact\\_transactions table, we\u2019d get:&#x20;\n\n```\n0x5138b08c000000000000000000000000b932a70a57673d89f4acffbe830e8ed7f75fb9e00000000000000000000000000000000000000000000000000000000000001ffb\n```\n\nWe can rearrange the data above to what we see on Etherscan in the screenshot below:&#x20;\n\n0x5138b08c\\\n000000000000000000000000b932a70a57673d89f4acffbe830e8ed7f75fb9e0\\\n0000000000000000000000000000000000000000000000000000000000001ffb\n\n<figure><img src=\"../.gitbook/assets/Screenshot 2022-09-14 at 10.33.11 AM.png\" alt=\"\"><figcaption></figcaption></figure>\n\nWe can use the substr function to get the string that is associated with \u2018auctionId\u2019.\n\n```\nSelect \nsubstr(input_data, 75, 64) \nfrom ethereum.core.fact_transactions \n    where tx_hash = '0xfff5bcbefe615b3409f7c280445e2dc20785a0b5ac82bf465f1e031917bf88df'\n```\n\nAnd because it is an integer, we can use the hex to int function to convert it to an integer.\n\n```\nselect \nethereum.public.udf_hex_to_int( substr(input_data, 75, 64) ) \nfrom ethereum.core.fact_transactions \n    where tx_hash = '0xfff5bcbefe615b3409f7c280445e2dc20785a0b5ac82bf465f1e031917bf88df'\n```\n\nThis would result in 8187 which is consistent with using the decode button on Etherscan as shown in the screenshot below.\n\n<figure><img src=\"../.gitbook/assets/Screenshot 2022-09-14 at 10.33.24 AM.png\" alt=\"\"><figcaption></figcaption></figure>\n", "doc_id": "27fdddf4-6cd8-4dc6-bbeb-b4032b72f688", "embedding": null, "doc_hash": "f914f915f9d573612eb854e9c9a4750f68aa1e1a5ef21852a0ec1198cbcafff0", "extra_info": {"file_path": "our-data/hex-to-integer-function.md", "file_name": "hex-to-integer-function.md"}, "node_info": {"start": 0, "end": 2688, "_node_type": "1"}, "relationships": {"1": "c4c4bcbab636b1dd619f78fc1e5ce1ee83282903"}}, "__type__": "1"}, "da434633-0159-4d80-bb68-c28230bb5ed6": {"__data__": {"text": "---\ndescription: >-\n  Want to see what known entities like CEX, DEX, dApps, or NFT contracts are up\n  to? Labels can help!\n---\n\n# Labels\n\nLabels identify known addresses that are associated with a CEX, DEX, NFT project, liquidity pool, or other entity.&#x20;\n\nHow are labels different from tags? Labels are a \"source of truth\" added by Flipside core contributors across all chains. Each known address receives only one label. Not every address has a label.\n\n## Contribute to our labels\n\nTo contribute to our labels, go to our [label submission form](https://science.flipsidecrypto.xyz/add-a-label/) and follow the steps there to submit a label. We will review all submitted labels and add accurate labels to our tables. Be sure to add a discord handle so we can reach out to you if there are any questions!\n\n## Label Types\n\nThere are 10 label types within any blockchain.\n\n1. [**cex** (Centralized Exchange)](cex-label-type.md)\n2. [**dex** (Decentralized Exchange)](dex-label-type.md)\n3. [**operator** (Chain Operations)](operator-label-type.md)\n4. [**chadmin** (Chain Administration)](chadmin-label-type.md)\n5. [**defi** (Decentralized Finance Applications)](defi-label-type.md)\n6. [**nft** (NonFungible Token Contracts & Applications)](nft-label-type.md)\n7. [**layer2** (Layer 2 Dapps)](layer2-label-type.md)\n8. [**dapp** (Decentralized Applications)](other-label-type.md)\n9. [**token** (Token Contracts)](token-label-type.md)\n10. [**flotsam** (Junk or Other)](flotsam-label-type.md)\n\nSee [the Crosschain schema](../archive/tables/crosschain-tables/crosschain-address-labels.md) for the table containing all labeled addresses.&#x20;\n\nFlipside applies a 2-level hierarchy to all labeled addresses using 4 field attributes.&#x20;\n\n\n\n![](<../../.gitbook/assets/Velocity Documentation - Labels.png>)\n\n| creator               | Name of the creator of the label                                                                |\n| --------------------- | ----------------------------------------------------------------------------------------------- |\n| label\\_type           | A high-level category describing the addresses main function or ownership (e.g. exchange)       |\n| label\\_subtype        | A sub-category nested within label type providing further detail (e.g. exchange deposit wallet) |\n| project\\_name (label) | The name of the entity that controls the address (e.g. Binance).                                |\n| address\\_name         | A description of the use of the address by the controlling entity (e.g. Binance deposit wallet) |\n\nNote: on Event and Balance tables there is no need to join a secondary table to group or filter by label attributes .\n\n{% hint style=\"info\" %}\nEvents and Balance tables are automatically enriched with label columns corresponding to any column that contains an address type. The pattern for these columns names is: `{address_function}_{label_attribute}`\n{% endhint %}\n\nFor example, in an events table, the following", "doc_id": "da434633-0159-4d80-bb68-c28230bb5ed6", "embedding": null, "doc_hash": "e8e852997868741cac792d46152cd3dcbc435e635b46ebcf622446e6a2e94362", "extra_info": {"file_path": "our-data/labels/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 2958, "_node_type": "1"}, "relationships": {"1": "5a36a874d6a46505d4355f9430a68fa0f2410ca0", "3": "a5aa3428-01ff-41dd-a480-ed1fd3d7bebf"}}, "__type__": "1"}, "a5aa3428-01ff-41dd-a480-ed1fd3d7bebf": {"__data__": {"text": "endhint %}\n\nFor example, in an events table, the following columns would be present to account for labels on the `event_from` . These would also exist for `event_to`, `tx_from`,`tx_to`, etc.\n\n```\nevent_from_label_type\nevent_from_label_subtype\nevent_from_label\nevent_from_address_name\n```\n\n\n\n", "doc_id": "a5aa3428-01ff-41dd-a480-ed1fd3d7bebf", "embedding": null, "doc_hash": "81b1ec3895ad3f1ad1580fdc95e3a1687360e1a465de107790b16810eae76be4", "extra_info": {"file_path": "our-data/labels/README.md", "file_name": "README.md"}, "node_info": {"start": 2900, "end": 3191, "_node_type": "1"}, "relationships": {"1": "5a36a874d6a46505d4355f9430a68fa0f2410ca0", "2": "da434633-0159-4d80-bb68-c28230bb5ed6"}}, "__type__": "1"}, "17f10c9f-c4e2-44d7-adf8-ca09975fd2a3": {"__data__": {"text": "# Centralized Exchange Label Type\n\nCentralized Exchanges are referred to as `cex` in the Flipside label system.&#x20;\n\n`label_type` = `cex`\n\n### Label Subtypes\n\n| Subtype             | Description                                                                                                                                                         |\n| ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `hot_wallet`        | Centralized exchange hot wallets -- addresses that collect funds from deposit wallets, send withdrawals to customers, and hold the majority of the exchange\u2019s funds |\n| `deposit_wallet`    | Centralized exchange deposit wallets                                                                                                                                |\n| `cold_wallet`       | A wallet used to hold rarely used funds belonging to the exchange                                                                                                   |\n| `chadmin`           | A administration address belonging to the exchange                                                                                                                  |\n| `contract_deployer` | A contract belonging to the exchange that is used to create other contracts                                                                                         |\n| `general_contract`  | A general use contract belonging to the exchange                                                                                                                    |\n| `multisig`          | A general use multisig wallet", "doc_id": "17f10c9f-c4e2-44d7-adf8-ca09975fd2a3", "embedding": null, "doc_hash": "1dd175f91cdf80e492d9619d66d9af7ffd9b6be7dd2585d49bd816dd0afa4d09", "extra_info": {"file_path": "our-data/labels/cex-label-type.md", "file_name": "cex-label-type.md"}, "node_info": {"start": 0, "end": 1734, "_node_type": "1"}, "relationships": {"1": "039db0c06a94a50f8f4edc7d931ffa49b970435e", "3": "036b31d7-843a-4ca3-90bd-cb57528b2fde"}}, "__type__": "1"}, "036b31d7-843a-4ca3-90bd-cb57528b2fde": {"__data__": {"text": "         | A general use multisig wallet belonging to the exchange                                                                                                             |\n| `token_contract`    | Contract of a token owned by the exchange                                                                                                                           |\n\n", "doc_id": "036b31d7-843a-4ca3-90bd-cb57528b2fde", "embedding": null, "doc_hash": "6198dbe08947a77c30e7de79e5c2afc3cd6ebcf12ee81458ed00d445efc3a348", "extra_info": {"file_path": "our-data/labels/cex-label-type.md", "file_name": "cex-label-type.md"}, "node_info": {"start": 1694, "end": 2062, "_node_type": "1"}, "relationships": {"1": "039db0c06a94a50f8f4edc7d931ffa49b970435e", "2": "17f10c9f-c4e2-44d7-adf8-ca09975fd2a3"}}, "__type__": "1"}, "2edc2925-818e-4ce2-b065-d486bf9048da": {"__data__": {"text": "# Chain Admin Label Type\n\nAddresses that are used for administrative purposes on the blockchain, including chain-wide foundation addresses are labeled as `chadmin` .\u200c\n\n`label_type` = `chadmin`\n\n### Label Subtypes <a href=\"#label-subtypes\" id=\"label-subtypes\"></a>\n\n| Subtype            | Description                                                             |\n| ------------------ | ----------------------------------------------------------------------- |\n| `genesis`          | The mint or burn addresses of a chain (the all 0's address on Ethereum) |\n| `foundation`       | Addresses used by the chain foundation                                  |\n| `general_contract` | Other chadmin contracts                                                 |\n\n\u200b\n", "doc_id": "2edc2925-818e-4ce2-b065-d486bf9048da", "embedding": null, "doc_hash": "ff6af1da5ab57e948868317575e3a907f10bc9eead58f861525413fb3b5c71df", "extra_info": {"file_path": "our-data/labels/chadmin-label-type.md", "file_name": "chadmin-label-type.md"}, "node_info": {"start": 0, "end": 753, "_node_type": "1"}, "relationships": {"1": "1c80abef9fc5afafc57e1cffb1a05074f3ae33bf"}}, "__type__": "1"}, "cf79296c-0c2a-4448-a708-879b4504c44c": {"__data__": {"text": "# Decentralized Finance Label Type\n\nThe `defi` label type represents addresses used for minting.\n\n`label_type` = `defi`\n\n\n\n### Label Subtypes\n\n| Subtype             | Description                                                                      |\n| ------------------- | -------------------------------------------------------------------------------- |\n| `token_contract`    | Contract of a token belonging to the defi project                                |\n| `pool`              | Any type of pool address, i.e. farming, staking, liquidity etc.                  |\n| `vault`             | A vault controlled by the defi project                                           |\n| `fee_wallet`        | Wallet for fees collected by the defi project                                    |\n| `dao`               | An address controlling a DAO controlled by the defi project                      |\n| `voting`            | Address controlled by the defi project used for voting                           |\n| `chadmin`           | Addresses used for administrative purposes controlled by the defi project        |\n| `contract_deployer` | A contract controlled by the defi project that is used to create other contracts |\n| `treasury`          | Treasury addresses where the defi project has a treasury                         |\n| `governance`        | Governance addresses where the defi project has governance                       |\n| `rewards`           | Addresses used to distribute rewards                                             |\n| `oracle`            | A contract used as an oracle by the defi project                                 |\n| `token_sale`        | Addresses used in initial token sales and distributions                          |\n| `general_contract`  | A contract belonging to the defi project                                         |\n| `multisig`          | A multisig contract belonging to the defi project                                |\n", "doc_id": "cf79296c-0c2a-4448-a708-879b4504c44c", "embedding": null, "doc_hash": "37d57b0ce928927fa04675c765b0722ad622834f90335e81747d386c5a588b69", "extra_info": {"file_path": "our-data/labels/defi-label-type.md", "file_name": "defi-label-type.md"}, "node_info": {"start": 0, "end": 1962, "_node_type": "1"}, "relationships": {"1": "16e87d356871ed695736b1b738a4c310ac01bbe5"}}, "__type__": "1"}, "b5bece55-4304-42fa-b591-4e577843b588": {"__data__": {"text": "# Decentralized Exchange Label Type\n\nThe `dex` label type represents any foundation controlled address.\n\n`label_type` = `dex`\n\n### Label Subtypes\n\n| Subtype              | Description                                                                                |\n| -------------------- | ------------------------------------------------------------------------------------------ |\n| `swap_contract`      | The contract used by the dex to facilitate token exchanges                                 |\n| `token_contract`     | Contract of a token belonging to the decentralized exchange                                |\n| `pool`               | Any type of pool address, i.e. farming, staking, liquidity etc.                            |\n| `vault`              | A vault controlled by the decentalized exchange                                            |\n| `fee_wallet`         | Wallet for fees collected by the decentalized exchange                                     |\n| `dao`                | An address controlling a DAO controlled by the decentalized exchange                       |\n| `chadmin`            | Addresses used for administrative purposes controlled by the decentalized exchange         |\n| `contract_deployer`  | A contract controlled by the decentralized exchange that is used to create other contracts |\n| `foundation`         | Foundation addresses where the decentralized exchange has a foundation                     |\n| `governance`         | Governance addresses where the decentralized exchange has governance                       |\n| `rewards`            | Addresses used to distribute rewards                                                       |\n| `strategy`           | Addresses used to control strategy                                                         |\n| `token_distribution` | Addresses used to distribute supply                                                        |\n| `token_sale`         | Addresses used in initial token sales and distributions            ", "doc_id": "b5bece55-4304-42fa-b591-4e577843b588", "embedding": null, "doc_hash": "4c1c6b3e090eecd94781e1318d4e4caf329c838645d953437fdce318368a33fe", "extra_info": {"file_path": "our-data/labels/dex-label-type.md", "file_name": "dex-label-type.md"}, "node_info": {"start": 0, "end": 2009, "_node_type": "1"}, "relationships": {"1": "d154c4ece5be2ea37cdfb5eb9312ce1a0e43a354", "3": "af096b3b-b5e1-460f-a9c4-532191068881"}}, "__type__": "1"}, "af096b3b-b5e1-460f-a9c4-532191068881": {"__data__": {"text": "initial token sales and distributions                                    |\n| `general_contract`   | A contract belonging to the exchange                                                       |\n| `multisig`           | A multisig contract belonging to the decentralized exchange                                |\n", "doc_id": "af096b3b-b5e1-460f-a9c4-532191068881", "embedding": null, "doc_hash": "7a66016c34b71e6b8dc891f5cc97f39a916097dde31a17e81d0621968d636f6e", "extra_info": {"file_path": "our-data/labels/dex-label-type.md", "file_name": "dex-label-type.md"}, "node_info": {"start": 1960, "end": 2271, "_node_type": "1"}, "relationships": {"1": "d154c4ece5be2ea37cdfb5eb9312ce1a0e43a354", "2": "b5bece55-4304-42fa-b591-4e577843b588"}}, "__type__": "1"}, "7813138e-d920-4e63-b342-b1be3b88a637": {"__data__": {"text": "# Flotsam Label Type\n\nLabel category reserved for junk, scams, and other known addresses that do not belong to a \"legitimate\" project but also should not be assumed to be \"users\". Some labels are descriptive (i.e. \"upbit hack\") in this category and some are not (i.e. \"phishing scam\").\n\n`label_type` = `flotsam`\n\n### Label Subtypes\n\n| Subtype             | Description                                              |\n| ------------------- | -------------------------------------------------------- |\n| `toxic`             | Scams, pyramid schemes, bad bots, attacks, hackers, etc. |\n| `token_contract`    | ERC-20 token (fungible token) contract                   |\n| `general_contract`  | A general contract                                       |\n| `contract_deployer` | A contract used to create other contracts                |\n| `donation_address`  | Addresses used to collect donations                      |\n", "doc_id": "7813138e-d920-4e63-b342-b1be3b88a637", "embedding": null, "doc_hash": "11cf75c3fe930b387d431e9e0f249b3d39ef7817545ed4d5eb60966fe2354cb3", "extra_info": {"file_path": "our-data/labels/flotsam-label-type.md", "file_name": "flotsam-label-type.md"}, "node_info": {"start": 0, "end": 914, "_node_type": "1"}, "relationships": {"1": "2f17ddaeb714a01481f19a3c3894db065f97dda8"}}, "__type__": "1"}, "de68509b-f8b9-46fd-b1de-76a88888cbe4": {"__data__": {"text": "# Layer Two Label Type\n\nProjects building layer two's.\n\n`label_type` = `layer2`\n\n### Label Subtypes\n\n| Subtype            | Description                                                           |\n| ------------------ | --------------------------------------------------------------------- |\n| `token_contract`   | ERC-20 token (fungible token) contract owned by the layer two project |\n| `general_contract` | A contract controlled by the layer two project                        |\n", "doc_id": "de68509b-f8b9-46fd-b1de-76a88888cbe4", "embedding": null, "doc_hash": "fba336a8b9cdb03a2f657b45878de70398db8c0afac917589593d16206ba2457", "extra_info": {"file_path": "our-data/labels/layer2-label-type.md", "file_name": "layer2-label-type.md"}, "node_info": {"start": 0, "end": 481, "_node_type": "1"}, "relationships": {"1": "f3eee86604e1ec407c83af512d89851d7af959ac"}}, "__type__": "1"}, "c3b85b37-bda6-4673-a772-583eea5cdff6": {"__data__": {"text": "# NonFungible Tokens Label Type\n\nAn `nft` label type represents any nonfungible token project or a nft marketplace.\n\n`label_type` = `nft`\n\n### Label Subtypes\n\n| Subtype             | Description                                                                    |\n| ------------------- | ------------------------------------------------------------------------------ |\n| `token_contract`    | ERC-20 token (fungible token) contract owned by the nft project or marketplace |\n| `nf_token_contract` | NonFungible token contract owned by the nft project or marketplace             |\n| `contract_deployer` | A contract used by the project to create other contracts                       |\n| `fee_contract`      | A contract used by the project to collect fees                                 |\n| `marketplace`       | A contract used by a marketplace to facilitate sales and trades of nft's       |\n| `general_contract`  | A contract controlled by the nft project or marketplace                        |\n\n", "doc_id": "c3b85b37-bda6-4673-a772-583eea5cdff6", "embedding": null, "doc_hash": "b06a1d2767f1e224932d59b14df07a785e0ff7b89f4fe0aca1cbacc2c5502d06", "extra_info": {"file_path": "our-data/labels/nft-label-type.md", "file_name": "nft-label-type.md"}, "node_info": {"start": 0, "end": 1000, "_node_type": "1"}, "relationships": {"1": "425da9f086259e4ffecb4a07c95f2b3e4beca9f1"}}, "__type__": "1"}, "b2facfce-53c8-478a-88e1-c2432e670164": {"__data__": {"text": "# Operator Label Type\n\nAddresses that are necessary for the function of a blockchain or project ecosystem are referred to as `operator` .\n\n`label_type` = `operator`\n\n### Label Subtypes\n\n| Subtype       | Description                                           |\n| ------------- | ----------------------------------------------------- |\n| `validator`   | Addresses that run nodes and/or validate blocks       |\n| `mining_pool` | Known mining pools                                    |\n| `solo_miner`  | An individual address that has received block rewards |\n\n", "doc_id": "b2facfce-53c8-478a-88e1-c2432e670164", "embedding": null, "doc_hash": "c0217bd062a12b38c520daa9ba94710da7347718f36ef940eef96ee9182edbc0", "extra_info": {"file_path": "our-data/labels/operator-label-type.md", "file_name": "operator-label-type.md"}, "node_info": {"start": 0, "end": 557, "_node_type": "1"}, "relationships": {"1": "b1ddaab317daeef54ac9e5aeb656e58b8c01fdad"}}, "__type__": "1"}, "5d762809-6ecd-43bf-9444-4c79316b6d47": {"__data__": {"text": "# Decentralized Applications Label Type\n\n`Decentralized Applications (Dapps) that don't fit into the defi, nft or layer2 categories.`\n\n`label_type` = `dapp`\n\n### Label Subtypes\n\n| Subtype               | Description                                                             |\n| --------------------- | ----------------------------------------------------------------------- |\n| `contract_deployer`   | Non-exchange financial services such as mixers and payment services     |\n| `fee_wallet`          | Walled used by the dapp to collect fees                                 |\n| `token_contract`      | Contract of a token belonging to the dapp                               |\n| `token_sale`          | Address used in the initial token sale of a token belonging to the dapp |\n| `treasury`            | Address used by the treasury of the dapp                                |\n| `oracle`              | Oracle contract                                                         |\n| `donation_address`    | Address used by the dapp to collect donations                           |\n| `aggregator_contract` | Aggregator contract                                                     |\n", "doc_id": "5d762809-6ecd-43bf-9444-4c79316b6d47", "embedding": null, "doc_hash": "bcab16d45f5cc5318a03b1971a7bf717e8f6653336a56efe8b791d7e02d82c62", "extra_info": {"file_path": "our-data/labels/other-label-type.md", "file_name": "other-label-type.md"}, "node_info": {"start": 0, "end": 1178, "_node_type": "1"}, "relationships": {"1": "e70b59e299673d066933c8b4c45e6856baf5a4de"}}, "__type__": "1"}, "8598e285-2efd-4fbc-af55-94d9467b3e63": {"__data__": {"text": "# Token Label Type\n\nLabel for token contracts that are stand-alone, i.e. they do not belong to a project that has any other addresses. Stand-alone stablecoins get this label type too, i.e. WETH.&#x20;\n\n\n\n### Label Subtypes\n\n| Subtype          | Description                             |\n| ---------------- | --------------------------------------- |\n| `token_contract` | ERC-20 token (fungible token) contract  |\n", "doc_id": "8598e285-2efd-4fbc-af55-94d9467b3e63", "embedding": null, "doc_hash": "4579ff414d83b00071a4238277e5765cf5e2bc6c9151fca63aa5b68a9819705f", "extra_info": {"file_path": "our-data/labels/token-label-type.md", "file_name": "token-label-type.md"}, "node_info": {"start": 0, "end": 413, "_node_type": "1"}, "relationships": {"1": "5714d34302ae0abed4e4addc6020868169afdbc1"}}, "__type__": "1"}, "8d965255-2d90-4090-9393-08dc2f1516bc": {"__data__": {"text": "# Misc\n\n", "doc_id": "8d965255-2d90-4090-9393-08dc2f1516bc", "embedding": null, "doc_hash": "0925dac1e1923ff15890775a52392ed027a878cc702d8a8345c26ec8ac5b4d49", "extra_info": {"file_path": "our-data/misc/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 8, "_node_type": "1"}, "relationships": {"1": "705686c43c03d89097d61b56abfbf37b1eef0769"}}, "__type__": "1"}, "086cb276-bc8a-4132-b4ae-80b731799234": {"__data__": {"text": "---\ndescription: The following is a Data Roadmap (subject to change)\n---\n\n# Data Roadmap\n\nThe following chains are on-deck/under consideration. If there is a chain you would like to see prioritized please reach out to us and we will put it under consideration.&#x20;\n\n| Blockchains |\n| ----------- |\n| EVMOS       |\n| dxdy        |\n| Bitcoin     |\n| Fantom      |\n| Stride      |\n| Juno        |\n| Sei         |\n| Sui         |\n", "doc_id": "086cb276-bc8a-4132-b4ae-80b731799234", "embedding": null, "doc_hash": "be2195ae438d98e36a1772af5a9e388e9385758db8a0a9a7a692d3d2547a1b24", "extra_info": {"file_path": "our-data/misc/data-roadmap.md", "file_name": "data-roadmap.md"}, "node_info": {"start": 0, "end": 428, "_node_type": "1"}, "relationships": {"1": "0b6efa237ad53fcbced4be2ffb5696533afd43c7"}}, "__type__": "1"}, "10b56949-4499-43f7-bb0f-a7deb9dfe3ff": {"__data__": {"text": "---\ndescription: The following can be tuned/adjusted.\n---\n\n# Table Freshness Targets\n\nFlipside's tables target the following latency schedule from Chain Head. The following can be tuned based on use cases/needs. Please reach out if you have a specific use case that requires a latency closer to the chain head and our team would be happy to discuss solutions with you.\n\nFlipside refreshes data across three dimensions fact tables, dim tables, and ez tables.\n\n| Blockchain | Category (Fact, Dim, Ez) | Target Latency from Chain Head |\n| ---------- | ------------------------ | ------------------------------ |\n| Arbitrum   | Fact + Dim + EZ          | 30 minutes                     |\n| Avalanche  | Fact + Dim + EZ          | 30 minutes                     |\n| Avalanche  | decoded\\_event\\_logs     | 2.5 hours                      |\n| Axelar     | Fact + Dim               | 1.5 hours                      |\n| Axelar     | EZ                       | 2 hours                        |\n| BSC        | Fact + Dim + EZ          | 2 hours                        |\n| Cosmos     | Fact + Dim + Ez          | 15 hours                       |\n| Ethereum   | Fact + Dim               | 20 minutes                     |\n| Ethereum   | Ez                       | 1 hour                         |\n| Ethereum   | Balances                 | 4 hours                        |\n| Flow       | Fact + Dim + Ez          | 45 Minutes                     |\n| Gnosis     | Fact + Dim + Ez          | 2 hours                        |\n| NEAR       | Fact + Dim               | 2 hours                        |\n| NEAR       | Ez                       | 3 hours                        |\n| Optimism   | Fact + Dim + Ez          | 35 minutes                     |\n| Osmosis    | Fact + Dim + Ez          | 11 hours                    ", "doc_id": "10b56949-4499-43f7-bb0f-a7deb9dfe3ff", "embedding": null, "doc_hash": "f76c46847bf12bad80cc910aa74bf74c9765f677cb34952247e4a7e70fc81dcc", "extra_info": {"file_path": "our-data/misc/table-freshness-targets.md", "file_name": "table-freshness-targets.md"}, "node_info": {"start": 0, "end": 1804, "_node_type": "1"}, "relationships": {"1": "e2d38dba3c76ad728765886214611d9ebdd91b57", "3": "22b223fd-c2ea-4190-a77c-1ff2dcbff401"}}, "__type__": "1"}, "22b223fd-c2ea-4190-a77c-1ff2dcbff401": {"__data__": {"text": "                      |\n| Osmosis    | ez\\_pools                | 24 hours                       |\n| Polygon    | Fact + Dim + Ez          | 40 minutes                     |\n| Polygon    | decoded\\_event\\_logs     | 2.5 hours                      |\n| Solana     | Fact + Dim               | 40 Minutes                     |\n| Solana     | Ez                       | 1 hour                         |\n| Terra      | Fact + Dim + Ez          | 24 hours                       |\n| Thorchain  | Fact + Dim + Ez          | 2 hours                        |\n", "doc_id": "22b223fd-c2ea-4190-a77c-1ff2dcbff401", "embedding": null, "doc_hash": "c1979704026eb814af446d2f030db80746b5635d01fbf3bd9c481c54b1cd16d8", "extra_info": {"file_path": "our-data/misc/table-freshness-targets.md", "file_name": "table-freshness-targets.md"}, "node_info": {"start": 1785, "end": 2334, "_node_type": "1"}, "relationships": {"1": "e2d38dba3c76ad728765886214611d9ebdd91b57", "2": "10b56949-4499-43f7-bb0f-a7deb9dfe3ff"}}, "__type__": "1"}, "97f46672-1987-4a1a-a25a-9c193668fd6f": {"__data__": {"text": "# Video Tutorials\n\nLearn more about our data structures for specific blockchains with these articles and video tutorials. You'll also learn helpful tips for starting your analyses and working with blockchain data in SQL.\n\n\n\n{% content-ref url=\"overview-of-schemas-and-tables.md\" %}\n[overview-of-schemas-and-tables.md](overview-of-schemas-and-tables.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"ethereum-tutorials/\" %}\n[ethereum-tutorials](ethereum-tutorials/)\n{% endcontent-ref %}\n\n{% content-ref url=\"getting-started-with-dai-events.md\" %}\n[getting-started-with-dai-events.md](getting-started-with-dai-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"solana-tutorials/\" %}\n[solana-tutorials](solana-tutorials/)\n{% endcontent-ref %}\n\n{% content-ref url=\"thorchain-tutorials/\" %}\n[thorchain-tutorials](thorchain-tutorials/)\n{% endcontent-ref %}\n\n", "doc_id": "97f46672-1987-4a1a-a25a-9c193668fd6f", "embedding": null, "doc_hash": "c0ebae2af7e6a5f570f29d201d9836df59caaf14816c80ca8d69e3709135b999", "extra_info": {"file_path": "our-data/tutorials/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 850, "_node_type": "1"}, "relationships": {"1": "5bed2f1f3fc1dabb00593da8f76b1530db9f49ae"}}, "__type__": "1"}, "898a874e-5386-4499-9fa4-ef2848ee7cab": {"__data__": {"text": "# Ethereum Tutorials\n\n### Ethereum Tutorials\n\n{% content-ref url=\"getting-started-with-ethereum-events.md\" %}\n[getting-started-with-ethereum-events.md](getting-started-with-ethereum-events.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"getting-started-with-ethereum-erc20-balances.md\" %}\n[getting-started-with-ethereum-erc20-balances.md](getting-started-with-ethereum-erc20-balances.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"using-labels-to-break-down-token-supply.md\" %}\n[using-labels-to-break-down-token-supply.md](using-labels-to-break-down-token-supply.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"finding-centralized-exchange-deposits-and-withdrawals.md\" %}\n[finding-centralized-exchange-deposits-and-withdrawals.md](finding-centralized-exchange-deposits-and-withdrawals.md)\n{% endcontent-ref %}\n\n\n\n\n\n\n\n", "doc_id": "898a874e-5386-4499-9fa4-ef2848ee7cab", "embedding": null, "doc_hash": "6a5c986ae78782f5950a2536d7302c43b3b36307fe4cdc80b99a8795dc72b73a", "extra_info": {"file_path": "our-data/tutorials/ethereum-tutorials/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 812, "_node_type": "1"}, "relationships": {"1": "49a591bef45823719a5795ac3160fc3bda4efab8"}}, "__type__": "1"}, "24db16c4-252e-4a9f-ba81-57da2906fdfa": {"__data__": {"text": "---\ndescription: >-\n  Let's explore using Flipside's base label system to identify Centralized\n  Exchange deposits and withdrawals.\n---\n\n# Finding Centralized Exchange Deposits and Withdrawals\n\n\n\nLeveraging Flipside's base labeling system and on-chain events, you can easily see deposits and withdrawals from key exchanges.\n\nWhenever you try to answer a complicated question like this, you're going to have several layers to your query, so it helps to build up small pieces.\n\n{% hint style=\"info\" %}\nIf you haven't gone through the [Getting Started with Ethereum Events](https://app.gitbook.com/getting-started-with-ethereum-events) guide or worked with labels in the [Using Labels to Break Down Token Supply](using-labels-to-break-down-token-supply.md) guide, yet, we recommend you do that first.\n{% endhint %}\n\nLet's start by look at ETH movement into exchanges for a week in October 2020.\n\n```sql\nSELECT\n    date_trunc('day', block_timestamp) as date,\n    to_label_type,\n    to_label_subtype,\n    round(sum(amount_usd)) as total_inflow\nFROM\n    ethereum.udm_events\nWHERE\n    to_label_type = 'distributor'\n    AND event_type = 'native_eth'\n    AND block_timestamp > '2020-10-01'\n    AND block_timestamp < '2020-10-08'\nGROUP BY date,to_label_type,to_label_subtype\nORDER BY date, total_inflow DESC\n```\n\nIn this query, we:\n\n* select label type and subtype because we don't always know which level we need at first\n* filter `native_eth` transfers only\n\nEach day give us results that look like this:\n\n| Date                | To Label Type | To Label Subtype            | Total Inflow |\n| ------------------- | ------------- | --------------------------- | ------------ |\n| 2020-10-01 00:00:00 | distributor   | distributor\\_cex            | 358172469    |\n| 2020-10-01 00:00:00 | distributor   | distributor\\_dex            | 238906080    |\n| 2020-10-01 00:00:00 | distributor   | distributor\\_cex\\_satellite | 157460066    |\n| 2020-10-01 00:00:00 | distributor   | distributor\\_dex\\_balancer  | 3563956      |\n\nSince we are getting several different `to_label_subtype` values, that's a good clue to dig in more.\n\n### Expand Dimensions to See Senders and Receivers\n\nLet's expand the results to see which types and subtypes are sending to exchanges.\n\n```sql\nSELECT\n    from_label_subtype as sender,\n    to_label_subtype as receiver,\n    round(sum(amount_usd)) as total\nFROM\n    ethereum.udm_events\nWHERE\n    to_label_type = 'distributor'\n    AND symbol = 'ETH'\n    AND contract_address IS NULL\n    AND block_timestamp > '2020-10-01'\n    AND block_timestamp < '2020-10-02'\n    AND to_label_subtype like 'distributor_cex%'\nGROUP BY from_label_subtype,to_label_subtype\nORDER BY", "doc_id": "24db16c4-252e-4a9f-ba81-57da2906fdfa", "embedding": null, "doc_hash": "e62d98323a8054d745bdbd918bb54eb578dce09fc941241b3ff98de72f9fa7e0", "extra_info": {"file_path": "our-data/tutorials/ethereum-tutorials/finding-centralized-exchange-deposits-and-withdrawals.md", "file_name": "finding-centralized-exchange-deposits-and-withdrawals.md"}, "node_info": {"start": 0, "end": 2670, "_node_type": "1"}, "relationships": {"1": "079a42df78d6665c2dc34be520f85fc4fb419d31", "3": "b5ed452c-61b5-4cf7-91fe-7d8930d3cf51"}}, "__type__": "1"}, "b5ed452c-61b5-4cf7-91fe-7d8930d3cf51": {"__data__": {"text": "BY from_label_subtype,to_label_subtype\nORDER BY to_label_subtype, total desc\n```\n\nBy adding label categories to the \"from\" side, we're going to return a lot more rows, so let's modify the query to make the results easier to understand:\n\n* look at a single day\n* only look at activity to centralized exchanges `to_label_subtype like 'distributor_cex%'`\n* round the total amounts for each pair of senders and receivers\n* order the results by `to_label_subtype` and amounts descending\n\n| Sender                      | Receiver                    | Total     |\n| --------------------------- | --------------------------- | --------- |\n| distributor\\_cex\\_satellite | distributor\\_cex            | 158462305 |\n| distributor\\_cex            | distributor\\_cex            | 142227252 |\n|                             | distributor\\_cex            | 55712865  |\n| other\\_single\\_use          | distributor\\_cex            | 1595028   |\n| distributor\\_dex            | distributor\\_cex            | 94677     |\n| operator\\_miner             | distributor\\_cex            | 77774     |\n| operator\\_mining            | distributor\\_cex            | 1424      |\n| project\\_contract           | distributor\\_cex            | 1076      |\n| other\\_financial            | distributor\\_cex            | 68        |\n|                             | distributor\\_cex\\_satellite | 102552982 |\n| distributor\\_cex            | distributor\\_cex\\_satellite | 31853513  |\n| other\\_single\\_use          | distributor\\_cex\\_satellite | 19357401  |\n| operator\\_miner             | distributor\\_cex\\_satellite | 1379866   |\n| distributor\\_cex\\_satellite | distributor\\_cex\\_satellite | 1216738   |\n| other\\_financial            | distributor\\_cex\\_satellite | 609015    |\n| distributor\\_dex            | distributor\\_cex\\_satellite | 408611    |\n| project\\_contract           | distributor\\_cex\\_satellite | 45839     |\n| operator\\_mining            | distributor\\_cex\\_satellite | 25567  ", "doc_id": "b5ed452c-61b5-4cf7-91fe-7d8930d3cf51", "embedding": null, "doc_hash": "2f2855638cc10954d7f589f097a6f19709ef1b879b9c43f971cd48138395d210", "extra_info": {"file_path": "our-data/tutorials/ethereum-tutorials/finding-centralized-exchange-deposits-and-withdrawals.md", "file_name": "finding-centralized-exchange-deposits-and-withdrawals.md"}, "node_info": {"start": 2626, "end": 4584, "_node_type": "1"}, "relationships": {"1": "079a42df78d6665c2dc34be520f85fc4fb419d31", "2": "24db16c4-252e-4a9f-ba81-57da2906fdfa", "3": "dfaaddb7-1e44-4ffc-b0b7-7ab651c56c9c"}}, "__type__": "1"}, "dfaaddb7-1e44-4ffc-b0b7-7ab651c56c9c": {"__data__": {"text": "   | distributor\\_cex\\_satellite | 25567     |\n| project\\_other              | distributor\\_cex\\_satellite | 10368     |\n| project\\_token\\_contract    | distributor\\_cex\\_satellite | 166       |\n\nBy we comparing each combination of sender and receiver, we have created an interaction matrix that can be used to categorize transfer activity.\n\nHere are some possible transaction type examples, with caveats below:\n\n| Sender                      | Receiver                    | Transaction Type                       |\n| --------------------------- | --------------------------- | -------------------------------------- |\n| any non-distributor label   | distributor\\_cex\\_satellite | Deposit                                |\n| distributor\\_cex            | any non-distributor label   | Withdrawal                             |\n| distributor\\_cex\\_satellite | distributor\\_cex            | Sweep                                  |\n| distributor\\_cex            | distributor\\_cex            | Inter-exchange transfers for liquidity |\n| distributor\\_cex            | distributor\\_cex            | Intra-exchange hot wallet maintenance  |\n\n### Enrich Categories with Label Names\n\nNow, especially with the last two cases, it may not be obvious what is going on until we expose the names of the exchanges involved.\n\nWe can do that with the `from_label` and `to_label` fields:\n\n```sql\nSELECT\n    from_label as sender,\n    to_label as receiver,\n    round(sum(amount_usd)) as total\nFROM\n    ethereum.udm_events\nWHERE\n    to_label_type = 'distributor'\n    AND symbol = 'ETH'\n    AND contract_address IS NULL\n    AND block_timestamp > '2020-10-01'\n    AND block_timestamp < '2020-10-02'\n    AND to_label_subtype = 'distributor_cex'\n    AND from_label_subtype = 'distributor_cex'\nGROUP BY from_label,to_label\nORDER BY from_label, total desc\n```\n\nThere's a lot to dig into here with the labeled results, but this subset of Binance, Coinbase, and Kraken is representative of the typical patterns we see:\n\n| Sender   | Receiver   | Total    |\n| -------- | ---------- | -------- |\n| binance  | binance    | 46424958 |\n| binance  | coinbase   | 3527514  |\n| binance  | coinswitch | 157443   |\n| binance  | shapeshift | 18380    |\n| coinbase | coinbase   | 32781897 |\n| kraken   | kraken     | 6590562  |\n| kraken   |", "doc_id": "dfaaddb7-1e44-4ffc-b0b7-7ab651c56c9c", "embedding": null, "doc_hash": "9f297b71d78bdb65e7fbd122bd1316f167ef216eab6e4aee7407f6ebab174478", "extra_info": {"file_path": "our-data/tutorials/ethereum-tutorials/finding-centralized-exchange-deposits-and-withdrawals.md", "file_name": "finding-centralized-exchange-deposits-and-withdrawals.md"}, "node_info": {"start": 4596, "end": 6894, "_node_type": "1"}, "relationships": {"1": "079a42df78d6665c2dc34be520f85fc4fb419d31", "2": "b5ed452c-61b5-4cf7-91fe-7d8930d3cf51", "3": "ca6d435d-980c-4b54-b2c7-5eb4979a514c"}}, "__type__": "1"}, "ca6d435d-980c-4b54-b2c7-5eb4979a514c": {"__data__": {"text": "    | 6590562  |\n| kraken   | coinbase   | 384082   |\n\nNotice that:\n\n1. The largest row in each \"from\" label set for the most part are transfers within the same exchange, which confirms our \"intra-exchange wallet maintenance\" category above.\n2. When we have cross-exchange activity, that could be exchanges providing each other with liquidity, but you would have drill down further into transactions to try to see that.\n3. Hot wallets sending to Coinbase are a little more complicated to classify, since, on Ethereum, Coinbase does not use the same satellite wallet architecture as most other exchanges. In other words, these may be withdrawals to Coinbase user wallets, not inter-exchange transfers for liquidity.\n", "doc_id": "ca6d435d-980c-4b54-b2c7-5eb4979a514c", "embedding": null, "doc_hash": "977180e40157451b9db11976710edac8a263aab44d66fa201a342ca2effc1d19", "extra_info": {"file_path": "our-data/tutorials/ethereum-tutorials/finding-centralized-exchange-deposits-and-withdrawals.md", "file_name": "finding-centralized-exchange-deposits-and-withdrawals.md"}, "node_info": {"start": 6899, "end": 7614, "_node_type": "1"}, "relationships": {"1": "079a42df78d6665c2dc34be520f85fc4fb419d31", "2": "dfaaddb7-1e44-4ffc-b0b7-7ab651c56c9c"}}, "__type__": "1"}, "5cfa03f6-c316-406b-b1e3-c6e8c4807487": {"__data__": {"text": "---\ndescription: >-\n  This guide will take you thru an introduction of the Ethereum ERC20 Balance\n  table by exploring the total value locked (TVL) metric.\n---\n\n# Getting Started with Ethereum ERC20 Balances\n\n{% hint style=\"info\" %}\nIf you're looking for a breakdown of the `ethereum.erc20_balances` table take a look [here](broken-reference).\n{% endhint %}\n\nIn this tutorial, we're going to familiarize ourselves with the ethereum er20 balances table by computing a metric known as Total Value Locked, or TVL for short.\n\nTVL measures the total amount of a token that is locked in a contract.&#x20;\n\nLet's begin by looking at the amount of USDC locked in Curve liquidity pools.\n\n```sql\nSELECT \n  date_trunc('day', balance_date) as metric_date,\n  symbol,\n  amount_usd\nFROM ethereum.erc20_balances\nWHERE \n  -- the user address is the Curve Liquidty Pool\n  user_address = '0xa5407eae9ba41422680e2e00537571bcc53efbfd' AND\n  -- the contract address is the USDC proxy contract\n  contract_address = '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48' AND\n  balance_date >= getdate() - interval '1 month'\n```\n\nThere are a couple of notable things in the query above:\n\n1. `user_address` in this case, refers to the [Curve liquidity pool](https://etherscan.io/address/0xa5407eae9ba41422680e2e00537571bcc53efbfd) that we'd like to take a balance reading of against the USDC contract.&#x20;\n2. `contract_address` is set to the USDC proxy contract. The idea here is that we want to ask for the balance of the user address, the Curve pool, on this contract, USDC.\n\nThe results depict a downward-looking trend for the TVL of USDC in this specific Curve liquidity pool.\n\n![](<../../../.gitbook/assets/Screen Shot 2020-11-01 at 11.15.42 PM.png>)\n\n&#x20;Now, instead of looking at the balance locked in a liquidity pool, let's look at the amount of USDC deposited into the Maker eco-system for use in Maker's lending platform.\n\nFor this query, we need to look at the balance of USDC on the Maker Gem Join contract. Instead of querying by user\\_address or contract address, we're going to leverage Flipside's labels directly:\n\n```sql\nSELECT date_trunc('day', balance_date) as metric_date,\n       amount_usd\nFROM ethereum.erc20_balances \nWHERE \n -- This is the address name corresponding to the user address \n -- of the maker gem join contract\n address_name = 'makerdao gem join usdc' AND\n -- This symbol corresponds to the USDC contract address\n symbol = 'USDC' AND\n balance_date >= getdate() - interval '3 months'\n```\n\n![](<../../../.gitbook/assets/Screen Shot 2020-11-01 at 11.32.21 PM.png>)\n\nTwo things to note from this query:\n\n1. Instead of entering the `user_address` directly, we leveraged Flipside's label to get at the Maker Gem Join contract.\n2. Similar to the first point, instead of using the USDC contract address we use the`symbol` here. This symbol has been whitelisted to avoid collision.&#x20;\n\nFrom here, I encourage you to explore TVL on other platforms such as Balancer, UniSwap, or Aave.&#x20;\n", "doc_id": "5cfa03f6-c316-406b-b1e3-c6e8c4807487", "embedding": null, "doc_hash": "161699514478e486f411a17c090a5abacb0c17d812deaac45528a60b0d5292a1", "extra_info": {"file_path": "our-data/tutorials/ethereum-tutorials/getting-started-with-ethereum-erc20-balances.md", "file_name": "getting-started-with-ethereum-erc20-balances.md"}, "node_info": {"start": 0, "end": 2989, "_node_type": "1"}, "relationships": {"1": "df21fb863c7a54056ce6cbb77646df4ec5807b73"}}, "__type__": "1"}, "866ad996-0115-4933-bffc-55ce76f037e0": {"__data__": {"text": "---\ndescription: This guide will take you thru an introduction of the Ethereum events table.\n---\n\n# Getting Started with Ethereum Events\n\nThis guide provides an introduction to the `ethereum.udm_events` table via a series of simple queries that explore the data.\n\n{% hint style=\"info\" %}\nFor a breakdown of the Ethereum Events table schema [go here.](broken-reference)\n{% endhint %}\n\nLet's familiarize ourselves with the table by first looking at the types of events that can be queried.\n\n```sql\nSELECT distinct(event_type) FROM ethereum.udm_events \n```\n\n| event\\_type     | description                                      |\n| --------------- | ------------------------------------------------ |\n| function        | A function call                                  |\n| event           | An event emitted from a function call.           |\n| erc20\\_transfer | An event involving a transfer of an ERC20 token. |\n| native\\_eth     | A native eth transfer.                           |\n\nThis tells us there are 4 types of events that get recorded in the ethereum events table. Let's take a closer look at the decoded on-chain event names for USDC over the past 30 days.\n\n```sql\nSELECT \n  event_type,\n  event_name as event_name,\n  count(event_name)\nFROM ethereum.udm_events\nWHERE \n  -- USDC contract address\n  contract_address = '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48' AND\n  block_timestamp >= GETDATE() - interval'30 days'\nGROUP BY 1,2\nORDER BY 3 DESC\n```\n\n| event\\_type     | event\\_name      | count     |\n| --------------- | ---------------- | --------- |\n| erc20\\_transfer | transfer         | 1,142,589 |\n| event           | Approval         | 167,014   |\n| event           | Mint             | 525       |\n| event           | Burn             | 514       |\n| event           | MinterConfigured | 15        |\n\nThese results provide a more granular breakdown of the events surrounding the USDC contract. Specifically, this shows us the number of Approval, Mint, Burn, and MinterConfigured events that were emitted by the USDC contract. It appears that the greatest number of events are related to transfers of the USDC token. In our next query let's look at the trend of USDC transfers of the past 30 days.\n\n```sql\nSELECT \n  date_trunc('day', block_timestamp) as metric_date,\n  sum(amount) as total_amount\nFROM ethereum.udm_events\nWHERE \n  event_type = 'erc20_transfer' AND\n  symbol = 'USDC' AND\n  amount > 0 AND\n  block_timestamp >= GETDATE() - interval'30 days'\nGROUP BY metric_date\nORDER BY metric_date DESC\n```\n\n![](<../../../.gitbook/assets/Screen Shot", "doc_id": "866ad996-0115-4933-bffc-55ce76f037e0", "embedding": null, "doc_hash": "75639aca3bc84d77f8968903904a1bae3fe2e0385bae1ecb213f6f23f12bc3eb", "extra_info": {"file_path": "our-data/tutorials/ethereum-tutorials/getting-started-with-ethereum-events.md", "file_name": "getting-started-with-ethereum-events.md"}, "node_info": {"start": 0, "end": 2561, "_node_type": "1"}, "relationships": {"1": "bf4ac998cdc88ba04bc6823628f04941e9e9d4b5", "3": "eb925b9f-3849-4037-b351-105e2bc67052"}}, "__type__": "1"}, "eb925b9f-3849-4037-b351-105e2bc67052": {"__data__": {"text": "Shot 2020-11-01 at 10.30.54 PM.png>)\n\nWe see a big spike in USDC transfers on October 26th. This just happens to coincide with the Harvest.finance attack on the same date. Let's take a closer look at the exchanges that USDC was being sent to at that time by leveraging Flipside's Exchange labels.\n\n```sql\nSELECT \n  to_label,\n  sum(amount) as total_amount\nFROM ethereum.udm_events\nWHERE\n  -- the 'distributor' label type = exchanges \n  to_label_type = 'distributor' AND\n  event_type = 'erc20_transfer' AND\n  symbol = 'USDC' AND\n  amount > 0 AND\n  block_timestamp >= '2020-10-26T00:00:00Z' AND\n  block_timestamp <= '2020-10-27T00:00:00Z'\nGROUP BY to_label, to_label_type\nORDER BY total_amount DESC\nLIMIT 5\n```\n\n| to\\_label    | total\\_amount    |\n| ------------ | ---------------- |\n| curve fi     | 2,786,908,380.42 |\n| yearn        | 1,431,392,778.53 |\n| ftx exchange | 168,161,544.95   |\n| binance      | 82,280,347.55    |\n| uniswap      | 44,740,268.63    |\n\nHere we see that Curve saw the largest influx at \\~2.7B, followed closely by Yearn.&#x20;\n\nFrom here I encourage you to dig deeper by exploring the inflows and outflows on each of these exchanges, perhaps even looking at individual pool activity on curve or uniswap by leveraging the project labels.\n", "doc_id": "eb925b9f-3849-4037-b351-105e2bc67052", "embedding": null, "doc_hash": "9cbd6ec722ce206b17af05742a5435a6b7abc81b1c79b500ed12a72050423e56", "extra_info": {"file_path": "our-data/tutorials/ethereum-tutorials/getting-started-with-ethereum-events.md", "file_name": "getting-started-with-ethereum-events.md"}, "node_info": {"start": 2557, "end": 3819, "_node_type": "1"}, "relationships": {"1": "bf4ac998cdc88ba04bc6823628f04941e9e9d4b5", "2": "866ad996-0115-4933-bffc-55ce76f037e0"}}, "__type__": "1"}, "d9202122-fe39-4bd6-a0cf-a0f5ab140d21": {"__data__": {"text": "---\ndescription: >-\n  In this guide, we're going to look at how supply is distributed across the\n  network for particular ERC20 tokens using Flipside's base label system.\n---\n\n# Using Labels to Break Down Token Supply\n\nIn this guide, we're going to look at how supply is distributed across the network for particular ERC20 tokens.\n\nThe question we want to answer is: at any given point in time, who is holding this token?\n\nAnd because we look at groups of accounts using Flipside's base labels, you can get an aggregate view of the entire network.\n\nOur balances tables are also designed to make answering this question very straightforward:\n\n1. Each date in the table represents a snapshot of \"current balances\" for all holders, so you only have to query one day to see total supply\n2. Labels are already injected into the addresses, so all you have to do is group by existing fields in the table\n\nLet's look at the basic query:\n\n```sql\nSELECT\n  symbol,\n  label_type,\n  round(sum(amount_usd)) as total\nFROM\n  ethereum.erc20_balances\nWHERE\n  balance_date = '2020-10-31'\n  AND amount_usd > 0\n  AND contract_address = '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48'\nGROUP BY 1,2\nORDER BY symbol, total DESC\n```\n\nWe want to select:\n\n* `label_type` for the pre-generated Flipside label category,&#x20;\n* `symbol` for context in our results set\n* a rounded sum of the total usd-converted balance on this first pass, so we can get a sense for the relative sizes of each group\n\nWhich returns:\n\n| Symbol | Label Type  | Total      |\n| ------ | ----------- | ---------- |\n| USDC   |             | 1537642229 |\n| USDC   | distributor | 871468974  |\n| USDC   | project     | 395089998  |\n| USDC   | other       | 5313082    |\n\nNotice that the `label_type` is missing for our largest group. Flipside's base label set identifies accounts like exchanges, foundations, and operators, but not basic user accounts. We leave those accounts to more context- and behavior- specific classification later, so here, a large \"unlabeled\" set is expected.\n\nIn a later guide, we will cover how to start to break down the unlabeled user set into \"Top Holders\" and \"Smaller Wallets\", which is useful to analyzing token flows.\n\nIf you want to drill down further, you can repeat the query above with `label_subtype` instead of `label_type`:\n\n```sql\nSELECT\n  symbol,\n  label_subtype,\n  round(sum(amount_usd)) as total\nFROM\n  ethereum.erc20_balances\nWHERE\n  balance_date = '2020-10-31'\n  AND amount_usd > 0\n  AND contract_address = '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48'\nGROUP BY 1,2,3\nORDER BY symbol, total DESC\n```\n\nWhich returns:\n\n| Symbol | Label Sub Type              | Total      |\n| ------ | --------------------------- | ---------- |\n| USDC   |                             | 1537642229 |\n| USDC   | distributor\\_dex            |", "doc_id": "d9202122-fe39-4bd6-a0cf-a0f5ab140d21", "embedding": null, "doc_hash": "a5086ed653128246a240a29c4db32b35e89ea5af7470f1cb00f96a4e2166bc4f", "extra_info": {"file_path": "our-data/tutorials/ethereum-tutorials/using-labels-to-break-down-token-supply.md", "file_name": "using-labels-to-break-down-token-supply.md"}, "node_info": {"start": 0, "end": 2806, "_node_type": "1"}, "relationships": {"1": "b54e32475ed6cfae81266e637c1e45cc48a82473", "3": "37312899-f739-4808-ba26-be504f789101"}}, "__type__": "1"}, "37312899-f739-4808-ba26-be504f789101": {"__data__": {"text": "| distributor\\_dex            | 544272742  |\n| USDC   | project\\_token\\_contract    | 341612731  |\n| USDC   | distributor\\_cex            | 228821492  |\n| USDC   | distributor\\_cex\\_satellite | 57614929   |\n| USDC   | project\\_contract           | 51637001   |\n| USDC   | distributor\\_dex\\_balancer  | 40759810   |\n| USDC   | other\\_financial            | 4192633    |\n| USDC   | project\\_other              | 1840265    |\n| USDC   | other\\_misc                 | 919132     |\n| USDC   | other\\_single\\_use          | 201317     |\n\nAs you become more familiar with Flipside's labeling system, you may decide to group certain labels together to express different relationships.\n\nFor example, if you wanted to distinguish between centralized and decentralized exchange wallets, you could combine satellite and hot wallet addresses.\n\nHere's a straightforward pattern for playing with combinations in your query using a `CASE` statement:\n\n```sql\nSELECT\n  symbol,\n  CASE\n  WHEN label_subtype LIKE 'distributor_cex%' THEN 'centralized exchanges'\n  WHEN label_subtype LIKE 'distributor_dex%' THEN 'decentralized exchanges'\n  WHEN label_type IS NULL THEN 'user accounts'\n  ELSE 'other' END as label,\n  round(sum(amount_usd)) as total\nFROM\n  ethereum.erc20_balances\nWHERE\n  balance_date = '2020-10-31'\n  AND amount_usd > 0\n  AND contract_address = '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48'\nGROUP BY 1,2,3\nORDER BY symbol, total DESC\n```\n\nHere we:\n\n* distinguished between centralized and decentralized exchanges at the subtype level\n* grouped unlabeled address together as \"user accounts\", which is probably an over-simplification\n* grouped all other labels together as \"other\", which you probably would want to tease apart in your next query, given how large the result set is\n\nResults:\n\nYou can see how you can continue to slice and dice the supply based on label types and subtypes and eventually other tags in our system to tease out groups of accounts.\n\n| Symbol | Label Type              | Total      |\n| ------ | ----------------------- | ---------- |\n| USDC   | user accounts           | 1537642229 |\n| USDC   | decentralized exchanges | 585032552  |\n| USDC   | other                   | 400403080  |\n| USDC   | centralized exchanges   | 286436421  |\n\nThe useful feature of Flipside's base label set is that it allows you to characterize the entire network at once. The alternative is zooming in on a specific set of addresses, which can sometimes limit your ability to put your results in a broader context.\n", "doc_id": "37312899-f739-4808-ba26-be504f789101", "embedding": null, "doc_hash": "2897e8f10239eede0dc78152fd8efbf927b6441ccbf831e7973ed202afc85b1a", "extra_info": {"file_path": "our-data/tutorials/ethereum-tutorials/using-labels-to-break-down-token-supply.md", "file_name": "using-labels-to-break-down-token-supply.md"}, "node_info": {"start": 2775, "end": 5286, "_node_type": "1"}, "relationships": {"1": "b54e32475ed6cfae81266e637c1e45cc48a82473", "2": "d9202122-fe39-4bd6-a0cf-a0f5ab140d21"}}, "__type__": "1"}, "53ba3d5c-411e-4da2-9e06-013d5fb6e30a": {"__data__": {"text": "# MakerDAO Tutorials\n\nThis guide provides an introduction to exploring Dai related events by using the`ethereum.udm_events` table over a series of simple queries that explore the data.\n\n{% hint style=\"info\" %}\nNote: this tutorial uses deprecated Ethereum tables. See the new [Maker DAO](../archive/tables/ethereum-maker-dao-tables.md) curated tables.\n{% endhint %}\n\nLet's familiarize ourselves with the table by first looking at the types of events that can be queried for `Dai`\n\n```sql\nSELECT \n    event_type, \n    event_name,\n    count(1) as event_count\nFROM ethereum.udm_events \nWHERE \n  symbol = 'DAI' AND\n  block_timestamp >= GETDATE() - interval'8 months'\nGROUP BY event_type, event_name\nORDER BY event_count DESC\n```\n\n| event\\_type     | event\\_name          | event\\_count |\n| --------------- | -------------------- | ------------ |\n| erc20\\_transfer | transfer             | 3929409      |\n| event           | Approval             | 630353       |\n| event           | TransferEnabled      | 1            |\n| event           | OperatorAdded        | 1            |\n| event           | MinterAdded          | 1            |\n| event           | OwnershipTransferred | 1            |\n\nFrom the results of this query we see the majority of events are dominated by `transfer` activity, with the second-highest being, calls to `Approval` on the Dai contract.\n\n{% hint style=\"info\" %}\nNote that in the above query, the event names have been decoded into English legible names.&#x20;\n{% endhint %}\n\nIn our next query let's take a look at the trend of DAI transfers over the prior 30 days:\n\n```sql\nSELECT \n  date_trunc('day', block_timestamp) as metric_date,\n  sum(amount) as total_amount\nFROM ethereum.udm_events\nWHERE \n  event_name = 'transfer' AND\n  symbol = 'DAI' AND\n  amount > 0 AND\n  block_timestamp >= GETDATE() - interval'30 days'\nGROUP BY metric_date\nORDER BY metric_date ASC\n```\n\n![](<../../.gitbook/assets/Screen Shot 2020-11-08 at 8.29.00 PM.png>)\n\nWe can break this query down even further by leveraging [Flipside's labels](../labels/). Let's calculate the amount of DAI that is flowing to centralized exchanges using the `distributor_cex` label sub-type.\n\n```sql\nSELECT \n  date_trunc('day', block_timestamp) as metric_date,\n  sum(amount) as total_amount\nFROM ethereum.udm_events\nWHERE \n  event_name = 'transfer' AND\n  symbol = 'DAI' AND\n  to_label_subtype = 'distributor_cex' AND\n  amount > 0 AND\n  block_timestamp >= GETDATE() - interval'30 days'\nGROUP BY metric_date\nORDER BY metric_date ASC\n```\n\n![](<../../.gitbook/assets/Screen Shot 2020-11-08 at", "doc_id": "53ba3d5c-411e-4da2-9e06-013d5fb6e30a", "embedding": null, "doc_hash": "6a5cc0b90af938db65d39f46f568433123786161ccbb422aa647838784edd133", "extra_info": {"file_path": "our-data/tutorials/getting-started-with-dai-events.md", "file_name": "getting-started-with-dai-events.md"}, "node_info": {"start": 0, "end": 2565, "_node_type": "1"}, "relationships": {"1": "a068f24bd73f8ffafcc74478ae897e60ecb32938", "3": "cfcd108d-6823-40b8-8113-334c02504c51"}}, "__type__": "1"}, "cfcd108d-6823-40b8-8113-334c02504c51": {"__data__": {"text": "Shot 2020-11-08 at 8.36.02 PM.png>)\n\nFrom here, I encourage you to explore our labels even further by breaking down specifically which exchanges DAI is flowing to.\n\nIn our next tutorial, we'll explore the amount of activity of DAI that can be attributed to DeFi related activity vs. non DeFi activity and build Flipside's DeFi Activity Ratio metric.\n", "doc_id": "cfcd108d-6823-40b8-8113-334c02504c51", "embedding": null, "doc_hash": "5c7cdf46b63fe1ec2ac3559eec7092c97794c549d2f5070e3c77417c52ce4329", "extra_info": {"file_path": "our-data/tutorials/getting-started-with-dai-events.md", "file_name": "getting-started-with-dai-events.md"}, "node_info": {"start": 2547, "end": 2897, "_node_type": "1"}, "relationships": {"1": "a068f24bd73f8ffafcc74478ae897e60ecb32938", "2": "53ba3d5c-411e-4da2-9e06-013d5fb6e30a"}}, "__type__": "1"}, "f3da2363-bfe0-431d-8cd8-331ea769ba6c": {"__data__": {"text": "# Overview of Schemas & Tables\n\n{% embed url=\"https://www.youtube.com/watch?v=PqQ2yoUui1k\" %}\n", "doc_id": "f3da2363-bfe0-431d-8cd8-331ea769ba6c", "embedding": null, "doc_hash": "3882f409aac47e6ef9f5222280e00984738ab4cbe124d5ed66f9e1691acf5238", "extra_info": {"file_path": "our-data/tutorials/overview-of-schemas-and-tables.md", "file_name": "overview-of-schemas-and-tables.md"}, "node_info": {"start": 0, "end": 94, "_node_type": "1"}, "relationships": {"1": "ef1783aa8603f35f060be7d34ea798a890000eb3"}}, "__type__": "1"}, "7017c70e-a88f-4fe3-970d-0657f96e4cd1": {"__data__": {"text": "# Solana Tutorials\n\n### Solana Tutorials\n\n{% content-ref url=\"solana-schema-and-tables-video-walkthrough.md\" %}\n[solana-schema-and-tables-video-walkthrough.md](solana-schema-and-tables-video-walkthrough.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"solana-specialty-tables-video-walkthrough.md\" %}\n[solana-specialty-tables-video-walkthrough.md](solana-specialty-tables-video-walkthrough.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"exploring-transactions-in-solana.events.md\" %}\n[exploring-transactions-in-solana.events.md](exploring-transactions-in-solana.events.md)\n{% endcontent-ref %}\n", "doc_id": "7017c70e-a88f-4fe3-970d-0657f96e4cd1", "embedding": null, "doc_hash": "a0556f2d00848ddc4385cebb4ee11d7f7dba5a0c264d1c590ca238595696b1e1", "extra_info": {"file_path": "our-data/tutorials/solana-tutorials/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 590, "_node_type": "1"}, "relationships": {"1": "4423cef4b4cba1df1f2a17b34b41f0f2df86886c"}}, "__type__": "1"}, "789f5a51-ff97-4f3a-9017-1df01eee74ad": {"__data__": {"text": "# Exploring Transactions in solana.events\n\nLearn how transactions are structured on Solana, and how to analyze Solana projects using the solana.events table.\\\n\\\nWe\u2019ll first look at transactions for a specific project, [Marinade Finance](https://marinade.finance/), and then we\u2019ll see how to find transactions for _any_ project on Solana. We\u2019ll also show you how to begin analyzing these transactions in Flipside\u2019s solana.events table.\n\nWe recommend you create a query in [Flipside\u2019s app](https://app.flipsidecrypto.com/) and follow along!\n\n_Note: this article is written for readers who are new to crypto data analysis **or** readers who have some experience but want to learn more about data on Solana._\n\n_Technical Note: As of this writing Feb 18 2022, Marinade Finance uses two different transaction structures for staking deposits, depending on the amount of mSOL available in their liquidity pools. This article is written using only one of these formats, but the same general analysis strategy applies. The first transaction format is shown_ [_here_](https://solscan.io/tx/ngF3HJPi3g7WwkEXU7L4d8gRuggtLTq9cJ31tLXvhxqyet73oX23iaZiqL3cMv9o573xa4gjKqotrksB7N6unf1)_, the second_ [_here_](https://solscan.io/tx/3LtFYvLTnNiFuwQoDswuA6fqdSwgDiUAdVkq8FcPy5FGm1q8XLzWtQLkaWrhqoGxJTv9LXPhc4GVtn9Kwkqw2YA)_. The difference is in the Inner Instructions of the Deposit instruction.)_\n\n## **Case Study: Marinade Finance**\n\nTo motivate our learning let\u2019s start with a practical case study: let\u2019s pretend you\u2019ve been asked to visualize staking deposit transactions on [Marinade Finance](https://marinade.finance/) over time.\n\nHow will you find Marinade transaction data in Flipside\u2019s Solana tables? And specifically staking deposit transactions?\n\n## Finding Transactions: **Participate & Analyze!**\n\nLet\u2019s learn a strategy you can use to find transactions related to any project on Solana with data from the solana.events table.\n\nThe first step is to _participate_ in the project to generate a transaction. You\u2019ll then _analyze_ that transaction using Flipside\u2019s data and a blockchain explorer like Solscan.\n\n_Participate_\n\nIn the context of our case study we visited [Marinade\u2019s app](https://marinade.finance/app/staking), we connected our Phantom wallet, and we staked SOL to receive mSOL \u2014 this generated a staking transaction.\n\n_Analyze_\n\nTo analyze our transaction we looked up our wallet address on [Solscan](https://solscan.io/) and found our transaction\u2019s signature, and then we used that signature to look up our transaction in Flipside\u2019s data!\n\nIf you participated in Flipside\u2019s first Solana Scavenger hunt you probably found your Marinade staking transaction in Flipside\u2019s data using a query like this:\n\n```sql\nSELECT *\nFROM solana.transactions\nwhere date_trunc('day', block_timestamp) = '2022-01-21 00:00:00.000'\n\t\t\t-- on Solana we *always* add a small date range for query efficiency!\nand tx_id =", "doc_id": "789f5a51-ff97-4f3a-9017-1df01eee74ad", "embedding": null, "doc_hash": "3d484fef0b39f503a64140cf2cc1dc743e69122ba3dda5fcc879d2030aa598af", "extra_info": {"file_path": "our-data/tutorials/solana-tutorials/exploring-transactions-in-solana.events.md", "file_name": "exploring-transactions-in-solana.events.md"}, "node_info": {"start": 0, "end": 2900, "_node_type": "1"}, "relationships": {"1": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3", "3": "f7a3fc68-2ba1-45da-a9c4-e1dfb13aeaaf"}}, "__type__": "1"}, "f7a3fc68-2ba1-45da-a9c4-e1dfb13aeaaf": {"__data__": {"text": "we *always* add a small date range for query efficiency!\nand tx_id = 'ngF3HJPi3g7WwkEXU7L4d8gRuggtLTq9cJ31tLXvhxqyet73oX23iaZiqL3cMv9o573xa4gjKqotrksB7N6unf1'\n```\n\nThe query above finds a specific transaction in the solana.transactions table, but in this article we\u2019re going to show you how to find Marinade staking transactions using the solana.events table which contains more detail.\n\nLet\u2019s find our transaction in the solana.events table:\n\n```sql\nselect *\nfrom solana.events\nwhere date_trunc('day', block_timestamp) = '2022-01-21 00:00:00.000'\n\t\t\t-- on Solana we *always* add a small date range for query efficiency!\nand tx_id = 'ngF3HJPi3g7WwkEXU7L4d8gRuggtLTq9cJ31tLXvhxqyet73oX23iaZiqL3cMv9o573xa4gjKqotrksB7N6unf1'\n```\n\nTake a look at the results \u2014 you\u2019ll see much of the same information as in solana.transactions (BLOCK\\_ID, BLOCK\\_TIMESTAMP, etc.).\n\nNotice that solana.transactions had columns like TX\\_FROM\\_ADDRESS and TX\\_TO\\_ADDRESS, but we don\u2019t see these columns in the solana.events table... instead the solana.events table has this information stored in columns called INSTRUCTION and INNER\\_INSTRUCTION, and the information is stored inside JSON data structures like these:\n\n_An example value in the INSTRUCTION column of solana.events:_\n\n```json\n{\n  \"accounts\": [\n    \"8szGkuLTAux9XMgZ2vtY39jVSowEcpBfFfD8hXSEqdGC\",\n    \"mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So\",\n    \"UefNb6z6yvArqe4cJHTXCqStRsKmWhGxnZzuHbikP5Q\",\n    \"7GgPYjS5Dza89wV6FpZ23kUJRG5vbQ1GM25ezspYFSoE\",\n    \"EyaSjUtSgo9aRD1f8LWXwdvkpDTmXAW54yoSHZRF14WL\",\n    \"Du3Ysj1wKbxPKkuPPnvzQLQh8oMSVifs3jGZjJWXFmHN\",\n    \"2GfVuJm5Hbtf5rr6FeUuNXqpPYzJAq8P9HQg6XsrurxV\",\n    \"9dNe8PGfFU8s8eDQE2uXWG33pxASV2ESHPVnqwcCnYes\",\n    \"3JLPCS1qM2zRw3Dp6V4hZnYHd4toMNPkNesXdX9tg6KM\",\n    \"11111111111111111111111111111111\",\n    \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\"\n  ],\n  \"data\": \"WuE7HjnsyebMnwtCrYDY9d\",\n  \"programId\":", "doc_id": "f7a3fc68-2ba1-45da-a9c4-e1dfb13aeaaf", "embedding": null, "doc_hash": "82ae0987629fb1a0fd0cb6e4b3b3427d09c170196cc71d865c6d8d0dafb2f6d4", "extra_info": {"file_path": "our-data/tutorials/solana-tutorials/exploring-transactions-in-solana.events.md", "file_name": "exploring-transactions-in-solana.events.md"}, "node_info": {"start": 2844, "end": 4740, "_node_type": "1"}, "relationships": {"1": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3", "2": "789f5a51-ff97-4f3a-9017-1df01eee74ad", "3": "c3a10e06-9909-4a65-b43b-9462679d9ed5"}}, "__type__": "1"}, "c3a10e06-9909-4a65-b43b-9462679d9ed5": {"__data__": {"text": " \"programId\": \"MarBmsSgKXdrN1egZf5sqe1TMai9K1rChYNDJgjq7aD\"\n}\n```\n\n_An example value in the INNER\\_INSTRUCTION column of solana.events:_\n\n```json\n{\n  \"index\": 0,\n  \"instructions\": [\n    {\n      \"parsed\": {\n        \"info\": {\n          \"amount\": \"116672\",\n          \"authority\": \"EyaSjUtSgo9aRD1f8LWXwdvkpDTmXAW54yoSHZRF14WL\",\n          \"destination\": \"9dNe8PGfFU8s8eDQE2uXWG33pxASV2ESHPVnqwcCnYes\",\n          \"source\": \"7GgPYjS5Dza89wV6FpZ23kUJRG5vbQ1GM25ezspYFSoE\"\n        },\n        \"type\": \"transfer\"\n      },\n      \"program\": \"spl-token\",\n      \"programId\": \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\"\n    },\n    {\n      \"parsed\": {\n        \"info\": {\n          \"destination\": \"UefNb6z6yvArqe4cJHTXCqStRsKmWhGxnZzuHbikP5Q\",\n          \"lamports\": 120000,\n          \"source\": \"2GfVuJm5Hbtf5rr6FeUuNXqpPYzJAq8P9HQg6XsrurxV\"\n        },\n        \"type\": \"transfer\"\n      },\n      \"program\": \"system\",\n      \"programId\": \"11111111111111111111111111111111\"\n    }\n  ]\n}\n```\n\nTo begin to understand this JSON data we need to learn more about how transactions are organized on Solana.\n\n**Solana Transactions Are Organized into Programs & Instructions**\n\nTransactions on Solana are organized into programs (similar to smart contracts on Ethereum). These programs execute sets of \u2018instructions\u2019. You can think of each program\u2019s instructions as telling Solana to \u201cdo this, then do this, then do this, etc...\u201d\n\nHere\u2019s a conceptual outline of how a hypothetical transaction could invoke multiple programs, each with its own set of instructions:\n\n_**Conceptual Outline of a Solana Transaction**_\n\ntransaction\n\n* program 1\n  * instruction 1\n    * inner instruction 1 _\\[note: instructions can contain \u2018inner instructions\u2019]_\n    * inner instruction 2\n    * inner instruction 3\n* program 2\n  * instruction 1 _\\[note: often instructions do **not** have \u2018inner instructions\u2019]_\n* program 3\n  * instruction 1\n    * inner instruction 1\n    * inner instruction 2\n  * instruction 2\n\nThis hypothetical Solana transaction invoked three programs: the first program had one instruction with three inner instructions; the second program had only one instruction with zero inner instructions, etc.\n\nTo make things clearer, let\u2019s create an outline for our Marinade Staking", "doc_id": "c3a10e06-9909-4a65-b43b-9462679d9ed5", "embedding": null, "doc_hash": "b2d1fc670c061e6cb674d1af93036745478cd41d9d732a97506bdb350aad1786", "extra_info": {"file_path": "our-data/tutorials/solana-tutorials/exploring-transactions-in-solana.events.md", "file_name": "exploring-transactions-in-solana.events.md"}, "node_info": {"start": 4786, "end": 7028, "_node_type": "1"}, "relationships": {"1": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3", "2": "f7a3fc68-2ba1-45da-a9c4-e1dfb13aeaaf", "3": "36279905-28ce-4eb6-9428-b4fa39d287df"}}, "__type__": "1"}, "36279905-28ce-4eb6-9428-b4fa39d287df": {"__data__": {"text": "make things clearer, let\u2019s create an outline for our Marinade Staking transaction!\n\n_**Outline of our Marinade Staking Transaction**_\n\ntransaction\n\n* program 1\n  * instruction 1\n    * inner instruction 1\n    * inner instruction 2\n\nWe created this outline by looking at [our transaction on Solscan](https://solscan.io/tx/ngF3HJPi3g7WwkEXU7L4d8gRuggtLTq9cJ31tLXvhxqyet73oX23iaZiqL3cMv9o573xa4gjKqotrksB7N6unf1), and we can use Solscan to add even more detail.\n\n_**More Detail: Outline of our Marinade Staking Transaction**_\n\ntransaction: <mark style=\"background-color:red;\">ngF3HJPi3g7WwkEXU7L4d8gRuggtLTq9cJ31tLXvhxqyet73oX23iaZiqL3cMv9o573xa4gjKqotrksB7N6unf1</mark>\n\n* program 1: <mark style=\"background-color:red;\">Marinade Finance - MarBmsSgKXdrN1egZf5sqe1TMai9K1rChYNDJgjq7aD</mark>\n  * instruction 1: <mark style=\"background-color:red;\">Deposit</mark>\n    * inner instruction 1: <mark style=\"background-color:red;\">Token Transfer</mark>\n    * inner instruction 2: <mark style=\"background-color:red;\">SOL Transfer</mark>\n\nAgain we got all this info from [Solscan](https://solscan.io/tx/ngF3HJPi3g7WwkEXU7L4d8gRuggtLTq9cJ31tLXvhxqyet73oX23iaZiqL3cMv9o573xa4gjKqotrksB7N6unf1) (see screenshots below). Shortly we\u2019ll show you how to access this info in Flipside\u2019s data to power our analysis, but for now we\u2019ll reference Solscan screenshots while we improve our conceptual understanding:\n\n_**More Detail with Screenshots: Outline of our Marinade Staking Transaction**_\n\n* program: <mark style=\"background-color:red;\">Marinade Finance - MarBmsSgKXdrN1egZf5sqe1TMai9K1rChYNDJgjq7aD</mark>\n\n![](<../../../.gitbook/assets/Untitled (1) (1)>)\n\n*   instruction 1: <mark style=\"background-color:red;\">Deposit</mark>\n\n    * inner instruction 1: <mark style=\"background-color:red;\">Token Transfer</mark>\n    * inner instruction 2: <mark style=\"background-color:red;\">SOL Transfer</mark>\n\n\n\n![](<../../../.gitbook/assets/image (5).png>)\n\nSo now that we understand that Solana transactions are organized into programs, instructions, and inner instructions, it\u2019s clearer to see how our transaction\u2019s data show up in the solana.events table. For example you\u2019ll see a lot of the information from Solscan in this JSON from the INNER\\_INSTRUCTIONS column:\n\n```javascript\n{\n  \"index\": 0,\n  \"instructions\": [\n    {\n      \"parsed\": {\n        \"info\": {\n          \"amount\": \"116672\",\n          \"authority\": \"EyaSjUtSgo9aRD1f8LWXwdvkpDTmXAW54yoSHZRF14WL\",\n   ", "doc_id": "36279905-28ce-4eb6-9428-b4fa39d287df", "embedding": null, "doc_hash": "2e800e7b4b63a310ec24781af1c30416938e623b68c23b9d083f406624074bdc", "extra_info": {"file_path": "our-data/tutorials/solana-tutorials/exploring-transactions-in-solana.events.md", "file_name": "exploring-transactions-in-solana.events.md"}, "node_info": {"start": 6982, "end": 9418, "_node_type": "1"}, "relationships": {"1": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3", "2": "c3a10e06-9909-4a65-b43b-9462679d9ed5", "3": "77843106-707d-41fe-96f0-a03309f9f5f8"}}, "__type__": "1"}, "77843106-707d-41fe-96f0-a03309f9f5f8": {"__data__": {"text": "         \"destination\": \"9dNe8PGfFU8s8eDQE2uXWG33pxASV2ESHPVnqwcCnYes\",\n          \"source\": \"7GgPYjS5Dza89wV6FpZ23kUJRG5vbQ1GM25ezspYFSoE\"\n        },\n        \"type\": \"transfer\"\n      },\n      \"program\": \"spl-token\",\n      \"programId\": \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\"\n    },\n    {\n      \"parsed\": {\n        \"info\": {\n          \"destination\": \"UefNb6z6yvArqe4cJHTXCqStRsKmWhGxnZzuHbikP5Q\",\n          \"lamports\": 120000,\n          \"source\": \"2GfVuJm5Hbtf5rr6FeUuNXqpPYzJAq8P9HQg6XsrurxV\"\n        },\n        \"type\": \"transfer\"\n      },\n      \"program\": \"system\",\n      \"programId\": \"11111111111111111111111111111111\"\n    }\n  ]\n}\n```\n\n### **Checkpoint Review**\n\nLet\u2019s review what we\u2019ve learned so far:\n\n1. Our goal was to find _all_ Marinade staking transactions in Flipside\u2019s data.\n2. We started by participating in Marinade staking and generating a transaction.\n3. We found our transaction on [Solscan](https://solscan.io/tx/ngF3HJPi3g7WwkEXU7L4d8gRuggtLTq9cJ31tLXvhxqyet73oX23iaZiqL3cMv9o573xa4gjKqotrksB7N6unf1) and in Flipside\u2019s solana.events table\n4. We learned that transactions on Solana are organized into programs, instructions, and inner instructions, and this helped us better recognize these data in the JSON of the solana.events table.\n\nNow we need to find _all_ Marinade staking transactions, not just our transaction.\n\nLet\u2019s quickly think through how to analyze our single transaction\u2019s data to find _all_ Marinade staking transactions. Along the way we\u2019ll learn how to access JSON data using SQL.\n\n## Extracting data from **solana.events**\n\n**Extracting the program**\n\nLet\u2019s extract only the PROGRAMID field, which we think will be important because the program is identified on Solscan as Marinade Finance.\n\nFrom our staking transaction we\u2019ll use the PROGRAMID value to find all similar transactions on that day:\n\n```sql\nselect\n\tinstruction:programId,\n\t*\nfrom solana.events\nwhere date_trunc('day', block_timestamp) = '2022-01-21 00:00:00.000'\n-- on Solana we *always* add a small date range for query efficiency!\nand instruction:programId = 'MarBmsSgKXdrN1egZf5sqe1TMai9K1rChYNDJgjq7aD'\norder by block_timestamp;\n```\n\nWe accessed the PROGRAMID value by using a colon to \u2018traverse\u2019 the JSON structure and pull out the", "doc_id": "77843106-707d-41fe-96f0-a03309f9f5f8", "embedding": null, "doc_hash": "27fca305c812d6153512941fbc757137ef7f6b4824e5434bbce6701aba977141", "extra_info": {"file_path": "our-data/tutorials/solana-tutorials/exploring-transactions-in-solana.events.md", "file_name": "exploring-transactions-in-solana.events.md"}, "node_info": {"start": 9478, "end": 11721, "_node_type": "1"}, "relationships": {"1": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3", "2": "36279905-28ce-4eb6-9428-b4fa39d287df", "3": "39df2fb5-a6e1-41af-a7c1-0540578c1140"}}, "__type__": "1"}, "39df2fb5-a6e1-41af-a7c1-0540578c1140": {"__data__": {"text": "by using a colon to \u2018traverse\u2019 the JSON structure and pull out the value:\n\n```sql\ninstruction:programId\n--use colons ':' to select nested fields in JSON structure\n```\n\nIf you're following along with a query in [Flipside\u2019s app](https://app.flipsidecrypto.com/), you'll see we get 1,043 rows, and from quickly looking at [the first transaction on Solscan](https://solscan.io/tx/36Q1wDeSGvtXqW32GT4EoTiuU2vkHWNrph1ieUBrXx23oxqA7GpA5Y8wiHZxRUyxRPpXj1tfa6ZBCZiCeTfm44jZ) we see that its program\u2019s INSTRUCTION is referenced as \u2018MergeStakes\u2019 \u2014 _not_ \u2018Deposit\u2019 like our staking transaction.\n\nThis means that filtering on the PROGRAMID alone is not selective enough to find staking transactions, because our query includes other kinds of transactions.\n\n**Extracting the source**\n\nCan we find something more specific about our transaction that identifies it as a staking transaction?\n\nAfter further data exploration, we notice that the amount of mSOL we received came from a SOURCE address starting with \u20187GgPYj...\u2019, an address that is included in our staking transaction\u2019s INNER INSTRUCTIONS field. Also, [Solscan](https://solscan.io/tx/ngF3HJPi3g7WwkEXU7L4d8gRuggtLTq9cJ31tLXvhxqyet73oX23iaZiqL3cMv9o573xa4gjKqotrksB7N6unf1) listed this address \u20187GpPYj...\u2019 as \u201cLiq Pool Msol Leg\u201d (see its list of input accounts for the Deposit instruction) \u2014 this might be read as e.g. \u201cLiquidity Pool Msol Ledger\u201d so we reason that all Marinade staking deposits must come from this address.\n\nLet\u2019s add this SOURCE field with address \u20187GpPYj...\u2019 to our query:\n\n```sql\nselect\n\tinstruction:programId,\n\tinner_instruction:instructions[0]:parsed:info:source,\n\t*\nfrom solana.events\nwhere date_trunc('day', block_timestamp) = '2022-01-21 00:00:00.000'\n-- on Solana we *always* add a small date range for query efficiency!\nand instruction:programId = 'MarBmsSgKXdrN1egZf5sqe1TMai9K1rChYNDJgjq7aD'\nand inner_instruction:instructions[0]:parsed:info:source = '7GgPYjS5Dza89wV6FpZ23kUJRG5vbQ1GM25ezspYFSoE'\norder by block_timestamp;\n```\n\nWe accessed the SOURCE value by using colons _and brackets_:\n\n```sql\ninner_instruction:instructions[0]:parsed:info:source\n--use colons ':' to select nested fields in JSON structure\n--the 'instructions' field contains an array enclosed in brakets [...]\n--so we use [0] to access the 1st element in that array\n```\n\nYou can read more about [traversing unstructured JSON data here in Snowflake\u2019s documentation](https://docs.snowflake.com/en/user-guide/querying-semistructured.html#querying-semi-structured-data).\n\n**Mission Accomplished! Or is it?...**\n\nAgain if you run our query in [Flipside\u2019s app](https://app.flipsidecrypto.com/), you'll see we get 766 rows, and from", "doc_id": "39df2fb5-a6e1-41af-a7c1-0540578c1140", "embedding": null, "doc_hash": "63fa5a457abdec995a879544256c3be812083bbe597b636ad13bc0b2e4060b37", "extra_info": {"file_path": "our-data/tutorials/solana-tutorials/exploring-transactions-in-solana.events.md", "file_name": "exploring-transactions-in-solana.events.md"}, "node_info": {"start": 11668, "end": 14337, "_node_type": "1"}, "relationships": {"1": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3", "2": "77843106-707d-41fe-96f0-a03309f9f5f8", "3": "f77bbf06-209f-4c00-99ae-a2a49c37be88"}}, "__type__": "1"}, "f77bbf06-209f-4c00-99ae-a2a49c37be88": {"__data__": {"text": "you'll see we get 766 rows, and from inspecting the transactions we see yes they are all deposits just like our staking transaction.\n\nWe used the SOURCE field to find all Marinade staking transactions! In other words, we decided that all transactions coming from this source must be deposit staking transactions.\n\nBut what if a transaction were organized like this?\n\ntransaction\n\n* program 1\n  * instruction 1\n    * inner instruction 1\n    * inner instruction 2 ...source: \u20187GgPYj...\u2019\n    * inner instruction 3\n\n(In fact, here\u2019s [a transaction just like this on Solscan](https://solscan.io/tx/49vjSXygKZFazHKVdQ9roEib1628qYxg1xajp8Pgw83RtLQoe4rghkDh9RGUkcNDUgzvzwz5S57KWsEyR48BShWv).)\n\nIs this a staking deposit transaction? Our query would have missed it because we used \\[0] to access _the first_ inner instruction, not the second! (Arrays in JSON are \u2018zero-indexed\u2019.)\n\n```sql\ninner_instruction:instructions**[0]**:parsed:info:source\n--use colons ':' to select nested fields in JSON structure\n--the 'instructions' field contains an array enclosed in brakets [...]\n--so we use [0] to access the 1st element in that array\n```\n\nEven though this transaction had a token transfer coming from \u20187GpPYj...\u2019 Solscan labels the instruction as \u2018removeLiquidity\u2019 _not_ \u2018Deposit\u2019.\n\nSo we decide we\u2019re okay, we aren\u2019t missing those transactions, but let\u2019s use a query to make sure:\n\n```sql\nselect\n\tinstruction:programId,\n\tinner_instruction:instructions[0]:parsed:info:source,\n\t*\nfrom solana.events\nwhere date_trunc('day', block_timestamp) = '2022-01-21 00:00:00.000'\n-- on Solana we *always* add a small date range for query efficiency!\nand inner_instruction:instructions[1]:parsed:info:source = '7GgPYjS5Dza89wV6FpZ23kUJRG5vbQ1GM25ezspYFSoE'\norder by block_timestamp;\n```\n\nThis time we get 88 rows and we check a few more transactions on Solscan like [this one](https://solscan.io/tx/3dxLsDGPWqo1ihwc1CAsTBW9mGUMNdwchC7ZWUFDSWMtZyRKjX43oNQrxWMS48h2rpY64kYerFooGpF72hj8q6af) and now we have more decisions to make and questions to answer:\n\nThis transaction had a token transfer coming from \u20187GpPYj...\u2019 but we don\u2019t see Marinade Finance listed anywhere in the programs... ! What are these other programs? Are they also creating staking transactions?\n\nAfter more digging and thinking we decided see the first program above doesn\u2019t transfer any mSOL, so it can\u2019t be a deposit, but the second program \u2018mRefx8...\u2019 _does_ contain a deposit. It turns out that if we [search Github for that program](https://github.com/search?q=mRefx8ypXNxE59NhoBqwqb3vTvjgf8MYECp4kgJWiDY\\&type=code) we find evidence it\u2019s connected to [Marinade\u2019s Referral Program](https://docs.marinade.finance/partnerships/referral-program) \u2014 aha! We conclude", "doc_id": "f77bbf06-209f-4c00-99ae-a2a49c37be88", "embedding": null, "doc_hash": "de71de647850569b00eeaf3d65b02d1e6bd902ccd297d19e64d4caaa7e2f433d", "extra_info": {"file_path": "our-data/tutorials/solana-tutorials/exploring-transactions-in-solana.events.md", "file_name": "exploring-transactions-in-solana.events.md"}, "node_info": {"start": 14363, "end": 17071, "_node_type": "1"}, "relationships": {"1": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3", "2": "39df2fb5-a6e1-41af-a7c1-0540578c1140", "3": "f3d32721-dd0d-4c49-bcc8-f6d6c97b12ee"}}, "__type__": "1"}, "f3d32721-dd0d-4c49-bcc8-f6d6c97b12ee": {"__data__": {"text": "\u2014 aha! We conclude users are in fact making staking deposits into Marinade here, but through the referral program, and we probably should include these in a thorough analysis of Marinade staking deposits.\n\n## Conclusion & Takeaways\n\nWe successfully found a way to identify all Marinade staking transaction data on Solana!\n\nAgain let\u2019s review what we learned:\n\n1. Our goal was to find all Marinade staking transactions in Flipside\u2019s data.\n2. We started by participating in Marinade staking and generating a transaction.\n3. We found our transaction on [Solscan](https://solscan.io/tx/ngF3HJPi3g7WwkEXU7L4d8gRuggtLTq9cJ31tLXvhxqyet73oX23iaZiqL3cMv9o573xa4gjKqotrksB7N6unf1) and in Flipside\u2019s solana.events table.\n4. We learned that transactions on Solana are organized into programs, instructions, and inner instructions, and this helped us better recognize these data in the JSON of the solana.events table.\n5. We used SQL to analyze JSON data, to explore related transactions, and to make decisions about how to identify _all_ Marinade staking transactions.\n\nLet\u2019s acknowledge some important takeaways we can draw from this process:\n\n* We used the process of participate & analyze to find Marinade Finance staking transactions, but you can use this process to find transactions for _any_ project of your choice on Solana.\n* For analyses in general we may want to analyze some set of transaction behaviors (like Marinade staking transactions), but because Solana transactions are organized into different hierarchies and program/instruction orderings, it takes some detective work and critical thinking to make decisions for your analyses and come up with qualifying criteria (these are great data analyses skills to practice).\n* Throughout this article we limited our explorations to a single day of Solana data for simplicity and query performance. This is because the Solana network\u2019s high throughput generates a LOT of data \u2014 you always want to set small date ranges while doing exploratory analyses.\n\nAs a final note, we chose the solana.events table because it contains a lot of transaction detail that can power a wide range of analyses. Flipside is excited to offer Solana data to the Solana community and our community analysts, and this means building fast \u2014 we\u2019re constantly making improvements and we\u2019re working on more curated tables and labeled data to make your analyses easier. Working with tables like solana.events will help you build a deep understanding of transactions so you can leverage the growing power of Flipside\u2019s Solana data!\n", "doc_id": "f3d32721-dd0d-4c49-bcc8-f6d6c97b12ee", "embedding": null, "doc_hash": "7f2526edd2e822d38d9330a063478415b1ec82258534835946eaa73e8277a5ed", "extra_info": {"file_path": "our-data/tutorials/solana-tutorials/exploring-transactions-in-solana.events.md", "file_name": "exploring-transactions-in-solana.events.md"}, "node_info": {"start": 17082, "end": 19635, "_node_type": "1"}, "relationships": {"1": "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3", "2": "f77bbf06-209f-4c00-99ae-a2a49c37be88"}}, "__type__": "1"}, "f5570f51-f130-4fbe-8028-9d10e3c8b84f": {"__data__": {"text": "# Solana Schema & Tables: Video Walkthrough\n\n{% embed url=\"https://www.youtube.com/watch?v=o19ObLWrHBE\" %}\n", "doc_id": "f5570f51-f130-4fbe-8028-9d10e3c8b84f", "embedding": null, "doc_hash": "2d93c3391a1e5c548f3e4389d68b6ff92396fce15b5abdc70bc1c1cf06e2b155", "extra_info": {"file_path": "our-data/tutorials/solana-tutorials/solana-schema-and-tables-video-walkthrough.md", "file_name": "solana-schema-and-tables-video-walkthrough.md"}, "node_info": {"start": 0, "end": 107, "_node_type": "1"}, "relationships": {"1": "c24a5c4326d98c87d2aa6b84faa0244600e62056"}}, "__type__": "1"}, "5654ac06-1082-47a4-8c99-67585cc4e1ee": {"__data__": {"text": "# Solana Specialty Tables: Video Walkthrough\n\n{% embed url=\"https://www.youtube.com/watch?v=D3AlhgJBAfM\" %}\n", "doc_id": "5654ac06-1082-47a4-8c99-67585cc4e1ee", "embedding": null, "doc_hash": "7248efed7d1f039ff64e8b0bd33ed0c40e7404cb048bc0f48ec30af9b25e3330", "extra_info": {"file_path": "our-data/tutorials/solana-tutorials/solana-specialty-tables-video-walkthrough.md", "file_name": "solana-specialty-tables-video-walkthrough.md"}, "node_info": {"start": 0, "end": 108, "_node_type": "1"}, "relationships": {"1": "d37cc6b47345fe3830a5e6889682f63db50bd1e0"}}, "__type__": "1"}, "279e97fe-0eef-4e12-8aaa-80bdc0c4f709": {"__data__": {"text": "# THORChain Tutorials\n\n{% content-ref url=\"thorchain-schema-and-tables.md\" %}\n[thorchain-schema-and-tables.md](thorchain-schema-and-tables.md)\n{% endcontent-ref %}\n\n{% content-ref url=\"calculating-il-for-thorchain.md\" %}\n[calculating-il-for-thorchain.md](calculating-il-for-thorchain.md)\n{% endcontent-ref %}\n", "doc_id": "279e97fe-0eef-4e12-8aaa-80bdc0c4f709", "embedding": null, "doc_hash": "ed2fcb1b9da8ce7f40bf3cf81cfef2ac3a5cfa3c6c2867fc56c2d8a9305a74ec", "extra_info": {"file_path": "our-data/tutorials/thorchain-tutorials/README.md", "file_name": "README.md"}, "node_info": {"start": 0, "end": 309, "_node_type": "1"}, "relationships": {"1": "dd0f3060c5a42be9096ff004a1ece84711081f22"}}, "__type__": "1"}, "5540414c-c000-4843-b825-42958f40354e": {"__data__": {"text": "# Calculating IL for THORChain\n\n{% embed url=\"https://www.youtube.com/watch?v=AsuqMa_kO9A\" %}\n", "doc_id": "5540414c-c000-4843-b825-42958f40354e", "embedding": null, "doc_hash": "ab72bb909ce0bbd92f22b3e25095ea6d253538feaf54a48ccf2cdd80677ed9b0", "extra_info": {"file_path": "our-data/tutorials/thorchain-tutorials/calculating-il-for-thorchain.md", "file_name": "calculating-il-for-thorchain.md"}, "node_info": {"start": 0, "end": 94, "_node_type": "1"}, "relationships": {"1": "9e4db402563c32d29fb756ca993ad7b47a6ffbc4"}}, "__type__": "1"}, "65d436cf-0eaf-4325-ba01-3cd3f562de8d": {"__data__": {"text": "# THORChain Schema & Tables\n\n\n\n{% embed url=\"https://www.youtube.com/watch?v=PpTRZcE_KgI\" %}\n", "doc_id": "65d436cf-0eaf-4325-ba01-3cd3f562de8d", "embedding": null, "doc_hash": "dd982b991de6332deb99bb5be8c363324021d553c318adf7ccdeda2901973429", "extra_info": {"file_path": "our-data/tutorials/thorchain-tutorials/thorchain-schema-and-tables.md", "file_name": "thorchain-schema-and-tables.md"}, "node_info": {"start": 0, "end": 93, "_node_type": "1"}, "relationships": {"1": "ec908dbaa67bf94f6dc9a21f4f1b09a62d9ce87e"}}, "__type__": "1"}, "d3b98457-d3f9-4c4c-8f89-e4985d213a22": {"__data__": {"text": "---\ndescription: Getting familiar with our SQL dialect.\n---\n\n# Using Snowflake SQL\n\nIf you're familiar with common SQL dialects like Postgres or MySQL, you'll find that while there are a few specific differences, the basics will be very familiar, as the Snowflake SQL dialect is ANSI SQL compliant. ([More on SQL standards and interoperability](https://en.wikipedia.org/wiki/SQL#Interoperability\\_and\\_standardization).)&#x20;\n\nHere's a roundup of [some of the key differences](https://towardsdatascience.com/from-postgres-to-snowflake-f4b403548066) people run into when switching from Postgres to Snowflake that we found helpful. In particular:\n\n* Filtering in Snowflake must be done with CASE statements.\n* No support for DISTINCT ON, so people use window functions, generally.\n\nTo help navigate this all of this, Snowflake also maintains a comprehensive [SQL reference](https://docs.snowflake.com/en/sql-reference-commands.html), and many Snowflake-specific functions are available. (Crypto analysts often find their [JSON parsing functions](https://docs.snowflake.com/en/sql-reference/functions-semistructured.html) can be particularly helpful.)\n\n", "doc_id": "d3b98457-d3f9-4c4c-8f89-e4985d213a22", "embedding": null, "doc_hash": "4b34930c9a9e8ef01827f07c5cfd962d83fb51ca64e6380368c8b1a9e64f35b7", "extra_info": {"file_path": "our-data/using-snowflake-sql.md", "file_name": "using-snowflake-sql.md"}, "node_info": {"start": 0, "end": 1151, "_node_type": "1"}, "relationships": {"1": "794fea240b5ad2409d61c4470a5be55799bbb769"}}, "__type__": "1"}, "00aa95e8-3dd7-48b8-92b8-94774da4564e": {"__data__": {"text": "---\ndescription: How to write queries that return results quickly.\n---\n\n# Writing Efficient Queries\n\nA few basic techniques:\n\n* **Date Filtering:** when querying fact tables, or any table with a large number of rows, it's best to filter your query to a small date range by adding a \"where\" clause, something like this: \\\n  `WHERE block_timestamp >= CURRENT_DATE - interval '1 day'` \u2014 this is especially helpful if you're just getting started exploring a particular table, are looking for quick sample data, etc.\n* **Select Only Columns You Need**: instead of using `SELECT *` every time, try selecting only the particular columns required to get the results you need \u2014 this optimization can often be applied after you're done making charts, dashboards etc., when you know definitively which columns you're really using, and will yield faster results for viewers of your work.\n\n", "doc_id": "00aa95e8-3dd7-48b8-92b8-94774da4564e", "embedding": null, "doc_hash": "841803f0ccb5c20519d5978541d99639cfc65dedbf099372dff789fd0ef688fa", "extra_info": {"file_path": "our-data/writing-efficient-queries.md", "file_name": "writing-efficient-queries.md"}, "node_info": {"start": 0, "end": 877, "_node_type": "1"}, "relationships": {"1": "ba1d102a51a8cfff61f5818ec3658435e559ade8"}}, "__type__": "1"}}, "docstore/ref_doc_info": {"5671492aec033f84da2812e86088ee4ed10051d7": {"doc_ids": ["81a71861-ba9f-4557-8854-4957af88c7f0", "1544b8e4-1031-427b-b421-1be18dd5030d", "7b5ef479-26f1-4977-b29b-a0ee52851a2c"], "extra_info": {"file_path": ".gitbook/assets/rest_api.yml", "file_name": "rest_api.yml"}}, "0ed70d273ac7dd6a327f2f46a961848fef52b208": {"doc_ids": ["103f2a97-0678-464e-ab58-2f9f5586cae5", "aa5b371e-cc42-4f42-96e5-a3a815ea71df", "82abe1fd-1144-47de-a499-de3c36b02c24"], "extra_info": {"file_path": ".gitbook/assets/rest_api_2022-08-31.yml", "file_name": "rest_api_2022-08-31.yml"}}, "9e4404da59413b5bded302820d912ae0b583109c": {"doc_ids": ["66e7b425-f4a9-41f6-bf01-d44bc4b4e8b1", "26c3548b-ddcd-42dc-8b15-236cc571d72d", "ef90062e-9ab3-40c0-88ca-cabda8256d08"], "extra_info": {"file_path": ".gitbook/assets/restapi_docs.yml", "file_name": "restapi_docs.yml"}}, "69a9207196e9a61a0c028ecda93a717e6deec6ea": {"doc_ids": ["b9885655-9735-451e-8fae-b7ec70b7d4d8"], "extra_info": {"file_path": "README.md", "file_name": "README.md"}}, "cdcbc7fa9db4a577154ddce0cfa880b2ebe608ba": {"doc_ids": ["a92a67b8-12ca-4556-8300-51ecd7d37610", "8e654730-5b18-487a-9dcc-adf663f6b5a2", "c7d8ee13-c824-4e51-a77d-e5fafd940718", "59dada91-b5d5-4eb9-8bcb-62f04c168451", "88a33d27-1ba4-4891-b474-be94490b027b", "616ce576-f2bb-4bb4-a19a-91786e0f2969", "66932dae-05e8-45d9-a667-8ed700325939", "b75a1a3a-e3f2-43ea-8cd6-f2b69a402502", "8f84a4bd-2e11-44e4-8855-0f46cf2e523d", "ff9a9ad7-3150-4938-94a0-4171d8ebf334"], "extra_info": {"file_path": "SUMMARY.md", "file_name": "SUMMARY.md"}}, "1048dc86af97aa4f0ba98cdb25cee8e887231c29": {"doc_ids": ["f5fe57db-9df2-4f8a-8af2-1c4ba440767a"], "extra_info": {"file_path": "contribute/contribute-to-flipside-data.md", "file_name": "contribute-to-flipside-data.md"}}, "9b7a00af9b35bb226152ad20c0bf27922b0e2653": {"doc_ids": ["b6ee48c8-5f86-4f00-8485-94339b35f43e", "77f35dc7-6e6b-405e-9ff6-66bdd6e381c6"], "extra_info": {"file_path": "contribute/getting-started/README.md", "file_name": "README.md"}}, "c5f02be483026691c084a396003ad63ac26a6ad9": {"doc_ids": ["9ca7fcd2-29dc-4473-a170-61b33efbb206", "8aa0a039-174f-445c-b340-6c6822c202bf"], "extra_info": {"file_path": "contribute/getting-started/contribution-workflow.md", "file_name": "contribution-workflow.md"}}, "57bffcf6953ce2a179a01ba4d43b0cc92e1e3002": {"doc_ids": ["2f322d01-5534-4915-97ac-28cd8c44e1f5", "a502fcd4-da39-458f-9eee-351341bf8d9c"], "extra_info": {"file_path": "contribute/model-standards/README.md", "file_name": "README.md"}}, "91a8da9adeafa9b8be4c9f9b0b57b3e2cac5ce34": {"doc_ids": ["67a9c5a0-d0b7-497d-95d8-b8baee490d92"], "extra_info": {"file_path": "contribute/model-standards/dbt-tips.md", "file_name": "dbt-tips.md"}}, "b998f7b93229b98d110af86ffa3cf41d8f9a827e": {"doc_ids": ["ce637b4f-5ba4-49af-8fd2-70e22e2a04a7"], "extra_info": {"file_path": "contribute/pr-checklist.md", "file_name": "pr-checklist.md"}}, "9fc9fc4708360a6b514c19bd8aba2266228f78a3": {"doc_ids": ["d1b48182-1402-45cc-8dab-618287fcd69c", "c7137b7c-29a7-4d74-b26c-678e60cd7481"], "extra_info": {"file_path": "data-shares/snowflake-data-shares.md", "file_name": "snowflake-data-shares.md"}}, "0dbdc2a5a515873e209178e05cf3484a5fed11e2": {"doc_ids": ["570aa1da-769e-4908-97ba-c942a4c50f2c", "e0a074a6-e33a-4ff8-9d67-64463258e4e5", "78079402-6695-4a65-ba57-c76768c938e9", "e6955ef4-b542-4044-9b72-8648cf13903b"], "extra_info": {"file_path": "flipside-api/community-showcase.md", "file_name": "community-showcase.md"}}, "a426339330458ef60eba1eec8501ddc97477e7e2": {"doc_ids": ["359e054b-0700-4bbc-b38f-efedb03628e0"], "extra_info": {"file_path": "flipside-api/get-started/README.md", "file_name": "README.md"}}, "8e192908fc3eaf333f9b63dd23b2e3df6ab6f8e9": {"doc_ids": ["3bf2bfa9-74f4-4b71-a7a4-8db90ae73646"], "extra_info": {"file_path": "flipside-api/get-started/archive/README.md", "file_name": "README.md"}}, "ae7815703ece62e71e528d348220551853bc9bd7": {"doc_ids": ["fe8e1c06-0553-427c-b770-5ce302431daa", "040eee72-37b9-4639-8abf-eda21d4c7c2b", "5560e986-02eb-4d70-b1de-16b8cc1d489b", "f8db8c9f-ef24-4857-b30d-3622c8497575", "457e5441-1c28-4fb6-b4c4-374841e2c81f", "cf63d282-d291-463e-802d-c93127c9a19e", "8c2a41ef-3bc0-411b-9eee-e9e5cb6a25f7"], "extra_info": {"file_path": "flipside-api/get-started/archive/r.md", "file_name": "r.md"}}, "07b5167f18af19d2e106590f03673139d5fa0423": {"doc_ids": ["b0fcfcd1-3dc7-4504-bd71-50d80136de9b", "47bc01bb-a2f1-482f-96ad-9b7333797394", "17f7eafd-68f1-4331-bf60-99df2fd7aaa0", "ffaefd80-6526-46c4-9982-9029193f4f08"], "extra_info": {"file_path": "flipside-api/get-started/js-ts-sdk.md", "file_name": "js-ts-sdk.md"}}, "b164bda9a66ff9e49325a175cdd29093f733d809": {"doc_ids": ["1c617377-1845-4e2b-b3bb-2f383fe0bfeb"], "extra_info": {"file_path": "flipside-api/get-started/rate-limits.md", "file_name": "rate-limits.md"}}, "be526e5b79a8ae57956c136b596a262a813dc260": {"doc_ids": ["199e5665-9076-41b2-aeb3-cc635274ddc6", "285a0340-493b-4522-8724-e467d375da1f", "be458d20-f7ef-4536-893c-c7c40d08478a", "15375105-0cdb-4666-bf83-f65e696a1660", "5c8fdfb0-fda1-4918-b73b-9f921f038e9b"], "extra_info": {"file_path": "flipside-api/get-started/rest-api.md", "file_name": "rest-api.md"}}, "9a7e916d43bf7afa9e09a8520dcfdee4dbbf0bb6": {"doc_ids": ["0430b3bb-5a3c-479e-a43e-5280dac7911c"], "extra_info": {"file_path": "flipside-api/getting-started.md", "file_name": "getting-started.md"}}, "412cc622609887de5c7b574701db63bd96b03466": {"doc_ids": ["82024a48-806d-4d87-9d88-93c1d9059d7e"], "extra_info": {"file_path": "flipside-api/have-questions.md", "file_name": "have-questions.md"}}, "547138a76a4b1e0a985e96b9aae632dd0177c3ca": {"doc_ids": ["9a30f933-e699-4b85-a354-5d24289d5efa", "455839ff-2783-4a05-b5b8-3cef2944de16"], "extra_info": {"file_path": "flipside-api/key-concepts/caching-maxageminutes.md", "file_name": "caching-maxageminutes.md"}}, "a4375c718ab916778b56e40eb60f3c95296af965": {"doc_ids": ["89baa666-e122-4143-a8f5-250e76f8e36c"], "extra_info": {"file_path": "flipside-api/key-concepts/errors.md", "file_name": "errors.md"}}, "028f42036ecd26fcb68e0f57d098aac30f28601b": {"doc_ids": ["7440b451-f1b1-40b1-b5c5-1c3dea8d5225", "53f2f7f3-87e2-4962-be75-273f711f7d20"], "extra_info": {"file_path": "flipside-api/key-concepts/filtering.md", "file_name": "filtering.md"}}, "576313c1a0afa6bfab8fc0e3beb56c5c341b90cb": {"doc_ids": ["dcec3764-ec7e-4665-bc92-b45410fb7520", "db72bf0f-ef9b-4258-bbf2-217fb6a5bb4b"], "extra_info": {"file_path": "flipside-api/key-concepts/pagination.md", "file_name": "pagination.md"}}, "44e003bf77822b76850b12a39919b761173ed899": {"doc_ids": ["cc5cc4ac-92cc-46c3-b7f1-f6ac682d5859", "2c5867db-778b-4410-b902-0436a0b9850d", "936806b7-f771-4a5a-aa5a-091502e17afb"], "extra_info": {"file_path": "flipside-api/key-concepts/query-results.md", "file_name": "query-results.md"}}, "232cb84e428d7e1578ab630c80f9fb458d98d3b2": {"doc_ids": ["08a1b612-c4e1-476f-9193-23dd76109af2"], "extra_info": {"file_path": "flipside-api/key-concepts/query-seconds.md", "file_name": "query-seconds.md"}}, "6662a1019141825ca4130bb6868b1ed7989abf58": {"doc_ids": ["313267d4-c720-4f70-b870-d6239eb07fff", "6a533f38-7677-4491-9664-2269cb42313d", "b09026e7-b7a1-47d6-8034-47277ff3f55d"], "extra_info": {"file_path": "flipside-api/key-concepts/run-your-first-query.md", "file_name": "run-your-first-query.md"}}, "84acf0f72688c789cced0fef1472f68b5b2256c4": {"doc_ids": ["e8f3c2e5-5284-4a9a-8dc8-a02afc24cdac"], "extra_info": {"file_path": "flipside-api/key-concepts/sorting.md", "file_name": "sorting.md"}}, "40b80c69ba02aa45e159c01363d87cab6f4a5f7a": {"doc_ids": ["4d89d41b-5940-4587-a004-a13d6d151d23"], "extra_info": {"file_path": "flipside-api/sdks.md", "file_name": "sdks.md"}}, "6b5d4322455ac11d2e96fdf25fd22186ff990a42": {"doc_ids": ["744c97ad-d03f-4d9f-bb99-83e025461860", "ad032309-5dc0-4104-9215-12073262e210"], "extra_info": {"file_path": "flipside-api/shroomdk-migration-guide.md", "file_name": "shroomdk-migration-guide.md"}}, "327b05363a335a0a4daa90e894db3c48177fc544": {"doc_ids": ["3aee61f4-0553-45ba-983f-9af0985f1285"], "extra_info": {"file_path": "flipside-api/templates-and-walkthroughs.md", "file_name": "templates-and-walkthroughs.md"}}, "b66858711eb5c50841b37ae15e00d7e7ac3857db": {"doc_ids": ["6ae15227-a4d8-4bf2-8f69-5a9b7d878cc5", "d7b17a6c-511d-4990-870f-0e4afada7a45"], "extra_info": {"file_path": "our-app/analyst-rewards/README.md", "file_name": "README.md"}}, "5de73531b22bf0f24cc0f50507addbf41b93dfac": {"doc_ids": ["02232173-6cc6-4592-8466-2d92f17d4e54"], "extra_info": {"file_path": "our-app/analyst-rewards/top-8-dashboard-rewards.md", "file_name": "top-8-dashboard-rewards.md"}}, "f669e7cf2b772462b69e60a6dd11796e7fb73906": {"doc_ids": ["7a7b61ad-fb99-48a6-9798-7e5333a15597"], "extra_info": {"file_path": "our-app/getting-around-the-app/README.md", "file_name": "README.md"}}, "4ac5b4fe2583a41853803d7a3a757e4c7457065a": {"doc_ids": ["96be5e89-4eab-4dee-979c-c84fcae0c5d7", "ddd73c22-acc4-41d1-95c9-9ca053dc3241"], "extra_info": {"file_path": "our-app/getting-around-the-app/dashboard-editor.md", "file_name": "dashboard-editor.md"}}, "fa213065788801d25a41ccbb6494762ea6b60786": {"doc_ids": ["1cbb27d8-dee7-4568-911d-52b240184373", "395e7aab-3a2b-4aa9-9fc6-471631cbb8fb"], "extra_info": {"file_path": "our-app/getting-around-the-app/discover.md", "file_name": "discover.md"}}, "e2ca1341c20ea9cb5f854bea7e836b867dbcf5df": {"doc_ids": ["8f732e1e-0ff6-4372-bb79-b30dd663be03"], "extra_info": {"file_path": "our-app/getting-around-the-app/my-work.md", "file_name": "my-work.md"}}, "86ad20318217bfb7e66e1c40738eddad04e75ab6": {"doc_ids": ["dfe2b914-9e18-422b-8cfa-a86855f19b04"], "extra_info": {"file_path": "our-app/getting-around-the-app/profiles.md", "file_name": "profiles.md"}}, "13edba9825e5f0b434d6eb6d10d9a2549f9398a0": {"doc_ids": ["c7b02284-a446-47b4-be28-811cbe3504c5", "bc07890a-3a50-450f-b596-50a0e01466e4"], "extra_info": {"file_path": "our-app/getting-around-the-app/query-editor.md", "file_name": "query-editor.md"}}, "909bd63cbecdc122c31000fcd3507b4a694cd472": {"doc_ids": ["3d2345f3-2d36-4a97-aebb-8490094b36d5", "0f05c84b-3e9a-45bb-9018-a4a33ba6586c", "51cd63d2-c243-490e-85a7-1e60d0709b2a"], "extra_info": {"file_path": "our-app/getting-started.md", "file_name": "getting-started.md"}}, "bdd297247ca7c547115fe4685765adaf58a951e0": {"doc_ids": ["acac4f0a-6448-452a-af0b-61b3eed20610", "14b14eb9-fe72-405d-920e-75da033b5697", "fa5fb075-0582-4265-9863-95c3a3aff23e", "191adc4a-aff3-4750-8e1d-fff87993f89e", "732ea6af-806d-469b-a6a2-978944f00660", "74c67aae-9ddb-4d64-863f-4e016eae99ae", "5edf6218-b0d4-46a4-a235-b7fa63bc78b4", "ea429702-f75f-4ac9-8e05-94b82dde72a3", "a14d302a-5326-4c19-b8eb-45b91cf2ed22", "38975513-7900-4b99-a0df-fb4423b7e5cb"], "extra_info": {"file_path": "our-app/keyboard-shortcuts.md", "file_name": "keyboard-shortcuts.md"}}, "6ea498b6e459e0faaac7f8e693b37454c92586e6": {"doc_ids": ["4b56411a-4ce7-4fa2-ab97-b7222cd50a84"], "extra_info": {"file_path": "our-app/markdown-reference.md", "file_name": "markdown-reference.md"}}, "e429f20687887c64d4e376a37ec4bccf4b0df019": {"doc_ids": ["f99b825f-cdb8-4028-b5e5-1881fea12873"], "extra_info": {"file_path": "our-data/archive/README.md", "file_name": "README.md"}}, "dd83ec26522a6ed986440ced4000688c6d2830aa": {"doc_ids": ["953240f7-f207-4bc6-90b3-a73696c75f62"], "extra_info": {"file_path": "our-data/archive/algorand-tutorials.md", "file_name": "algorand-tutorials.md"}}, "13c0ddb27ed5c3c0175599a769632ae5a8bd4ec9": {"doc_ids": ["5549255e-e7de-4f3f-97ea-ed5a311bab81"], "extra_info": {"file_path": "our-data/archive/data-updates.md", "file_name": "data-updates.md"}}, "5db6055c8bd5228db9762934c61003dbd1125b1a": {"doc_ids": ["779e272f-e34a-4904-859d-eb1dd2e0b24c", "c10a940e-e5cf-42ff-a204-ed16dc3f4377"], "extra_info": {"file_path": "our-data/archive/tables/README.md", "file_name": "README.md"}}, "a39ee3df8e1c7a73eb305a5213b293a9c53bf468": {"doc_ids": ["a48db3e7-da77-4111-94b4-55ecc4a2c986", "b8cc6672-3615-4635-972b-6cfe971ea76e"], "extra_info": {"file_path": "our-data/archive/tables/aave-tables/README.md", "file_name": "README.md"}}, "0d1f5c86014c82126c40bc2aac449407dd1480cb": {"doc_ids": ["c6eadab4-5716-410e-8c95-b877c1f3a0b8"], "extra_info": {"file_path": "our-data/archive/tables/aave-tables/borrows.md", "file_name": "borrows.md"}}, "d3a88cf206b46f53b0e6321c62306b0d818555ca": {"doc_ids": ["8cca72b8-62ad-42d7-bf6a-1e3f92288bc2"], "extra_info": {"file_path": "our-data/archive/tables/aave-tables/deposits.md", "file_name": "deposits.md"}}, "29f97cf4f9b01220262d8e219f24b526d09f85bd": {"doc_ids": ["df9a3d05-ba11-4c3d-a6dc-55c765d17010"], "extra_info": {"file_path": "our-data/archive/tables/aave-tables/flashloans.md", "file_name": "flashloans.md"}}, "1d96d9eefe184039b50daf7aeafa77e222b1ec3a": {"doc_ids": ["4ff793da-73bd-4ca9-92fa-a57557abf2ab", "7d1e41e9-6f72-4ef8-907f-da8f3f75e5ee"], "extra_info": {"file_path": "our-data/archive/tables/aave-tables/liquidations.md", "file_name": "liquidations.md"}}, "a71a2036432cf3478d17a508356356160cb0a1e5": {"doc_ids": ["08611e4b-a323-4ab7-9b1f-58238d0bf440", "d446911b-a426-44cf-a0fa-17f6d44bec51", "9df8dfb7-a2e8-4d33-bbb2-0e12af70e2a7", "56c86989-cf36-480d-a410-0a20acaaa5f8"], "extra_info": {"file_path": "our-data/archive/tables/aave-tables/market-stats.md", "file_name": "market-stats.md"}}, "8e0987329cf58537518bc026a28ffa98d73becf3": {"doc_ids": ["63fbccd9-5022-4c02-a295-4847c3540339"], "extra_info": {"file_path": "our-data/archive/tables/aave-tables/proposals.md", "file_name": "proposals.md"}}, "d06377c27833acafc0095782f7797cc65f9797fb": {"doc_ids": ["150ac9b8-8ad3-4b79-a2e0-cb385cd755e5"], "extra_info": {"file_path": "our-data/archive/tables/aave-tables/repayments.md", "file_name": "repayments.md"}}, "13e69dae2f8596b73e57f1a576218d3b37dd6a70": {"doc_ids": ["22c9e9cf-68f0-4eb1-b60a-85e4f832278c"], "extra_info": {"file_path": "our-data/archive/tables/aave-tables/votes.md", "file_name": "votes.md"}}, "4ab73fcb20b09856d03bf626e32106ee32077fa5": {"doc_ids": ["d92a7ad8-be9b-4883-aaf9-edcd0167b00c"], "extra_info": {"file_path": "our-data/archive/tables/aave-tables/withdraws.md", "file_name": "withdraws.md"}}, "8518cfd1f76784a901468ff5c2f06835c6139157": {"doc_ids": ["fa9965ff-45aa-4aab-abc9-723f219792f2"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/README.md", "file_name": "README.md"}}, "5bc19aea672cc6bfa27b66cf7c30c88caf6bb381": {"doc_ids": ["5002195e-c7ac-49b2-a1be-b1bb795eab31"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/README.md", "file_name": "README.md"}}, "15f8cd140ad774cb2642b47b16c296ac46df7b93": {"doc_ids": ["f2320b23-8eb1-4aa1-ada9-c07acf33f349"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/account-app.md", "file_name": "account-app.md"}}, "591844078c04a37d3ba3d7f3d88debd74a5805f3": {"doc_ids": ["eb364c4a-e1a5-40f4-b36f-3a989fe71e39"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/account-asset.md", "file_name": "account-asset.md"}}, "b9468f4d72616c425e15082ef9ebe2f91148480e": {"doc_ids": ["18059084-82e5-48b6-bd0c-34472e162218"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/account.md", "file_name": "account.md"}}, "0a9253dc121628d5972511eb49970e3f10396287": {"doc_ids": ["8c0701a1-f866-4b1c-802d-48355bb592e4"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/app.md", "file_name": "app.md"}}, "79a7aa39830e71c7be7f4ca3e2e226c9a8c1fb9f": {"doc_ids": ["7875326d-16d2-44a1-9d3d-6eab5ae27a20", "883b2e93-7933-4703-afae-5f2a9563a751", "0457c0cd-809d-4c59-8803-0fb4ae746b01"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/application-call-transaction.md", "file_name": "application-call-transaction.md"}}, "376b2dcdf8a1d40c202f191c801b9a847441e216": {"doc_ids": ["cd1a9c1a-6b0a-4927-b434-1ad7cfb97541", "d289cf4a-1ca2-4782-bd38-99db14076d4e", "a5304b49-d3db-448d-8b18-57ba2a0c3a48", "b6f6a248-7177-43d5-9a93-96a1a0dfb638", "6af1b234-a0d3-4dac-8b99-64f8fac7bb80"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-configuration-transaction.md", "file_name": "asset-configuration-transaction.md"}}, "324f96d84022e9ecba771c6d7c5ec48dab86f08b": {"doc_ids": ["fa1f2600-69fa-47d9-a0a0-4f9067168c73", "ac80fc3d-4ed7-44c2-9ea5-1c77acc0bba4", "9fde9241-0d2a-41f3-ba45-61fd6982d43e"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-freeze-transaction.md", "file_name": "asset-freeze-transaction.md"}}, "b8c8e03c98f7a0be68fc3268d7d0c4038cdd0853": {"doc_ids": ["1aa0ca54-10f9-4fe7-af50-3c076e027a4b", "a1f95481-ba9f-4ddd-8c93-4eef611cf674", "17126fb4-386c-4426-8fb3-db85edf4773c", "cf217b6d-3ce2-4aad-94fb-85aeababda78", "0aad59c5-2320-45c5-b4a6-beb03b1271d9", "6adda8b7-050a-45c3-a228-75214ba66bb5", "35fe1c58-8cee-492b-9b30-df0362960a4f", "a38dd0b2-341c-41e5-b251-e509ef9ec5ed", "ae42c0a4-3a98-4abd-bf6e-6ed480fdae69"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset-transfer-transaction.md", "file_name": "asset-transfer-transaction.md"}}, "005cc71ba7456739c278c9cfac95e4dcfa205bca": {"doc_ids": ["8a638264-6ed5-4794-b05d-a5c01537eb85"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/asset.md", "file_name": "asset.md"}}, "446d587e2f2b75067338c233622229db4bf9567f": {"doc_ids": ["539b56d4-99a3-4e31-867d-9725bc972783", "ae4396a5-9295-4291-a0ec-c80ce6eaceb9", "bd3ed8b3-9531-417f-9b8d-00916d4a97ef", "0cc71f5a-6ba8-4a30-b629-0e9f5cb3351a"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/block.md", "file_name": "block.md"}}, "5ce30e894eda7c8062d3e25699c98c5edecfdcb6": {"doc_ids": ["31cd10da-6d6c-4e5d-a95f-0ef238531512"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/daily-balances.md", "file_name": "daily-balances.md"}}, "d2a26a5d0953bc9ff20458bee861510b4ccc24b8": {"doc_ids": ["da1478ff-4f8d-4ee7-becd-40b8d6dbaab1", "5337bb93-2847-46ba-89d7-aed1760b70a6", "de481e5e-6a05-47d1-b53c-e14abed079e7", "b62469b3-e58f-476e-b6c1-2b92b804c11d"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/key-registration-transaction.md", "file_name": "key-registration-transaction.md"}}, "1266a2a5da0b60940fc25f7fef24b29033d87c27": {"doc_ids": ["9a393ceb-c7ce-49df-ad48-d6a7c27a5a34", "da71588b-e2ca-4e36-8371-fa375bc9e405", "05bdf6d0-3fbf-40e2-abf9-cce1be51e0ec"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/payment-transaction.md", "file_name": "payment-transaction.md"}}, "5b7341d7ff661baa4f1128ff3a183c73301bb67c": {"doc_ids": ["bc9da2ca-294f-486c-9982-c1b43e00a928"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/prices-pool-balances.md", "file_name": "prices-pool-balances.md"}}, "e72cf32b5d70fef836a13b62b9c3e45b573ff8c2": {"doc_ids": ["ad09c87e-505b-4a5a-854f-7c7147786a92"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/prices-swap.md", "file_name": "prices-swap.md"}}, "9c019c16a40827d306dbf598780a0ae12b1ae666": {"doc_ids": ["a30eec9b-e6c7-4875-99e4-9ea62b69b7af"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/swaps.md", "file_name": "swaps.md"}}, "9f019c104f22fc94c596b644cee8190c0e29463b": {"doc_ids": ["a1c6cecf-6503-4661-b83b-90ba49452be0"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/transactions-participation.md", "file_name": "transactions-participation.md"}}, "a53cf3fdf072a51064754e415f84894a4927e334": {"doc_ids": ["4f7b3d62-da0d-427f-a7f6-5084c662261a", "c059ad8d-d8f4-40af-9ce5-ec0155682764", "314266b8-15ed-401a-aaba-cfd7fd8e2176"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/transactions.md", "file_name": "transactions.md"}}, "44386bbf7e260a70bae158b25f9144aa8615cd0d": {"doc_ids": ["cf381bfa-3c0a-489c-9b9f-ea290bc26632", "e4e7fabf-cd72-4ab5-b12e-ff22cb21021f", "7aa95aeb-0940-4d49-86b0-b8b103407b1a", "aa28339a-4aa7-4f62-86c5-29c1c4181b00", "79d64c95-8066-4dbf-9142-fffbe169ca24", "37827c02-d662-4807-94dd-5521bf292480"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/algorand-base-tables/transfers.md", "file_name": "transfers.md"}}, "9ca98193fe2d281925d030ad540cca94df6e0d29": {"doc_ids": ["17d9c497-1c95-4964-9bbd-cd60cc7c49d8", "71e2de1d-46fd-4932-bf93-a764081d0f02"], "extra_info": {"file_path": "our-data/archive/tables/algorand-tables/core-tables.md", "file_name": "core-tables.md"}}, "982fd276bd9e7b9db20d2813160b9e53260604bf": {"doc_ids": ["073ae137-b55c-478e-8ae7-9bac2d5970cd", "833d62f8-0787-4bbe-b769-41e61b4a9ecf"], "extra_info": {"file_path": "our-data/archive/tables/arbitrum-tables.md", "file_name": "arbitrum-tables.md"}}, "20be0b89273b007bb12c397f0a7ff3976fae0378": {"doc_ids": ["cadf7575-09ab-4dc4-8600-0c4d39981039"], "extra_info": {"file_path": "our-data/archive/tables/astroport-tables/README.md", "file_name": "README.md"}}, "c9a1d8aa0857ba1ec03eb203c6a86facd038ff32": {"doc_ids": ["a645b406-6994-4b1d-a7c2-8bdecfad39f1"], "extra_info": {"file_path": "our-data/archive/tables/astroport-tables/lp-actions.md", "file_name": "lp-actions.md"}}, "eb9aec2cf1be4db88d7461e976bd55bbb2dc3c13": {"doc_ids": ["d80f6669-1dd2-497b-ae66-23c3c00d42a6", "3286d537-476a-495c-b1ab-e43f6140de74"], "extra_info": {"file_path": "our-data/archive/tables/astroport-tables/swap.md", "file_name": "swap.md"}}, "5a1a8541e63ec2351d35af239d793c8515fd6f18": {"doc_ids": ["e474bc31-d3c1-4ef5-b243-da9de180741f"], "extra_info": {"file_path": "our-data/archive/tables/avalanche-tables.md", "file_name": "avalanche-tables.md"}}, "c5d7a6b8d8f879b7dc32bdc4bbf11bc13d5768f8": {"doc_ids": ["c1a82d61-7ce4-4385-8a66-dc478528dbda"], "extra_info": {"file_path": "our-data/archive/tables/axelar-tables.md", "file_name": "axelar-tables.md"}}, "31a1d1d54ce3f810b57221bd364569cb5e5946d8": {"doc_ids": ["65d90634-15cf-4b4c-ac12-9f3061e0fb1d"], "extra_info": {"file_path": "our-data/archive/tables/bsc-tables.md", "file_name": "bsc-tables.md"}}, "1483727ba2bd53e2b455a3eba6bba299978843f9": {"doc_ids": ["f0ffaf41-8ff6-484f-819b-4500fa27284d", "9e761934-e34e-400c-9d14-2df5180dd58d"], "extra_info": {"file_path": "our-data/archive/tables/compound-tables/README.md", "file_name": "README.md"}}, "b5544972b74efdf701adc6d8a7e4f76547e8a904": {"doc_ids": ["41c60496-ef67-4d4d-9fa6-5fd4dd39581a", "d29cb4d6-96eb-4975-8d00-7c04307f437f"], "extra_info": {"file_path": "our-data/archive/tables/compound-tables/borrows.md", "file_name": "borrows.md"}}, "677f28359a2fd7c95a49afdd42c1952335245f52": {"doc_ids": ["b9355f0c-181a-49a8-8cb1-da224d125cdf", "b5327000-e158-4f93-83bd-1cbf816cac40"], "extra_info": {"file_path": "our-data/archive/tables/compound-tables/liquidations.md", "file_name": "liquidations.md"}}, "be4324cda7377c447b675c8ff3cf662068474790": {"doc_ids": ["a8cb5761-78a3-4779-873d-d9eea6302ff0", "c542380a-3987-425c-a1cf-e2c9cae8e072", "d3023ba3-eaab-4424-8ffb-e25903de83ca", "b8c16a29-f3be-4956-ae9d-c0d282344293", "6a9c59c7-d91a-4fee-9e38-8487a72383ee", "7edc6125-3324-49b4-b26e-14f82691a5ab"], "extra_info": {"file_path": "our-data/archive/tables/compound-tables/market-stats.md", "file_name": "market-stats.md"}}, "b662b9e24236821fb28deb121c7aa594dd24a17f": {"doc_ids": ["0645608d-7fd3-4c2c-b128-b0e769704df2", "8dc6c554-2585-4dce-8ebc-ea181075b972"], "extra_info": {"file_path": "our-data/archive/tables/compound-tables/mints.md", "file_name": "mints.md"}}, "ff6620c7c48cdcbbc3a38dae9349381f29fb2707": {"doc_ids": ["e33f14c3-7de4-4f9d-b59f-48891656acfe", "df7f38b6-633a-4b0c-ac3f-a9f612767ed3"], "extra_info": {"file_path": "our-data/archive/tables/compound-tables/redemptions.md", "file_name": "redemptions.md"}}, "440e043f3280a01e56f48bf2df9ce8f088163c1c": {"doc_ids": ["47aca423-4c34-4a56-8e93-feb8d60229d1", "4e148d4d-d81a-4291-8de8-3547de8eeeb4"], "extra_info": {"file_path": "our-data/archive/tables/compound-tables/repayments.md", "file_name": "repayments.md"}}, "8edab9f0301edf7764cc4ce9145977a5f7ad118b": {"doc_ids": ["a812ef1c-22c2-4d57-a4b4-1f3d0368fe4d"], "extra_info": {"file_path": "our-data/archive/tables/cosmos-tables.md", "file_name": "cosmos-tables.md"}}, "fe01a8a0f4fb57f38afb9213e68df66a4415a0fd": {"doc_ids": ["fcd2994f-6434-4745-b20c-ceb196838d0f"], "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/README.md", "file_name": "README.md"}}, "f027f24c299c94df415c9b0046a69dbda7b512ff": {"doc_ids": ["455f408b-8e76-4fc9-b2a9-e607cfbeabe5"], "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/crosschain-address-labels.md", "file_name": "crosschain-address-labels.md"}}, "62dccc9f85f546c1ea67355de28a95fdd4fc8a77": {"doc_ids": ["1b9e4fb1-0407-4ef8-a9a8-0919cf91bbe4"], "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/crosschain-address-tags.md", "file_name": "crosschain-address-tags.md"}}, "4d3c6e9f185ef43ba9cdbfb48fa54ec7295746b5": {"doc_ids": ["712f17d6-e5b6-4093-8831-b2a2ade4c6db"], "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/dim-asset-metadata.md", "file_name": "dim-asset-metadata.md"}}, "f406dc10ba4157fa95613d1cf4d93c34f8275438": {"doc_ids": ["1ceb8d6c-6c7c-4fff-a56f-b4daa12b1e5b"], "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/dim-date-hours.md", "file_name": "dim-date-hours.md"}}, "6ee1313c5949b0a55dd66de4f383cb05662e4488": {"doc_ids": ["02d208f3-1849-4e29-8e5a-7d1d18dd9e24", "a2b0e393-ad31-48b7-b357-ffed60a0ad58", "bcffecae-9a4c-4ba4-b48f-cdd1d77fe0be"], "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/dim-dates.md", "file_name": "dim-dates.md"}}, "6529d9f84d9b6a9242c8219794abe434c572f18e": {"doc_ids": ["090e4302-f60c-400d-b839-3116a242830e"], "extra_info": {"file_path": "our-data/archive/tables/crosschain-tables/fact-hourly-prices.md", "file_name": "fact-hourly-prices.md"}}, "26292db1ec5b48c49ed995f49aa5f9f1c98432a1": {"doc_ids": ["b164050c-55c2-4ad3-864a-fe528db9a086"], "extra_info": {"file_path": "our-data/archive/tables/ethereum-beacon-chain-tables.md", "file_name": "ethereum-beacon-chain-tables.md"}}, "fc797cb72efeb0ca1b9a94e09e09149ac87dbc95": {"doc_ids": ["cdb4803e-789e-48e3-9be6-e653fc8c5e03"], "extra_info": {"file_path": "our-data/archive/tables/ethereum-beta-tables.md", "file_name": "ethereum-beta-tables.md"}}, "93f820e7b654eef754c17f738c882465b7a53a7b": {"doc_ids": ["64a6c0f5-2b3b-4e6b-af52-157fecc78afb"], "extra_info": {"file_path": "our-data/archive/tables/ethereum-chainlink-tables.md", "file_name": "ethereum-chainlink-tables.md"}}, "b6f7547f3b71b9d63ce3be5feb3ac987d110679a": {"doc_ids": ["b5f858b5-91fa-48d6-ac51-d1bb62562a6e"], "extra_info": {"file_path": "our-data/archive/tables/ethereum-maker-dao-tables.md", "file_name": "ethereum-maker-dao-tables.md"}}, "fcafa4124add3d8927846deee874f43d3b99bbf7": {"doc_ids": ["00f332d4-aa84-4a1c-8d8e-26166ef9edcf"], "extra_info": {"file_path": "our-data/archive/tables/ethereum-sushi-tables.md", "file_name": "ethereum-sushi-tables.md"}}, "272c6a7a4ec979b65763c3ee27028c3adc2562f0": {"doc_ids": ["98010a80-c7f4-4e33-92d8-af7b3764f6b8", "a600ca5e-6eb4-44ad-8113-912bbb03d499"], "extra_info": {"file_path": "our-data/archive/tables/ethereum-tables.md", "file_name": "ethereum-tables.md"}}, "240bdd40db78063f2558938a25e571d3a99da90d": {"doc_ids": ["e20ff1be-c08d-44e7-ba4d-745339944ede"], "extra_info": {"file_path": "our-data/archive/tables/flow-tables/README.md", "file_name": "README.md"}}, "b37137ea7e4959bde2232209d70fe7448a991a5f": {"doc_ids": ["d717de9b-aed6-4414-9fa2-98ccf28b19f6"], "extra_info": {"file_path": "our-data/archive/tables/flow-tables/blocks.md", "file_name": "blocks.md"}}, "02072f7ef401ce69eed24f3276b2af5039bb674f": {"doc_ids": ["6466bf06-da5d-43c6-9f12-cfb99967d25f", "8acaeb6a-e209-4f34-9c60-6f21fe2f552a"], "extra_info": {"file_path": "our-data/archive/tables/flow-tables/bridge-transactions.md", "file_name": "bridge-transactions.md"}}, "51af1f2e59fa01781ee3e27f08fb18ccd3a4ae0f": {"doc_ids": ["1ec7a8a5-4f4d-4a70-9343-cef02fd08c78"], "extra_info": {"file_path": "our-data/archive/tables/flow-tables/contract-labels.md", "file_name": "contract-labels.md"}}, "f929b88878f6ae30f4034dca5bc7b98128a9b15e": {"doc_ids": ["e6456e53-4975-4941-a201-6065e28dcb17", "6318d340-7d34-4ebb-bb02-01934feb0792"], "extra_info": {"file_path": "our-data/archive/tables/flow-tables/events.md", "file_name": "events.md"}}, "214aee6bee0ebd551048c59c08897912853e07cd": {"doc_ids": ["feb5bf05-69f4-4c09-a370-2cfc99420d4c", "5d581b77-27be-4d09-bc2c-8c836aa761a2", "2c1445cd-d2e3-4418-9195-3f6dd7c14a8b"], "extra_info": {"file_path": "our-data/archive/tables/flow-tables/moment-metadata.md", "file_name": "moment-metadata.md"}}, "caeceb80adf98350d352cf51992b804891ed57e6": {"doc_ids": ["ccfdcddb-4eeb-4f1a-b574-249d99a272c2", "88bcd294-cfd5-41bc-950d-fad27b19d6a6", "55d86028-3e34-4971-b30d-36d17d7c9937", "dbead414-6c79-42fe-ac7d-109810b80810"], "extra_info": {"file_path": "our-data/archive/tables/flow-tables/nft-sales.md", "file_name": "nft-sales.md"}}, "ea811ad39f7ea9edd996d9019254b9f23fe0551f": {"doc_ids": ["bc951f4e-b96c-4e4c-8a70-efb6f92bc708", "a2b23d11-a0c6-49fe-932d-4fb15219bef7"], "extra_info": {"file_path": "our-data/archive/tables/flow-tables/prices.md", "file_name": "prices.md"}}, "e605adb9186c10332670bef7ad37b5cafcf3999a": {"doc_ids": ["95c926fd-ee35-4882-846f-45a8a94d2b21"], "extra_info": {"file_path": "our-data/archive/tables/flow-tables/swaps.md", "file_name": "swaps.md"}}, "356e28dd737c28096b10d073590f5bc53ce522eb": {"doc_ids": ["5903f7c7-aa1d-44b5-80b2-13dc1a1afd92"], "extra_info": {"file_path": "our-data/archive/tables/flow-tables/token-transfers.md", "file_name": "token-transfers.md"}}, "521cab09631a4b86fc84a1312f3c113ee732f73e": {"doc_ids": ["0fc91b5c-171f-4198-bd2e-e56d1ac5288f", "28678798-a0bf-4eeb-886e-23ba62981d58", "1b1cd5a5-f7d0-4e5d-9e05-497bb4271f3e"], "extra_info": {"file_path": "our-data/archive/tables/flow-tables/topshot-metadata.md", "file_name": "topshot-metadata.md"}}, "be9f2ce086eacebcd83cfb9b27195278a71cdf88": {"doc_ids": ["39dfbb36-6aee-4c66-bf3d-705737f05966"], "extra_info": {"file_path": "our-data/archive/tables/flow-tables/transactions.md", "file_name": "transactions.md"}}, "7e216e816b54aa2a877e60607f779a1386a1b8f1": {"doc_ids": ["623150d2-a09b-4c84-a76d-3c66d73c5cdb"], "extra_info": {"file_path": "our-data/archive/tables/flow-tables/validator-labels.md", "file_name": "validator-labels.md"}}, "522a1c2198be25e06bfd5f2c057f58e2f3f5f586": {"doc_ids": ["cb3143a1-c849-479b-a79c-95aa0cd1db8a"], "extra_info": {"file_path": "our-data/archive/tables/gnosis-tables.md", "file_name": "gnosis-tables.md"}}, "3bd62b5a306ed81a1569600e12faca526f15ac81": {"doc_ids": ["357e09a9-0027-41c9-901d-395c2a0b79f3"], "extra_info": {"file_path": "our-data/archive/tables/near-tables.md", "file_name": "near-tables.md"}}, "bce78121bca90a97161b8a7abcf962dfb5a02bb3": {"doc_ids": ["d3c4c32a-351b-47e6-8b39-1b8ce7a98013", "bdbb3399-8f49-4a4c-9170-9d547d6e0f84"], "extra_info": {"file_path": "our-data/archive/tables/optimism-tables.md", "file_name": "optimism-tables.md"}}, "eabb6a31dc07b1ba7f472a5d8048698cac9d2d19": {"doc_ids": ["e4e4a2de-8f9e-4377-9ca3-212b583c9357", "e9558a93-8e6e-4cc3-b774-f362a2de6b2f"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/README.md", "file_name": "README.md"}}, "130d94bc314ebd462ea4a854c703cdff9f7f24fb": {"doc_ids": ["712291cc-9556-4419-b697-5a138f2051cc"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-daily-balances.md", "file_name": "osmosis-daily-balances.md"}}, "5bd8fb8130646b27ab0efbad7151a049e0d80988": {"doc_ids": ["d698d37c-2a42-423e-99dd-c1a99e95247d"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-dim-labels.md", "file_name": "osmosis-dim-labels.md"}}, "56db32c9ee99c0654f0e5602466cc85308d5fb7b": {"doc_ids": ["2f9d366b-9d56-4eb9-aaf1-9d6940d48386"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-dim-liquidity-pools.md", "file_name": "osmosis-dim-liquidity-pools.md"}}, "4ccdb2fb751c41374dc41d390b4ec5bd2a5fa017": {"doc_ids": ["60144fcf-0315-4970-a08e-72d7ba8cde46"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-dim-prices.md", "file_name": "osmosis-dim-prices.md"}}, "05826bacd4cc0005352cb6595ca0fbc184c2f2da": {"doc_ids": ["9fb78d77-ac1a-428e-94fe-e93ca9f9faf7", "a24270ff-9a09-41be-8717-e36a3d417bf7"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-dim-tokens.md", "file_name": "osmosis-dim-tokens.md"}}, "bc6020ae1bf3c27464490f76b03b2592d0e6ca3e": {"doc_ids": ["22292c4a-5fcc-43a0-a38e-44cd6410c406"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-dim-vote-options.md", "file_name": "osmosis-dim-vote-options.md"}}, "080acf44a469907e567882aa932b73e712fe0114": {"doc_ids": ["56f05ace-2d7d-4456-b7a5-0cbc45c10d7f"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-ez-icns.md", "file_name": "osmosis-ez-icns.md"}}, "1627cdd4a4188ad3ea7eca47b8887649b69e6396": {"doc_ids": ["88f8a558-96e6-4312-83a5-18a9308d4766"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-ez-prices.md", "file_name": "osmosis-ez-prices.md"}}, "e4d674c827083afe0a5fad750e119c756058d271": {"doc_ids": ["e3039c7e-7b4c-4a92-ae1b-4f8aa97ab51c", "1b2976b6-1f95-440c-acf8-698017f89347"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-airdrops.md", "file_name": "osmosis-fact-airdrops.md"}}, "b6fc0c8622a3e75b89681149f9534bb6b0eeaf06": {"doc_ids": ["be955e22-4b69-4efd-991b-02b4c06feaac"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-blocks-table.md", "file_name": "osmosis-fact-blocks-table.md"}}, "bc89d4f48c5e8405c7e62a9d0c14c34fc3ede925": {"doc_ids": ["e2f5bd8a-2c8a-4573-9cf3-1cb31d5d433b", "baac30c4-813c-4767-9b1e-9c10f20e0701"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-governance-proposal-deposits.md", "file_name": "osmosis-fact-governance-proposal-deposits.md"}}, "d797900f79bf5d1c65c5616588db0ea6f9b960b5": {"doc_ids": ["0933c4b4-428c-4b9f-97d2-ce8a104ea2ea"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-governance-submit-proposal.md", "file_name": "osmosis-fact-governance-submit-proposal.md"}}, "031c58b44863977ff8e23a98882bb8200700b4b4": {"doc_ids": ["7b2fcbf2-e0ff-41f9-8978-2276a8afb45f"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-governance-votes.md", "file_name": "osmosis-fact-governance-votes.md"}}, "55a42e6f03c8c0f9f4018b40436737db6705633a": {"doc_ids": ["a64e971f-048c-4814-981f-eacf99ff4fd6", "1c9a7d9c-19db-4a6f-a558-03164e69ae44"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-liquidity-provider-actions.md", "file_name": "osmosis-fact-liquidity-provider-actions.md"}}, "396f6eb474a91c6e1c0ebd03863de0f62a65c4ae": {"doc_ids": ["d1c9f756-d260-4cb9-bb07-8d962ed8cf38"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-msg-attributes-table.md", "file_name": "osmosis-fact-msg-attributes-table.md"}}, "cb4ccd561e62fd866e71b0e72deed51d787658ed": {"doc_ids": ["c3239452-892b-417e-81de-cf42e3eee7ca"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-msgs-table.md", "file_name": "osmosis-fact-msgs-table.md"}}, "de2a69b29790cb02bd1a490d6f89db6118452038": {"doc_ids": ["ae0af7a0-8554-4dd0-8e48-ae85bcbb3a7f", "09408a92-03eb-4ceb-92b2-943ee7c52783"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-staking-rewards.md", "file_name": "osmosis-fact-staking-rewards.md"}}, "3b1f74c6121363d407dd4205178adff6e6db4cbb": {"doc_ids": ["a48492e3-8de3-4783-a2f1-d7c3cf0f2dbd", "7b17c1a8-2471-4f66-8516-1784020a9412"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-staking.md", "file_name": "osmosis-fact-staking.md"}}, "bde9d3369fcedc4817d84351f2de5b09109d620e": {"doc_ids": ["5841ae26-16fa-43ef-9750-e620cd2ac947", "c8e34d08-0626-4b86-9823-f60234d91e4b", "f685cdab-c964-416f-a793-f1178e33b2ab"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-superfluid-staking.md", "file_name": "osmosis-fact-superfluid-staking.md"}}, "0f95c494374a5beff5ebe400d025f657f84c4217": {"doc_ids": ["4a535c41-470e-43e2-9893-ecc717531592", "5974c62b-5b3b-4674-842e-a133ce42fad4"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-swaps.md", "file_name": "osmosis-fact-swaps.md"}}, "89139710f5731cae660d4d8686e4ae183c4c4499": {"doc_ids": ["c538eba6-5891-464f-a639-b7b6998f7c67", "5c91dc82-f53f-416e-82a1-81af14fccf84"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-transactions-table.md", "file_name": "osmosis-fact-transactions-table.md"}}, "5256b2c14fb851d7aa231dfa78aaf0a88114b6db": {"doc_ids": ["012e5f04-acbb-4933-b96b-504081203da1", "984dee8b-32da-4c55-b046-2f08e861f8db"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-transfers.md", "file_name": "osmosis-fact-transfers.md"}}, "6283a34850c2abb31861283d90788e7f1816d648": {"doc_ids": ["9941b652-fcfc-4341-a4b1-2f02ed312d10", "f731648d-1e61-4651-a6c8-8ff5eb1e730b"], "extra_info": {"file_path": "our-data/archive/tables/osmosis-tables/osmosis-fact-validators.md", "file_name": "osmosis-fact-validators.md"}}, "590db04b06e35270a8e3afc2bc07ff781d5f7d7e": {"doc_ids": ["fb6a75a4-b2f2-4478-ad79-fe6443e85346"], "extra_info": {"file_path": "our-data/archive/tables/polygon-2.0-tables.md", "file_name": "polygon-2.0-tables.md"}}, "a2187a3d22d44914760959190b9a31d995506039": {"doc_ids": ["4b266d0e-ec44-4e81-b0ed-4a7f53352eaa"], "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/README.md", "file_name": "README.md"}}, "86a6bc5c47227b1b82fa2e489c5f785d6375f39e": {"doc_ids": ["73af855e-7227-4db7-bb70-07c9f2591d10", "cd2ddb1e-13cf-4aab-88f2-6b86eb9c2f51", "d31f5f15-2ea9-481f-a138-11b768091d14"], "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/polygon-events-emitted.md", "file_name": "polygon-events-emitted.md"}}, "5f38d6590bbbbd05eaabb113c63f3f45f3e42263": {"doc_ids": ["53d9cb2d-5600-432d-9240-63a003a7a9c9", "2de641b6-32b8-4fdd-ae02-45ce61a56fde"], "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/polygon-transactions.md", "file_name": "polygon-transactions.md"}}, "809616575fcb6974b0c9a36f0097360cb237dba9": {"doc_ids": ["721e1f5d-681f-4ada-9b6e-504c4cd7406a", "79b77f86-dad6-4c80-921c-cfed66f1a0e7", "4f595c2c-3c47-41bf-827e-febf8c2e04dd", "cdff6b0c-d462-4bc6-9a11-1c4fc61fa46a", "776a2f5f-ff32-4e97-be6e-7951f3ad21ce"], "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/polygon-udm-events.md", "file_name": "polygon-udm-events.md"}}, "36420b550190ac49aba964e6a4adb6a04a64a711": {"doc_ids": ["f144ed4f-95a9-40c2-9aab-10e2fce36a32", "28632d92-5d8f-4af0-8249-194b6efbab08"], "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/position-collected-fees.md", "file_name": "position-collected-fees.md"}}, "a5942b73aa4199416281b74616aa258027f2d725": {"doc_ids": ["86b4d58b-7e39-449f-892e-5937125891cd", "fa21c9f6-1167-4fc9-b1d8-ea37acba86dc"], "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/swaps.md", "file_name": "swaps.md"}}, "b64f4ed6edc4f6543cc1f7c422f24f9e53b520fe": {"doc_ids": ["43c13f38-6dc6-4e1a-b0ae-c8e139808805"], "extra_info": {"file_path": "our-data/archive/tables/polygon-tables/v3-resources.md", "file_name": "v3-resources.md"}}, "25a4c69537e4ccc17e3f9be88402907181d8ae12": {"doc_ids": ["04830afc-516a-4b6b-a7bd-048a5cab2b60", "ae2556ca-4de3-426b-b22a-686ae2ab4c0d", "92b47052-7df7-4a3e-b6d1-d5e25e5dda8e"], "extra_info": {"file_path": "our-data/archive/tables/solana-tables.md", "file_name": "solana-tables.md"}}, "543cf842e50426577d550e7e5f17cd64baebf5a7": {"doc_ids": ["96d785ae-267c-46df-85f8-49b69ac6944c", "ce6050e7-4209-42a4-b9dc-0811fb66dc7a"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/README.md", "file_name": "README.md"}}, "82487b1ddf23730b0c46fb53db0de200f8ba2846": {"doc_ids": ["2535d1ba-b7c6-4386-985a-4f9126cde6fb"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/README.md", "file_name": "README.md"}}, "bd9ab788b42cdad0391db1b48b92ae2bb4d01c48": {"doc_ids": ["ce824b2d-7866-418e-b847-cfca68c790ec", "0342fdff-f98c-43eb-9b41-64367ee2035f"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/daily-balances.md", "file_name": "daily-balances.md"}}, "536bd9e20290a89068e0881aa0108d56d9833b26": {"doc_ids": ["1398cb85-25e7-4573-b99d-59c92ff4edc7"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/event-actions.md", "file_name": "event-actions.md"}}, "3bbc1c4c759c63ace11e14c48f4fa1d01812665c": {"doc_ids": ["a8e60942-4653-468a-aa7d-9059d3895758"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/labels.md", "file_name": "labels.md"}}, "ad22cefca0c1bdc1b22e2f6e8d8f1681441f4f0b": {"doc_ids": ["8b656dee-2466-474c-a225-e561d23e7a4c", "a492c4d8-de28-49f5-a772-75c654456f61"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/oracle-prices.md", "file_name": "oracle-prices.md"}}, "6be0f7a9122cad5904b2605a5eba0fbfacae47f0": {"doc_ids": ["1ed927cc-73c4-414e-ac3b-78712486ada7", "bbef1e3c-83ea-42ab-a72f-ea691d955c7b", "d3aed894-832c-4bc5-a077-e4629219d3bf"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/rewards.md", "file_name": "rewards.md"}}, "7e5b7ab988e3356825e0befad0993cffea8553f1": {"doc_ids": ["b160f86d-cfe2-4e0a-88b4-92a3ff367167", "b4c05558-6fa8-482b-b848-403d02d60283"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/staking.md", "file_name": "staking.md"}}, "d0b13b6b0275cfa527d7493fdb214f9ab884076e": {"doc_ids": ["2ee17623-4101-4f26-8e04-295f6e453209", "487d6538-b0bf-4bb7-bec0-7003f8fb8c99"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/swap.md", "file_name": "swap.md"}}, "6894124c65a612d25ce19966b2846141c1b3b1ef": {"doc_ids": ["29a91d38-17e6-4f19-8b12-8c137ffa74c9"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/tax-rate.md", "file_name": "tax-rate.md"}}, "c26e5e51e5a26783e38dafb4b10ed897235734f3": {"doc_ids": ["519fb0d3-0f42-46c8-8413-fba2ccf2ccc9", "2da3f285-135e-4f77-916e-f08e3fe5c8fb"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/transfer-events.md", "file_name": "transfer-events.md"}}, "98b392d2c86e8861d251944cd120fc4bffede4b9": {"doc_ids": ["38f622a6-7ec9-4b12-8cd5-8561f506d307"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-base-tables/validator-labels.md", "file_name": "validator-labels.md"}}, "8b816f3fd229f95097b4cb8894717540e27dd9d5": {"doc_ids": ["f4eba0bd-15d3-4e97-882d-80cb4a473707"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/README.md", "file_name": "README.md"}}, "afd317930b7349d53bd4c81834986ad5d935f6bc": {"doc_ids": ["29606d29-a981-438f-a7df-806ae3b50028"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/blocks.md", "file_name": "blocks.md"}}, "7b81d084abad64bf1db634f44fa5c07ccd61854f": {"doc_ids": ["b8250e3c-82fd-45d6-b4c4-17eeafc1e5e8", "9e520c65-2e90-430e-ab6f-306b0c6b47e0"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/msg_events.md", "file_name": "msg_events.md"}}, "f66ad15e426159e42cea14ea5b29b6aca90bb826": {"doc_ids": ["f607e13d-caa6-4a55-adb4-bcc9ee2b42f7", "782d070c-6966-4ccf-8c91-b9b44c672e8f"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/msgs.md", "file_name": "msgs.md"}}, "bd143e35f4bee6acceb9537890db14e2cd883031": {"doc_ids": ["32c76ed3-a13d-4a10-b880-50ff28c91781", "dbf04b64-b151-41f9-bb8a-e574f1749e48", "2fd8a584-fb44-4af6-b65f-9de0f5d1d3b1"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/transactions.md", "file_name": "transactions.md"}}, "da8a5d313809701f6c04fb8ed2f11ac356750079": {"doc_ids": ["aef6bbad-b466-4fee-bf1d-8881858335d9"], "extra_info": {"file_path": "our-data/archive/tables/terra-tables/terra-raw-tables/transitions.md", "file_name": "transitions.md"}}, "1a3194392f14a78d262ef86d582b912bce1029b2": {"doc_ids": ["e135f070-28a8-472b-b098-c8e6592ad5d4"], "extra_info": {"file_path": "our-data/archive/tables/terraswap-tables/README.md", "file_name": "README.md"}}, "83c29d3789a94bdee119fbb50515bd8280216d33": {"doc_ids": ["bc606504-acae-4909-b0a5-e692ace07127"], "extra_info": {"file_path": "our-data/archive/tables/terraswap-tables/lp-actions-1.md", "file_name": "lp-actions-1.md"}}, "ac9f83a08c71388a493ea52cd3da2e8f69e07f44": {"doc_ids": ["9783a244-72f9-4a55-8d36-6380a6a2ea53"], "extra_info": {"file_path": "our-data/archive/tables/terraswap-tables/lp-actions.md", "file_name": "lp-actions.md"}}, "f9d4fac3cb7d48153bf2434c7302feeded0f3fca": {"doc_ids": ["e423adbf-1764-4bc4-b1f6-1557aefb84d2", "ecfaa753-5fe4-49e1-a8aa-5c47792b80b4"], "extra_info": {"file_path": "our-data/archive/tables/terraswap-tables/swap.md", "file_name": "swap.md"}}, "93ef6ed6f6195507fc8e6ec4ced648c13b2381be": {"doc_ids": ["bbeaef50-dc1f-45b7-9155-694e7f05178a"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/README.md", "file_name": "README.md"}}, "4f7282416ccf0c45d59eb887dbe2dc5d47e516e2": {"doc_ids": ["c0550596-3c09-40db-a466-f104da915bdb"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/README.md", "file_name": "README.md"}}, "6dd34e190612f1248325172624f42efe6fc58e43": {"doc_ids": ["9cd65341-155d-44c7-921b-ad7dc9f69787"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/block-rewards.md", "file_name": "block-rewards.md"}}, "4e938e095164241f004d78779b3ca388bea78be3": {"doc_ids": ["e382b892-1389-401e-b4c3-edab79d7ae09"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/bond-actions.md", "file_name": "bond-actions.md"}}, "5f2db22d6ca0ca53228acbc87f47c8d8c2eb3a72": {"doc_ids": ["f7a0384b-ccba-4077-a1e5-3922deb01215"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/daily-earnings.md", "file_name": "daily-earnings.md"}}, "c80220107578c2cd57cc57f5153a3165493060ec": {"doc_ids": ["22d425d4-0075-4b88-b3f9-6c9bc95dbdf5", "095ace39-7378-4416-8596-dd8244f4d7fd", "c8ee4cda-3a4e-4687-8a98-fc6747fc8a71", "69c203f1-6498-4977-87ae-1383728c9793", "0f99132d-47b3-4eea-a5a3-f202aa20bb4d", "c000bd7a-2de6-4193-b60a-50fab26af232"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/daily-pool-stats.md", "file_name": "daily-pool-stats.md"}}, "0d0dd09f7e191da34804a14b7d5659b0cb0a744a": {"doc_ids": ["48b86d76-952d-4eea-9a66-c143788dd7b1"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/daily-tvl.md", "file_name": "daily-tvl.md"}}, "bd400f7a2d3fcf09f72a99ebe9e46cbe9284f9b2": {"doc_ids": ["cbfd6a94-c8b1-4e70-8dc6-5e296f71f439", "e42c2577-192d-4b6a-8c31-8776f009a7e2", "e2a48a68-79b4-4718-821a-600c36ac03ce", "f0cc0181-cd91-4bf9-a1ea-173798619920", "a60f6759-3d36-42ec-bfc0-ac575403a4bb"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/liquidity-actions.md", "file_name": "liquidity-actions.md"}}, "681a314dda1f5bd822330bdbf39a7ee30168aeb0": {"doc_ids": ["f798351d-67cb-4b52-8076-52b21d0005c1"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/pool-block-balances.md", "file_name": "pool-block-balances.md"}}, "f49a38e5ba8eb389ea104f95e4edd67f99d252b9": {"doc_ids": ["093c0089-9746-488a-9475-908504a59089"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/pool-block-fees.md", "file_name": "pool-block-fees.md"}}, "6923c68ede99ecf21e569912f3044177785a9e10": {"doc_ids": ["4618b8b4-80ae-42be-8e11-e196ef23a62f", "dc274d00-c554-4efb-983c-b6973f77220c", "55cb7e72-b6a4-4b20-838d-4825a171bc8e", "3772604c-84ec-41ff-9454-497d9f1bd8aa", "d29b13fe-69a8-4dd9-8048-b37583603333"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/pool-block-statistics.md", "file_name": "pool-block-statistics.md"}}, "bc503a2d6046f7d35783636805c537ba02fab937": {"doc_ids": ["35e62b9f-b7e0-4a09-a932-cfc2058b5f65"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/prices.md", "file_name": "prices.md"}}, "8c7abeabee2372c2d7aeca5e46eecb3fcde1612b": {"doc_ids": ["53027dc5-84ff-445f-8510-1e8338d8f81b", "171ea692-bbe7-4ca3-83c2-ea54c1109b70"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/swaps.md", "file_name": "swaps.md"}}, "2c77adc60f01ea850b492196c15079898c150ad3": {"doc_ids": ["873369f0-751e-4cf8-8ada-5b814314b51f"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/total-block-rewards.md", "file_name": "total-block-rewards.md"}}, "f99db088a10db1a1bd5b7c8b622fd1e48672d546": {"doc_ids": ["bd1987fa-f9b5-4da5-b115-899e7c7f2dac"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/total-value-locked.md", "file_name": "total-value-locked.md"}}, "1b1f61d75a6cb1c72429e9a1bf6abb86be75d644": {"doc_ids": ["5f50a87f-9d92-4d09-a6c9-70eb7ceed46d"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/transfers.md", "file_name": "transfers.md"}}, "bf2601e6519a3d04633cc28441ce2d8a7a3b4d14": {"doc_ids": ["3f95f270-8d03-454c-89eb-1a625c11c856"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-base-table/upgrades.md", "file_name": "upgrades.md"}}, "4296e67e8f199c3faef285773a98fa5601d85778": {"doc_ids": ["6730909d-718a-4139-bde7-103d73a6643b"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-core-tables.md", "file_name": "thorchain-core-tables.md"}}, "2b3d54bf1283987a9c0400dfc697cf38452e8a83": {"doc_ids": ["ae7b7fa0-5cae-4cf0-9192-1f181d1bd6ea"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/README.md", "file_name": "README.md"}}, "02c411fbb10492d88625c77f7063141fbf1615c8": {"doc_ids": ["5b11833a-02aa-4c9b-946e-605e21154294"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/active-vault-events.md", "file_name": "active-vault-events.md"}}, "545431ed64921223e9769d8b8656631b79a06f20": {"doc_ids": ["bfc81b41-276e-4c79-9af7-6576e2f52240"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/add-events.md", "file_name": "add-events.md"}}, "a90a58573e336368e81b11e5181a1857622b5925": {"doc_ids": ["e3ad2bab-e0ba-4344-a02d-1bc1821fdfaa"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/block-pool-depths.md", "file_name": "block-pool-depths.md"}}, "44056b05fe2d2955cdad998617fd847ab4ca9505": {"doc_ids": ["303f2ae0-f00e-4ee8-8cb6-1ff48b721b8a", "0bcd7602-4b4d-471c-9cc1-a8002af5dd40"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/bond-events.md", "file_name": "bond-events.md"}}, "afa9ffa3c556059f2530adcf5657e0ff2c19f3d4": {"doc_ids": ["0b8a56e8-cac2-49fa-a782-6e304e79dc45"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/fee-events.md", "file_name": "fee-events.md"}}, "992879c4ffa542a7495b0b15303c196ded3ee3df": {"doc_ids": ["4ab264ec-7787-4f40-8831-d417f2101d53"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/gas-events.md", "file_name": "gas-events.md"}}, "e6c5b30ffdf8f79c7aa24e1fe0cff68bba34edd1": {"doc_ids": ["5e861f85-9be2-48b4-95e8-d8643868f772"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/inactive-vault-events.md", "file_name": "inactive-vault-events.md"}}, "a0c729c53d2f65f95a314595a2c3be06e2788c77": {"doc_ids": ["6cb8b09b-8665-478d-8106-acd34c6cbfe3"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/message-events.md", "file_name": "message-events.md"}}, "46a6648bc29a05e177a8787430c6b6da47d6235f": {"doc_ids": ["c2cbca83-f322-41c6-98e2-53bc4dc8ae7b"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/new-node-events.md", "file_name": "new-node-events.md"}}, "4d93469f0924c4a39903f976e363cdcdf9ee1c74": {"doc_ids": ["43377517-b756-4c80-a372-d55f25b0a81c", "e252574c-cf70-41b4-91a8-9d86f9b0cf41"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/pending-liquidity-events.md", "file_name": "pending-liquidity-events.md"}}, "bd03d3e32c2af551ab785ec767d9366ba83665ae": {"doc_ids": ["711d6d87-d956-4446-8dda-14ff277dc0a9"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/pool-balance-change-events.md", "file_name": "pool-balance-change-events.md"}}, "734d527577e34abf4963cf3b8ad14ceefeb5f114": {"doc_ids": ["3e028061-ba69-4a84-b5fc-1ec6bec74022"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/pool-events.md", "file_name": "pool-events.md"}}, "cfe9c14268e1ea7ad0fbb5d723959cb7aade7b4d": {"doc_ids": ["8667a10f-2d00-40d5-a744-7131c7b2c607"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/refund-events.md", "file_name": "refund-events.md"}}, "e43cf8afd55e48d9ee2ac61401f185adf905af4a": {"doc_ids": ["f7756a27-4b50-45d7-9cda-64e2dde51127", "33d362fb-553b-45ea-a993-47a9fcfff52c"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/reserve-events.md", "file_name": "reserve-events.md"}}, "0fcdd64eb9bed253d98dfd35bf9fd2c94eda243f": {"doc_ids": ["265688b6-0085-4521-9ed8-8701efb11e95"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/rewards-event-entries.md", "file_name": "rewards-event-entries.md"}}, "77f2a9109b6466e7187dcae8e22f3c723e655893": {"doc_ids": ["7e125326-ddf9-4623-b0c8-12dbdd6721ac"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/rewards-events.md", "file_name": "rewards-events.md"}}, "e3cc832d6fe2f756d67f235c591d63fa9b607037": {"doc_ids": ["9dcccb3a-27c1-459e-9a56-70cfcd18ea92", "513c4136-b633-4e86-a9c7-ec939670f48f"], "extra_info": {"file_path": "our-data/archive/tables/thorchain-tables/thorchain-raw-table/swap-events.md", "file_name": "swap-events.md"}}, "68c63d9875ad39ea5768143ba31c64c6e0e1da80": {"doc_ids": ["e1b07707-e6c4-4c6b-88a6-8af5498aa8f4"], "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/README.md", "file_name": "README.md"}}, "e41f7879d9748908dd4d9bab1a1b235b26041bdc": {"doc_ids": ["e89acb5a-5fc3-4159-91ea-b38334f32acc", "bb28bb83-152d-489a-a2d8-1e13d868e9b1"], "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/lp-actions.md", "file_name": "lp-actions.md"}}, "fd05d5a63ecdadbba8e6b09198b1606ee575c9b8": {"doc_ids": ["5806b011-c870-4b63-994d-171b1e9fc170", "c190c342-7a8a-4f4d-b17a-d2d8df1d3a7f", "3d2b90ae-681c-4722-9014-1c83afa9fdfc"], "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/pool-stats.md", "file_name": "pool-stats.md"}}, "ab95f1de2e2de93eac2ad423619f72ae773278a2": {"doc_ids": ["7bfa9481-e849-459a-8e7c-77e46bcad072", "c301d2e8-a235-4850-9e9f-8864edd9d679"], "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/pools.md", "file_name": "pools.md"}}, "a3022e826e483cd8837a733acecfd14d2da379e8": {"doc_ids": ["3157cd8b-7a9d-45e6-874d-81500471fdfb", "3073d8d8-9797-4990-8a30-bcfad05b0822", "9aa21791-9e21-4b52-9daf-2ab871cfd8ff"], "extra_info": {"file_path": "our-data/archive/tables/uniswap-v3-tables/positions.md", "file_name": "positions.md"}}, "c9edd2307625a65fdd81053b9a50307130046df1": {"doc_ids": ["c5600297-18c9-4a17-86d9-8bff93698c75"], "extra_info": {"file_path": "our-data/contract-decoding-and-abis.md", "file_name": "contract-decoding-and-abis.md"}}, "42fdcccccdeb0f656fb0f92ca51531584d074c7c": {"doc_ids": ["20db7f4a-f670-42bf-9670-5d950bb284db"], "extra_info": {"file_path": "our-data/data-models.md", "file_name": "data-models.md"}}, "79ea47c234c09e057332f386000becf3689cb53e": {"doc_ids": ["49774169-84b3-4f84-a6d3-01e4fcf41e7f"], "extra_info": {"file_path": "our-data/data-table-documentation.md", "file_name": "data-table-documentation.md"}}, "81705d6a0e8a1cb4944b5cbd4b42bd68d2fe98d3": {"doc_ids": ["c1d6468e-8729-4789-a734-62673ffe9181", "428dc21f-38ff-4705-9e51-cdcce14da1c4", "6882259f-d5f1-4055-b0ba-210914dd2514", "a0351c26-3890-4129-bb87-de34c4d72cdc", "4c4b4a2e-990c-4218-8883-8f2075274816"], "extra_info": {"file_path": "our-data/featured-tags-and-sql-examples/README.md", "file_name": "README.md"}}, "732a721361ad62ac5f3a9fbc5bdd927cf971040f": {"doc_ids": ["2e9bab57-5e3f-4000-b5d9-e790517f8c8b", "ac7970c3-f6d0-4eaa-bab0-66315a30f96e", "7c4068d7-562b-4907-b442-184f9790a0f8", "4725b319-e61f-4d04-9a51-b84ba7acba2b"], "extra_info": {"file_path": "our-data/featured-tags-and-sql-examples/how-to-add-your-own-tags.md", "file_name": "how-to-add-your-own-tags.md"}}, "c4c4bcbab636b1dd619f78fc1e5ce1ee83282903": {"doc_ids": ["27fdddf4-6cd8-4dc6-bbeb-b4032b72f688"], "extra_info": {"file_path": "our-data/hex-to-integer-function.md", "file_name": "hex-to-integer-function.md"}}, "5a36a874d6a46505d4355f9430a68fa0f2410ca0": {"doc_ids": ["da434633-0159-4d80-bb68-c28230bb5ed6", "a5aa3428-01ff-41dd-a480-ed1fd3d7bebf"], "extra_info": {"file_path": "our-data/labels/README.md", "file_name": "README.md"}}, "039db0c06a94a50f8f4edc7d931ffa49b970435e": {"doc_ids": ["17f10c9f-c4e2-44d7-adf8-ca09975fd2a3", "036b31d7-843a-4ca3-90bd-cb57528b2fde"], "extra_info": {"file_path": "our-data/labels/cex-label-type.md", "file_name": "cex-label-type.md"}}, "1c80abef9fc5afafc57e1cffb1a05074f3ae33bf": {"doc_ids": ["2edc2925-818e-4ce2-b065-d486bf9048da"], "extra_info": {"file_path": "our-data/labels/chadmin-label-type.md", "file_name": "chadmin-label-type.md"}}, "16e87d356871ed695736b1b738a4c310ac01bbe5": {"doc_ids": ["cf79296c-0c2a-4448-a708-879b4504c44c"], "extra_info": {"file_path": "our-data/labels/defi-label-type.md", "file_name": "defi-label-type.md"}}, "d154c4ece5be2ea37cdfb5eb9312ce1a0e43a354": {"doc_ids": ["b5bece55-4304-42fa-b591-4e577843b588", "af096b3b-b5e1-460f-a9c4-532191068881"], "extra_info": {"file_path": "our-data/labels/dex-label-type.md", "file_name": "dex-label-type.md"}}, "2f17ddaeb714a01481f19a3c3894db065f97dda8": {"doc_ids": ["7813138e-d920-4e63-b342-b1be3b88a637"], "extra_info": {"file_path": "our-data/labels/flotsam-label-type.md", "file_name": "flotsam-label-type.md"}}, "f3eee86604e1ec407c83af512d89851d7af959ac": {"doc_ids": ["de68509b-f8b9-46fd-b1de-76a88888cbe4"], "extra_info": {"file_path": "our-data/labels/layer2-label-type.md", "file_name": "layer2-label-type.md"}}, "425da9f086259e4ffecb4a07c95f2b3e4beca9f1": {"doc_ids": ["c3b85b37-bda6-4673-a772-583eea5cdff6"], "extra_info": {"file_path": "our-data/labels/nft-label-type.md", "file_name": "nft-label-type.md"}}, "b1ddaab317daeef54ac9e5aeb656e58b8c01fdad": {"doc_ids": ["b2facfce-53c8-478a-88e1-c2432e670164"], "extra_info": {"file_path": "our-data/labels/operator-label-type.md", "file_name": "operator-label-type.md"}}, "e70b59e299673d066933c8b4c45e6856baf5a4de": {"doc_ids": ["5d762809-6ecd-43bf-9444-4c79316b6d47"], "extra_info": {"file_path": "our-data/labels/other-label-type.md", "file_name": "other-label-type.md"}}, "5714d34302ae0abed4e4addc6020868169afdbc1": {"doc_ids": ["8598e285-2efd-4fbc-af55-94d9467b3e63"], "extra_info": {"file_path": "our-data/labels/token-label-type.md", "file_name": "token-label-type.md"}}, "705686c43c03d89097d61b56abfbf37b1eef0769": {"doc_ids": ["8d965255-2d90-4090-9393-08dc2f1516bc"], "extra_info": {"file_path": "our-data/misc/README.md", "file_name": "README.md"}}, "0b6efa237ad53fcbced4be2ffb5696533afd43c7": {"doc_ids": ["086cb276-bc8a-4132-b4ae-80b731799234"], "extra_info": {"file_path": "our-data/misc/data-roadmap.md", "file_name": "data-roadmap.md"}}, "e2d38dba3c76ad728765886214611d9ebdd91b57": {"doc_ids": ["10b56949-4499-43f7-bb0f-a7deb9dfe3ff", "22b223fd-c2ea-4190-a77c-1ff2dcbff401"], "extra_info": {"file_path": "our-data/misc/table-freshness-targets.md", "file_name": "table-freshness-targets.md"}}, "5bed2f1f3fc1dabb00593da8f76b1530db9f49ae": {"doc_ids": ["97f46672-1987-4a1a-a25a-9c193668fd6f"], "extra_info": {"file_path": "our-data/tutorials/README.md", "file_name": "README.md"}}, "49a591bef45823719a5795ac3160fc3bda4efab8": {"doc_ids": ["898a874e-5386-4499-9fa4-ef2848ee7cab"], "extra_info": {"file_path": "our-data/tutorials/ethereum-tutorials/README.md", "file_name": "README.md"}}, "079a42df78d6665c2dc34be520f85fc4fb419d31": {"doc_ids": ["24db16c4-252e-4a9f-ba81-57da2906fdfa", "b5ed452c-61b5-4cf7-91fe-7d8930d3cf51", "dfaaddb7-1e44-4ffc-b0b7-7ab651c56c9c", "ca6d435d-980c-4b54-b2c7-5eb4979a514c"], "extra_info": {"file_path": "our-data/tutorials/ethereum-tutorials/finding-centralized-exchange-deposits-and-withdrawals.md", "file_name": "finding-centralized-exchange-deposits-and-withdrawals.md"}}, "df21fb863c7a54056ce6cbb77646df4ec5807b73": {"doc_ids": ["5cfa03f6-c316-406b-b1e3-c6e8c4807487"], "extra_info": {"file_path": "our-data/tutorials/ethereum-tutorials/getting-started-with-ethereum-erc20-balances.md", "file_name": "getting-started-with-ethereum-erc20-balances.md"}}, "bf4ac998cdc88ba04bc6823628f04941e9e9d4b5": {"doc_ids": ["866ad996-0115-4933-bffc-55ce76f037e0", "eb925b9f-3849-4037-b351-105e2bc67052"], "extra_info": {"file_path": "our-data/tutorials/ethereum-tutorials/getting-started-with-ethereum-events.md", "file_name": "getting-started-with-ethereum-events.md"}}, "b54e32475ed6cfae81266e637c1e45cc48a82473": {"doc_ids": ["d9202122-fe39-4bd6-a0cf-a0f5ab140d21", "37312899-f739-4808-ba26-be504f789101"], "extra_info": {"file_path": "our-data/tutorials/ethereum-tutorials/using-labels-to-break-down-token-supply.md", "file_name": "using-labels-to-break-down-token-supply.md"}}, "a068f24bd73f8ffafcc74478ae897e60ecb32938": {"doc_ids": ["53ba3d5c-411e-4da2-9e06-013d5fb6e30a", "cfcd108d-6823-40b8-8113-334c02504c51"], "extra_info": {"file_path": "our-data/tutorials/getting-started-with-dai-events.md", "file_name": "getting-started-with-dai-events.md"}}, "ef1783aa8603f35f060be7d34ea798a890000eb3": {"doc_ids": ["f3da2363-bfe0-431d-8cd8-331ea769ba6c"], "extra_info": {"file_path": "our-data/tutorials/overview-of-schemas-and-tables.md", "file_name": "overview-of-schemas-and-tables.md"}}, "4423cef4b4cba1df1f2a17b34b41f0f2df86886c": {"doc_ids": ["7017c70e-a88f-4fe3-970d-0657f96e4cd1"], "extra_info": {"file_path": "our-data/tutorials/solana-tutorials/README.md", "file_name": "README.md"}}, "6fec5aa40ef1a736abd438dc46dcdc8c822f15d3": {"doc_ids": ["789f5a51-ff97-4f3a-9017-1df01eee74ad", "f7a3fc68-2ba1-45da-a9c4-e1dfb13aeaaf", "c3a10e06-9909-4a65-b43b-9462679d9ed5", "36279905-28ce-4eb6-9428-b4fa39d287df", "77843106-707d-41fe-96f0-a03309f9f5f8", "39df2fb5-a6e1-41af-a7c1-0540578c1140", "f77bbf06-209f-4c00-99ae-a2a49c37be88", "f3d32721-dd0d-4c49-bcc8-f6d6c97b12ee"], "extra_info": {"file_path": "our-data/tutorials/solana-tutorials/exploring-transactions-in-solana.events.md", "file_name": "exploring-transactions-in-solana.events.md"}}, "c24a5c4326d98c87d2aa6b84faa0244600e62056": {"doc_ids": ["f5570f51-f130-4fbe-8028-9d10e3c8b84f"], "extra_info": {"file_path": "our-data/tutorials/solana-tutorials/solana-schema-and-tables-video-walkthrough.md", "file_name": "solana-schema-and-tables-video-walkthrough.md"}}, "d37cc6b47345fe3830a5e6889682f63db50bd1e0": {"doc_ids": ["5654ac06-1082-47a4-8c99-67585cc4e1ee"], "extra_info": {"file_path": "our-data/tutorials/solana-tutorials/solana-specialty-tables-video-walkthrough.md", "file_name": "solana-specialty-tables-video-walkthrough.md"}}, "dd0f3060c5a42be9096ff004a1ece84711081f22": {"doc_ids": ["279e97fe-0eef-4e12-8aaa-80bdc0c4f709"], "extra_info": {"file_path": "our-data/tutorials/thorchain-tutorials/README.md", "file_name": "README.md"}}, "9e4db402563c32d29fb756ca993ad7b47a6ffbc4": {"doc_ids": ["5540414c-c000-4843-b825-42958f40354e"], "extra_info": {"file_path": "our-data/tutorials/thorchain-tutorials/calculating-il-for-thorchain.md", "file_name": "calculating-il-for-thorchain.md"}}, "ec908dbaa67bf94f6dc9a21f4f1b09a62d9ce87e": {"doc_ids": ["65d436cf-0eaf-4325-ba01-3cd3f562de8d"], "extra_info": {"file_path": "our-data/tutorials/thorchain-tutorials/thorchain-schema-and-tables.md", "file_name": "thorchain-schema-and-tables.md"}}, "794fea240b5ad2409d61c4470a5be55799bbb769": {"doc_ids": ["d3b98457-d3f9-4c4c-8f89-e4985d213a22"], "extra_info": {"file_path": "our-data/using-snowflake-sql.md", "file_name": "using-snowflake-sql.md"}}, "ba1d102a51a8cfff61f5818ec3658435e559ade8": {"doc_ids": ["00aa95e8-3dd7-48b8-92b8-94774da4564e"], "extra_info": {"file_path": "our-data/writing-efficient-queries.md", "file_name": "writing-efficient-queries.md"}}}}